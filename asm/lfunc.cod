; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_luaF_newproto
PUBLIC	_luaF_newCclosure
PUBLIC	_luaF_newLclosure
PUBLIC	_luaF_initupvals
PUBLIC	_luaF_findupval
PUBLIC	_luaF_close
PUBLIC	_luaF_freeproto
PUBLIC	_luaF_getlocalname
EXTRN	_luaM_realloc_:PROC
EXTRN	_luaC_newobj:PROC
EXTRN	_luaC_upvalbarrier_:PROC
; Function compile flags: /Ogtp
;	COMDAT _luaF_getlocalname
_TEXT	SEGMENT
_f$ = 8							; size = 4
_local_number$ = 12					; size = 4
_pc$ = 16						; size = 4
_luaF_getlocalname PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 140
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _f$[ebp]
; Line 142
  00006	33 c0		 xor	 eax, eax
  00008	53		 push	 ebx
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b 79 20	 mov	 edi, DWORD PTR [ecx+32]
  0000e	85 ff		 test	 edi, edi
  00010	7e 25		 jle	 SHORT $LN13@luaF_getlo
  00012	8b 59 3c	 mov	 ebx, DWORD PTR [ecx+60]
  00015	33 c9		 xor	 ecx, ecx
  00017	8b 75 10	 mov	 esi, DWORD PTR _pc$[ebp]
  0001a	8b 55 0c	 mov	 edx, DWORD PTR _local_number$[ebp]
  0001d	8d 49 00	 npad	 3
$LL5@luaF_getlo:
  00020	39 74 19 04	 cmp	 DWORD PTR [ecx+ebx+4], esi
  00024	7f 11		 jg	 SHORT $LN13@luaF_getlo
; Line 143
  00026	3b 74 19 08	 cmp	 esi, DWORD PTR [ecx+ebx+8]
  0002a	7d 03		 jge	 SHORT $LN4@luaF_getlo
; Line 144
  0002c	4a		 dec	 edx
; Line 145
  0002d	74 0f		 je	 SHORT $LN9@luaF_getlo
$LN4@luaF_getlo:
; Line 142
  0002f	40		 inc	 eax
  00030	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00033	3b c7		 cmp	 eax, edi
  00035	7c e9		 jl	 SHORT $LL5@luaF_getlo
$LN13@luaF_getlo:
  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
; Line 149
  00039	33 c0		 xor	 eax, eax
  0003b	5b		 pop	 ebx
; Line 150
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
$LN9@luaF_getlo:
; Line 146
  0003e	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00041	8b 04 83	 mov	 eax, DWORD PTR [ebx+eax*4]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	83 c0 10	 add	 eax, 16			; 00000010H
  00049	5b		 pop	 ebx
; Line 150
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
_luaF_getlocalname ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaF_freeproto
_TEXT	SEGMENT
_L$ = 8							; size = 4
_f$ = 12						; size = 4
_luaF_freeproto PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 125
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 126
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR _f$[ebp]
  0000b	6a 00		 push	 0
  0000d	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00010	c1 e0 02	 shl	 eax, 2
  00013	50		 push	 eax
  00014	ff 77 30	 push	 DWORD PTR [edi+48]
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 _luaM_realloc_
; Line 127
  0001d	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00020	6a 00		 push	 0
  00022	c1 e0 02	 shl	 eax, 2
  00025	50		 push	 eax
  00026	ff 77 34	 push	 DWORD PTR [edi+52]
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 _luaM_realloc_
; Line 128
  0002f	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00032	6a 00		 push	 0
  00034	c1 e0 04	 shl	 eax, 4
  00037	50		 push	 eax
  00038	ff 77 2c	 push	 DWORD PTR [edi+44]
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 _luaM_realloc_
; Line 129
  00041	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00044	6a 00		 push	 0
  00046	c1 e0 02	 shl	 eax, 2
  00049	50		 push	 eax
  0004a	ff 77 38	 push	 DWORD PTR [edi+56]
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 _luaM_realloc_
; Line 130
  00053	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00056	83 c4 40	 add	 esp, 64			; 00000040H
  00059	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0005c	6a 00		 push	 0
  0005e	c1 e0 02	 shl	 eax, 2
  00061	50		 push	 eax
  00062	ff 77 3c	 push	 DWORD PTR [edi+60]
  00065	56		 push	 esi
  00066	e8 00 00 00 00	 call	 _luaM_realloc_
; Line 131
  0006b	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0006e	6a 00		 push	 0
  00070	c1 e0 03	 shl	 eax, 3
  00073	50		 push	 eax
  00074	ff 77 40	 push	 DWORD PTR [edi+64]
  00077	56		 push	 esi
  00078	e8 00 00 00 00	 call	 _luaM_realloc_
; Line 132
  0007d	6a 00		 push	 0
  0007f	6a 50		 push	 80			; 00000050H
  00081	57		 push	 edi
  00082	56		 push	 esi
  00083	e8 00 00 00 00	 call	 _luaM_realloc_
  00088	83 c4 30	 add	 esp, 48			; 00000030H
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
; Line 133
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0
_luaF_freeproto ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaF_close
_TEXT	SEGMENT
_L$ = 8							; size = 4
_level$ = 12						; size = 4
_luaF_close PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 83
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 85
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	83 7e 24 00	 cmp	 DWORD PTR [esi+36], 0
  0000b	74 4d		 je	 SHORT $LN12@luaF_close
  0000d	57		 push	 edi
  0000e	8b 7d 0c	 mov	 edi, DWORD PTR _level$[ebp]
$LL4@luaF_close:
  00011	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  00014	39 38		 cmp	 DWORD PTR [eax], edi
  00016	72 41		 jb	 SHORT $LN13@luaF_close
; Line 87
  00018	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0001b	8d 50 08	 lea	 edx, DWORD PTR [eax+8]
  0001e	89 4e 24	 mov	 DWORD PTR [esi+36], ecx
; Line 88
  00021	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00025	75 10		 jne	 SHORT $LN2@luaF_close
; Line 89
  00027	6a 00		 push	 0
  00029	6a 18		 push	 24			; 00000018H
  0002b	50		 push	 eax
  0002c	56		 push	 esi
  0002d	e8 00 00 00 00	 call	 _luaM_realloc_
  00032	83 c4 10	 add	 esp, 16			; 00000010H
; Line 90
  00035	eb 1c		 jmp	 SHORT $LN7@luaF_close
$LN2@luaF_close:
; Line 91
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	f3 0f 6f 01	 movdqu	 xmm0, XMMWORD PTR [ecx]
  0003d	f3 0f 7f 02	 movdqu	 XMMWORD PTR [edx], xmm0
; Line 92
  00041	89 10		 mov	 DWORD PTR [eax], edx
; Line 93
  00043	f6 42 08 40	 test	 BYTE PTR [edx+8], 64	; 00000040H
  00047	74 0a		 je	 SHORT $LN7@luaF_close
  00049	50		 push	 eax
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 _luaC_upvalbarrier_
  00050	83 c4 08	 add	 esp, 8
$LN7@luaF_close:
; Line 85
  00053	83 7e 24 00	 cmp	 DWORD PTR [esi+36], 0
  00057	75 b8		 jne	 SHORT $LL4@luaF_close
$LN13@luaF_close:
  00059	5f		 pop	 edi
$LN12@luaF_close:
  0005a	5e		 pop	 esi
; Line 96
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
_luaF_close ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaF_findupval
_TEXT	SEGMENT
_L$ = 8							; size = 4
_level$ = 12						; size = 4
_luaF_findupval PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 57
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 58
  00004	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
; Line 62
  00007	83 7b 24 00	 cmp	 DWORD PTR [ebx+36], 0
  0000b	56		 push	 esi
  0000c	8d 73 24	 lea	 esi, DWORD PTR [ebx+36]
  0000f	57		 push	 edi
  00010	8b 7d 0c	 mov	 edi, DWORD PTR _level$[ebp]
  00013	74 13		 je	 SHORT $LN3@luaF_findu
$LL4@luaF_findu:
  00015	8b 06		 mov	 eax, DWORD PTR [esi]
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	3b cf		 cmp	 ecx, edi
  0001b	72 0b		 jb	 SHORT $LN3@luaF_findu
; Line 64
  0001d	74 44		 je	 SHORT $LN5@luaF_findu
; Line 66
  0001f	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00023	8d 70 08	 lea	 esi, DWORD PTR [eax+8]
  00026	75 ed		 jne	 SHORT $LL4@luaF_findu
$LN3@luaF_findu:
; Line 69
  00028	6a 18		 push	 24			; 00000018H
  0002a	6a 00		 push	 0
  0002c	6a 00		 push	 0
  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 _luaM_realloc_
  00034	8b d0		 mov	 edx, eax
  00036	83 c4 10	 add	 esp, 16			; 00000010H
; Line 70
  00039	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0
; Line 71
  00040	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00042	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 72
  00045	c7 42 0c 01 00
	00 00		 mov	 DWORD PTR [edx+12], 1
; Line 73
  0004c	89 16		 mov	 DWORD PTR [esi], edx
; Line 74
  0004e	89 3a		 mov	 DWORD PTR [edx], edi
; Line 75
  00050	39 5b 2c	 cmp	 DWORD PTR [ebx+44], ebx
  00053	75 0c		 jne	 SHORT $LN1@luaF_findu
; Line 76
  00055	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00058	8b 41 68	 mov	 eax, DWORD PTR [ecx+104]
  0005b	89 43 2c	 mov	 DWORD PTR [ebx+44], eax
; Line 77
  0005e	89 59 68	 mov	 DWORD PTR [ecx+104], ebx
$LN1@luaF_findu:
; Line 79
  00061	8b c2		 mov	 eax, edx
$LN5@luaF_findu:
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
; Line 80
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
_luaF_findupval ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaF_initupvals
_TEXT	SEGMENT
_L$ = 8							; size = 4
_cl$ = 12						; size = 4
_luaF_initupvals PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 45
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 47
  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _cl$[ebp]
  00007	56		 push	 esi
  00008	33 f6		 xor	 esi, esi
  0000a	80 7b 06 00	 cmp	 BYTE PTR [ebx+6], 0
  0000e	76 38		 jbe	 SHORT $LN1@luaF_initu
  00010	57		 push	 edi
  00011	8d 7b 10	 lea	 edi, DWORD PTR [ebx+16]
$LL3@luaF_initu:
; Line 48
  00014	6a 18		 push	 24			; 00000018H
  00016	6a 00		 push	 0
  00018	6a 00		 push	 0
  0001a	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001d	e8 00 00 00 00	 call	 _luaM_realloc_
  00022	46		 inc	 esi
  00023	8d 7f 04	 lea	 edi, DWORD PTR [edi+4]
  00026	83 c4 10	 add	 esp, 16			; 00000010H
; Line 50
  00029	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  0002c	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1
  00033	89 08		 mov	 DWORD PTR [eax], ecx
; Line 51
  00035	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
; Line 52
  0003c	89 47 fc	 mov	 DWORD PTR [edi-4], eax
  0003f	0f b6 43 06	 movzx	 eax, BYTE PTR [ebx+6]
  00043	3b f0		 cmp	 esi, eax
  00045	7c cd		 jl	 SHORT $LL3@luaF_initu
  00047	5f		 pop	 edi
$LN1@luaF_initu:
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
; Line 54
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
_luaF_initupvals ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaF_newLclosure
_TEXT	SEGMENT
_L$ = 8							; size = 4
_n$ = 12						; size = 4
_luaF_newLclosure PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 33
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 34
  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _n$[ebp]
  00007	56		 push	 esi
  00008	8d 34 9d 10 00
	00 00		 lea	 esi, DWORD PTR [ebx*4+16]
  0000f	56		 push	 esi
  00010	6a 06		 push	 6
  00012	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00015	e8 00 00 00 00	 call	 _luaC_newobj
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 36
  0001d	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; Line 37
  00024	88 58 06	 mov	 BYTE PTR [eax+6], bl
; Line 38
  00027	85 db		 test	 ebx, ebx
  00029	74 12		 je	 SHORT $LN6@luaF_newLc
; Line 35
  0002b	8d 0c 06	 lea	 ecx, DWORD PTR [esi+eax]
  0002e	8b ff		 npad	 2
$LL2@luaF_newLc:
; Line 38
  00030	c7 41 fc 00 00
	00 00		 mov	 DWORD PTR [ecx-4], 0
  00037	8d 49 fc	 lea	 ecx, DWORD PTR [ecx-4]
  0003a	4b		 dec	 ebx
  0003b	75 f3		 jne	 SHORT $LL2@luaF_newLc
$LN6@luaF_newLc:
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
; Line 40
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
_luaF_newLclosure ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaF_newCclosure
_TEXT	SEGMENT
_L$ = 8							; size = 4
_n$ = 12						; size = 4
_luaF_newCclosure PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 25
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 27
  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _n$[ebp]
  00007	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  0000a	c1 e0 04	 shl	 eax, 4
  0000d	50		 push	 eax
  0000e	6a 26		 push	 38			; 00000026H
  00010	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00013	e8 00 00 00 00	 call	 _luaC_newobj
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 28
  0001b	88 58 06	 mov	 BYTE PTR [eax+6], bl
  0001e	5b		 pop	 ebx
; Line 30
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
_luaF_newCclosure ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaF_newproto
_TEXT	SEGMENT
_L$ = 8							; size = 4
_luaF_newproto PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 99
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 100
  00003	6a 50		 push	 80			; 00000050H
  00005	6a 09		 push	 9
  00007	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000a	e8 00 00 00 00	 call	 _luaC_newobj
  0000f	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 102
  00012	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [eax+44], 0
; Line 103
  00019	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
; Line 104
  00020	c7 40 34 00 00
	00 00		 mov	 DWORD PTR [eax+52], 0
; Line 105
  00027	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0
; Line 106
  0002e	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [eax+48], 0
; Line 107
  00035	c7 40 44 00 00
	00 00		 mov	 DWORD PTR [eax+68], 0
; Line 108
  0003c	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0
; Line 109
  00043	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
; Line 110
  0004a	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
; Line 111
  00051	c7 40 40 00 00
	00 00		 mov	 DWORD PTR [eax+64], 0
; Line 112
  00058	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; Line 113
  0005f	66 c7 40 06 00
	00		 mov	 WORD PTR [eax+6], 0
; Line 115
  00065	c6 40 08 00	 mov	 BYTE PTR [eax+8], 0
; Line 116
  00069	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
; Line 117
  00070	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [eax+32], 0
; Line 118
  00077	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [eax+36], 0
; Line 119
  0007e	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [eax+40], 0
; Line 120
  00085	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0
; Line 122
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
_luaF_newproto ENDP
_TEXT	ENDS
END
