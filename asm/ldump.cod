; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_luaU_dump
PUBLIC	??_C@_04NBPDLJKJ@?$BLLua?$AA@			; `string'
PUBLIC	??_C@_06HHFEHHII@?$BJ?$JD?$AN?6?$BK?6?$AA@	; `string'
PUBLIC	__real@4077280000000000
EXTRN	__fltused:DWORD
;	COMDAT __real@4077280000000000
CONST	SEGMENT
__real@4077280000000000 DQ 04077280000000000r	; 370.5
CONST	ENDS
;	COMDAT ??_C@_06HHFEHHII@?$BJ?$JD?$AN?6?$BK?6?$AA@
CONST	SEGMENT
??_C@_06HHFEHHII@?$BJ?$JD?$AN?6?$BK?6?$AA@ DB 019H, 093H, 0dH, 0aH, 01aH, 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_04NBPDLJKJ@?$BLLua?$AA@
CONST	SEGMENT
??_C@_04NBPDLJKJ@?$BLLua?$AA@ DB 01bH, 'Lua', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT _DumpHeader
_TEXT	SEGMENT
_x$ = -8						; size = 8
_x$ = -8						; size = 8
_D$ = 8							; size = 4
_x$1 = 11						; size = 1
_x$2 = 11						; size = 1
_x$3 = 11						; size = 1
_x$4 = 11						; size = 1
_x$5 = 11						; size = 1
_x$6 = 11						; size = 1
_x$7 = 11						; size = 1
_DumpHeader PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
; Line 184
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
; Line 185
  00007	8b 75 08	 mov	 esi, DWORD PTR _D$[ebp]
  0000a	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000e	75 17		 jne	 SHORT $LN3@DumpHeader
  00010	ff 76 08	 push	 DWORD PTR [esi+8]
  00013	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00016	6a 04		 push	 4
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_04NBPDLJKJ@?$BLLua?$AA@
  0001d	ff 36		 push	 DWORD PTR [esi]
  0001f	ff d0		 call	 eax
  00021	83 c4 10	 add	 esp, 16			; 00000010H
  00024	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN3@DumpHeader:
; Line 186
  00027	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0002b	c6 45 0b 11	 mov	 BYTE PTR _x$7[ebp], 17	; 00000011H
  0002f	75 16		 jne	 SHORT $LN8@DumpHeader
  00031	ff 76 08	 push	 DWORD PTR [esi+8]
  00034	8d 45 0b	 lea	 eax, DWORD PTR _x$7[ebp]
  00037	6a 01		 push	 1
  00039	50		 push	 eax
  0003a	ff 36		 push	 DWORD PTR [esi]
  0003c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003f	ff d0		 call	 eax
  00041	83 c4 10	 add	 esp, 16			; 00000010H
  00044	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN8@DumpHeader:
; Line 187
  00047	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0004b	c6 45 0b 00	 mov	 BYTE PTR _x$5[ebp], 0
  0004f	75 31		 jne	 SHORT $LN16@DumpHeader
  00051	ff 76 08	 push	 DWORD PTR [esi+8]
  00054	8d 45 0b	 lea	 eax, DWORD PTR _x$5[ebp]
  00057	6a 01		 push	 1
  00059	50		 push	 eax
  0005a	ff 36		 push	 DWORD PTR [esi]
  0005c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0005f	ff d0		 call	 eax
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	89 46 10	 mov	 DWORD PTR [esi+16], eax
; Line 188
  00067	85 c0		 test	 eax, eax
  00069	75 17		 jne	 SHORT $LN16@DumpHeader
  0006b	ff 76 08	 push	 DWORD PTR [esi+8]
  0006e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00071	6a 06		 push	 6
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_06HHFEHHII@?$BJ?$JD?$AN?6?$BK?6?$AA@
  00078	ff 36		 push	 DWORD PTR [esi]
  0007a	ff d0		 call	 eax
  0007c	83 c4 10	 add	 esp, 16			; 00000010H
  0007f	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN16@DumpHeader:
; Line 189
  00082	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00086	c6 45 0b 04	 mov	 BYTE PTR _x$6[ebp], 4
  0008a	75 16		 jne	 SHORT $LN21@DumpHeader
  0008c	ff 76 08	 push	 DWORD PTR [esi+8]
  0008f	8d 45 0b	 lea	 eax, DWORD PTR _x$6[ebp]
  00092	6a 01		 push	 1
  00094	50		 push	 eax
  00095	ff 36		 push	 DWORD PTR [esi]
  00097	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0009a	ff d0		 call	 eax
  0009c	83 c4 10	 add	 esp, 16			; 00000010H
  0009f	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN21@DumpHeader:
; Line 190
  000a2	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  000a6	c6 45 0b 04	 mov	 BYTE PTR _x$4[ebp], 4
  000aa	75 16		 jne	 SHORT $LN26@DumpHeader
  000ac	ff 76 08	 push	 DWORD PTR [esi+8]
  000af	8d 45 0b	 lea	 eax, DWORD PTR _x$4[ebp]
  000b2	6a 01		 push	 1
  000b4	50		 push	 eax
  000b5	ff 36		 push	 DWORD PTR [esi]
  000b7	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000ba	ff d0		 call	 eax
  000bc	83 c4 10	 add	 esp, 16			; 00000010H
  000bf	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN26@DumpHeader:
; Line 191
  000c2	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  000c6	c6 45 0b 04	 mov	 BYTE PTR _x$3[ebp], 4
  000ca	75 16		 jne	 SHORT $LN31@DumpHeader
  000cc	ff 76 08	 push	 DWORD PTR [esi+8]
  000cf	8d 45 0b	 lea	 eax, DWORD PTR _x$3[ebp]
  000d2	6a 01		 push	 1
  000d4	50		 push	 eax
  000d5	ff 36		 push	 DWORD PTR [esi]
  000d7	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000da	ff d0		 call	 eax
  000dc	83 c4 10	 add	 esp, 16			; 00000010H
  000df	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN31@DumpHeader:
; Line 192
  000e2	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  000e6	c6 45 0b 08	 mov	 BYTE PTR _x$2[ebp], 8
  000ea	75 16		 jne	 SHORT $LN36@DumpHeader
  000ec	ff 76 08	 push	 DWORD PTR [esi+8]
  000ef	8d 45 0b	 lea	 eax, DWORD PTR _x$2[ebp]
  000f2	6a 01		 push	 1
  000f4	50		 push	 eax
  000f5	ff 36		 push	 DWORD PTR [esi]
  000f7	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000fa	ff d0		 call	 eax
  000fc	83 c4 10	 add	 esp, 16			; 00000010H
  000ff	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN36@DumpHeader:
; Line 193
  00102	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00106	c6 45 0b 08	 mov	 BYTE PTR _x$1[ebp], 8
  0010a	75 16		 jne	 SHORT $LN41@DumpHeader
  0010c	ff 76 08	 push	 DWORD PTR [esi+8]
  0010f	8d 45 0b	 lea	 eax, DWORD PTR _x$1[ebp]
  00112	6a 01		 push	 1
  00114	50		 push	 eax
  00115	ff 36		 push	 DWORD PTR [esi]
  00117	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0011a	ff d0		 call	 eax
  0011c	83 c4 10	 add	 esp, 16			; 00000010H
  0011f	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN41@DumpHeader:
; Line 194
  00122	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00126	c7 45 f8 78 56
	00 00		 mov	 DWORD PTR _x$[ebp], 22136 ; 00005678H
  0012d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _x$[ebp+4], 0
  00134	75 16		 jne	 SHORT $LN46@DumpHeader
  00136	ff 76 08	 push	 DWORD PTR [esi+8]
  00139	8d 45 f8	 lea	 eax, DWORD PTR _x$[ebp]
  0013c	6a 08		 push	 8
  0013e	50		 push	 eax
  0013f	ff 36		 push	 DWORD PTR [esi]
  00141	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00144	ff d0		 call	 eax
  00146	83 c4 10	 add	 esp, 16			; 00000010H
  00149	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN46@DumpHeader:
; Line 195
  0014c	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00150	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4077280000000000
  00158	f2 0f 11 45 f8	 movsd	 QWORD PTR _x$[ebp], xmm0
  0015d	75 16		 jne	 SHORT $LN51@DumpHeader
  0015f	ff 76 08	 push	 DWORD PTR [esi+8]
  00162	8d 45 f8	 lea	 eax, DWORD PTR _x$[ebp]
  00165	6a 08		 push	 8
  00167	50		 push	 eax
  00168	ff 36		 push	 DWORD PTR [esi]
  0016a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0016d	ff d0		 call	 eax
  0016f	83 c4 10	 add	 esp, 16			; 00000010H
  00172	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN51@DumpHeader:
  00175	5e		 pop	 esi
; Line 196
  00176	8b e5		 mov	 esp, ebp
  00178	5d		 pop	 ebp
  00179	c3		 ret	 0
_DumpHeader ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _DumpDebug
_TEXT	SEGMENT
_x$ = -4						; size = 4
_x$ = 8							; size = 4
_x$ = 8							; size = 4
_x$ = 8							; size = 4
_f$ = 8							; size = 4
_n$3$ = 12						; size = 4
_n$2$ = 12						; size = 4
_x$ = 12						; size = 4
_D$ = 12						; size = 4
_DumpDebug PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
; Line 147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; Line 149
  00005	8b 5d 08	 mov	 ebx, DWORD PTR _f$[ebp]
  00008	56		 push	 esi
  00009	8b 75 0c	 mov	 esi, DWORD PTR _D$[ebp]
  0000c	57		 push	 edi
  0000d	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  00011	74 04		 je	 SHORT $LN9@DumpDebug
  00013	33 ff		 xor	 edi, edi
  00015	eb 03		 jmp	 SHORT $LN10@DumpDebug
$LN9@DumpDebug:
  00017	8b 7b 18	 mov	 edi, DWORD PTR [ebx+24]
$LN10@DumpDebug:
; Line 150
  0001a	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0001e	89 7d 0c	 mov	 DWORD PTR _x$[ebp], edi
  00021	75 16		 jne	 SHORT $LN17@DumpDebug
  00023	ff 76 08	 push	 DWORD PTR [esi+8]
  00026	8d 45 0c	 lea	 eax, DWORD PTR _x$[ebp]
  00029	6a 04		 push	 4
  0002b	50		 push	 eax
  0002c	ff 36		 push	 DWORD PTR [esi]
  0002e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00031	ff d0		 call	 eax
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN17@DumpDebug:
; Line 151
  00039	c1 e7 02	 shl	 edi, 2
  0003c	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00040	75 18		 jne	 SHORT $LN20@DumpDebug
  00042	85 ff		 test	 edi, edi
  00044	74 14		 je	 SHORT $LN20@DumpDebug
  00046	ff 76 08	 push	 DWORD PTR [esi+8]
  00049	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0004c	57		 push	 edi
  0004d	ff 73 38	 push	 DWORD PTR [ebx+56]
  00050	ff 36		 push	 DWORD PTR [esi]
  00052	ff d0		 call	 eax
  00054	83 c4 10	 add	 esp, 16			; 00000010H
  00057	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN20@DumpDebug:
; Line 152
  0005a	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  0005e	74 04		 je	 SHORT $LN11@DumpDebug
  00060	33 ff		 xor	 edi, edi
  00062	eb 03		 jmp	 SHORT $LN51@DumpDebug
$LN11@DumpDebug:
  00064	8b 7b 20	 mov	 edi, DWORD PTR [ebx+32]
$LN51@DumpDebug:
; Line 153
  00067	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0006b	89 7d 0c	 mov	 DWORD PTR _n$2$[ebp], edi
  0006e	89 7d 08	 mov	 DWORD PTR _x$[ebp], edi
  00071	75 16		 jne	 SHORT $LN25@DumpDebug
  00073	ff 76 08	 push	 DWORD PTR [esi+8]
  00076	8d 45 08	 lea	 eax, DWORD PTR _x$[ebp]
  00079	6a 04		 push	 4
  0007b	50		 push	 eax
  0007c	ff 36		 push	 DWORD PTR [esi]
  0007e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00081	ff d0		 call	 eax
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN25@DumpDebug:
; Line 154
  00089	85 ff		 test	 edi, edi
  0008b	7e 66		 jle	 SHORT $LN4@DumpDebug
  0008d	33 ff		 xor	 edi, edi
  0008f	90		 npad	 1
$LL6@DumpDebug:
; Line 155
  00090	8b 43 3c	 mov	 eax, DWORD PTR [ebx+60]
  00093	56		 push	 esi
  00094	ff 34 07	 push	 DWORD PTR [edi+eax]
  00097	e8 00 00 00 00	 call	 _DumpString
; Line 156
  0009c	8b 43 3c	 mov	 eax, DWORD PTR [ebx+60]
  0009f	83 c4 08	 add	 esp, 8
  000a2	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  000a6	8b 44 07 04	 mov	 eax, DWORD PTR [edi+eax+4]
  000aa	89 45 08	 mov	 DWORD PTR _x$[ebp], eax
  000ad	75 16		 jne	 SHORT $LN30@DumpDebug
  000af	ff 76 08	 push	 DWORD PTR [esi+8]
  000b2	8d 45 08	 lea	 eax, DWORD PTR _x$[ebp]
  000b5	6a 04		 push	 4
  000b7	50		 push	 eax
  000b8	ff 36		 push	 DWORD PTR [esi]
  000ba	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000bd	ff d0		 call	 eax
  000bf	83 c4 10	 add	 esp, 16			; 00000010H
  000c2	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN30@DumpDebug:
; Line 157
  000c5	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  000c9	8b 43 3c	 mov	 eax, DWORD PTR [ebx+60]
  000cc	8b 44 07 08	 mov	 eax, DWORD PTR [edi+eax+8]
  000d0	89 45 fc	 mov	 DWORD PTR _x$[ebp], eax
  000d3	75 16		 jne	 SHORT $LN5@DumpDebug
  000d5	ff 76 08	 push	 DWORD PTR [esi+8]
  000d8	8d 45 fc	 lea	 eax, DWORD PTR _x$[ebp]
  000db	6a 04		 push	 4
  000dd	50		 push	 eax
  000de	ff 36		 push	 DWORD PTR [esi]
  000e0	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000e3	ff d0		 call	 eax
  000e5	83 c4 10	 add	 esp, 16			; 00000010H
  000e8	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN5@DumpDebug:
; Line 154
  000eb	83 c7 0c	 add	 edi, 12			; 0000000cH
  000ee	ff 4d 0c	 dec	 DWORD PTR _n$2$[ebp]
  000f1	75 9d		 jne	 SHORT $LL6@DumpDebug
$LN4@DumpDebug:
; Line 159
  000f3	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  000f7	74 04		 je	 SHORT $LN13@DumpDebug
  000f9	33 c0		 xor	 eax, eax
  000fb	eb 03		 jmp	 SHORT $LN52@DumpDebug
$LN13@DumpDebug:
  000fd	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
$LN52@DumpDebug:
; Line 160
  00100	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00104	89 45 0c	 mov	 DWORD PTR _n$3$[ebp], eax
  00107	89 45 08	 mov	 DWORD PTR _x$[ebp], eax
  0010a	75 19		 jne	 SHORT $LN40@DumpDebug
  0010c	ff 76 08	 push	 DWORD PTR [esi+8]
  0010f	8d 45 08	 lea	 eax, DWORD PTR _x$[ebp]
  00112	6a 04		 push	 4
  00114	50		 push	 eax
  00115	ff 36		 push	 DWORD PTR [esi]
  00117	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0011a	ff d0		 call	 eax
  0011c	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0011f	83 c4 10	 add	 esp, 16			; 00000010H
  00122	8b 45 0c	 mov	 eax, DWORD PTR _n$3$[ebp]
$LN40@DumpDebug:
; Line 161
  00125	33 ff		 xor	 edi, edi
  00127	85 c0		 test	 eax, eax
  00129	7e 1a		 jle	 SHORT $LN1@DumpDebug
  0012b	eb 03 8d 49 00	 npad	 5
$LL3@DumpDebug:
; Line 162
  00130	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  00133	56		 push	 esi
  00134	ff 34 f8	 push	 DWORD PTR [eax+edi*8]
  00137	e8 00 00 00 00	 call	 _DumpString
  0013c	47		 inc	 edi
  0013d	83 c4 08	 add	 esp, 8
  00140	3b 7d 0c	 cmp	 edi, DWORD PTR _n$3$[ebp]
  00143	7c eb		 jl	 SHORT $LL3@DumpDebug
$LN1@DumpDebug:
  00145	5f		 pop	 edi
  00146	5e		 pop	 esi
  00147	5b		 pop	 ebx
; Line 163
  00148	8b e5		 mov	 esp, ebp
  0014a	5d		 pop	 ebp
  0014b	c3		 ret	 0
_DumpDebug ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _DumpUpvalues
_TEXT	SEGMENT
_n$1$ = -4						; size = 4
_x$ = 8							; size = 4
_f$ = 8							; size = 4
_x$1 = 11						; size = 1
_x$2 = 11						; size = 1
_D$ = 12						; size = 4
_DumpUpvalues PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
; Line 137
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; Line 138
  00005	8b 5d 08	 mov	 ebx, DWORD PTR _f$[ebp]
  00008	56		 push	 esi
; Line 139
  00009	8b 75 0c	 mov	 esi, DWORD PTR _D$[ebp]
  0000c	57		 push	 edi
  0000d	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  00010	89 45 fc	 mov	 DWORD PTR _n$1$[ebp], eax
  00013	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00017	89 45 08	 mov	 DWORD PTR _x$[ebp], eax
  0001a	75 19		 jne	 SHORT $LN8@DumpUpvalu
  0001c	ff 76 08	 push	 DWORD PTR [esi+8]
  0001f	8d 45 08	 lea	 eax, DWORD PTR _x$[ebp]
  00022	6a 04		 push	 4
  00024	50		 push	 eax
  00025	ff 36		 push	 DWORD PTR [esi]
  00027	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002a	ff d0		 call	 eax
  0002c	89 46 10	 mov	 DWORD PTR [esi+16], eax
  0002f	83 c4 10	 add	 esp, 16			; 00000010H
  00032	8b 45 fc	 mov	 eax, DWORD PTR _n$1$[ebp]
$LN8@DumpUpvalu:
; Line 140
  00035	33 ff		 xor	 edi, edi
  00037	85 c0		 test	 eax, eax
  00039	7e 57		 jle	 SHORT $LN1@DumpUpvalu
  0003b	eb 03 8d 49 00	 npad	 5
$LL3@DumpUpvalu:
; Line 141
  00040	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00044	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  00047	8a 44 f8 04	 mov	 al, BYTE PTR [eax+edi*8+4]
  0004b	88 45 0b	 mov	 BYTE PTR _x$2[ebp], al
  0004e	75 16		 jne	 SHORT $LN13@DumpUpvalu
  00050	ff 76 08	 push	 DWORD PTR [esi+8]
  00053	8d 45 0b	 lea	 eax, DWORD PTR _x$2[ebp]
  00056	6a 01		 push	 1
  00058	50		 push	 eax
  00059	ff 36		 push	 DWORD PTR [esi]
  0005b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0005e	ff d0		 call	 eax
  00060	83 c4 10	 add	 esp, 16			; 00000010H
  00063	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN13@DumpUpvalu:
; Line 142
  00066	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0006a	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  0006d	8a 44 f8 05	 mov	 al, BYTE PTR [eax+edi*8+5]
  00071	88 45 0b	 mov	 BYTE PTR _x$1[ebp], al
  00074	75 16		 jne	 SHORT $LN2@DumpUpvalu
  00076	ff 76 08	 push	 DWORD PTR [esi+8]
  00079	8d 45 0b	 lea	 eax, DWORD PTR _x$1[ebp]
  0007c	6a 01		 push	 1
  0007e	50		 push	 eax
  0007f	ff 36		 push	 DWORD PTR [esi]
  00081	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00084	ff d0		 call	 eax
  00086	83 c4 10	 add	 esp, 16			; 00000010H
  00089	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN2@DumpUpvalu:
; Line 140
  0008c	47		 inc	 edi
  0008d	3b 7d fc	 cmp	 edi, DWORD PTR _n$1$[ebp]
  00090	7c ae		 jl	 SHORT $LL3@DumpUpvalu
$LN1@DumpUpvalu:
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx
; Line 144
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c3		 ret	 0
_DumpUpvalues ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _DumpProtos
_TEXT	SEGMENT
_x$ = -4						; size = 4
_n$1$ = 8						; size = 4
_f$ = 8							; size = 4
_D$ = 12						; size = 4
_DumpProtos PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
; Line 128
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; Line 131
  00005	8b 5d 0c	 mov	 ebx, DWORD PTR _D$[ebp]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b 7d 08	 mov	 edi, DWORD PTR _f$[ebp]
  0000d	83 7b 10 00	 cmp	 DWORD PTR [ebx+16], 0
  00011	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00014	89 45 08	 mov	 DWORD PTR _n$1$[ebp], eax
  00017	89 45 fc	 mov	 DWORD PTR _x$[ebp], eax
  0001a	75 19		 jne	 SHORT $LN8@DumpProtos
  0001c	ff 73 08	 push	 DWORD PTR [ebx+8]
  0001f	8d 45 fc	 lea	 eax, DWORD PTR _x$[ebp]
  00022	6a 04		 push	 4
  00024	50		 push	 eax
  00025	ff 33		 push	 DWORD PTR [ebx]
  00027	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0002a	ff d0		 call	 eax
  0002c	89 43 10	 mov	 DWORD PTR [ebx+16], eax
  0002f	83 c4 10	 add	 esp, 16			; 00000010H
  00032	8b 45 08	 mov	 eax, DWORD PTR _n$1$[ebp]
$LN8@DumpProtos:
; Line 132
  00035	33 f6		 xor	 esi, esi
  00037	85 c0		 test	 eax, eax
  00039	7e 1d		 jle	 SHORT $LN1@DumpProtos
  0003b	eb 03 8d 49 00	 npad	 5
$LL3@DumpProtos:
; Line 133
  00040	8b 47 34	 mov	 eax, DWORD PTR [edi+52]
  00043	53		 push	 ebx
  00044	ff 77 48	 push	 DWORD PTR [edi+72]
  00047	ff 34 b0	 push	 DWORD PTR [eax+esi*4]
  0004a	e8 00 00 00 00	 call	 _DumpFunction
  0004f	46		 inc	 esi
  00050	83 c4 0c	 add	 esp, 12			; 0000000cH
  00053	3b 75 08	 cmp	 esi, DWORD PTR _n$1$[ebp]
  00056	7c e8		 jl	 SHORT $LL3@DumpProtos
$LN1@DumpProtos:
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
; Line 134
  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
_DumpProtos ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _DumpConstants
_TEXT	SEGMENT
_x$ = -20						; size = 8
_x$ = -12						; size = 8
_x$ = -8						; size = 4
_n$1$ = -4						; size = 4
_f$ = 8							; size = 4
_D$ = 12						; size = 4
_x$1 = 15						; size = 1
_x$2 = 15						; size = 1
_DumpConstants PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
; Line 98
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
; Line 100
  00006	8b 45 08	 mov	 eax, DWORD PTR _f$[ebp]
  00009	56		 push	 esi
; Line 101
  0000a	8b 75 0c	 mov	 esi, DWORD PTR _D$[ebp]
  0000d	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00010	89 4d fc	 mov	 DWORD PTR _n$1$[ebp], ecx
  00013	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00017	89 4d f8	 mov	 DWORD PTR _x$[ebp], ecx
  0001a	75 1c		 jne	 SHORT $LN16@DumpConsta
  0001c	ff 76 08	 push	 DWORD PTR [esi+8]
  0001f	8d 45 f8	 lea	 eax, DWORD PTR _x$[ebp]
  00022	6a 04		 push	 4
  00024	50		 push	 eax
  00025	ff 36		 push	 DWORD PTR [esi]
  00027	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0002a	ff d0		 call	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _n$1$[ebp]
  0002f	83 c4 10	 add	 esp, 16			; 00000010H
  00032	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00035	8b 45 08	 mov	 eax, DWORD PTR _f$[ebp]
$LN16@DumpConsta:
; Line 102
  00038	85 c9		 test	 ecx, ecx
  0003a	0f 8e e2 00 00
	00		 jle	 $LN9@DumpConsta
  00040	53		 push	 ebx
  00041	57		 push	 edi
  00042	33 db		 xor	 ebx, ebx
$LL11@DumpConsta:
  00044	8b 78 2c	 mov	 edi, DWORD PTR [eax+44]
; Line 104
  00047	8a 44 1f 08	 mov	 al, BYTE PTR [edi+ebx+8]
  0004b	03 fb		 add	 edi, ebx
  0004d	24 3f		 and	 al, 63			; 0000003fH
  0004f	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00053	88 45 0f	 mov	 BYTE PTR _x$2[ebp], al
  00056	75 19		 jne	 SHORT $LN21@DumpConsta
  00058	ff 76 08	 push	 DWORD PTR [esi+8]
  0005b	8d 45 0f	 lea	 eax, DWORD PTR _x$2[ebp]
  0005e	6a 01		 push	 1
  00060	50		 push	 eax
  00061	ff 36		 push	 DWORD PTR [esi]
  00063	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00066	ff d0		 call	 eax
  00068	8b 4d fc	 mov	 ecx, DWORD PTR _n$1$[ebp]
  0006b	83 c4 10	 add	 esp, 16			; 00000010H
  0006e	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN21@DumpConsta:
; Line 105
  00071	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00074	83 e0 3f	 and	 eax, 63			; 0000003fH
  00077	48		 dec	 eax
  00078	83 f8 13	 cmp	 eax, 19			; 00000013H
  0007b	0f 87 8f 00 00
	00		 ja	 $LN10@DumpConsta
  00081	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN43@DumpConsta[eax]
  00088	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN46@DumpConsta[eax*4]
$LN5@DumpConsta:
; Line 109
  0008f	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00093	8a 07		 mov	 al, BYTE PTR [edi]
  00095	88 45 0f	 mov	 BYTE PTR _x$1[ebp], al
  00098	75 76		 jne	 SHORT $LN10@DumpConsta
  0009a	ff 76 08	 push	 DWORD PTR [esi+8]
  0009d	8d 45 0f	 lea	 eax, DWORD PTR _x$1[ebp]
  000a0	6a 01		 push	 1
  000a2	50		 push	 eax
  000a3	ff 36		 push	 DWORD PTR [esi]
  000a5	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a8	ff d0		 call	 eax
  000aa	83 c4 10	 add	 esp, 16			; 00000010H
  000ad	89 46 10	 mov	 DWORD PTR [esi+16], eax
; Line 110
  000b0	eb 5b		 jmp	 SHORT $LN44@DumpConsta
$LN4@DumpConsta:
; Line 112
  000b2	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  000b6	f2 0f 10 07	 movsd	 xmm0, QWORD PTR [edi]
  000ba	f2 0f 11 45 ec	 movsd	 QWORD PTR _x$[ebp], xmm0
  000bf	75 4f		 jne	 SHORT $LN10@DumpConsta
  000c1	ff 76 08	 push	 DWORD PTR [esi+8]
  000c4	8d 45 ec	 lea	 eax, DWORD PTR _x$[ebp]
  000c7	6a 08		 push	 8
  000c9	50		 push	 eax
  000ca	ff 36		 push	 DWORD PTR [esi]
  000cc	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000cf	ff d0		 call	 eax
  000d1	83 c4 10	 add	 esp, 16			; 00000010H
  000d4	89 46 10	 mov	 DWORD PTR [esi+16], eax
; Line 113
  000d7	eb 34		 jmp	 SHORT $LN44@DumpConsta
$LN3@DumpConsta:
; Line 115
  000d9	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  000dd	8b 07		 mov	 eax, DWORD PTR [edi]
  000df	89 45 f4	 mov	 DWORD PTR _x$[ebp], eax
  000e2	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000e5	89 45 f8	 mov	 DWORD PTR _x$[ebp+4], eax
  000e8	75 26		 jne	 SHORT $LN10@DumpConsta
  000ea	ff 76 08	 push	 DWORD PTR [esi+8]
  000ed	8d 45 f4	 lea	 eax, DWORD PTR _x$[ebp]
  000f0	6a 08		 push	 8
  000f2	50		 push	 eax
  000f3	ff 36		 push	 DWORD PTR [esi]
  000f5	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f8	ff d0		 call	 eax
  000fa	83 c4 10	 add	 esp, 16			; 00000010H
  000fd	89 46 10	 mov	 DWORD PTR [esi+16], eax
; Line 116
  00100	eb 0b		 jmp	 SHORT $LN44@DumpConsta
$LN2@DumpConsta:
; Line 119
  00102	56		 push	 esi
  00103	ff 37		 push	 DWORD PTR [edi]
  00105	e8 00 00 00 00	 call	 _DumpString
  0010a	83 c4 08	 add	 esp, 8
$LN44@DumpConsta:
  0010d	8b 4d fc	 mov	 ecx, DWORD PTR _n$1$[ebp]
$LN10@DumpConsta:
; Line 102
  00110	8b 45 08	 mov	 eax, DWORD PTR _f$[ebp]
  00113	83 c3 10	 add	 ebx, 16			; 00000010H
  00116	49		 dec	 ecx
  00117	89 4d fc	 mov	 DWORD PTR _n$1$[ebp], ecx
  0011a	0f 85 24 ff ff
	ff		 jne	 $LL11@DumpConsta
  00120	5f		 pop	 edi
  00121	5b		 pop	 ebx
$LN9@DumpConsta:
  00122	5e		 pop	 esi
; Line 125
  00123	8b e5		 mov	 esp, ebp
  00125	5d		 pop	 ebp
  00126	c3		 ret	 0
  00127	90		 npad	 1
$LN46@DumpConsta:
  00128	00 00 00 00	 DD	 $LN5@DumpConsta
  0012c	00 00 00 00	 DD	 $LN4@DumpConsta
  00130	00 00 00 00	 DD	 $LN2@DumpConsta
  00134	00 00 00 00	 DD	 $LN3@DumpConsta
  00138	00 00 00 00	 DD	 $LN10@DumpConsta
$LN43@DumpConsta:
  0013c	00		 DB	 0
  0013d	04		 DB	 4
  0013e	01		 DB	 1
  0013f	02		 DB	 2
  00140	04		 DB	 4
  00141	04		 DB	 4
  00142	04		 DB	 4
  00143	04		 DB	 4
  00144	04		 DB	 4
  00145	04		 DB	 4
  00146	04		 DB	 4
  00147	04		 DB	 4
  00148	04		 DB	 4
  00149	04		 DB	 4
  0014a	04		 DB	 4
  0014b	04		 DB	 4
  0014c	04		 DB	 4
  0014d	04		 DB	 4
  0014e	03		 DB	 3
  0014f	02		 DB	 2
_DumpConstants ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _DumpFunction
_TEXT	SEGMENT
_f$ = 8							; size = 4
_psource$ = 12						; size = 4
_x$ = 16						; size = 4
_x$ = 16						; size = 4
_x$ = 16						; size = 4
_D$ = 16						; size = 4
_x$1 = 19						; size = 1
_x$2 = 19						; size = 1
_x$3 = 19						; size = 1
_x$4 = 19						; size = 1
_DumpFunction PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
; Line 166
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 167
  00004	8b 75 10	 mov	 esi, DWORD PTR _D$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR _f$[ebp]
  0000b	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  0000f	75 14		 jne	 SHORT $LN2@DumpFuncti
  00011	8b 47 48	 mov	 eax, DWORD PTR [edi+72]
  00014	3b 45 0c	 cmp	 eax, DWORD PTR _psource$[ebp]
  00017	74 0c		 je	 SHORT $LN2@DumpFuncti
; Line 170
  00019	56		 push	 esi
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 _DumpString
  00020	83 c4 08	 add	 esp, 8
  00023	eb 20		 jmp	 SHORT $LN16@DumpFuncti
$LN2@DumpFuncti:
; Line 168
  00025	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00029	c6 45 13 00	 mov	 BYTE PTR _x$4[ebp], 0
  0002d	75 16		 jne	 SHORT $LN16@DumpFuncti
  0002f	ff 76 08	 push	 DWORD PTR [esi+8]
  00032	8d 45 13	 lea	 eax, DWORD PTR _x$4[ebp]
  00035	6a 01		 push	 1
  00037	50		 push	 eax
  00038	ff 36		 push	 DWORD PTR [esi]
  0003a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0003d	ff d0		 call	 eax
  0003f	83 c4 10	 add	 esp, 16			; 00000010H
  00042	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN16@DumpFuncti:
; Line 171
  00045	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00049	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  0004c	89 45 10	 mov	 DWORD PTR _x$[ebp], eax
  0004f	75 16		 jne	 SHORT $LN37@DumpFuncti
  00051	ff 76 08	 push	 DWORD PTR [esi+8]
  00054	8d 45 10	 lea	 eax, DWORD PTR _x$[ebp]
  00057	6a 04		 push	 4
  00059	50		 push	 eax
  0005a	ff 36		 push	 DWORD PTR [esi]
  0005c	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0005f	ff d0		 call	 eax
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN37@DumpFuncti:
; Line 172
  00067	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0006b	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  0006e	89 45 10	 mov	 DWORD PTR _x$[ebp], eax
  00071	75 16		 jne	 SHORT $LN42@DumpFuncti
  00073	ff 76 08	 push	 DWORD PTR [esi+8]
  00076	8d 45 10	 lea	 eax, DWORD PTR _x$[ebp]
  00079	6a 04		 push	 4
  0007b	50		 push	 eax
  0007c	ff 36		 push	 DWORD PTR [esi]
  0007e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00081	ff d0		 call	 eax
  00083	83 c4 10	 add	 esp, 16			; 00000010H
  00086	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN42@DumpFuncti:
; Line 173
  00089	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0008d	8a 47 06	 mov	 al, BYTE PTR [edi+6]
  00090	88 45 13	 mov	 BYTE PTR _x$3[ebp], al
  00093	75 16		 jne	 SHORT $LN47@DumpFuncti
  00095	ff 76 08	 push	 DWORD PTR [esi+8]
  00098	8d 45 13	 lea	 eax, DWORD PTR _x$3[ebp]
  0009b	6a 01		 push	 1
  0009d	50		 push	 eax
  0009e	ff 36		 push	 DWORD PTR [esi]
  000a0	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a3	ff d0		 call	 eax
  000a5	83 c4 10	 add	 esp, 16			; 00000010H
  000a8	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN47@DumpFuncti:
; Line 174
  000ab	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  000af	8a 47 07	 mov	 al, BYTE PTR [edi+7]
  000b2	88 45 13	 mov	 BYTE PTR _x$2[ebp], al
  000b5	75 16		 jne	 SHORT $LN52@DumpFuncti
  000b7	ff 76 08	 push	 DWORD PTR [esi+8]
  000ba	8d 45 13	 lea	 eax, DWORD PTR _x$2[ebp]
  000bd	6a 01		 push	 1
  000bf	50		 push	 eax
  000c0	ff 36		 push	 DWORD PTR [esi]
  000c2	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000c5	ff d0		 call	 eax
  000c7	83 c4 10	 add	 esp, 16			; 00000010H
  000ca	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN52@DumpFuncti:
; Line 175
  000cd	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  000d1	8a 47 08	 mov	 al, BYTE PTR [edi+8]
  000d4	88 45 13	 mov	 BYTE PTR _x$1[ebp], al
  000d7	75 16		 jne	 SHORT $LN57@DumpFuncti
  000d9	ff 76 08	 push	 DWORD PTR [esi+8]
  000dc	8d 45 13	 lea	 eax, DWORD PTR _x$1[ebp]
  000df	6a 01		 push	 1
  000e1	50		 push	 eax
  000e2	ff 36		 push	 DWORD PTR [esi]
  000e4	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000e7	ff d0		 call	 eax
  000e9	83 c4 10	 add	 esp, 16			; 00000010H
  000ec	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN57@DumpFuncti:
; Line 176
  000ef	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  000f3	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  000f6	89 45 10	 mov	 DWORD PTR _x$[ebp], eax
  000f9	75 16		 jne	 SHORT $LN64@DumpFuncti
  000fb	ff 76 08	 push	 DWORD PTR [esi+8]
  000fe	8d 45 10	 lea	 eax, DWORD PTR _x$[ebp]
  00101	6a 04		 push	 4
  00103	50		 push	 eax
  00104	ff 36		 push	 DWORD PTR [esi]
  00106	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00109	ff d0		 call	 eax
  0010b	83 c4 10	 add	 esp, 16			; 00000010H
  0010e	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN64@DumpFuncti:
  00111	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00114	c1 e0 02	 shl	 eax, 2
  00117	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0011b	75 18		 jne	 SHORT $LN67@DumpFuncti
  0011d	85 c0		 test	 eax, eax
  0011f	74 14		 je	 SHORT $LN67@DumpFuncti
  00121	ff 76 08	 push	 DWORD PTR [esi+8]
  00124	50		 push	 eax
  00125	ff 77 30	 push	 DWORD PTR [edi+48]
  00128	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0012b	ff 36		 push	 DWORD PTR [esi]
  0012d	ff d0		 call	 eax
  0012f	83 c4 10	 add	 esp, 16			; 00000010H
  00132	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN67@DumpFuncti:
; Line 177
  00135	56		 push	 esi
  00136	57		 push	 edi
  00137	e8 00 00 00 00	 call	 _DumpConstants
; Line 178
  0013c	56		 push	 esi
  0013d	57		 push	 edi
  0013e	e8 00 00 00 00	 call	 _DumpUpvalues
; Line 179
  00143	56		 push	 esi
  00144	57		 push	 edi
  00145	e8 00 00 00 00	 call	 _DumpProtos
; Line 180
  0014a	56		 push	 esi
  0014b	57		 push	 edi
  0014c	e8 00 00 00 00	 call	 _DumpDebug
  00151	83 c4 20	 add	 esp, 32			; 00000020H
  00154	5f		 pop	 edi
  00155	5e		 pop	 esi
; Line 181
  00156	5d		 pop	 ebp
  00157	c3		 ret	 0
_DumpFunction ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _DumpCode
_TEXT	SEGMENT
_x$ = 8							; size = 4
_f$ = 8							; size = 4
_D$ = 12						; size = 4
_DumpCode PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
; Line 90
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 91
  00004	8b 75 0c	 mov	 esi, DWORD PTR _D$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 08	 mov	 edi, DWORD PTR _f$[ebp]
  0000b	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000f	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00012	89 45 08	 mov	 DWORD PTR _x$[ebp], eax
  00015	75 16		 jne	 SHORT $LN5@DumpCode
  00017	ff 76 08	 push	 DWORD PTR [esi+8]
  0001a	8d 45 08	 lea	 eax, DWORD PTR _x$[ebp]
  0001d	6a 04		 push	 4
  0001f	50		 push	 eax
  00020	ff 36		 push	 DWORD PTR [esi]
  00022	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00025	ff d0		 call	 eax
  00027	83 c4 10	 add	 esp, 16			; 00000010H
  0002a	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN5@DumpCode:
; Line 92
  0002d	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00030	c1 e0 02	 shl	 eax, 2
  00033	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00037	75 18		 jne	 SHORT $LN8@DumpCode
  00039	85 c0		 test	 eax, eax
  0003b	74 14		 je	 SHORT $LN8@DumpCode
  0003d	ff 76 08	 push	 DWORD PTR [esi+8]
  00040	50		 push	 eax
  00041	ff 77 30	 push	 DWORD PTR [edi+48]
  00044	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00047	ff 36		 push	 DWORD PTR [esi]
  00049	ff d0		 call	 eax
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN8@DumpCode:
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
; Line 93
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
_DumpCode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _DumpString
_TEXT	SEGMENT
_size$1 = -4						; size = 4
_s$ = 8							; size = 4
_x$2 = 11						; size = 1
_x$3 = 11						; size = 1
_x$4 = 11						; size = 1
_D$ = 12						; size = 4
_DumpString PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
; Line 73
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; Line 74
  00004	8b 45 08	 mov	 eax, DWORD PTR _s$[ebp]
  00007	56		 push	 esi
  00008	85 c0		 test	 eax, eax
  0000a	75 2a		 jne	 SHORT $LN4@DumpString
; Line 75
  0000c	8b 75 0c	 mov	 esi, DWORD PTR _D$[ebp]
  0000f	88 45 0b	 mov	 BYTE PTR _x$3[ebp], al
  00012	39 46 10	 cmp	 DWORD PTR [esi+16], eax
  00015	0f 85 ae 00 00
	00		 jne	 $LN27@DumpString
  0001b	ff 76 08	 push	 DWORD PTR [esi+8]
  0001e	8d 45 0b	 lea	 eax, DWORD PTR _x$3[ebp]
  00021	6a 01		 push	 1
  00023	50		 push	 eax
  00024	ff 36		 push	 DWORD PTR [esi]
  00026	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00029	ff d0		 call	 eax
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00031	5e		 pop	 esi
; Line 87
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
$LN4@DumpString:
; Line 77
  00036	80 78 04 04	 cmp	 BYTE PTR [eax+4], 4
  0003a	75 06		 jne	 SHORT $LN7@DumpString
  0003c	0f b6 48 07	 movzx	 ecx, BYTE PTR [eax+7]
  00040	eb 03		 jmp	 SHORT $LN8@DumpString
$LN7@DumpString:
  00042	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
$LN8@DumpString:
; Line 80
  00045	8b 75 0c	 mov	 esi, DWORD PTR _D$[ebp]
  00048	41		 inc	 ecx
  00049	89 4d fc	 mov	 DWORD PTR _size$1[ebp], ecx
  0004c	57		 push	 edi
  0004d	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  00050	81 f9 ff 00 00
	00		 cmp	 ecx, 255		; 000000ffH
  00056	73 13		 jae	 SHORT $LN2@DumpString
  00058	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0005c	88 4d 0b	 mov	 BYTE PTR _x$4[ebp], cl
  0005f	75 4a		 jne	 SHORT $LN24@DumpString
  00061	ff 76 08	 push	 DWORD PTR [esi+8]
  00064	8d 45 0b	 lea	 eax, DWORD PTR _x$4[ebp]
  00067	6a 01		 push	 1
; Line 81
  00069	eb 2f		 jmp	 SHORT $LN31@DumpString
$LN2@DumpString:
; Line 82
  0006b	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0006f	c6 45 0b ff	 mov	 BYTE PTR _x$2[ebp], 255	; 000000ffH
  00073	75 36		 jne	 SHORT $LN24@DumpString
  00075	ff 76 08	 push	 DWORD PTR [esi+8]
  00078	8d 45 0b	 lea	 eax, DWORD PTR _x$2[ebp]
  0007b	6a 01		 push	 1
  0007d	50		 push	 eax
  0007e	ff 36		 push	 DWORD PTR [esi]
  00080	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00083	ff d0		 call	 eax
  00085	8b 4d fc	 mov	 ecx, DWORD PTR _size$1[ebp]
  00088	83 c4 10	 add	 esp, 16			; 00000010H
  0008b	89 46 10	 mov	 DWORD PTR [esi+16], eax
; Line 83
  0008e	85 c0		 test	 eax, eax
  00090	75 19		 jne	 SHORT $LN24@DumpString
  00092	ff 76 08	 push	 DWORD PTR [esi+8]
  00095	8d 45 fc	 lea	 eax, DWORD PTR _size$1[ebp]
  00098	6a 04		 push	 4
$LN31@DumpString:
  0009a	50		 push	 eax
  0009b	ff 36		 push	 DWORD PTR [esi]
  0009d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a0	ff d0		 call	 eax
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _size$1[ebp]
  000a5	83 c4 10	 add	 esp, 16			; 00000010H
  000a8	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN24@DumpString:
; Line 85
  000ab	49		 dec	 ecx
  000ac	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  000b0	75 16		 jne	 SHORT $LN30@DumpString
  000b2	85 c9		 test	 ecx, ecx
  000b4	74 12		 je	 SHORT $LN30@DumpString
  000b6	ff 76 08	 push	 DWORD PTR [esi+8]
  000b9	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000bc	51		 push	 ecx
  000bd	57		 push	 edi
  000be	ff 36		 push	 DWORD PTR [esi]
  000c0	ff d0		 call	 eax
  000c2	83 c4 10	 add	 esp, 16			; 00000010H
  000c5	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN30@DumpString:
  000c8	5f		 pop	 edi
$LN27@DumpString:
  000c9	5e		 pop	 esi
; Line 87
  000ca	8b e5		 mov	 esp, ebp
  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
_DumpString ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _DumpInteger
_TEXT	SEGMENT
_x$ = 8							; size = 8
_D$ = 16						; size = 4
_DumpInteger PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
; Line 68
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 69
  00004	8b 75 10	 mov	 esi, DWORD PTR _D$[ebp]
  00007	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000b	75 16		 jne	 SHORT $LN3@DumpIntege
  0000d	ff 76 08	 push	 DWORD PTR [esi+8]
  00010	8d 45 08	 lea	 eax, DWORD PTR _x$[ebp]
  00013	6a 08		 push	 8
  00015	50		 push	 eax
  00016	ff 36		 push	 DWORD PTR [esi]
  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	ff d0		 call	 eax
  0001d	83 c4 10	 add	 esp, 16			; 00000010H
  00020	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN3@DumpIntege:
  00023	5e		 pop	 esi
; Line 70
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
_DumpInteger ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _DumpNumber
_TEXT	SEGMENT
_x$ = 8							; size = 8
_D$ = 16						; size = 4
_DumpNumber PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
; Line 63
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 64
  00004	8b 75 10	 mov	 esi, DWORD PTR _D$[ebp]
  00007	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000b	75 16		 jne	 SHORT $LN3@DumpNumber
  0000d	ff 76 08	 push	 DWORD PTR [esi+8]
  00010	8d 45 08	 lea	 eax, DWORD PTR _x$[ebp]
  00013	6a 08		 push	 8
  00015	50		 push	 eax
  00016	ff 36		 push	 DWORD PTR [esi]
  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	ff d0		 call	 eax
  0001d	83 c4 10	 add	 esp, 16			; 00000010H
  00020	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN3@DumpNumber:
  00023	5e		 pop	 esi
; Line 65
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
_DumpNumber ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _DumpInt
_TEXT	SEGMENT
_x$ = 8							; size = 4
_D$ = 12						; size = 4
_DumpInt PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
; Line 58
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 59
  00004	8b 75 0c	 mov	 esi, DWORD PTR _D$[ebp]
  00007	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000b	75 16		 jne	 SHORT $LN3@DumpInt
  0000d	ff 76 08	 push	 DWORD PTR [esi+8]
  00010	8d 45 08	 lea	 eax, DWORD PTR _x$[ebp]
  00013	6a 04		 push	 4
  00015	50		 push	 eax
  00016	ff 36		 push	 DWORD PTR [esi]
  00018	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001b	ff d0		 call	 eax
  0001d	83 c4 10	 add	 esp, 16			; 00000010H
  00020	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN3@DumpInt:
  00023	5e		 pop	 esi
; Line 60
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
_DumpInt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _DumpByte
_TEXT	SEGMENT
_y$ = 8							; size = 4
_x$ = 11						; size = 1
_D$ = 12						; size = 4
_DumpByte PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
; Line 52
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 53
  00003	8b 45 08	 mov	 eax, DWORD PTR _y$[ebp]
  00006	56		 push	 esi
; Line 54
  00007	8b 75 0c	 mov	 esi, DWORD PTR _D$[ebp]
  0000a	88 45 0b	 mov	 BYTE PTR _x$[ebp], al
  0000d	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  00011	75 16		 jne	 SHORT $LN3@DumpByte
  00013	ff 76 08	 push	 DWORD PTR [esi+8]
  00016	8d 45 0b	 lea	 eax, DWORD PTR _x$[ebp]
  00019	6a 01		 push	 1
  0001b	50		 push	 eax
  0001c	ff 36		 push	 DWORD PTR [esi]
  0001e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00021	ff d0		 call	 eax
  00023	83 c4 10	 add	 esp, 16			; 00000010H
  00026	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN3@DumpByte:
  00029	5e		 pop	 esi
; Line 55
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
_DumpByte ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _DumpBlock
_TEXT	SEGMENT
_b$ = 8							; size = 4
_size$ = 12						; size = 4
_D$ = 16						; size = 4
_DumpBlock PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
; Line 40
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 41
  00004	8b 75 10	 mov	 esi, DWORD PTR _D$[ebp]
  00007	83 7e 10 00	 cmp	 DWORD PTR [esi+16], 0
  0000b	75 1b		 jne	 SHORT $LN1@DumpBlock
  0000d	8b 45 0c	 mov	 eax, DWORD PTR _size$[ebp]
  00010	85 c0		 test	 eax, eax
  00012	74 14		 je	 SHORT $LN1@DumpBlock
; Line 43
  00014	ff 76 08	 push	 DWORD PTR [esi+8]
  00017	50		 push	 eax
  00018	ff 75 08	 push	 DWORD PTR _b$[ebp]
  0001b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001e	ff 36		 push	 DWORD PTR [esi]
  00020	ff d0		 call	 eax
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 46 10	 mov	 DWORD PTR [esi+16], eax
$LN1@DumpBlock:
  00028	5e		 pop	 esi
; Line 46
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_DumpBlock ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaU_dump
_TEXT	SEGMENT
_D$ = -20						; size = 20
_L$ = 8							; size = 4
_x$1 = 11						; size = 1
_f$ = 12						; size = 4
_w$ = 16						; size = 4
_data$ = 20						; size = 4
_strip$ = 24						; size = 4
_luaU_dump PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldump.c
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
; Line 205
  00006	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00009	89 45 ec	 mov	 DWORD PTR _D$[ebp], eax
; Line 206
  0000c	8b 45 10	 mov	 eax, DWORD PTR _w$[ebp]
  0000f	89 45 f0	 mov	 DWORD PTR _D$[ebp+4], eax
; Line 207
  00012	8b 45 14	 mov	 eax, DWORD PTR _data$[ebp]
  00015	89 45 f4	 mov	 DWORD PTR _D$[ebp+8], eax
; Line 208
  00018	8b 45 18	 mov	 eax, DWORD PTR _strip$[ebp]
  0001b	89 45 f8	 mov	 DWORD PTR _D$[ebp+12], eax
; Line 210
  0001e	8d 45 ec	 lea	 eax, DWORD PTR _D$[ebp]
  00021	56		 push	 esi
  00022	50		 push	 eax
  00023	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _D$[ebp+16], 0
  0002a	e8 00 00 00 00	 call	 _DumpHeader
; Line 211
  0002f	8b 75 0c	 mov	 esi, DWORD PTR _f$[ebp]
  00032	83 c4 04	 add	 esp, 4
  00035	83 7d fc 00	 cmp	 DWORD PTR _D$[ebp+16], 0
  00039	8a 46 0c	 mov	 al, BYTE PTR [esi+12]
  0003c	88 45 0b	 mov	 BYTE PTR _x$1[ebp], al
  0003f	75 15		 jne	 SHORT $LN5@luaU_dump
  00041	ff 75 f4	 push	 DWORD PTR _D$[ebp+8]
  00044	8d 45 0b	 lea	 eax, DWORD PTR _x$1[ebp]
  00047	6a 01		 push	 1
  00049	50		 push	 eax
  0004a	ff 75 ec	 push	 DWORD PTR _D$[ebp]
  0004d	ff 55 f0	 call	 DWORD PTR _D$[ebp+4]
  00050	83 c4 10	 add	 esp, 16			; 00000010H
  00053	89 45 fc	 mov	 DWORD PTR _D$[ebp+16], eax
$LN5@luaU_dump:
; Line 212
  00056	8d 45 ec	 lea	 eax, DWORD PTR _D$[ebp]
  00059	50		 push	 eax
  0005a	6a 00		 push	 0
  0005c	56		 push	 esi
  0005d	e8 00 00 00 00	 call	 _DumpFunction
; Line 213
  00062	8b 45 fc	 mov	 eax, DWORD PTR _D$[ebp+16]
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH
  00068	5e		 pop	 esi
; Line 214
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
_luaU_dump ENDP
_TEXT	ENDS
END
