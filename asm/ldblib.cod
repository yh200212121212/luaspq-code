; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_04OMFAIDPG@call?$AA@			; `string'
PUBLIC	??_C@_06LNOFJDNM@return?$AA@			; `string'
PUBLIC	??_C@_04HJPCFDOP@line?$AA@			; `string'
PUBLIC	??_C@_05IOMEMJEC@count?$AA@			; `string'
PUBLIC	??_C@_09PJFMDEKP@tail?5call?$AA@		; `string'
PUBLIC	??_C@_05GFCDIDHO@debug?$AA@			; `string'
PUBLIC	??_C@_0N@FNKEMMA@getuservalue?$AA@		; `string'
PUBLIC	??_C@_07GELEAAJ@gethook?$AA@			; `string'
PUBLIC	??_C@_07OICKPAFH@getinfo?$AA@			; `string'
PUBLIC	??_C@_08GMECKPDH@getlocal?$AA@			; `string'
PUBLIC	??_C@_0M@NCNCBJKP@getregistry?$AA@		; `string'
PUBLIC	??_C@_0N@LGLOEPAG@getmetatable?$AA@		; `string'
PUBLIC	??_C@_0L@DNKHBCFJ@getupvalue?$AA@		; `string'
PUBLIC	??_C@_0M@BLDMBHBB@upvaluejoin?$AA@		; `string'
PUBLIC	??_C@_09LPCDDMGF@upvalueid?$AA@			; `string'
PUBLIC	??_C@_0N@HBGEIAIM@setuservalue?$AA@		; `string'
PUBLIC	??_C@_07POLKHPNI@sethook?$AA@			; `string'
PUBLIC	??_C@_08JNGOLMEK@setlocal?$AA@			; `string'
PUBLIC	??_C@_0N@MCAAIDEK@setmetatable?$AA@		; `string'
PUBLIC	??_C@_0L@CDIIKFBA@setupvalue?$AA@		; `string'
PUBLIC	??_C@_09GPFEECNC@traceback?$AA@			; `string'
;	COMDAT ??_C@_09GPFEECNC@traceback?$AA@
CONST	SEGMENT
??_C@_09GPFEECNC@traceback?$AA@ DB 'traceback', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CDIIKFBA@setupvalue?$AA@
CONST	SEGMENT
??_C@_0L@CDIIKFBA@setupvalue?$AA@ DB 'setupvalue', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MCAAIDEK@setmetatable?$AA@
CONST	SEGMENT
??_C@_0N@MCAAIDEK@setmetatable?$AA@ DB 'setmetatable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JNGOLMEK@setlocal?$AA@
CONST	SEGMENT
??_C@_08JNGOLMEK@setlocal?$AA@ DB 'setlocal', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07POLKHPNI@sethook?$AA@
CONST	SEGMENT
??_C@_07POLKHPNI@sethook?$AA@ DB 'sethook', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HBGEIAIM@setuservalue?$AA@
CONST	SEGMENT
??_C@_0N@HBGEIAIM@setuservalue?$AA@ DB 'setuservalue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LPCDDMGF@upvalueid?$AA@
CONST	SEGMENT
??_C@_09LPCDDMGF@upvalueid?$AA@ DB 'upvalueid', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BLDMBHBB@upvaluejoin?$AA@
CONST	SEGMENT
??_C@_0M@BLDMBHBB@upvaluejoin?$AA@ DB 'upvaluejoin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DNKHBCFJ@getupvalue?$AA@
CONST	SEGMENT
??_C@_0L@DNKHBCFJ@getupvalue?$AA@ DB 'getupvalue', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LGLOEPAG@getmetatable?$AA@
CONST	SEGMENT
??_C@_0N@LGLOEPAG@getmetatable?$AA@ DB 'getmetatable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NCNCBJKP@getregistry?$AA@
CONST	SEGMENT
??_C@_0M@NCNCBJKP@getregistry?$AA@ DB 'getregistry', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GMECKPDH@getlocal?$AA@
CONST	SEGMENT
??_C@_08GMECKPDH@getlocal?$AA@ DB 'getlocal', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07OICKPAFH@getinfo?$AA@
CONST	SEGMENT
??_C@_07OICKPAFH@getinfo?$AA@ DB 'getinfo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GELEAAJ@gethook?$AA@
CONST	SEGMENT
??_C@_07GELEAAJ@gethook?$AA@ DB 'gethook', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FNKEMMA@getuservalue?$AA@
CONST	SEGMENT
??_C@_0N@FNKEMMA@getuservalue?$AA@ DB 'getuservalue', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05GFCDIDHO@debug?$AA@
CONST	SEGMENT
??_C@_05GFCDIDHO@debug?$AA@ DB 'debug', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09PJFMDEKP@tail?5call?$AA@
CONST	SEGMENT
??_C@_09PJFMDEKP@tail?5call?$AA@ DB 'tail call', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05IOMEMJEC@count?$AA@
CONST	SEGMENT
??_C@_05IOMEMJEC@count?$AA@ DB 'count', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HJPCFDOP@line?$AA@
CONST	SEGMENT
??_C@_04HJPCFDOP@line?$AA@ DB 'line', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LNOFJDNM@return?$AA@
CONST	SEGMENT
??_C@_06LNOFJDNM@return?$AA@ DB 'return', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OMFAIDPG@call?$AA@
CONST	SEGMENT
??_C@_04OMFAIDPG@call?$AA@ DB 'call', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_HOOKKEY DD	00H
?hooknames@?1??hookf@@9@9 DD FLAT:??_C@_04OMFAIDPG@call?$AA@ ; `hookf'::`2'::hooknames
	DD	FLAT:??_C@_06LNOFJDNM@return?$AA@
	DD	FLAT:??_C@_04HJPCFDOP@line?$AA@
	DD	FLAT:??_C@_05IOMEMJEC@count?$AA@
	DD	FLAT:??_C@_09PJFMDEKP@tail?5call?$AA@
_dblib	DD	FLAT:??_C@_05GFCDIDHO@debug?$AA@
	DD	FLAT:_db_debug
	DD	FLAT:??_C@_0N@FNKEMMA@getuservalue?$AA@
	DD	FLAT:_db_getuservalue
	DD	FLAT:??_C@_07GELEAAJ@gethook?$AA@
	DD	FLAT:_db_gethook
	DD	FLAT:??_C@_07OICKPAFH@getinfo?$AA@
	DD	FLAT:_db_getinfo
	DD	FLAT:??_C@_08GMECKPDH@getlocal?$AA@
	DD	FLAT:_db_getlocal
	DD	FLAT:??_C@_0M@NCNCBJKP@getregistry?$AA@
	DD	FLAT:_db_getregistry
	DD	FLAT:??_C@_0N@LGLOEPAG@getmetatable?$AA@
	DD	FLAT:_db_getmetatable
	DD	FLAT:??_C@_0L@DNKHBCFJ@getupvalue?$AA@
	DD	FLAT:_db_getupvalue
	DD	FLAT:??_C@_0M@BLDMBHBB@upvaluejoin?$AA@
	DD	FLAT:_db_upvaluejoin
	DD	FLAT:??_C@_09LPCDDMGF@upvalueid?$AA@
	DD	FLAT:_db_upvalueid
	DD	FLAT:??_C@_0N@HBGEIAIM@setuservalue?$AA@
	DD	FLAT:_db_setuservalue
	DD	FLAT:??_C@_07POLKHPNI@sethook?$AA@
	DD	FLAT:_db_sethook
	DD	FLAT:??_C@_08JNGOLMEK@setlocal?$AA@
	DD	FLAT:_db_setlocal
	DD	FLAT:??_C@_0N@MCAAIDEK@setmetatable?$AA@
	DD	FLAT:_db_setmetatable
	DD	FLAT:??_C@_0L@CDIIKFBA@setupvalue?$AA@
	DD	FLAT:_db_setupvalue
	DD	FLAT:??_C@_09GPFEECNC@traceback?$AA@
	DD	FLAT:_db_traceback
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	_luaopen_debug
PUBLIC	??_C@_0P@EODJGPIM@stack?5overflow?$AA@		; `string'
PUBLIC	??_C@_0BG@HDIIKINN@nil?5or?5table?5expected?$AA@ ; `string'
PUBLIC	??_C@_06LMJLCCA@flnStu?$AA@			; `string'
PUBLIC	??_C@_03PENLABEP@?$DO?$CFs?$AA@			; `string'
PUBLIC	??_C@_0P@PJFAGLMH@invalid?5option?$AA@		; `string'
PUBLIC	??_C@_06OEKOLKIL@source?$AA@			; `string'
PUBLIC	??_C@_09NOFDGFFO@short_src?$AA@			; `string'
PUBLIC	??_C@_0M@IOFFDKM@linedefined?$AA@		; `string'
PUBLIC	??_C@_0BA@BGGOJOFO@lastlinedefined?$AA@		; `string'
PUBLIC	??_C@_04IOPLPGDE@what?$AA@			; `string'
PUBLIC	??_C@_0M@OLGEEKJC@currentline?$AA@		; `string'
PUBLIC	??_C@_04BDNNNDAF@nups?$AA@			; `string'
PUBLIC	??_C@_07DEOJMPEE@nparams?$AA@			; `string'
PUBLIC	??_C@_08PKLIBBKE@isvararg?$AA@			; `string'
PUBLIC	??_C@_04MEMAJGDJ@name?$AA@			; `string'
PUBLIC	??_C@_08JEGIFMFI@namewhat?$AA@			; `string'
PUBLIC	??_C@_0L@KHAEKHMK@istailcall?$AA@		; `string'
PUBLIC	??_C@_0M@DINLHJFF@activelines?$AA@		; `string'
PUBLIC	??_C@_04HPNHAEOP@func?$AA@			; `string'
PUBLIC	??_C@_0BD@EFMIJNPC@level?5out?5of?5range?$AA@	; `string'
PUBLIC	??_C@_0BG@MMNKKMGE@invalid?5upvalue?5index?$AA@	; `string'
PUBLIC	??_C@_0BG@EHJAKGKG@Lua?5function?5expected?$AA@	; `string'
PUBLIC	??_C@_01DICPFPGM@k?$AA@				; `string'
PUBLIC	??_C@_06BPGFKLEK@__mode?$AA@			; `string'
PUBLIC	??_C@_0O@POGBCBNN@external?5hook?$AA@		; `string'
PUBLIC	??_C@_0M@FBGICICO@lua_debug?$DO?5?$AA@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_05KJNBGLAC@cont?6?$AA@			; `string'
PUBLIC	??_C@_0BB@BLKFCGLG@?$DN?$CIdebug?5command?$CJ?$AA@ ; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6?$AA@			; `string'
PUBLIC	__real@405bc00000000000
EXTRN	__imp____iob_func:PROC
EXTRN	__imp__fflush:PROC
EXTRN	__imp__fgets:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp__strchr:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_rotate:PROC
EXTRN	_lua_checkstack:PROC
EXTRN	_lua_xmove:PROC
EXTRN	_lua_iscfunction:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_tolstring:PROC
EXTRN	_lua_tothread:PROC
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_pushinteger:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_lua_pushfstring:PROC
EXTRN	_lua_pushboolean:PROC
EXTRN	_lua_pushlightuserdata:PROC
EXTRN	_lua_pushthread:PROC
EXTRN	_lua_rawget:PROC
EXTRN	_lua_rawgetp:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_getmetatable:PROC
EXTRN	_lua_getuservalue:PROC
EXTRN	_lua_setfield:PROC
EXTRN	_lua_rawset:PROC
EXTRN	_lua_rawsetp:PROC
EXTRN	_lua_setmetatable:PROC
EXTRN	_lua_setuservalue:PROC
EXTRN	_lua_callk:PROC
EXTRN	_lua_pcallk:PROC
EXTRN	_lua_getstack:PROC
EXTRN	_lua_getinfo:PROC
EXTRN	_lua_getlocal:PROC
EXTRN	_lua_setlocal:PROC
EXTRN	_lua_getupvalue:PROC
EXTRN	_lua_setupvalue:PROC
EXTRN	_lua_upvalueid:PROC
EXTRN	_lua_upvaluejoin:PROC
EXTRN	_lua_sethook:PROC
EXTRN	_lua_gethook:PROC
EXTRN	_lua_gethookmask:PROC
EXTRN	_lua_gethookcount:PROC
EXTRN	_luaL_checkversion_:PROC
EXTRN	_luaL_argerror:PROC
EXTRN	_luaL_checklstring:PROC
EXTRN	_luaL_optlstring:PROC
EXTRN	_luaL_checkinteger:PROC
EXTRN	_luaL_optinteger:PROC
EXTRN	_luaL_checktype:PROC
EXTRN	_luaL_checkany:PROC
EXTRN	_luaL_error:PROC
EXTRN	_luaL_loadbufferx:PROC
EXTRN	_luaL_setfuncs:PROC
EXTRN	_luaL_traceback:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@405bc00000000000
CONST	SEGMENT
__real@405bc00000000000 DQ 0405bc00000000000r	; 111
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6?$AA@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6?$AA@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BLKFCGLG@?$DN?$CIdebug?5command?$CJ?$AA@
CONST	SEGMENT
??_C@_0BB@BLKFCGLG@?$DN?$CIdebug?5command?$CJ?$AA@ DB '=(debug command)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KJNBGLAC@cont?6?$AA@
CONST	SEGMENT
??_C@_05KJNBGLAC@cont?6?$AA@ DB 'cont', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FBGICICO@lua_debug?$DO?5?$AA@
CONST	SEGMENT
??_C@_0M@FBGICICO@lua_debug?$DO?5?$AA@ DB 'lua_debug> ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@POGBCBNN@external?5hook?$AA@
CONST	SEGMENT
??_C@_0O@POGBCBNN@external?5hook?$AA@ DB 'external hook', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BPGFKLEK@__mode?$AA@
CONST	SEGMENT
??_C@_06BPGFKLEK@__mode?$AA@ DB '__mode', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01DICPFPGM@k?$AA@
CONST	SEGMENT
??_C@_01DICPFPGM@k?$AA@ DB 'k', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EHJAKGKG@Lua?5function?5expected?$AA@
CONST	SEGMENT
??_C@_0BG@EHJAKGKG@Lua?5function?5expected?$AA@ DB 'Lua function expected'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MMNKKMGE@invalid?5upvalue?5index?$AA@
CONST	SEGMENT
??_C@_0BG@MMNKKMGE@invalid?5upvalue?5index?$AA@ DB 'invalid upvalue index'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EFMIJNPC@level?5out?5of?5range?$AA@
CONST	SEGMENT
??_C@_0BD@EFMIJNPC@level?5out?5of?5range?$AA@ DB 'level out of range', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04HPNHAEOP@func?$AA@
CONST	SEGMENT
??_C@_04HPNHAEOP@func?$AA@ DB 'func', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DINLHJFF@activelines?$AA@
CONST	SEGMENT
??_C@_0M@DINLHJFF@activelines?$AA@ DB 'activelines', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KHAEKHMK@istailcall?$AA@
CONST	SEGMENT
??_C@_0L@KHAEKHMK@istailcall?$AA@ DB 'istailcall', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JEGIFMFI@namewhat?$AA@
CONST	SEGMENT
??_C@_08JEGIFMFI@namewhat?$AA@ DB 'namewhat', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04MEMAJGDJ@name?$AA@
CONST	SEGMENT
??_C@_04MEMAJGDJ@name?$AA@ DB 'name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PKLIBBKE@isvararg?$AA@
CONST	SEGMENT
??_C@_08PKLIBBKE@isvararg?$AA@ DB 'isvararg', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DEOJMPEE@nparams?$AA@
CONST	SEGMENT
??_C@_07DEOJMPEE@nparams?$AA@ DB 'nparams', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04BDNNNDAF@nups?$AA@
CONST	SEGMENT
??_C@_04BDNNNDAF@nups?$AA@ DB 'nups', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OLGEEKJC@currentline?$AA@
CONST	SEGMENT
??_C@_0M@OLGEEKJC@currentline?$AA@ DB 'currentline', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04IOPLPGDE@what?$AA@
CONST	SEGMENT
??_C@_04IOPLPGDE@what?$AA@ DB 'what', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BGGOJOFO@lastlinedefined?$AA@
CONST	SEGMENT
??_C@_0BA@BGGOJOFO@lastlinedefined?$AA@ DB 'lastlinedefined', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IOFFDKM@linedefined?$AA@
CONST	SEGMENT
??_C@_0M@IOFFDKM@linedefined?$AA@ DB 'linedefined', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NOFDGFFO@short_src?$AA@
CONST	SEGMENT
??_C@_09NOFDGFFO@short_src?$AA@ DB 'short_src', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06OEKOLKIL@source?$AA@
CONST	SEGMENT
??_C@_06OEKOLKIL@source?$AA@ DB 'source', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PJFAGLMH@invalid?5option?$AA@
CONST	SEGMENT
??_C@_0P@PJFAGLMH@invalid?5option?$AA@ DB 'invalid option', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03PENLABEP@?$DO?$CFs?$AA@
CONST	SEGMENT
??_C@_03PENLABEP@?$DO?$CFs?$AA@ DB '>%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LMJLCCA@flnStu?$AA@
CONST	SEGMENT
??_C@_06LMJLCCA@flnStu?$AA@ DB 'flnStu', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HDIIKINN@nil?5or?5table?5expected?$AA@
CONST	SEGMENT
??_C@_0BG@HDIIKINN@nil?5or?5table?5expected?$AA@ DB 'nil or table expecte'
	DB	'd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EODJGPIM@stack?5overflow?$AA@
CONST	SEGMENT
??_C@_0P@EODJGPIM@stack?5overflow?$AA@ DB 'stack overflow', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_traceback
_TEXT	SEGMENT
_msg$1$ = -8						; size = 4
_L1$1$ = -4						; size = 4
_L$ = 8							; size = 4
_db_traceback PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 417
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
; Line 419
  00008	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000b	57		 push	 edi
  0000c	6a 01		 push	 1
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 _lua_type
  00014	83 c4 08	 add	 esp, 8
  00017	83 f8 08	 cmp	 eax, 8
  0001a	75 12		 jne	 SHORT $LN6@db_traceba
  0001c	8d 58 f9	 lea	 ebx, DWORD PTR [eax-7]
  0001f	53		 push	 ebx
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 _lua_tothread
  00026	83 c4 08	 add	 esp, 8
  00029	89 45 fc	 mov	 DWORD PTR _L1$1$[ebp], eax
  0002c	eb 05		 jmp	 SHORT $LN5@db_traceba
$LN6@db_traceba:
  0002e	33 db		 xor	 ebx, ebx
  00030	89 75 fc	 mov	 DWORD PTR _L1$1$[ebp], esi
$LN5@db_traceba:
; Line 420
  00033	6a 00		 push	 0
  00035	8d 7b 01	 lea	 edi, DWORD PTR [ebx+1]
  00038	57		 push	 edi
  00039	56		 push	 esi
  0003a	e8 00 00 00 00	 call	 _lua_tolstring
  0003f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00042	89 45 f8	 mov	 DWORD PTR _msg$1$[ebp], eax
; Line 421
  00045	85 c0		 test	 eax, eax
  00047	75 24		 jne	 SHORT $LN2@db_traceba
  00049	57		 push	 edi
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 _lua_type
  00050	83 c4 08	 add	 esp, 8
  00053	85 c0		 test	 eax, eax
  00055	7e 16		 jle	 SHORT $LN2@db_traceba
; Line 422
  00057	57		 push	 edi
  00058	56		 push	 esi
  00059	e8 00 00 00 00	 call	 _lua_pushvalue
  0005e	83 c4 08	 add	 esp, 8
; Line 427
  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
; Line 428
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
$LN2@db_traceba:
; Line 424
  0006d	8b 7d fc	 mov	 edi, DWORD PTR _L1$1$[ebp]
  00070	33 c0		 xor	 eax, eax
  00072	3b f7		 cmp	 esi, edi
  00074	0f 94 c0	 sete	 al
  00077	99		 cdq
  00078	52		 push	 edx
  00079	50		 push	 eax
  0007a	8d 43 02	 lea	 eax, DWORD PTR [ebx+2]
  0007d	50		 push	 eax
  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 _luaL_optinteger
; Line 425
  00084	50		 push	 eax
  00085	ff 75 f8	 push	 DWORD PTR _msg$1$[ebp]
  00088	57		 push	 edi
  00089	56		 push	 esi
  0008a	e8 00 00 00 00	 call	 _luaL_traceback
  0008f	83 c4 20	 add	 esp, 32			; 00000020H
; Line 427
  00092	b8 01 00 00 00	 mov	 eax, 1
  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
; Line 428
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
_db_traceback ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_debug
_TEXT	SEGMENT
_buffer$1 = -256					; size = 250
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_db_debug PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 402
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00018	57		 push	 edi
; Line 405
  00019	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp____iob_func
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0M@FBGICICO@lua_debug?$DO?5?$AA@
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
  00029	ff d7		 call	 edi
  0002b	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__fprintf
  00031	83 c0 40	 add	 eax, 64			; 00000040H
  00034	50		 push	 eax
  00035	ff d3		 call	 ebx
  00037	ff d7		 call	 edi
  00039	83 c0 40	 add	 eax, 64			; 00000040H
  0003c	50		 push	 eax
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
; Line 407
  00043	ff d7		 call	 edi
  00045	50		 push	 eax
  00046	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$1[ebp]
  0004c	68 fa 00 00 00	 push	 250			; 000000faH
  00051	50		 push	 eax
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fgets
  00058	83 c4 1c	 add	 esp, 28			; 0000001cH
  0005b	85 c0		 test	 eax, eax
  0005d	0f 84 ed 00 00
	00		 je	 $LN20@db_debug
$LL6@db_debug:
  00063	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_05KJNBGLAC@cont?6?$AA@
  00068	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _buffer$1[ebp]
  0006e	8b ff		 npad	 2
$LL14@db_debug:
  00070	8a 11		 mov	 dl, BYTE PTR [ecx]
  00072	3a 10		 cmp	 dl, BYTE PTR [eax]
  00074	75 1a		 jne	 SHORT $LN15@db_debug
  00076	84 d2		 test	 dl, dl
  00078	74 12		 je	 SHORT $LN16@db_debug
  0007a	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0007d	3a 50 01	 cmp	 dl, BYTE PTR [eax+1]
  00080	75 0e		 jne	 SHORT $LN15@db_debug
  00082	83 c1 02	 add	 ecx, 2
  00085	83 c0 02	 add	 eax, 2
  00088	84 d2		 test	 dl, dl
  0008a	75 e4		 jne	 SHORT $LL14@db_debug
$LN16@db_debug:
  0008c	33 c0		 xor	 eax, eax
  0008e	eb 05		 jmp	 SHORT $LN17@db_debug
$LN15@db_debug:
  00090	1b c0		 sbb	 eax, eax
  00092	83 c8 01	 or	 eax, 1
$LN17@db_debug:
  00095	85 c0		 test	 eax, eax
  00097	0f 84 b3 00 00
	00		 je	 $LN20@db_debug
; Line 410
  0009d	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _buffer$1[ebp]
  000a3	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL18@db_debug:
  000a6	8a 01		 mov	 al, BYTE PTR [ecx]
  000a8	41		 inc	 ecx
  000a9	84 c0		 test	 al, al
  000ab	75 f9		 jne	 SHORT $LL18@db_debug
  000ad	6a 00		 push	 0
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BLKFCGLG@?$DN?$CIdebug?5command?$CJ?$AA@
  000b4	2b ca		 sub	 ecx, edx
  000b6	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$1[ebp]
  000bc	51		 push	 ecx
  000bd	50		 push	 eax
  000be	56		 push	 esi
  000bf	e8 00 00 00 00	 call	 _luaL_loadbufferx
  000c4	83 c4 14	 add	 esp, 20			; 00000014H
  000c7	85 c0		 test	 eax, eax
  000c9	75 12		 jne	 SHORT $LN1@db_debug
  000cb	50		 push	 eax
  000cc	50		 push	 eax
  000cd	50		 push	 eax
  000ce	50		 push	 eax
  000cf	50		 push	 eax
  000d0	56		 push	 esi
  000d1	e8 00 00 00 00	 call	 _lua_pcallk
  000d6	83 c4 18	 add	 esp, 24			; 00000018H
  000d9	85 c0		 test	 eax, eax
  000db	74 2a		 je	 SHORT $LN2@db_debug
$LN1@db_debug:
; Line 411
  000dd	6a 00		 push	 0
  000df	6a ff		 push	 -1
  000e1	56		 push	 esi
  000e2	e8 00 00 00 00	 call	 _lua_tolstring
  000e7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ea	50		 push	 eax
  000eb	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6?$AA@
  000f0	ff d7		 call	 edi
  000f2	83 c0 40	 add	 eax, 64			; 00000040H
  000f5	50		 push	 eax
  000f6	ff d3		 call	 ebx
  000f8	ff d7		 call	 edi
  000fa	83 c0 40	 add	 eax, 64			; 00000040H
  000fd	50		 push	 eax
  000fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  00104	83 c4 10	 add	 esp, 16			; 00000010H
$LN2@db_debug:
; Line 412
  00107	6a 00		 push	 0
  00109	56		 push	 esi
  0010a	e8 00 00 00 00	 call	 _lua_settop
  0010f	83 c4 08	 add	 esp, 8
  00112	68 00 00 00 00	 push	 OFFSET ??_C@_0M@FBGICICO@lua_debug?$DO?5?$AA@
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
  0011c	ff d7		 call	 edi
  0011e	83 c0 40	 add	 eax, 64			; 00000040H
  00121	50		 push	 eax
  00122	ff d3		 call	 ebx
  00124	ff d7		 call	 edi
  00126	83 c0 40	 add	 eax, 64			; 00000040H
  00129	50		 push	 eax
  0012a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  00130	ff d7		 call	 edi
  00132	50		 push	 eax
  00133	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$1[ebp]
  00139	68 fa 00 00 00	 push	 250			; 000000faH
  0013e	50		 push	 eax
  0013f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fgets
  00145	83 c4 1c	 add	 esp, 28			; 0000001cH
  00148	85 c0		 test	 eax, eax
  0014a	0f 85 13 ff ff
	ff		 jne	 $LL6@db_debug
$LN20@db_debug:
; Line 414
  00150	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00153	33 c0		 xor	 eax, eax
  00155	5f		 pop	 edi
  00156	5e		 pop	 esi
  00157	33 cd		 xor	 ecx, ebp
  00159	5b		 pop	 ebx
  0015a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015f	8b e5		 mov	 esp, ebp
  00161	5d		 pop	 ebp
  00162	c3		 ret	 0
_db_debug ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_gethook
_TEXT	SEGMENT
_buff$ = -12						; size = 5
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_db_gethook PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 379
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00014	57		 push	 edi
; Line 381
  00015	6a 01		 push	 1
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 _lua_type
  0001d	83 c4 08	 add	 esp, 8
  00020	83 f8 08	 cmp	 eax, 8
  00023	75 0f		 jne	 SHORT $LN8@db_gethook
  00025	6a 01		 push	 1
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 _lua_tothread
  0002d	83 c4 08	 add	 esp, 8
  00030	8b f8		 mov	 edi, eax
  00032	eb 02		 jmp	 SHORT $LN7@db_gethook
$LN8@db_gethook:
  00034	8b fe		 mov	 edi, esi
$LN7@db_gethook:
; Line 383
  00036	53		 push	 ebx
  00037	57		 push	 edi
  00038	e8 00 00 00 00	 call	 _lua_gethookmask
; Line 384
  0003d	57		 push	 edi
  0003e	8b d8		 mov	 ebx, eax
  00040	e8 00 00 00 00	 call	 _lua_gethook
  00045	83 c4 08	 add	 esp, 8
; Line 385
  00048	85 c0		 test	 eax, eax
  0004a	75 0b		 jne	 SHORT $LN4@db_gethook
; Line 386
  0004c	56		 push	 esi
  0004d	e8 00 00 00 00	 call	 _lua_pushnil
  00052	83 c4 04	 add	 esp, 4
  00055	eb 77		 jmp	 SHORT $LN1@db_gethook
$LN4@db_gethook:
; Line 387
  00057	3d 00 00 00 00	 cmp	 eax, OFFSET _hookf
  0005c	74 10		 je	 SHORT $LN2@db_gethook
; Line 388
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_0O@POGBCBNN@external?5hook?$AA@
  00063	56		 push	 esi
  00064	e8 00 00 00 00	 call	 _lua_pushstring
  00069	83 c4 08	 add	 esp, 8
; Line 389
  0006c	eb 60		 jmp	 SHORT $LN1@db_gethook
$LN2@db_gethook:
; Line 390
  0006e	68 00 00 00 00	 push	 OFFSET _HOOKKEY
  00073	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00078	56		 push	 esi
  00079	e8 00 00 00 00	 call	 _lua_rawgetp
  0007e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 391
  00081	3b f7		 cmp	 esi, edi
  00083	74 1d		 je	 SHORT $LN11@db_gethook
  00085	6a 01		 push	 1
  00087	57		 push	 edi
  00088	e8 00 00 00 00	 call	 _lua_checkstack
  0008d	83 c4 08	 add	 esp, 8
  00090	85 c0		 test	 eax, eax
  00092	75 0e		 jne	 SHORT $LN11@db_gethook
  00094	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EODJGPIM@stack?5overflow?$AA@
  00099	56		 push	 esi
  0009a	e8 00 00 00 00	 call	 _luaL_error
  0009f	83 c4 08	 add	 esp, 8
$LN11@db_gethook:
; Line 392
  000a2	57		 push	 edi
  000a3	e8 00 00 00 00	 call	 _lua_pushthread
  000a8	6a 01		 push	 1
  000aa	56		 push	 esi
  000ab	57		 push	 edi
  000ac	e8 00 00 00 00	 call	 _lua_xmove
; Line 393
  000b1	6a fe		 push	 -2			; fffffffeH
  000b3	56		 push	 esi
  000b4	e8 00 00 00 00	 call	 _lua_rawget
; Line 394
  000b9	6a ff		 push	 -1
  000bb	6a fe		 push	 -2			; fffffffeH
  000bd	56		 push	 esi
  000be	e8 00 00 00 00	 call	 _lua_rotate
  000c3	6a fe		 push	 -2			; fffffffeH
  000c5	56		 push	 esi
  000c6	e8 00 00 00 00	 call	 _lua_settop
  000cb	83 c4 2c	 add	 esp, 44			; 0000002cH
$LN1@db_gethook:
; Line 396
  000ce	33 c0		 xor	 eax, eax
  000d0	f6 c3 01	 test	 bl, 1
  000d3	74 09		 je	 SHORT $LN16@db_gethook
  000d5	c6 45 f4 63	 mov	 BYTE PTR _buff$[ebp], 99 ; 00000063H
  000d9	b8 01 00 00 00	 mov	 eax, 1
$LN16@db_gethook:
  000de	f6 c3 02	 test	 bl, 2
  000e1	74 06		 je	 SHORT $LN15@db_gethook
  000e3	c6 44 05 f4 72	 mov	 BYTE PTR _buff$[ebp+eax], 114 ; 00000072H
  000e8	40		 inc	 eax
$LN15@db_gethook:
  000e9	f6 c3 04	 test	 bl, 4
  000ec	5b		 pop	 ebx
  000ed	74 06		 je	 SHORT $LN14@db_gethook
  000ef	c6 44 05 f4 6c	 mov	 BYTE PTR _buff$[ebp+eax], 108 ; 0000006cH
  000f4	40		 inc	 eax
$LN14@db_gethook:
  000f5	c6 44 05 f4 00	 mov	 BYTE PTR _buff$[ebp+eax], 0
  000fa	8d 45 f4	 lea	 eax, DWORD PTR _buff$[ebp]
  000fd	50		 push	 eax
  000fe	56		 push	 esi
  000ff	e8 00 00 00 00	 call	 _lua_pushstring
; Line 397
  00104	57		 push	 edi
  00105	e8 00 00 00 00	 call	 _lua_gethookcount
  0010a	99		 cdq
  0010b	52		 push	 edx
  0010c	50		 push	 eax
  0010d	56		 push	 esi
  0010e	e8 00 00 00 00	 call	 _lua_pushinteger
; Line 399
  00113	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00116	83 c4 18	 add	 esp, 24			; 00000018H
  00119	33 cd		 xor	 ecx, ebp
  0011b	b8 03 00 00 00	 mov	 eax, 3
  00120	5f		 pop	 edi
  00121	5e		 pop	 esi
  00122	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00127	8b e5		 mov	 esp, ebp
  00129	5d		 pop	 ebp
  0012a	c3		 ret	 0
_db_gethook ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_sethook
_TEXT	SEGMENT
_func$1$ = -12						; size = 4
tv213 = -8						; size = 4
_count$1$ = -4						; size = 4
_smask$1$ = 8						; size = 4
_L$ = 8							; size = 4
_db_sethook PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 347
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
; Line 350
  00008	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000b	57		 push	 edi
  0000c	6a 01		 push	 1
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 _lua_type
  00014	83 c4 08	 add	 esp, 8
  00017	83 f8 08	 cmp	 eax, 8
  0001a	75 11		 jne	 SHORT $LN7@db_sethook
  0001c	8d 78 f9	 lea	 edi, DWORD PTR [eax-7]
  0001f	57		 push	 edi
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 _lua_tothread
  00026	83 c4 08	 add	 esp, 8
  00029	8b d8		 mov	 ebx, eax
  0002b	eb 04		 jmp	 SHORT $LN6@db_sethook
$LN7@db_sethook:
  0002d	33 ff		 xor	 edi, edi
  0002f	8b de		 mov	 ebx, esi
$LN6@db_sethook:
; Line 351
  00031	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00034	50		 push	 eax
  00035	56		 push	 esi
  00036	89 45 f8	 mov	 DWORD PTR tv213[ebp], eax
  00039	e8 00 00 00 00	 call	 _lua_type
  0003e	83 c4 08	 add	 esp, 8
  00041	85 c0		 test	 eax, eax
  00043	7f 1b		 jg	 SHORT $LN3@db_sethook
; Line 352
  00045	8b 45 f8	 mov	 eax, DWORD PTR tv213[ebp]
  00048	50		 push	 eax
  00049	56		 push	 esi
  0004a	e8 00 00 00 00	 call	 _lua_settop
  0004f	83 c4 08	 add	 esp, 8
; Line 353
  00052	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _func$1$[ebp], 0
  00059	33 ff		 xor	 edi, edi
  0005b	89 7d fc	 mov	 DWORD PTR _count$1$[ebp], edi
; Line 355
  0005e	eb 7d		 jmp	 SHORT $LN10@db_sethook
$LN3@db_sethook:
; Line 356
  00060	6a 00		 push	 0
  00062	8d 47 02	 lea	 eax, DWORD PTR [edi+2]
  00065	50		 push	 eax
  00066	56		 push	 esi
  00067	e8 00 00 00 00	 call	 _luaL_checklstring
  0006c	89 45 08	 mov	 DWORD PTR _smask$1$[ebp], eax
; Line 357
  0006f	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00072	6a 06		 push	 6
  00074	50		 push	 eax
  00075	56		 push	 esi
  00076	e8 00 00 00 00	 call	 _luaL_checktype
; Line 358
  0007b	6a 00		 push	 0
  0007d	6a 00		 push	 0
  0007f	8d 4f 03	 lea	 ecx, DWORD PTR [edi+3]
  00082	51		 push	 ecx
  00083	56		 push	 esi
  00084	e8 00 00 00 00	 call	 _luaL_optinteger
; Line 359
  00089	6a 63		 push	 99			; 00000063H
  0008b	ff 75 08	 push	 DWORD PTR _smask$1$[ebp]
  0008e	89 45 fc	 mov	 DWORD PTR _count$1$[ebp], eax
  00091	33 ff		 xor	 edi, edi
  00093	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _func$1$[ebp], OFFSET _hookf
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  000a0	85 c0		 test	 eax, eax
  000a2	b9 01 00 00 00	 mov	 ecx, 1
  000a7	6a 72		 push	 114			; 00000072H
  000a9	ff 75 08	 push	 DWORD PTR _smask$1$[ebp]
  000ac	0f 45 f9	 cmovne	 edi, ecx
  000af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  000b5	83 c4 38	 add	 esp, 56			; 00000038H
  000b8	85 c0		 test	 eax, eax
  000ba	74 03		 je	 SHORT $LN12@db_sethook
  000bc	83 cf 02	 or	 edi, 2
$LN12@db_sethook:
  000bf	6a 6c		 push	 108			; 0000006cH
  000c1	ff 75 08	 push	 DWORD PTR _smask$1$[ebp]
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  000ca	83 c4 08	 add	 esp, 8
  000cd	85 c0		 test	 eax, eax
  000cf	74 03		 je	 SHORT $LN11@db_sethook
  000d1	83 cf 04	 or	 edi, 4
$LN11@db_sethook:
  000d4	83 7d fc 00	 cmp	 DWORD PTR _count$1$[ebp], 0
  000d8	7e 03		 jle	 SHORT $LN10@db_sethook
  000da	83 cf 08	 or	 edi, 8
$LN10@db_sethook:
; Line 361
  000dd	68 00 00 00 00	 push	 OFFSET _HOOKKEY
  000e2	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  000e7	56		 push	 esi
  000e8	e8 00 00 00 00	 call	 _lua_rawgetp
  000ed	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f0	85 c0		 test	 eax, eax
  000f2	75 4c		 jne	 SHORT $LN1@db_sethook
; Line 362
  000f4	6a 02		 push	 2
  000f6	50		 push	 eax
  000f7	56		 push	 esi
  000f8	e8 00 00 00 00	 call	 _lua_createtable
; Line 363
  000fd	6a ff		 push	 -1
  000ff	56		 push	 esi
  00100	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 364
  00105	68 00 00 00 00	 push	 OFFSET _HOOKKEY
  0010a	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  0010f	56		 push	 esi
  00110	e8 00 00 00 00	 call	 _lua_rawsetp
; Line 365
  00115	68 00 00 00 00	 push	 OFFSET ??_C@_01DICPFPGM@k?$AA@
  0011a	56		 push	 esi
  0011b	e8 00 00 00 00	 call	 _lua_pushstring
; Line 366
  00120	68 00 00 00 00	 push	 OFFSET ??_C@_06BPGFKLEK@__mode?$AA@
  00125	6a fe		 push	 -2			; fffffffeH
  00127	56		 push	 esi
  00128	e8 00 00 00 00	 call	 _lua_setfield
; Line 367
  0012d	6a ff		 push	 -1
  0012f	56		 push	 esi
  00130	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 368
  00135	6a fe		 push	 -2			; fffffffeH
  00137	56		 push	 esi
  00138	e8 00 00 00 00	 call	 _lua_setmetatable
  0013d	83 c4 44	 add	 esp, 68			; 00000044H
$LN1@db_sethook:
; Line 370
  00140	3b f3		 cmp	 esi, ebx
  00142	74 1d		 je	 SHORT $LN16@db_sethook
  00144	6a 01		 push	 1
  00146	53		 push	 ebx
  00147	e8 00 00 00 00	 call	 _lua_checkstack
  0014c	83 c4 08	 add	 esp, 8
  0014f	85 c0		 test	 eax, eax
  00151	75 0e		 jne	 SHORT $LN16@db_sethook
  00153	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EODJGPIM@stack?5overflow?$AA@
  00158	56		 push	 esi
  00159	e8 00 00 00 00	 call	 _luaL_error
  0015e	83 c4 08	 add	 esp, 8
$LN16@db_sethook:
; Line 371
  00161	53		 push	 ebx
  00162	e8 00 00 00 00	 call	 _lua_pushthread
  00167	6a 01		 push	 1
  00169	56		 push	 esi
  0016a	53		 push	 ebx
  0016b	e8 00 00 00 00	 call	 _lua_xmove
; Line 372
  00170	ff 75 f8	 push	 DWORD PTR tv213[ebp]
  00173	56		 push	 esi
  00174	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 373
  00179	6a fd		 push	 -3			; fffffffdH
  0017b	56		 push	 esi
  0017c	e8 00 00 00 00	 call	 _lua_rawset
; Line 374
  00181	ff 75 fc	 push	 DWORD PTR _count$1$[ebp]
  00184	57		 push	 edi
  00185	ff 75 f4	 push	 DWORD PTR _func$1$[ebp]
  00188	53		 push	 ebx
  00189	e8 00 00 00 00	 call	 _lua_sethook
  0018e	83 c4 30	 add	 esp, 48			; 00000030H
; Line 375
  00191	33 c0		 xor	 eax, eax
  00193	5f		 pop	 edi
  00194	5e		 pop	 esi
  00195	5b		 pop	 ebx
; Line 376
  00196	8b e5		 mov	 esp, ebp
  00198	5d		 pop	 ebp
  00199	c3		 ret	 0
_db_sethook ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _unmakemask
_TEXT	SEGMENT
_mask$ = 8						; size = 4
_smask$ = 12						; size = 4
_unmakemask PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 337
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 339
  00003	8b 55 08	 mov	 edx, DWORD PTR _mask$[ebp]
  00006	33 c0		 xor	 eax, eax
  00008	8b 4d 0c	 mov	 ecx, DWORD PTR _smask$[ebp]
  0000b	f6 c2 01	 test	 dl, 1
  0000e	74 08		 je	 SHORT $LN3@unmakemask
  00010	c6 01 63	 mov	 BYTE PTR [ecx], 99	; 00000063H
  00013	b8 01 00 00 00	 mov	 eax, 1
$LN3@unmakemask:
; Line 340
  00018	f6 c2 02	 test	 dl, 2
  0001b	74 05		 je	 SHORT $LN2@unmakemask
  0001d	c6 04 08 72	 mov	 BYTE PTR [eax+ecx], 114	; 00000072H
  00021	40		 inc	 eax
$LN2@unmakemask:
; Line 341
  00022	f6 c2 04	 test	 dl, 4
  00025	74 0a		 je	 SHORT $LN6@unmakemask
  00027	66 c7 04 08 6c
	00		 mov	 WORD PTR [eax+ecx], 108	; 0000006cH
; Line 343
  0002d	8b c1		 mov	 eax, ecx
; Line 344
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
$LN6@unmakemask:
; Line 342
  00031	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
; Line 343
  00035	8b c1		 mov	 eax, ecx
; Line 344
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_unmakemask ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _makemask
_TEXT	SEGMENT
_smask$ = 8						; size = 4
_count$ = 12						; size = 4
_makemask PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 324
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 326
  00004	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__strchr
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b 7d 08	 mov	 edi, DWORD PTR _smask$[ebp]
  0000f	33 f6		 xor	 esi, esi
  00011	6a 63		 push	 99			; 00000063H
  00013	57		 push	 edi
  00014	ff d3		 call	 ebx
  00016	85 c0		 test	 eax, eax
  00018	b9 01 00 00 00	 mov	 ecx, 1
; Line 327
  0001d	6a 72		 push	 114			; 00000072H
  0001f	57		 push	 edi
  00020	0f 45 f1	 cmovne	 esi, ecx
  00023	ff d3		 call	 ebx
  00025	83 c4 10	 add	 esp, 16			; 00000010H
  00028	85 c0		 test	 eax, eax
  0002a	74 03		 je	 SHORT $LN3@makemask
  0002c	83 ce 02	 or	 esi, 2
$LN3@makemask:
; Line 328
  0002f	6a 6c		 push	 108			; 0000006cH
  00031	57		 push	 edi
  00032	ff d3		 call	 ebx
  00034	83 c4 08	 add	 esp, 8
  00037	85 c0		 test	 eax, eax
  00039	74 03		 je	 SHORT $LN2@makemask
  0003b	83 ce 04	 or	 esi, 4
$LN2@makemask:
; Line 329
  0003e	83 7d 0c 00	 cmp	 DWORD PTR _count$[ebp], 0
  00042	7e 03		 jle	 SHORT $LN7@makemask
  00044	83 ce 08	 or	 esi, 8
$LN7@makemask:
  00047	5f		 pop	 edi
; Line 330
  00048	8b c6		 mov	 eax, esi
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
; Line 331
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
_makemask ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _hookf
_TEXT	SEGMENT
_L$ = 8							; size = 4
_ar$ = 12						; size = 4
_hookf	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 305
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
; Line 308
  00004	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00007	68 00 00 00 00	 push	 OFFSET _HOOKKEY
  0000c	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00011	57		 push	 edi
  00012	e8 00 00 00 00	 call	 _lua_rawgetp
; Line 309
  00017	57		 push	 edi
  00018	e8 00 00 00 00	 call	 _lua_pushthread
; Line 310
  0001d	6a fe		 push	 -2			; fffffffeH
  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 _lua_rawget
  00025	83 c4 18	 add	 esp, 24			; 00000018H
  00028	83 f8 06	 cmp	 eax, 6
  0002b	75 58		 jne	 SHORT $LN3@hookf
; Line 311
  0002d	56		 push	 esi
  0002e	8b 75 0c	 mov	 esi, DWORD PTR _ar$[ebp]
  00031	8b 06		 mov	 eax, DWORD PTR [esi]
  00033	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?hooknames@?1??hookf@@9@9[eax*4]
  0003a	57		 push	 edi
  0003b	e8 00 00 00 00	 call	 _lua_pushstring
; Line 312
  00040	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00043	83 c4 08	 add	 esp, 8
  00046	5e		 pop	 esi
  00047	85 c0		 test	 eax, eax
  00049	78 20		 js	 SHORT $LN2@hookf
; Line 313
  0004b	99		 cdq
  0004c	52		 push	 edx
  0004d	50		 push	 eax
  0004e	57		 push	 edi
  0004f	e8 00 00 00 00	 call	 _lua_pushinteger
  00054	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 316
  00057	6a 00		 push	 0
  00059	6a 00		 push	 0
  0005b	6a 00		 push	 0
  0005d	6a 02		 push	 2
  0005f	57		 push	 edi
  00060	e8 00 00 00 00	 call	 _lua_callk
  00065	83 c4 14	 add	 esp, 20			; 00000014H
  00068	5f		 pop	 edi
; Line 318
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
$LN2@hookf:
; Line 314
  0006b	57		 push	 edi
  0006c	e8 00 00 00 00	 call	 _lua_pushnil
  00071	83 c4 04	 add	 esp, 4
; Line 316
  00074	6a 00		 push	 0
  00076	6a 00		 push	 0
  00078	6a 00		 push	 0
  0007a	6a 02		 push	 2
  0007c	57		 push	 edi
  0007d	e8 00 00 00 00	 call	 _lua_callk
  00082	83 c4 14	 add	 esp, 20			; 00000014H
$LN3@hookf:
  00085	5f		 pop	 edi
; Line 318
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
_hookf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_upvaluejoin
_TEXT	SEGMENT
_L$ = 8							; size = 4
_db_upvaluejoin PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 291
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; Line 292
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	57		 push	 edi
  00009	6a 02		 push	 2
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _luaL_checkinteger
  00011	6a 06		 push	 6
  00013	6a 01		 push	 1
  00015	56		 push	 esi
  00016	8b f8		 mov	 edi, eax
  00018	e8 00 00 00 00	 call	 _luaL_checktype
  0001d	57		 push	 edi
  0001e	6a 01		 push	 1
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 _lua_getupvalue
  00026	83 c4 20	 add	 esp, 32			; 00000020H
  00029	85 c0		 test	 eax, eax
  0002b	75 10		 jne	 SHORT $LN7@db_upvalue
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MMNKKMGE@invalid?5upvalue?5index?$AA@
  00032	6a 02		 push	 2
  00034	56		 push	 esi
  00035	e8 00 00 00 00	 call	 _luaL_argerror
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@db_upvalue:
; Line 293
  0003d	6a 04		 push	 4
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 _luaL_checkinteger
  00045	6a 06		 push	 6
  00047	6a 03		 push	 3
  00049	56		 push	 esi
  0004a	8b d8		 mov	 ebx, eax
  0004c	e8 00 00 00 00	 call	 _luaL_checktype
  00051	53		 push	 ebx
  00052	6a 03		 push	 3
  00054	56		 push	 esi
  00055	e8 00 00 00 00	 call	 _lua_getupvalue
  0005a	83 c4 20	 add	 esp, 32			; 00000020H
  0005d	85 c0		 test	 eax, eax
  0005f	75 10		 jne	 SHORT $LN10@db_upvalue
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MMNKKMGE@invalid?5upvalue?5index?$AA@
  00066	6a 04		 push	 4
  00068	56		 push	 esi
  00069	e8 00 00 00 00	 call	 _luaL_argerror
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@db_upvalue:
; Line 294
  00071	6a 01		 push	 1
  00073	56		 push	 esi
  00074	e8 00 00 00 00	 call	 _lua_iscfunction
  00079	83 c4 08	 add	 esp, 8
  0007c	85 c0		 test	 eax, eax
  0007e	74 10		 je	 SHORT $LN3@db_upvalue
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EHJAKGKG@Lua?5function?5expected?$AA@
  00085	6a 01		 push	 1
  00087	56		 push	 esi
  00088	e8 00 00 00 00	 call	 _luaL_argerror
  0008d	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@db_upvalue:
; Line 295
  00090	6a 03		 push	 3
  00092	56		 push	 esi
  00093	e8 00 00 00 00	 call	 _lua_iscfunction
  00098	83 c4 08	 add	 esp, 8
  0009b	85 c0		 test	 eax, eax
  0009d	74 10		 je	 SHORT $LN4@db_upvalue
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EHJAKGKG@Lua?5function?5expected?$AA@
  000a4	6a 03		 push	 3
  000a6	56		 push	 esi
  000a7	e8 00 00 00 00	 call	 _luaL_argerror
  000ac	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@db_upvalue:
; Line 296
  000af	53		 push	 ebx
  000b0	6a 03		 push	 3
  000b2	57		 push	 edi
  000b3	6a 01		 push	 1
  000b5	56		 push	 esi
  000b6	e8 00 00 00 00	 call	 _lua_upvaluejoin
  000bb	83 c4 14	 add	 esp, 20			; 00000014H
; Line 297
  000be	33 c0		 xor	 eax, eax
  000c0	5f		 pop	 edi
  000c1	5e		 pop	 esi
  000c2	5b		 pop	 ebx
; Line 298
  000c3	5d		 pop	 ebp
  000c4	c3		 ret	 0
_db_upvaluejoin ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_upvalueid
_TEXT	SEGMENT
_L$ = 8							; size = 4
_db_upvalueid PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 284
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 285
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	6a 02		 push	 2
  0000a	56		 push	 esi
  0000b	e8 00 00 00 00	 call	 _luaL_checkinteger
  00010	6a 06		 push	 6
  00012	6a 01		 push	 1
  00014	56		 push	 esi
  00015	8b f8		 mov	 edi, eax
  00017	e8 00 00 00 00	 call	 _luaL_checktype
  0001c	57		 push	 edi
  0001d	6a 01		 push	 1
  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 _lua_getupvalue
  00025	83 c4 20	 add	 esp, 32			; 00000020H
  00028	85 c0		 test	 eax, eax
  0002a	75 10		 jne	 SHORT $LN5@db_upvalue
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MMNKKMGE@invalid?5upvalue?5index?$AA@
  00031	6a 02		 push	 2
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 _luaL_argerror
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@db_upvalue:
; Line 286
  0003c	57		 push	 edi
  0003d	6a 01		 push	 1
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 _lua_upvalueid
  00045	50		 push	 eax
  00046	56		 push	 esi
  00047	e8 00 00 00 00	 call	 _lua_pushlightuserdata
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
; Line 287
  0004f	b8 01 00 00 00	 mov	 eax, 1
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
; Line 288
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
_db_upvalueid ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _checkupval
_TEXT	SEGMENT
_L$ = 8							; size = 4
_argf$ = 12						; size = 4
_argnup$ = 16						; size = 4
_checkupval PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 275
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 276
  00004	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	ff 75 10	 push	 DWORD PTR _argnup$[ebp]
  0000b	53		 push	 ebx
  0000c	e8 00 00 00 00	 call	 _luaL_checkinteger
; Line 277
  00011	6a 06		 push	 6
  00013	ff 75 0c	 push	 DWORD PTR _argf$[ebp]
  00016	8b f8		 mov	 edi, eax
  00018	53		 push	 ebx
  00019	e8 00 00 00 00	 call	 _luaL_checktype
; Line 279
  0001e	57		 push	 edi
  0001f	ff 75 0c	 push	 DWORD PTR _argf$[ebp]
  00022	53		 push	 ebx
  00023	e8 00 00 00 00	 call	 _lua_getupvalue
  00028	83 c4 20	 add	 esp, 32			; 00000020H
  0002b	85 c0		 test	 eax, eax
  0002d	75 11		 jne	 SHORT $LN4@checkupval
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MMNKKMGE@invalid?5upvalue?5index?$AA@
  00034	ff 75 10	 push	 DWORD PTR _argnup$[ebp]
  00037	53		 push	 ebx
  00038	e8 00 00 00 00	 call	 _luaL_argerror
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@checkupval:
; Line 280
  00040	8b c7		 mov	 eax, edi
  00042	5f		 pop	 edi
  00043	5b		 pop	 ebx
; Line 281
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
_checkupval ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_setupvalue
_TEXT	SEGMENT
_L$ = 8							; size = 4
_db_setupvalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 265
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 266
  00005	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00008	6a 03		 push	 3
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 _luaL_checkany
; Line 267
  00010	6a 02		 push	 2
  00012	57		 push	 edi
  00013	e8 00 00 00 00	 call	 _luaL_checkinteger
  00018	6a 06		 push	 6
  0001a	6a 01		 push	 1
  0001c	57		 push	 edi
  0001d	8b f0		 mov	 esi, eax
  0001f	e8 00 00 00 00	 call	 _luaL_checktype
  00024	56		 push	 esi
  00025	6a 01		 push	 1
  00027	57		 push	 edi
  00028	e8 00 00 00 00	 call	 _lua_setupvalue
  0002d	83 c4 28	 add	 esp, 40			; 00000028H
  00030	85 c0		 test	 eax, eax
  00032	75 04		 jne	 SHORT $LN3@db_setupva
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
; Line 268
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
; Line 267
$LN3@db_setupva:
  00038	50		 push	 eax
  00039	57		 push	 edi
  0003a	e8 00 00 00 00	 call	 _lua_pushstring
  0003f	6a 01		 push	 1
  00041	6a ff		 push	 -1
  00043	57		 push	 edi
  00044	e8 00 00 00 00	 call	 _lua_rotate
  00049	83 c4 14	 add	 esp, 20			; 00000014H
  0004c	b8 01 00 00 00	 mov	 eax, 1
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
; Line 268
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
_db_setupvalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_getupvalue
_TEXT	SEGMENT
_L$ = 8							; size = 4
_db_getupvalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 260
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 261
  00005	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00008	6a 02		 push	 2
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 _luaL_checkinteger
  00010	6a 06		 push	 6
  00012	6a 01		 push	 1
  00014	57		 push	 edi
  00015	8b f0		 mov	 esi, eax
  00017	e8 00 00 00 00	 call	 _luaL_checktype
  0001c	56		 push	 esi
  0001d	6a 01		 push	 1
  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 _lua_getupvalue
  00025	83 c4 20	 add	 esp, 32			; 00000020H
  00028	85 c0		 test	 eax, eax
  0002a	75 04		 jne	 SHORT $LN3@db_getupva
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
; Line 262
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
; Line 261
$LN3@db_getupva:
  00030	50		 push	 eax
  00031	57		 push	 edi
  00032	e8 00 00 00 00	 call	 _lua_pushstring
  00037	6a 01		 push	 1
  00039	6a fe		 push	 -2			; fffffffeH
  0003b	57		 push	 edi
  0003c	e8 00 00 00 00	 call	 _lua_rotate
  00041	83 c4 14	 add	 esp, 20			; 00000014H
  00044	b8 02 00 00 00	 mov	 eax, 2
  00049	5f		 pop	 edi
  0004a	5e		 pop	 esi
; Line 262
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
_db_getupvalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _auxupvalue
_TEXT	SEGMENT
_L$ = 8							; size = 4
_get$ = 12						; size = 4
_auxupvalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 248
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; Line 250
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	57		 push	 edi
  00009	6a 02		 push	 2
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _luaL_checkinteger
; Line 251
  00011	6a 06		 push	 6
  00013	6a 01		 push	 1
  00015	56		 push	 esi
  00016	8b d8		 mov	 ebx, eax
  00018	e8 00 00 00 00	 call	 _luaL_checktype
; Line 252
  0001d	8b 7d 0c	 mov	 edi, DWORD PTR _get$[ebp]
  00020	83 c4 14	 add	 esp, 20			; 00000014H
  00023	53		 push	 ebx
  00024	6a 01		 push	 1
  00026	56		 push	 esi
  00027	85 ff		 test	 edi, edi
  00029	74 07		 je	 SHORT $LN4@auxupvalue
  0002b	e8 00 00 00 00	 call	 _lua_getupvalue
  00030	eb 05		 jmp	 SHORT $LN6@auxupvalue
$LN4@auxupvalue:
  00032	e8 00 00 00 00	 call	 _lua_setupvalue
$LN6@auxupvalue:
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 253
  0003a	85 c0		 test	 eax, eax
  0003c	75 05		 jne	 SHORT $LN1@auxupvalue
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
; Line 257
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
$LN1@auxupvalue:
; Line 254
  00043	50		 push	 eax
  00044	56		 push	 esi
  00045	e8 00 00 00 00	 call	 _lua_pushstring
; Line 255
  0004a	83 c8 ff	 or	 eax, -1
  0004d	6a 01		 push	 1
  0004f	2b c7		 sub	 eax, edi
  00051	50		 push	 eax
  00052	56		 push	 esi
  00053	e8 00 00 00 00	 call	 _lua_rotate
  00058	83 c4 14	 add	 esp, 20			; 00000014H
; Line 256
  0005b	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
; Line 257
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
_auxupvalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_setlocal
_TEXT	SEGMENT
_nvar$1$ = -116						; size = 4
tv73 = -112						; size = 4
_arg$1$ = -108						; size = 4
_ar$ = -104						; size = 100
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_db_setlocal PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 224
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
; Line 227
  00016	6a 01		 push	 1
  00018	57		 push	 edi
  00019	e8 00 00 00 00	 call	 _lua_type
  0001e	83 c4 08	 add	 esp, 8
  00021	83 f8 08	 cmp	 eax, 8
  00024	75 16		 jne	 SHORT $LN6@db_setloca
  00026	be 01 00 00 00	 mov	 esi, 1
  0002b	56		 push	 esi
  0002c	57		 push	 edi
  0002d	89 75 94	 mov	 DWORD PTR _arg$1$[ebp], esi
  00030	e8 00 00 00 00	 call	 _lua_tothread
  00035	83 c4 08	 add	 esp, 8
  00038	8b d8		 mov	 ebx, eax
  0003a	eb 07		 jmp	 SHORT $LN5@db_setloca
$LN6@db_setloca:
  0003c	33 f6		 xor	 esi, esi
  0003e	8b df		 mov	 ebx, edi
  00040	89 75 94	 mov	 DWORD PTR _arg$1$[ebp], esi
$LN5@db_setloca:
; Line 229
  00043	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00046	50		 push	 eax
  00047	57		 push	 edi
  00048	89 45 90	 mov	 DWORD PTR tv73[ebp], eax
  0004b	e8 00 00 00 00	 call	 _luaL_checkinteger
; Line 230
  00050	8b 4d 94	 mov	 ecx, DWORD PTR _arg$1$[ebp]
  00053	8b f0		 mov	 esi, eax
  00055	83 c1 02	 add	 ecx, 2
  00058	51		 push	 ecx
  00059	57		 push	 edi
  0005a	e8 00 00 00 00	 call	 _luaL_checkinteger
  0005f	89 45 8c	 mov	 DWORD PTR _nvar$1$[ebp], eax
; Line 231
  00062	8d 45 98	 lea	 eax, DWORD PTR _ar$[ebp]
  00065	50		 push	 eax
  00066	56		 push	 esi
  00067	53		 push	 ebx
  00068	e8 00 00 00 00	 call	 _lua_getstack
  0006d	83 c4 1c	 add	 esp, 28			; 0000001cH
  00070	85 c0		 test	 eax, eax
  00072	75 22		 jne	 SHORT $LN2@db_setloca
; Line 232
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EFMIJNPC@level?5out?5of?5range?$AA@
  00079	ff 75 90	 push	 DWORD PTR tv73[ebp]
  0007c	57		 push	 edi
  0007d	e8 00 00 00 00	 call	 _luaL_argerror
  00082	83 c4 0c	 add	 esp, 12			; 0000000cH
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
; Line 242
  00088	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0008b	33 cd		 xor	 ecx, ebp
  0008d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
$LN2@db_setloca:
; Line 233
  00096	8b 75 94	 mov	 esi, DWORD PTR _arg$1$[ebp]
  00099	83 c6 03	 add	 esi, 3
  0009c	56		 push	 esi
  0009d	57		 push	 edi
  0009e	e8 00 00 00 00	 call	 _luaL_checkany
; Line 234
  000a3	56		 push	 esi
  000a4	57		 push	 edi
  000a5	e8 00 00 00 00	 call	 _lua_settop
  000aa	83 c4 10	 add	 esp, 16			; 00000010H
; Line 235
  000ad	3b fb		 cmp	 edi, ebx
  000af	74 1d		 je	 SHORT $LN9@db_setloca
  000b1	6a 01		 push	 1
  000b3	53		 push	 ebx
  000b4	e8 00 00 00 00	 call	 _lua_checkstack
  000b9	83 c4 08	 add	 esp, 8
  000bc	85 c0		 test	 eax, eax
  000be	75 0e		 jne	 SHORT $LN9@db_setloca
  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EODJGPIM@stack?5overflow?$AA@
  000c5	57		 push	 edi
  000c6	e8 00 00 00 00	 call	 _luaL_error
  000cb	83 c4 08	 add	 esp, 8
$LN9@db_setloca:
; Line 236
  000ce	6a 01		 push	 1
  000d0	53		 push	 ebx
  000d1	57		 push	 edi
  000d2	e8 00 00 00 00	 call	 _lua_xmove
; Line 237
  000d7	ff 75 8c	 push	 DWORD PTR _nvar$1$[ebp]
  000da	8d 45 98	 lea	 eax, DWORD PTR _ar$[ebp]
  000dd	50		 push	 eax
  000de	53		 push	 ebx
  000df	e8 00 00 00 00	 call	 _lua_setlocal
  000e4	8b f0		 mov	 esi, eax
  000e6	83 c4 18	 add	 esp, 24			; 00000018H
; Line 238
  000e9	85 f6		 test	 esi, esi
  000eb	75 0b		 jne	 SHORT $LN1@db_setloca
; Line 239
  000ed	6a fe		 push	 -2			; fffffffeH
  000ef	53		 push	 ebx
  000f0	e8 00 00 00 00	 call	 _lua_settop
  000f5	83 c4 08	 add	 esp, 8
$LN1@db_setloca:
; Line 240
  000f8	56		 push	 esi
  000f9	57		 push	 edi
  000fa	e8 00 00 00 00	 call	 _lua_pushstring
; Line 242
  000ff	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00102	83 c4 08	 add	 esp, 8
  00105	33 cd		 xor	 ecx, ebp
  00107	b8 01 00 00 00	 mov	 eax, 1
  0010c	5f		 pop	 edi
  0010d	5e		 pop	 esi
  0010e	5b		 pop	 ebx
  0010f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c3		 ret	 0
_db_setlocal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_getlocal
_TEXT	SEGMENT
_nvar$1$ = -108						; size = 4
_ar$ = -104						; size = 100
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_db_getlocal PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 193
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00015	57		 push	 edi
; Line 195
  00016	6a 01		 push	 1
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 _lua_type
  0001e	83 c4 08	 add	 esp, 8
  00021	83 f8 08	 cmp	 eax, 8
  00024	75 11		 jne	 SHORT $LN9@db_getloca
  00026	8d 58 f9	 lea	 ebx, DWORD PTR [eax-7]
  00029	53		 push	 ebx
  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 _lua_tothread
  00030	83 c4 08	 add	 esp, 8
  00033	8b f8		 mov	 edi, eax
  00035	eb 04		 jmp	 SHORT $LN8@db_getloca
$LN9@db_getloca:
  00037	33 db		 xor	 ebx, ebx
  00039	8b fe		 mov	 edi, esi
$LN8@db_getloca:
; Line 198
  0003b	8d 43 02	 lea	 eax, DWORD PTR [ebx+2]
  0003e	50		 push	 eax
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 _luaL_checkinteger
; Line 199
  00045	43		 inc	 ebx
  00046	89 45 94	 mov	 DWORD PTR _nvar$1$[ebp], eax
  00049	53		 push	 ebx
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 _lua_type
  00050	83 c4 10	 add	 esp, 16			; 00000010H
; Line 200
  00053	53		 push	 ebx
  00054	56		 push	 esi
  00055	83 f8 06	 cmp	 eax, 6
  00058	75 1f		 jne	 SHORT $LN5@db_getloca
  0005a	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 201
  0005f	ff 75 94	 push	 DWORD PTR _nvar$1$[ebp]
  00062	6a 00		 push	 0
  00064	56		 push	 esi
  00065	e8 00 00 00 00	 call	 _lua_getlocal
  0006a	50		 push	 eax
  0006b	56		 push	 esi
  0006c	e8 00 00 00 00	 call	 _lua_pushstring
  00071	83 c4 1c	 add	 esp, 28			; 0000001cH
; Line 202
  00074	e9 aa 00 00 00	 jmp	 $LN15@db_getloca
$LN5@db_getloca:
; Line 205
  00079	e8 00 00 00 00	 call	 _luaL_checkinteger
; Line 206
  0007e	8d 4d 98	 lea	 ecx, DWORD PTR _ar$[ebp]
  00081	51		 push	 ecx
  00082	50		 push	 eax
  00083	57		 push	 edi
  00084	e8 00 00 00 00	 call	 _lua_getstack
  00089	83 c4 14	 add	 esp, 20			; 00000014H
  0008c	85 c0		 test	 eax, eax
  0008e	75 20		 jne	 SHORT $LN3@db_getloca
; Line 207
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EFMIJNPC@level?5out?5of?5range?$AA@
  00095	53		 push	 ebx
  00096	56		 push	 esi
  00097	e8 00 00 00 00	 call	 _luaL_argerror
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx
; Line 221
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a5	33 cd		 xor	 ecx, ebp
  000a7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c3		 ret	 0
$LN3@db_getloca:
; Line 208
  000b0	3b f7		 cmp	 esi, edi
  000b2	74 1d		 je	 SHORT $LN12@db_getloca
  000b4	6a 01		 push	 1
  000b6	57		 push	 edi
  000b7	e8 00 00 00 00	 call	 _lua_checkstack
  000bc	83 c4 08	 add	 esp, 8
  000bf	85 c0		 test	 eax, eax
  000c1	75 0e		 jne	 SHORT $LN12@db_getloca
  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EODJGPIM@stack?5overflow?$AA@
  000c8	56		 push	 esi
  000c9	e8 00 00 00 00	 call	 _luaL_error
  000ce	83 c4 08	 add	 esp, 8
$LN12@db_getloca:
; Line 209
  000d1	ff 75 94	 push	 DWORD PTR _nvar$1$[ebp]
  000d4	8d 45 98	 lea	 eax, DWORD PTR _ar$[ebp]
  000d7	50		 push	 eax
  000d8	57		 push	 edi
  000d9	e8 00 00 00 00	 call	 _lua_getlocal
  000de	8b d8		 mov	 ebx, eax
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 210
  000e3	85 db		 test	 ebx, ebx
  000e5	74 33		 je	 SHORT $LN2@db_getloca
; Line 211
  000e7	6a 01		 push	 1
  000e9	56		 push	 esi
  000ea	57		 push	 edi
  000eb	e8 00 00 00 00	 call	 _lua_xmove
; Line 212
  000f0	53		 push	 ebx
  000f1	56		 push	 esi
  000f2	e8 00 00 00 00	 call	 _lua_pushstring
; Line 213
  000f7	6a 01		 push	 1
  000f9	6a fe		 push	 -2			; fffffffeH
  000fb	56		 push	 esi
  000fc	e8 00 00 00 00	 call	 _lua_rotate
  00101	83 c4 20	 add	 esp, 32			; 00000020H
; Line 214
  00104	b8 02 00 00 00	 mov	 eax, 2
  00109	5f		 pop	 edi
  0010a	5e		 pop	 esi
  0010b	5b		 pop	 ebx
; Line 221
  0010c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010f	33 cd		 xor	 ecx, ebp
  00111	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00116	8b e5		 mov	 esp, ebp
  00118	5d		 pop	 ebp
  00119	c3		 ret	 0
$LN2@db_getloca:
; Line 217
  0011a	56		 push	 esi
  0011b	e8 00 00 00 00	 call	 _lua_pushnil
  00120	83 c4 04	 add	 esp, 4
$LN15@db_getloca:
; Line 221
  00123	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00126	b8 01 00 00 00	 mov	 eax, 1
  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	33 cd		 xor	 ecx, ebp
  0012f	5b		 pop	 ebx
  00130	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00135	8b e5		 mov	 esp, ebp
  00137	5d		 pop	 ebp
  00138	c3		 ret	 0
_db_getlocal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_getinfo
_TEXT	SEGMENT
tv398 = -112						; size = 4
tv399 = -108						; size = 4
_arg$1$ = -108						; size = 4
_ar$ = -104						; size = 100
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_db_getinfo PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 145
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00015	57		 push	 edi
; Line 148
  00016	6a 01		 push	 1
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 _lua_type
  0001e	83 c4 08	 add	 esp, 8
  00021	83 f8 08	 cmp	 eax, 8
  00024	75 16		 jne	 SHORT $LN15@db_getinfo
  00026	bf 01 00 00 00	 mov	 edi, 1
  0002b	57		 push	 edi
  0002c	56		 push	 esi
  0002d	89 7d 94	 mov	 DWORD PTR _arg$1$[ebp], edi
  00030	e8 00 00 00 00	 call	 _lua_tothread
  00035	83 c4 08	 add	 esp, 8
  00038	8b d8		 mov	 ebx, eax
  0003a	eb 07		 jmp	 SHORT $LN14@db_getinfo
$LN15@db_getinfo:
  0003c	33 ff		 xor	 edi, edi
  0003e	8b de		 mov	 ebx, esi
  00040	89 7d 94	 mov	 DWORD PTR _arg$1$[ebp], edi
$LN14@db_getinfo:
; Line 149
  00043	6a 00		 push	 0
  00045	8d 47 02	 lea	 eax, DWORD PTR [edi+2]
  00048	68 00 00 00 00	 push	 OFFSET ??_C@_06LMJLCCA@flnStu?$AA@
  0004d	50		 push	 eax
  0004e	56		 push	 esi
  0004f	89 45 90	 mov	 DWORD PTR tv398[ebp], eax
  00052	e8 00 00 00 00	 call	 _luaL_optlstring
  00057	83 c4 10	 add	 esp, 16			; 00000010H
  0005a	8b f8		 mov	 edi, eax
; Line 150
  0005c	3b f3		 cmp	 esi, ebx
  0005e	74 1d		 je	 SHORT $LN18@db_getinfo
  00060	6a 03		 push	 3
  00062	53		 push	 ebx
  00063	e8 00 00 00 00	 call	 _lua_checkstack
  00068	83 c4 08	 add	 esp, 8
  0006b	85 c0		 test	 eax, eax
  0006d	75 0e		 jne	 SHORT $LN18@db_getinfo
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EODJGPIM@stack?5overflow?$AA@
  00074	56		 push	 esi
  00075	e8 00 00 00 00	 call	 _luaL_error
  0007a	83 c4 08	 add	 esp, 8
$LN18@db_getinfo:
; Line 151
  0007d	8b 45 94	 mov	 eax, DWORD PTR _arg$1$[ebp]
  00080	40		 inc	 eax
  00081	50		 push	 eax
  00082	56		 push	 esi
  00083	89 45 94	 mov	 DWORD PTR tv399[ebp], eax
  00086	e8 00 00 00 00	 call	 _lua_type
  0008b	83 c4 08	 add	 esp, 8
  0008e	83 f8 06	 cmp	 eax, 6
  00091	75 57		 jne	 SHORT $LN11@db_getinfo
; Line 152
  00093	57		 push	 edi
  00094	68 00 00 00 00	 push	 OFFSET ??_C@_03PENLABEP@?$DO?$CFs?$AA@
  00099	56		 push	 esi
  0009a	e8 00 00 00 00	 call	 _lua_pushfstring
; Line 153
  0009f	ff 75 94	 push	 DWORD PTR tv399[ebp]
  000a2	8b f8		 mov	 edi, eax
  000a4	56		 push	 esi
  000a5	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 154
  000aa	6a 01		 push	 1
  000ac	53		 push	 ebx
  000ad	56		 push	 esi
  000ae	e8 00 00 00 00	 call	 _lua_xmove
  000b3	83 c4 20	 add	 esp, 32			; 00000020H
$LN9@db_getinfo:
; Line 162
  000b6	8d 45 98	 lea	 eax, DWORD PTR _ar$[ebp]
  000b9	50		 push	 eax
  000ba	57		 push	 edi
  000bb	53		 push	 ebx
  000bc	e8 00 00 00 00	 call	 _lua_getinfo
  000c1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c4	85 c0		 test	 eax, eax
  000c6	75 4e		 jne	 SHORT $LN8@db_getinfo
; Line 163
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PJFAGLMH@invalid?5option?$AA@
  000cd	ff 75 90	 push	 DWORD PTR tv398[ebp]
  000d0	56		 push	 esi
  000d1	e8 00 00 00 00	 call	 _luaL_argerror
  000d6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d9	5f		 pop	 edi
  000da	5e		 pop	 esi
  000db	5b		 pop	 ebx
; Line 190
  000dc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000df	33 cd		 xor	 ecx, ebp
  000e1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e6	8b e5		 mov	 esp, ebp
  000e8	5d		 pop	 ebp
  000e9	c3		 ret	 0
$LN11@db_getinfo:
; Line 157
  000ea	8d 45 98	 lea	 eax, DWORD PTR _ar$[ebp]
  000ed	50		 push	 eax
  000ee	ff 75 94	 push	 DWORD PTR tv399[ebp]
  000f1	56		 push	 esi
  000f2	e8 00 00 00 00	 call	 _luaL_checkinteger
  000f7	83 c4 08	 add	 esp, 8
  000fa	50		 push	 eax
  000fb	53		 push	 ebx
  000fc	e8 00 00 00 00	 call	 _lua_getstack
  00101	83 c4 0c	 add	 esp, 12			; 0000000cH
  00104	85 c0		 test	 eax, eax
  00106	75 ae		 jne	 SHORT $LN9@db_getinfo
; Line 158
  00108	56		 push	 esi
  00109	e8 00 00 00 00	 call	 _lua_pushnil
  0010e	83 c4 04	 add	 esp, 4
; Line 159
  00111	e9 c8 01 00 00	 jmp	 $LN1@db_getinfo
$LN8@db_getinfo:
; Line 164
  00116	6a 00		 push	 0
  00118	6a 00		 push	 0
  0011a	56		 push	 esi
  0011b	e8 00 00 00 00	 call	 _lua_createtable
; Line 165
  00120	6a 53		 push	 83			; 00000053H
  00122	57		 push	 edi
  00123	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  00129	83 c4 14	 add	 esp, 20			; 00000014H
  0012c	85 c0		 test	 eax, eax
  0012e	74 7b		 je	 SHORT $LN29@db_getinfo
; Line 166
  00130	ff 75 a8	 push	 DWORD PTR _ar$[ebp+16]
  00133	56		 push	 esi
  00134	e8 00 00 00 00	 call	 _lua_pushstring
  00139	68 00 00 00 00	 push	 OFFSET ??_C@_06OEKOLKIL@source?$AA@
  0013e	6a fe		 push	 -2			; fffffffeH
  00140	56		 push	 esi
  00141	e8 00 00 00 00	 call	 _lua_setfield
; Line 167
  00146	8d 45 bc	 lea	 eax, DWORD PTR _ar$[ebp+36]
  00149	50		 push	 eax
  0014a	56		 push	 esi
  0014b	e8 00 00 00 00	 call	 _lua_pushstring
  00150	68 00 00 00 00	 push	 OFFSET ??_C@_09NOFDGFFO@short_src?$AA@
  00155	6a fe		 push	 -2			; fffffffeH
  00157	56		 push	 esi
  00158	e8 00 00 00 00	 call	 _lua_setfield
; Line 168
  0015d	8b 45 b0	 mov	 eax, DWORD PTR _ar$[ebp+24]
  00160	99		 cdq
  00161	52		 push	 edx
  00162	50		 push	 eax
  00163	56		 push	 esi
  00164	e8 00 00 00 00	 call	 _lua_pushinteger
  00169	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IOFFDKM@linedefined?$AA@
  0016e	6a fe		 push	 -2			; fffffffeH
  00170	56		 push	 esi
  00171	e8 00 00 00 00	 call	 _lua_setfield
; Line 169
  00176	8b 45 b4	 mov	 eax, DWORD PTR _ar$[ebp+28]
  00179	83 c4 40	 add	 esp, 64			; 00000040H
  0017c	99		 cdq
  0017d	52		 push	 edx
  0017e	50		 push	 eax
  0017f	56		 push	 esi
  00180	e8 00 00 00 00	 call	 _lua_pushinteger
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BGGOJOFO@lastlinedefined?$AA@
  0018a	6a fe		 push	 -2			; fffffffeH
  0018c	56		 push	 esi
  0018d	e8 00 00 00 00	 call	 _lua_setfield
; Line 170
  00192	ff 75 a4	 push	 DWORD PTR _ar$[ebp+12]
  00195	56		 push	 esi
  00196	e8 00 00 00 00	 call	 _lua_pushstring
  0019b	68 00 00 00 00	 push	 OFFSET ??_C@_04IOPLPGDE@what?$AA@
  001a0	6a fe		 push	 -2			; fffffffeH
  001a2	56		 push	 esi
  001a3	e8 00 00 00 00	 call	 _lua_setfield
  001a8	83 c4 2c	 add	 esp, 44			; 0000002cH
$LN29@db_getinfo:
; Line 172
  001ab	6a 6c		 push	 108			; 0000006cH
  001ad	57		 push	 edi
  001ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  001b4	83 c4 08	 add	 esp, 8
  001b7	85 c0		 test	 eax, eax
  001b9	74 1c		 je	 SHORT $LN31@db_getinfo
; Line 173
  001bb	8b 45 ac	 mov	 eax, DWORD PTR _ar$[ebp+20]
  001be	99		 cdq
  001bf	52		 push	 edx
  001c0	50		 push	 eax
  001c1	56		 push	 esi
  001c2	e8 00 00 00 00	 call	 _lua_pushinteger
  001c7	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OLGEEKJC@currentline?$AA@
  001cc	6a fe		 push	 -2			; fffffffeH
  001ce	56		 push	 esi
  001cf	e8 00 00 00 00	 call	 _lua_setfield
  001d4	83 c4 18	 add	 esp, 24			; 00000018H
$LN31@db_getinfo:
; Line 174
  001d7	6a 75		 push	 117			; 00000075H
  001d9	57		 push	 edi
  001da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  001e0	83 c4 08	 add	 esp, 8
  001e3	85 c0		 test	 eax, eax
  001e5	74 4f		 je	 SHORT $LN37@db_getinfo
; Line 175
  001e7	0f b6 45 b8	 movzx	 eax, BYTE PTR _ar$[ebp+32]
  001eb	99		 cdq
  001ec	52		 push	 edx
  001ed	50		 push	 eax
  001ee	56		 push	 esi
  001ef	e8 00 00 00 00	 call	 _lua_pushinteger
  001f4	68 00 00 00 00	 push	 OFFSET ??_C@_04BDNNNDAF@nups?$AA@
  001f9	6a fe		 push	 -2			; fffffffeH
  001fb	56		 push	 esi
  001fc	e8 00 00 00 00	 call	 _lua_setfield
; Line 176
  00201	0f b6 45 b9	 movzx	 eax, BYTE PTR _ar$[ebp+33]
  00205	99		 cdq
  00206	52		 push	 edx
  00207	50		 push	 eax
  00208	56		 push	 esi
  00209	e8 00 00 00 00	 call	 _lua_pushinteger
  0020e	68 00 00 00 00	 push	 OFFSET ??_C@_07DEOJMPEE@nparams?$AA@
  00213	6a fe		 push	 -2			; fffffffeH
  00215	56		 push	 esi
  00216	e8 00 00 00 00	 call	 _lua_setfield
; Line 177
  0021b	0f be 45 ba	 movsx	 eax, BYTE PTR _ar$[ebp+34]
  0021f	50		 push	 eax
  00220	56		 push	 esi
  00221	e8 00 00 00 00	 call	 _lua_pushboolean
  00226	68 00 00 00 00	 push	 OFFSET ??_C@_08PKLIBBKE@isvararg?$AA@
  0022b	6a fe		 push	 -2			; fffffffeH
  0022d	56		 push	 esi
  0022e	e8 00 00 00 00	 call	 _lua_setfield
  00233	83 c4 44	 add	 esp, 68			; 00000044H
$LN37@db_getinfo:
; Line 179
  00236	6a 6e		 push	 110			; 0000006eH
  00238	57		 push	 edi
  00239	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  0023f	83 c4 08	 add	 esp, 8
  00242	85 c0		 test	 eax, eax
  00244	74 2f		 je	 SHORT $LN41@db_getinfo
; Line 180
  00246	ff 75 9c	 push	 DWORD PTR _ar$[ebp+4]
  00249	56		 push	 esi
  0024a	e8 00 00 00 00	 call	 _lua_pushstring
  0024f	68 00 00 00 00	 push	 OFFSET ??_C@_04MEMAJGDJ@name?$AA@
  00254	6a fe		 push	 -2			; fffffffeH
  00256	56		 push	 esi
  00257	e8 00 00 00 00	 call	 _lua_setfield
; Line 181
  0025c	ff 75 a0	 push	 DWORD PTR _ar$[ebp+8]
  0025f	56		 push	 esi
  00260	e8 00 00 00 00	 call	 _lua_pushstring
  00265	68 00 00 00 00	 push	 OFFSET ??_C@_08JEGIFMFI@namewhat?$AA@
  0026a	6a fe		 push	 -2			; fffffffeH
  0026c	56		 push	 esi
  0026d	e8 00 00 00 00	 call	 _lua_setfield
  00272	83 c4 28	 add	 esp, 40			; 00000028H
$LN41@db_getinfo:
; Line 183
  00275	6a 74		 push	 116			; 00000074H
  00277	57		 push	 edi
  00278	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  0027e	83 c4 08	 add	 esp, 8
  00281	85 c0		 test	 eax, eax
  00283	74 1b		 je	 SHORT $LN43@db_getinfo
; Line 184
  00285	0f be 45 bb	 movsx	 eax, BYTE PTR _ar$[ebp+35]
  00289	50		 push	 eax
  0028a	56		 push	 esi
  0028b	e8 00 00 00 00	 call	 _lua_pushboolean
  00290	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KHAEKHMK@istailcall?$AA@
  00295	6a fe		 push	 -2			; fffffffeH
  00297	56		 push	 esi
  00298	e8 00 00 00 00	 call	 _lua_setfield
  0029d	83 c4 14	 add	 esp, 20			; 00000014H
$LN43@db_getinfo:
; Line 185
  002a0	6a 4c		 push	 76			; 0000004cH
  002a2	57		 push	 edi
  002a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  002a9	83 c4 08	 add	 esp, 8
  002ac	85 c0		 test	 eax, eax
  002ae	74 0f		 je	 SHORT $LN2@db_getinfo
; Line 186
  002b0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DINLHJFF@activelines?$AA@
  002b5	53		 push	 ebx
  002b6	56		 push	 esi
  002b7	e8 00 00 00 00	 call	 _treatstackoption
  002bc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@db_getinfo:
; Line 187
  002bf	6a 66		 push	 102			; 00000066H
  002c1	57		 push	 edi
  002c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  002c8	83 c4 08	 add	 esp, 8
  002cb	85 c0		 test	 eax, eax
  002cd	74 0f		 je	 SHORT $LN1@db_getinfo
; Line 188
  002cf	68 00 00 00 00	 push	 OFFSET ??_C@_04HPNHAEOP@func?$AA@
  002d4	53		 push	 ebx
  002d5	56		 push	 esi
  002d6	e8 00 00 00 00	 call	 _treatstackoption
  002db	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@db_getinfo:
; Line 190
  002de	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002e1	b8 01 00 00 00	 mov	 eax, 1
  002e6	5f		 pop	 edi
  002e7	5e		 pop	 esi
  002e8	33 cd		 xor	 ecx, ebp
  002ea	5b		 pop	 ebx
  002eb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002f0	8b e5		 mov	 esp, ebp
  002f2	5d		 pop	 ebp
  002f3	c3		 ret	 0
_db_getinfo ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _treatstackoption
_TEXT	SEGMENT
_L$ = 8							; size = 4
_L1$ = 12						; size = 4
_fname$ = 16						; size = 4
_treatstackoption PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 130
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 131
  00003	8b 45 0c	 mov	 eax, DWORD PTR _L1$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
; Line 132
  0000a	6a 01		 push	 1
  0000c	3b f0		 cmp	 esi, eax
  0000e	75 1c		 jne	 SHORT $LN2@treatstack
  00010	6a fe		 push	 -2			; fffffffeH
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _lua_rotate
; Line 134
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 135
  0001b	ff 75 10	 push	 DWORD PTR _fname$[ebp]
  0001e	6a fe		 push	 -2			; fffffffeH
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 _lua_setfield
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
  00029	5e		 pop	 esi
; Line 136
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
$LN2@treatstack:
; Line 134
  0002c	56		 push	 esi
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 _lua_xmove
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 135
  00036	ff 75 10	 push	 DWORD PTR _fname$[ebp]
  00039	6a fe		 push	 -2			; fffffffeH
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 _lua_setfield
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH
  00044	5e		 pop	 esi
; Line 136
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
_treatstackoption ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _settabsb
_TEXT	SEGMENT
_L$ = 8							; size = 4
_k$ = 12						; size = 4
_v$ = 16						; size = 4
_settabsb PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 117
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 118
  00003	ff 75 10	 push	 DWORD PTR _v$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _lua_pushboolean
; Line 119
  0000e	ff 75 0c	 push	 DWORD PTR _k$[ebp]
  00011	6a fe		 push	 -2			; fffffffeH
  00013	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00016	e8 00 00 00 00	 call	 _lua_setfield
  0001b	83 c4 14	 add	 esp, 20			; 00000014H
; Line 120
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
_settabsb ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _settabsi
_TEXT	SEGMENT
_L$ = 8							; size = 4
_k$ = 12						; size = 4
_v$ = 16						; size = 4
_settabsi PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 112
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 113
  00003	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00006	99		 cdq
  00007	52		 push	 edx
  00008	50		 push	 eax
  00009	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000c	e8 00 00 00 00	 call	 _lua_pushinteger
; Line 114
  00011	ff 75 0c	 push	 DWORD PTR _k$[ebp]
  00014	6a fe		 push	 -2			; fffffffeH
  00016	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00019	e8 00 00 00 00	 call	 _lua_setfield
  0001e	83 c4 18	 add	 esp, 24			; 00000018H
; Line 115
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
_settabsi ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _settabss
_TEXT	SEGMENT
_L$ = 8							; size = 4
_k$ = 12						; size = 4
_v$ = 16						; size = 4
_settabss PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 107
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 108
  00003	ff 75 10	 push	 DWORD PTR _v$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _lua_pushstring
; Line 109
  0000e	ff 75 0c	 push	 DWORD PTR _k$[ebp]
  00011	6a fe		 push	 -2			; fffffffeH
  00013	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00016	e8 00 00 00 00	 call	 _lua_setfield
  0001b	83 c4 14	 add	 esp, 20			; 00000014H
; Line 110
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
_settabss ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _getthread
_TEXT	SEGMENT
_L$ = 8							; size = 4
_arg$ = 12						; size = 4
_getthread PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 90
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 91
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 01		 push	 1
  00009	56		 push	 esi
  0000a	e8 00 00 00 00	 call	 _lua_type
  0000f	83 c4 08	 add	 esp, 8
  00012	83 f8 08	 cmp	 eax, 8
  00015	75 17		 jne	 SHORT $LN2@getthread
; Line 92
  00017	8b 45 0c	 mov	 eax, DWORD PTR _arg$[ebp]
; Line 93
  0001a	6a 01		 push	 1
  0001c	56		 push	 esi
  0001d	c7 00 01 00 00
	00		 mov	 DWORD PTR [eax], 1
  00023	e8 00 00 00 00	 call	 _lua_tothread
  00028	83 c4 08	 add	 esp, 8
  0002b	5e		 pop	 esi
; Line 99
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
$LN2@getthread:
; Line 96
  0002e	8b 4d 0c	 mov	 ecx, DWORD PTR _arg$[ebp]
; Line 97
  00031	8b c6		 mov	 eax, esi
  00033	5e		 pop	 esi
  00034	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 99
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
_getthread ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_setuservalue
_TEXT	SEGMENT
_L$ = 8							; size = 4
_db_setuservalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 75
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 76
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 07		 push	 7
  00009	6a 01		 push	 1
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _luaL_checktype
; Line 77
  00011	6a 02		 push	 2
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 _luaL_checkany
; Line 78
  00019	6a 02		 push	 2
  0001b	56		 push	 esi
  0001c	e8 00 00 00 00	 call	 _lua_settop
; Line 79
  00021	6a 01		 push	 1
  00023	56		 push	 esi
  00024	e8 00 00 00 00	 call	 _lua_setuservalue
  00029	83 c4 24	 add	 esp, 36			; 00000024H
; Line 80
  0002c	b8 01 00 00 00	 mov	 eax, 1
  00031	5e		 pop	 esi
; Line 81
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
_db_setuservalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_getuservalue
_TEXT	SEGMENT
_L$ = 8							; size = 4
_db_getuservalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 66
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 67
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 01		 push	 1
  00009	56		 push	 esi
  0000a	e8 00 00 00 00	 call	 _lua_type
  0000f	83 c4 08	 add	 esp, 8
  00012	83 f8 07	 cmp	 eax, 7
  00015	74 11		 je	 SHORT $LN2@db_getuser
; Line 68
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 _lua_pushnil
  0001d	83 c4 04	 add	 esp, 4
; Line 71
  00020	b8 01 00 00 00	 mov	 eax, 1
  00025	5e		 pop	 esi
; Line 72
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
$LN2@db_getuser:
; Line 70
  00028	6a 01		 push	 1
  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 _lua_getuservalue
  00030	83 c4 08	 add	 esp, 8
; Line 71
  00033	b8 01 00 00 00	 mov	 eax, 1
  00038	5e		 pop	 esi
; Line 72
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
_db_getuservalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_setmetatable
_TEXT	SEGMENT
_L$ = 8							; size = 4
_db_setmetatable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 56
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 57
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 02		 push	 2
  00009	56		 push	 esi
  0000a	e8 00 00 00 00	 call	 _lua_type
  0000f	83 c4 08	 add	 esp, 8
; Line 59
  00012	85 c0		 test	 eax, eax
  00014	74 15		 je	 SHORT $LN3@db_setmeta
  00016	83 f8 05	 cmp	 eax, 5
  00019	74 10		 je	 SHORT $LN3@db_setmeta
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@HDIIKINN@nil?5or?5table?5expected?$AA@
  00020	6a 02		 push	 2
  00022	56		 push	 esi
  00023	e8 00 00 00 00	 call	 _luaL_argerror
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@db_setmeta:
; Line 60
  0002b	6a 02		 push	 2
  0002d	56		 push	 esi
  0002e	e8 00 00 00 00	 call	 _lua_settop
; Line 61
  00033	6a 01		 push	 1
  00035	56		 push	 esi
  00036	e8 00 00 00 00	 call	 _lua_setmetatable
  0003b	83 c4 10	 add	 esp, 16			; 00000010H
; Line 62
  0003e	b8 01 00 00 00	 mov	 eax, 1
  00043	5e		 pop	 esi
; Line 63
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
_db_setmetatable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_getmetatable
_TEXT	SEGMENT
_L$ = 8							; size = 4
_db_getmetatable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 47
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 48
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 01		 push	 1
  00009	56		 push	 esi
  0000a	e8 00 00 00 00	 call	 _luaL_checkany
; Line 49
  0000f	6a 01		 push	 1
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 _lua_getmetatable
  00017	83 c4 10	 add	 esp, 16			; 00000010H
  0001a	85 c0		 test	 eax, eax
  0001c	75 09		 jne	 SHORT $LN4@db_getmeta
; Line 50
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 _lua_pushnil
  00024	83 c4 04	 add	 esp, 4
$LN4@db_getmeta:
; Line 52
  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	5e		 pop	 esi
; Line 53
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
_db_getmetatable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _db_getregistry
_TEXT	SEGMENT
_L$ = 8							; size = 4
_db_getregistry PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 41
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 42
  00003	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00008	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000b	e8 00 00 00 00	 call	 _lua_pushvalue
  00010	83 c4 08	 add	 esp, 8
; Line 43
  00013	b8 01 00 00 00	 mov	 eax, 1
; Line 44
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
_db_getregistry ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _checkstack
_TEXT	SEGMENT
_L$ = 8							; size = 4
_L1$ = 12						; size = 4
_n$ = 16						; size = 4
_checkstack PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 35
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 36
  00003	8b 45 0c	 mov	 eax, DWORD PTR _L1$[ebp]
  00006	39 45 08	 cmp	 DWORD PTR _L$[ebp], eax
  00009	74 20		 je	 SHORT $LN1@checkstack
  0000b	ff 75 10	 push	 DWORD PTR _n$[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 _lua_checkstack
  00014	83 c4 08	 add	 esp, 8
  00017	85 c0		 test	 eax, eax
  00019	75 10		 jne	 SHORT $LN1@checkstack
; Line 37
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EODJGPIM@stack?5overflow?$AA@
  00020	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00023	e8 00 00 00 00	 call	 _luaL_error
  00028	83 c4 08	 add	 esp, 8
$LN1@checkstack:
; Line 38
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
_checkstack ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaopen_debug
_TEXT	SEGMENT
_L$ = 8							; size = 4
_luaopen_debug PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ldblib.c
; Line 452
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 453
  00003	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@405bc00000000000
  0000b	56		 push	 esi
  0000c	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000f	68 88 00 00 00	 push	 136			; 00000088H
  00014	83 ec 08	 sub	 esp, 8
  00017	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 _luaL_checkversion_
  00022	6a 10		 push	 16			; 00000010H
  00024	6a 00		 push	 0
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 _lua_createtable
  0002c	6a 00		 push	 0
  0002e	68 00 00 00 00	 push	 OFFSET _dblib
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 _luaL_setfuncs
  00039	83 c4 28	 add	 esp, 40			; 00000028H
; Line 454
  0003c	b8 01 00 00 00	 mov	 eax, 1
  00041	5e		 pop	 esi
; Line 455
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
_luaopen_debug ENDP
_TEXT	ENDS
END
