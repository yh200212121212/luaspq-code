; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_06CMLIEHFC@concat?$AA@			; `string'
PUBLIC	??_C@_04HKHJFELJ@maxn?$AA@			; `string'
PUBLIC	??_C@_06OAOPNKHP@insert?$AA@			; `string'
PUBLIC	??_C@_04IPANLPFO@pack?$AA@			; `string'
PUBLIC	??_C@_06FIONAGJL@unpack?$AA@			; `string'
PUBLIC	??_C@_06LEMKAMD@remove?$AA@			; `string'
PUBLIC	??_C@_04HDMMNHEL@move?$AA@			; `string'
PUBLIC	??_C@_04PIMMHFGE@sort?$AA@			; `string'
;	COMDAT ??_C@_04PIMMHFGE@sort?$AA@
CONST	SEGMENT
??_C@_04PIMMHFGE@sort?$AA@ DB 'sort', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HDMMNHEL@move?$AA@
CONST	SEGMENT
??_C@_04HDMMNHEL@move?$AA@ DB 'move', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LEMKAMD@remove?$AA@
CONST	SEGMENT
??_C@_06LEMKAMD@remove?$AA@ DB 'remove', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FIONAGJL@unpack?$AA@
CONST	SEGMENT
??_C@_06FIONAGJL@unpack?$AA@ DB 'unpack', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IPANLPFO@pack?$AA@
CONST	SEGMENT
??_C@_04IPANLPFO@pack?$AA@ DB 'pack', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OAOPNKHP@insert?$AA@
CONST	SEGMENT
??_C@_06OAOPNKHP@insert?$AA@ DB 'insert', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKHJFELJ@maxn?$AA@
CONST	SEGMENT
??_C@_04HKHJFELJ@maxn?$AA@ DB 'maxn', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CMLIEHFC@concat?$AA@
CONST	SEGMENT
??_C@_06CMLIEHFC@concat?$AA@ DB 'concat', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_tab_funcs DD	FLAT:??_C@_06CMLIEHFC@concat?$AA@
	DD	FLAT:_tconcat
	DD	FLAT:??_C@_04HKHJFELJ@maxn?$AA@
	DD	FLAT:_maxn
	DD	FLAT:??_C@_06OAOPNKHP@insert?$AA@
	DD	FLAT:_tinsert
	DD	FLAT:??_C@_04IPANLPFO@pack?$AA@
	DD	FLAT:_pack
	DD	FLAT:??_C@_06FIONAGJL@unpack?$AA@
	DD	FLAT:_unpack
	DD	FLAT:??_C@_06LEMKAMD@remove?$AA@
	DD	FLAT:_tremove
	DD	FLAT:??_C@_04HDMMNHEL@move?$AA@
	DD	FLAT:_tmove
	DD	FLAT:??_C@_04PIMMHFGE@sort?$AA@
	DD	FLAT:_sort
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	_luaopen_table
PUBLIC	??_C@_07NHABFFHN@__index?$AA@			; `string'
PUBLIC	??_C@_0L@GADKNKH@__newindex?$AA@		; `string'
PUBLIC	??_C@_05MNDELLDN@__len?$AA@			; `string'
PUBLIC	??_C@_0P@DAKFMHIM@table?5expected?$AA@		; `string'
PUBLIC	??_C@_0BH@FFAABLEA@position?5out?5of?5bounds?$AA@ ; `string'
PUBLIC	??_C@_0CG@LPGHMHCC@wrong?5number?5of?5arguments?5to?5?8in@ ; `string'
PUBLIC	??_C@_0BK@ICIDIFLD@too?5many?5elements?5to?5move?$AA@ ; `string'
PUBLIC	??_C@_0BI@GJMBFEK@destination?5wrap?5around?$AA@ ; `string'
PUBLIC	??_C@_0DF@OJJECDJJ@invalid?5value?5?$CI?$CFs?$CJ?5at?5index?5?$CFd?5i@ ; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_01EFFIKLCJ@n?$AA@				; `string'
PUBLIC	??_C@_0BL@EDBCOFHM@too?5many?5results?5to?5unpack?$AA@ ; `string'
PUBLIC	??_C@_0CD@OFHMGIPD@invalid?5order?5function?5for?5sorti@ ; `string'
PUBLIC	??_C@_0O@KFKKFIGA@array?5too?5big?$AA@		; `string'
PUBLIC	__real@405bc00000000000
EXTRN	_lua_gettop:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_rotate:PROC
EXTRN	_lua_checkstack:PROC
EXTRN	_lua_isstring:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_typename:PROC
EXTRN	_lua_tonumberx:PROC
EXTRN	_lua_toboolean:PROC
EXTRN	_lua_compare:PROC
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_pushnumber:PROC
EXTRN	_lua_pushinteger:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_lua_getfield:PROC
EXTRN	_lua_geti:PROC
EXTRN	_lua_rawget:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_getmetatable:PROC
EXTRN	_lua_setglobal:PROC
EXTRN	_lua_setfield:PROC
EXTRN	_lua_seti:PROC
EXTRN	_lua_callk:PROC
EXTRN	_lua_next:PROC
EXTRN	_luaL_checkversion_:PROC
EXTRN	_luaL_argerror:PROC
EXTRN	_luaL_optlstring:PROC
EXTRN	_luaL_checkinteger:PROC
EXTRN	_luaL_optinteger:PROC
EXTRN	_luaL_checkstack:PROC
EXTRN	_luaL_checktype:PROC
EXTRN	_luaL_error:PROC
EXTRN	_luaL_len:PROC
EXTRN	_luaL_setfuncs:PROC
EXTRN	_luaL_buffinit:PROC
EXTRN	_luaL_addlstring:PROC
EXTRN	_luaL_addvalue:PROC
EXTRN	_luaL_pushresult:PROC
EXTRN	__imp__clock:PROC
EXTRN	__imp___time64:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@405bc00000000000
CONST	SEGMENT
__real@405bc00000000000 DQ 0405bc00000000000r	; 111
CONST	ENDS
;	COMDAT ??_C@_0O@KFKKFIGA@array?5too?5big?$AA@
CONST	SEGMENT
??_C@_0O@KFKKFIGA@array?5too?5big?$AA@ DB 'array too big', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@OFHMGIPD@invalid?5order?5function?5for?5sorti@
CONST	SEGMENT
??_C@_0CD@OFHMGIPD@invalid?5order?5function?5for?5sorti@ DB 'invalid orde'
	DB	'r function for sorting', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EDBCOFHM@too?5many?5results?5to?5unpack?$AA@
CONST	SEGMENT
??_C@_0BL@EDBCOFHM@too?5many?5results?5to?5unpack?$AA@ DB 'too many resul'
	DB	'ts to unpack', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01EFFIKLCJ@n?$AA@
CONST	SEGMENT
??_C@_01EFFIKLCJ@n?$AA@ DB 'n', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@OJJECDJJ@invalid?5value?5?$CI?$CFs?$CJ?5at?5index?5?$CFd?5i@
CONST	SEGMENT
??_C@_0DF@OJJECDJJ@invalid?5value?5?$CI?$CFs?$CJ?5at?5index?5?$CFd?5i@ DB 'i'
	DB	'nvalid value (%s) at index %d in table for ''concat''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GJMBFEK@destination?5wrap?5around?$AA@
CONST	SEGMENT
??_C@_0BI@GJMBFEK@destination?5wrap?5around?$AA@ DB 'destination wrap aro'
	DB	'und', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@ICIDIFLD@too?5many?5elements?5to?5move?$AA@
CONST	SEGMENT
??_C@_0BK@ICIDIFLD@too?5many?5elements?5to?5move?$AA@ DB 'too many elemen'
	DB	'ts to move', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@LPGHMHCC@wrong?5number?5of?5arguments?5to?5?8in@
CONST	SEGMENT
??_C@_0CG@LPGHMHCC@wrong?5number?5of?5arguments?5to?5?8in@ DB 'wrong numb'
	DB	'er of arguments to ''insert''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FFAABLEA@position?5out?5of?5bounds?$AA@
CONST	SEGMENT
??_C@_0BH@FFAABLEA@position?5out?5of?5bounds?$AA@ DB 'position out of bou'
	DB	'nds', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DAKFMHIM@table?5expected?$AA@
CONST	SEGMENT
??_C@_0P@DAKFMHIM@table?5expected?$AA@ DB 'table expected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05MNDELLDN@__len?$AA@
CONST	SEGMENT
??_C@_05MNDELLDN@__len?$AA@ DB '__len', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GADKNKH@__newindex?$AA@
CONST	SEGMENT
??_C@_0L@GADKNKH@__newindex?$AA@ DB '__newindex', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NHABFFHN@__index?$AA@
CONST	SEGMENT
??_C@_07NHABFFHN@__index?$AA@ DB '__index', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT _sort
_TEXT	SEGMENT
_L$ = 8							; size = 4
_sort	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 409
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 410
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	6a 01		 push	 1
  0000a	56		 push	 esi
  0000b	e8 00 00 00 00	 call	 _lua_type
  00010	83 c4 08	 add	 esp, 8
  00013	83 f8 05	 cmp	 eax, 5
  00016	74 7a		 je	 SHORT $LN6@sort
  00018	6a 01		 push	 1
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 _lua_getmetatable
  00020	83 c4 08	 add	 esp, 8
  00023	85 c0		 test	 eax, eax
  00025	74 5b		 je	 SHORT $LN10@sort
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_07NHABFFHN@__index?$AA@
  0002c	56		 push	 esi
  0002d	e8 00 00 00 00	 call	 _lua_pushstring
  00032	6a fe		 push	 -2			; fffffffeH
  00034	56		 push	 esi
  00035	e8 00 00 00 00	 call	 _lua_rawget
  0003a	83 c4 10	 add	 esp, 16			; 00000010H
  0003d	85 c0		 test	 eax, eax
  0003f	74 41		 je	 SHORT $LN10@sort
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GADKNKH@__newindex?$AA@
  00046	56		 push	 esi
  00047	e8 00 00 00 00	 call	 _lua_pushstring
  0004c	6a fd		 push	 -3			; fffffffdH
  0004e	56		 push	 esi
  0004f	e8 00 00 00 00	 call	 _lua_rawget
  00054	83 c4 10	 add	 esp, 16			; 00000010H
  00057	85 c0		 test	 eax, eax
  00059	74 27		 je	 SHORT $LN10@sort
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_05MNDELLDN@__len?$AA@
  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 _lua_pushstring
  00066	6a fc		 push	 -4			; fffffffcH
  00068	56		 push	 esi
  00069	e8 00 00 00 00	 call	 _lua_rawget
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
  00071	85 c0		 test	 eax, eax
  00073	74 0d		 je	 SHORT $LN10@sort
  00075	6a fb		 push	 -5			; fffffffbH
  00077	56		 push	 esi
  00078	e8 00 00 00 00	 call	 _lua_settop
  0007d	83 c4 08	 add	 esp, 8
  00080	eb 10		 jmp	 SHORT $LN6@sort
$LN10@sort:
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DAKFMHIM@table?5expected?$AA@
  00087	6a 01		 push	 1
  00089	56		 push	 esi
  0008a	e8 00 00 00 00	 call	 _luaL_argerror
  0008f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@sort:
  00092	6a 01		 push	 1
  00094	56		 push	 esi
  00095	e8 00 00 00 00	 call	 _luaL_len
  0009a	83 c4 08	 add	 esp, 8
  0009d	8b f8		 mov	 edi, eax
; Line 411
  0009f	85 d2		 test	 edx, edx
  000a1	7c 64		 jl	 SHORT $LN23@sort
  000a3	7f 13		 jg	 SHORT $LN21@sort
  000a5	83 ff 01	 cmp	 edi, 1
  000a8	76 5d		 jbe	 SHORT $LN23@sort
; Line 412
  000aa	85 d2		 test	 edx, edx
  000ac	7c 1a		 jl	 SHORT $LN5@sort
  000ae	7f 08		 jg	 SHORT $LN21@sort
  000b0	81 ff ff ff ff
	7f		 cmp	 edi, 2147483647		; 7fffffffH
  000b6	72 10		 jb	 SHORT $LN5@sort
$LN21@sort:
  000b8	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KFKKFIGA@array?5too?5big?$AA@
  000bd	6a 01		 push	 1
  000bf	56		 push	 esi
  000c0	e8 00 00 00 00	 call	 _luaL_argerror
  000c5	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@sort:
; Line 413
  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  000cd	6a 28		 push	 40			; 00000028H
  000cf	56		 push	 esi
  000d0	e8 00 00 00 00	 call	 _luaL_checkstack
; Line 414
  000d5	6a 02		 push	 2
  000d7	56		 push	 esi
  000d8	e8 00 00 00 00	 call	 _lua_type
  000dd	83 c4 14	 add	 esp, 20			; 00000014H
  000e0	85 c0		 test	 eax, eax
  000e2	7e 0d		 jle	 SHORT $LN1@sort
; Line 415
  000e4	6a 06		 push	 6
  000e6	6a 02		 push	 2
  000e8	56		 push	 esi
  000e9	e8 00 00 00 00	 call	 _luaL_checktype
  000ee	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@sort:
; Line 416
  000f1	6a 02		 push	 2
  000f3	56		 push	 esi
  000f4	e8 00 00 00 00	 call	 _lua_settop
; Line 417
  000f9	6a 00		 push	 0
  000fb	57		 push	 edi
  000fc	6a 01		 push	 1
  000fe	56		 push	 esi
  000ff	e8 00 00 00 00	 call	 _auxsort
  00104	83 c4 18	 add	 esp, 24			; 00000018H
$LN23@sort:
; Line 419
  00107	5f		 pop	 edi
  00108	33 c0		 xor	 eax, eax
  0010a	5e		 pop	 esi
; Line 420
  0010b	5d		 pop	 ebp
  0010c	c3		 ret	 0
_sort	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _auxsort
_TEXT	SEGMENT
_n$1$ = -12						; size = 4
tv371 = -12						; size = 4
$T1 = -8						; size = 4
$T2 = -8						; size = 4
tv369 = -8						; size = 4
$T3 = -4						; size = 4
_p$2$ = -4						; size = 4
_p$1$ = -4						; size = 4
_L$ = 8							; size = 4
_lo$ = 12						; size = 4
_up$ = 16						; size = 4
_rnd$ = 20						; size = 4
_auxsort PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 356
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
; Line 357
  00007	8b 5d 0c	 mov	 ebx, DWORD PTR _lo$[ebp]
  0000a	56		 push	 esi
  0000b	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000e	57		 push	 edi
  0000f	8b 7d 10	 mov	 edi, DWORD PTR _up$[ebp]
  00012	3b df		 cmp	 ebx, edi
  00014	0f 83 e1 02 00
	00		 jae	 $LN60@auxsort
  0001a	8d 9b 00 00 00
	00		 npad	 6
$LL16@auxsort:
; Line 361
  00020	6a 00		 push	 0
  00022	53		 push	 ebx
  00023	6a 01		 push	 1
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 _lua_geti
; Line 362
  0002b	6a 00		 push	 0
  0002d	57		 push	 edi
  0002e	6a 01		 push	 1
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 _lua_geti
; Line 363
  00036	6a 02		 push	 2
  00038	56		 push	 esi
  00039	e8 00 00 00 00	 call	 _lua_type
  0003e	83 c4 28	 add	 esp, 40			; 00000028H
  00041	85 c0		 test	 eax, eax
  00043	75 11		 jne	 SHORT $LN20@auxsort
  00045	6a 01		 push	 1
  00047	6a fe		 push	 -2			; fffffffeH
  00049	6a ff		 push	 -1
  0004b	56		 push	 esi
  0004c	e8 00 00 00 00	 call	 _lua_compare
  00051	83 c4 10	 add	 esp, 16			; 00000010H
  00054	eb 3f		 jmp	 SHORT $LN19@auxsort
$LN20@auxsort:
  00056	6a 02		 push	 2
  00058	56		 push	 esi
  00059	e8 00 00 00 00	 call	 _lua_pushvalue
  0005e	6a fe		 push	 -2			; fffffffeH
  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 _lua_pushvalue
  00066	6a fc		 push	 -4			; fffffffcH
  00068	56		 push	 esi
  00069	e8 00 00 00 00	 call	 _lua_pushvalue
  0006e	6a 00		 push	 0
  00070	6a 00		 push	 0
  00072	6a 01		 push	 1
  00074	6a 02		 push	 2
  00076	56		 push	 esi
  00077	e8 00 00 00 00	 call	 _lua_callk
  0007c	6a ff		 push	 -1
  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 _lua_toboolean
  00084	6a fe		 push	 -2			; fffffffeH
  00086	56		 push	 esi
  00087	89 45 fc	 mov	 DWORD PTR $T3[ebp], eax
  0008a	e8 00 00 00 00	 call	 _lua_settop
  0008f	8b 45 fc	 mov	 eax, DWORD PTR $T3[ebp]
  00092	83 c4 3c	 add	 esp, 60			; 0000003cH
$LN19@auxsort:
  00095	85 c0		 test	 eax, eax
  00097	74 1b		 je	 SHORT $LN14@auxsort
; Line 364
  00099	6a 00		 push	 0
  0009b	53		 push	 ebx
  0009c	6a 01		 push	 1
  0009e	56		 push	 esi
  0009f	e8 00 00 00 00	 call	 _lua_seti
  000a4	6a 00		 push	 0
  000a6	57		 push	 edi
  000a7	6a 01		 push	 1
  000a9	56		 push	 esi
  000aa	e8 00 00 00 00	 call	 _lua_seti
  000af	83 c4 20	 add	 esp, 32			; 00000020H
; Line 365
  000b2	eb 0b		 jmp	 SHORT $LN13@auxsort
$LN14@auxsort:
; Line 366
  000b4	6a fd		 push	 -3			; fffffffdH
  000b6	56		 push	 esi
  000b7	e8 00 00 00 00	 call	 _lua_settop
  000bc	83 c4 08	 add	 esp, 8
$LN13@auxsort:
; Line 367
  000bf	8b c7		 mov	 eax, edi
  000c1	2b c3		 sub	 eax, ebx
  000c3	89 45 f4	 mov	 DWORD PTR tv371[ebp], eax
  000c6	83 f8 01	 cmp	 eax, 1
  000c9	0f 84 2c 02 00
	00		 je	 $LN60@auxsort
; Line 369
  000cf	83 f8 64	 cmp	 eax, 100		; 00000064H
  000d2	72 1f		 jb	 SHORT $LN10@auxsort
  000d4	8b 55 14	 mov	 edx, DWORD PTR _rnd$[ebp]
  000d7	85 d2		 test	 edx, edx
  000d9	74 18		 je	 SHORT $LN10@auxsort
; Line 372
  000db	8b f8		 mov	 edi, eax
  000dd	8b c2		 mov	 eax, edx
  000df	c1 ef 02	 shr	 edi, 2
  000e2	33 d2		 xor	 edx, edx
  000e4	8d 0c 3f	 lea	 ecx, DWORD PTR [edi+edi]
  000e7	f7 f1		 div	 ecx
  000e9	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  000ec	8b 7d 10	 mov	 edi, DWORD PTR _up$[ebp]
  000ef	03 c3		 add	 eax, ebx
  000f1	eb 05		 jmp	 SHORT $LN61@auxsort
$LN10@auxsort:
; Line 370
  000f3	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  000f6	d1 e8		 shr	 eax, 1
$LN61@auxsort:
; Line 373
  000f8	6a 00		 push	 0
  000fa	50		 push	 eax
  000fb	6a 01		 push	 1
  000fd	56		 push	 esi
  000fe	89 45 fc	 mov	 DWORD PTR _p$1$[ebp], eax
  00101	e8 00 00 00 00	 call	 _lua_geti
; Line 374
  00106	6a 00		 push	 0
  00108	53		 push	 ebx
  00109	6a 01		 push	 1
  0010b	56		 push	 esi
  0010c	e8 00 00 00 00	 call	 _lua_geti
; Line 375
  00111	6a 02		 push	 2
  00113	56		 push	 esi
  00114	e8 00 00 00 00	 call	 _lua_type
  00119	83 c4 28	 add	 esp, 40			; 00000028H
  0011c	85 c0		 test	 eax, eax
  0011e	75 11		 jne	 SHORT $LN28@auxsort
  00120	6a 01		 push	 1
  00122	6a ff		 push	 -1
  00124	6a fe		 push	 -2			; fffffffeH
  00126	56		 push	 esi
  00127	e8 00 00 00 00	 call	 _lua_compare
  0012c	83 c4 10	 add	 esp, 16			; 00000010H
  0012f	eb 3f		 jmp	 SHORT $LN27@auxsort
$LN28@auxsort:
  00131	6a 02		 push	 2
  00133	56		 push	 esi
  00134	e8 00 00 00 00	 call	 _lua_pushvalue
  00139	6a fd		 push	 -3			; fffffffdH
  0013b	56		 push	 esi
  0013c	e8 00 00 00 00	 call	 _lua_pushvalue
  00141	6a fd		 push	 -3			; fffffffdH
  00143	56		 push	 esi
  00144	e8 00 00 00 00	 call	 _lua_pushvalue
  00149	6a 00		 push	 0
  0014b	6a 00		 push	 0
  0014d	6a 01		 push	 1
  0014f	6a 02		 push	 2
  00151	56		 push	 esi
  00152	e8 00 00 00 00	 call	 _lua_callk
  00157	6a ff		 push	 -1
  00159	56		 push	 esi
  0015a	e8 00 00 00 00	 call	 _lua_toboolean
  0015f	6a fe		 push	 -2			; fffffffeH
  00161	56		 push	 esi
  00162	89 45 f8	 mov	 DWORD PTR $T2[ebp], eax
  00165	e8 00 00 00 00	 call	 _lua_settop
  0016a	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  0016d	83 c4 3c	 add	 esp, 60			; 0000003cH
$LN27@auxsort:
  00170	85 c0		 test	 eax, eax
  00172	74 20		 je	 SHORT $LN8@auxsort
; Line 376
  00174	6a 00		 push	 0
  00176	ff 75 fc	 push	 DWORD PTR _p$1$[ebp]
  00179	6a 01		 push	 1
  0017b	56		 push	 esi
  0017c	e8 00 00 00 00	 call	 _lua_seti
  00181	6a 00		 push	 0
  00183	53		 push	 ebx
  00184	6a 01		 push	 1
  00186	56		 push	 esi
  00187	e8 00 00 00 00	 call	 _lua_seti
  0018c	83 c4 20	 add	 esp, 32			; 00000020H
; Line 377
  0018f	e9 9e 00 00 00	 jmp	 $LN5@auxsort
$LN8@auxsort:
; Line 378
  00194	6a fe		 push	 -2			; fffffffeH
  00196	56		 push	 esi
  00197	e8 00 00 00 00	 call	 _lua_settop
; Line 379
  0019c	6a 00		 push	 0
  0019e	57		 push	 edi
  0019f	6a 01		 push	 1
  001a1	56		 push	 esi
  001a2	e8 00 00 00 00	 call	 _lua_geti
; Line 380
  001a7	6a 02		 push	 2
  001a9	56		 push	 esi
  001aa	e8 00 00 00 00	 call	 _lua_type
  001af	83 c4 20	 add	 esp, 32			; 00000020H
  001b2	85 c0		 test	 eax, eax
  001b4	75 11		 jne	 SHORT $LN34@auxsort
  001b6	6a 01		 push	 1
  001b8	6a fe		 push	 -2			; fffffffeH
  001ba	6a ff		 push	 -1
  001bc	56		 push	 esi
  001bd	e8 00 00 00 00	 call	 _lua_compare
  001c2	83 c4 10	 add	 esp, 16			; 00000010H
  001c5	eb 3f		 jmp	 SHORT $LN33@auxsort
$LN34@auxsort:
  001c7	6a 02		 push	 2
  001c9	56		 push	 esi
  001ca	e8 00 00 00 00	 call	 _lua_pushvalue
  001cf	6a fe		 push	 -2			; fffffffeH
  001d1	56		 push	 esi
  001d2	e8 00 00 00 00	 call	 _lua_pushvalue
  001d7	6a fc		 push	 -4			; fffffffcH
  001d9	56		 push	 esi
  001da	e8 00 00 00 00	 call	 _lua_pushvalue
  001df	6a 00		 push	 0
  001e1	6a 00		 push	 0
  001e3	6a 01		 push	 1
  001e5	6a 02		 push	 2
  001e7	56		 push	 esi
  001e8	e8 00 00 00 00	 call	 _lua_callk
  001ed	6a ff		 push	 -1
  001ef	56		 push	 esi
  001f0	e8 00 00 00 00	 call	 _lua_toboolean
  001f5	6a fe		 push	 -2			; fffffffeH
  001f7	56		 push	 esi
  001f8	89 45 f8	 mov	 DWORD PTR $T1[ebp], eax
  001fb	e8 00 00 00 00	 call	 _lua_settop
  00200	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]
  00203	83 c4 3c	 add	 esp, 60			; 0000003cH
$LN33@auxsort:
  00206	85 c0		 test	 eax, eax
  00208	74 1d		 je	 SHORT $LN6@auxsort
; Line 381
  0020a	6a 00		 push	 0
  0020c	ff 75 fc	 push	 DWORD PTR _p$1$[ebp]
  0020f	6a 01		 push	 1
  00211	56		 push	 esi
  00212	e8 00 00 00 00	 call	 _lua_seti
  00217	6a 00		 push	 0
  00219	57		 push	 edi
  0021a	6a 01		 push	 1
  0021c	56		 push	 esi
  0021d	e8 00 00 00 00	 call	 _lua_seti
  00222	83 c4 20	 add	 esp, 32			; 00000020H
; Line 382
  00225	eb 0b		 jmp	 SHORT $LN5@auxsort
$LN6@auxsort:
; Line 383
  00227	6a fd		 push	 -3			; fffffffdH
  00229	56		 push	 esi
  0022a	e8 00 00 00 00	 call	 _lua_settop
  0022f	83 c4 08	 add	 esp, 8
$LN5@auxsort:
; Line 385
  00232	83 7d f4 02	 cmp	 DWORD PTR tv371[ebp], 2
  00236	0f 84 bf 00 00
	00		 je	 $LN60@auxsort
; Line 387
  0023c	6a 00		 push	 0
  0023e	ff 75 fc	 push	 DWORD PTR _p$1$[ebp]
  00241	6a 01		 push	 1
  00243	56		 push	 esi
  00244	e8 00 00 00 00	 call	 _lua_geti
; Line 388
  00249	6a ff		 push	 -1
  0024b	56		 push	 esi
  0024c	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 389
  00251	6a 00		 push	 0
  00253	4f		 dec	 edi
  00254	57		 push	 edi
  00255	6a 01		 push	 1
  00257	56		 push	 esi
  00258	e8 00 00 00 00	 call	 _lua_geti
; Line 390
  0025d	6a 00		 push	 0
  0025f	ff 75 fc	 push	 DWORD PTR _p$1$[ebp]
  00262	6a 01		 push	 1
  00264	56		 push	 esi
  00265	e8 00 00 00 00	 call	 _lua_seti
  0026a	6a 00		 push	 0
  0026c	57		 push	 edi
  0026d	6a 01		 push	 1
  0026f	56		 push	 esi
  00270	e8 00 00 00 00	 call	 _lua_seti
; Line 391
  00275	8b 7d 10	 mov	 edi, DWORD PTR _up$[ebp]
  00278	83 c4 48	 add	 esp, 72			; 00000048H
  0027b	57		 push	 edi
  0027c	53		 push	 ebx
  0027d	56		 push	 esi
  0027e	e8 00 00 00 00	 call	 _partition
  00283	83 c4 0c	 add	 esp, 12			; 0000000cH
  00286	89 45 fc	 mov	 DWORD PTR _p$2$[ebp], eax
; Line 393
  00289	8b d7		 mov	 edx, edi
  0028b	8b c8		 mov	 ecx, eax
  0028d	2b d0		 sub	 edx, eax
  0028f	2b cb		 sub	 ecx, ebx
  00291	89 55 f8	 mov	 DWORD PTR tv369[ebp], edx
  00294	89 4d f4	 mov	 DWORD PTR _n$1$[ebp], ecx
; Line 394
  00297	ff 75 14	 push	 DWORD PTR _rnd$[ebp]
  0029a	3b ca		 cmp	 ecx, edx
  0029c	73 17		 jae	 SHORT $LN3@auxsort
  0029e	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  002a1	51		 push	 ecx
  002a2	53		 push	 ebx
  002a3	56		 push	 esi
  002a4	e8 00 00 00 00	 call	 _auxsort
; Line 396
  002a9	8b 5d fc	 mov	 ebx, DWORD PTR _p$2$[ebp]
  002ac	83 c4 10	 add	 esp, 16			; 00000010H
; Line 398
  002af	8b 4d f4	 mov	 ecx, DWORD PTR _n$1$[ebp]
  002b2	43		 inc	 ebx
  002b3	eb 16		 jmp	 SHORT $LN2@auxsort
$LN3@auxsort:
; Line 399
  002b5	57		 push	 edi
  002b6	40		 inc	 eax
  002b7	50		 push	 eax
  002b8	56		 push	 esi
  002b9	e8 00 00 00 00	 call	 _auxsort
; Line 401
  002be	8b 7d fc	 mov	 edi, DWORD PTR _p$2$[ebp]
  002c1	83 c4 10	 add	 esp, 16			; 00000010H
  002c4	8b 4d f8	 mov	 ecx, DWORD PTR tv369[ebp]
  002c7	4f		 dec	 edi
  002c8	89 7d 10	 mov	 DWORD PTR _up$[ebp], edi
$LN2@auxsort:
; Line 403
  002cb	8b c7		 mov	 eax, edi
  002cd	2b c3		 sub	 eax, ebx
  002cf	c1 e8 07	 shr	 eax, 7
  002d2	3b c1		 cmp	 eax, ecx
  002d4	76 1d		 jbe	 SHORT $LN1@auxsort
; Line 404
  002d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__clock
  002dc	6a 00		 push	 0
  002de	8b f8		 mov	 edi, eax
  002e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___time64
  002e6	03 c2		 add	 eax, edx
  002e8	83 c4 04	 add	 esp, 4
  002eb	03 c7		 add	 eax, edi
  002ed	8b 7d 10	 mov	 edi, DWORD PTR _up$[ebp]
  002f0	89 45 14	 mov	 DWORD PTR _rnd$[ebp], eax
$LN1@auxsort:
; Line 357
  002f3	3b df		 cmp	 ebx, edi
  002f5	0f 82 25 fd ff
	ff		 jb	 $LL16@auxsort
$LN60@auxsort:
  002fb	5f		 pop	 edi
  002fc	5e		 pop	 esi
  002fd	5b		 pop	 ebx
; Line 406
  002fe	8b e5		 mov	 esp, ebp
  00300	5d		 pop	 ebp
  00301	c3		 ret	 0
_auxsort ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _choosePivot
_TEXT	SEGMENT
_lo$ = 8						; size = 4
_up$ = 12						; size = 4
_rnd$ = 16						; size = 4
_choosePivot PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 344
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 346
  00003	8b 45 10	 mov	 eax, DWORD PTR _rnd$[ebp]
  00006	33 d2		 xor	 edx, edx
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR _up$[ebp]
  0000c	2b 7d 08	 sub	 edi, DWORD PTR _lo$[ebp]
  0000f	c1 ef 02	 shr	 edi, 2
  00012	8d 0c 3f	 lea	 ecx, DWORD PTR [edi+edi]
  00015	f7 f1		 div	 ecx
  00017	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  0001a	03 45 08	 add	 eax, DWORD PTR _lo$[ebp]
  0001d	5f		 pop	 edi
; Line 349
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
_choosePivot ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _partition
_TEXT	SEGMENT
$T1 = -4						; size = 4
_L$ = 8							; size = 4
$T2 = 12						; size = 4
_j$1$ = 12						; size = 4
_lo$ = 12						; size = 4
tv137 = 16						; size = 4
_up$ = 16						; size = 4
_partition PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 307
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; Line 309
  00004	8b 45 10	 mov	 eax, DWORD PTR _up$[ebp]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000c	48		 dec	 eax
  0000d	57		 push	 edi
  0000e	8b 7d 0c	 mov	 edi, DWORD PTR _lo$[ebp]
  00011	89 45 10	 mov	 DWORD PTR tv137[ebp], eax
  00014	89 45 0c	 mov	 DWORD PTR _j$1$[ebp], eax
$LL9@partition:
  00017	8b 5d 10	 mov	 ebx, DWORD PTR tv137[ebp]
  0001a	8d 9b 00 00 00
	00		 npad	 6
$LL7@partition:
; Line 313
  00020	6a 00		 push	 0
  00022	47		 inc	 edi
  00023	57		 push	 edi
  00024	6a 01		 push	 1
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 _lua_geti
  0002c	6a 02		 push	 2
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 _lua_type
  00034	83 c4 18	 add	 esp, 24			; 00000018H
  00037	85 c0		 test	 eax, eax
  00039	75 11		 jne	 SHORT $LN13@partition
  0003b	6a 01		 push	 1
  0003d	6a fe		 push	 -2			; fffffffeH
  0003f	6a ff		 push	 -1
  00041	56		 push	 esi
  00042	e8 00 00 00 00	 call	 _lua_compare
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	eb 3f		 jmp	 SHORT $LN12@partition
$LN13@partition:
  0004c	6a 02		 push	 2
  0004e	56		 push	 esi
  0004f	e8 00 00 00 00	 call	 _lua_pushvalue
  00054	6a fe		 push	 -2			; fffffffeH
  00056	56		 push	 esi
  00057	e8 00 00 00 00	 call	 _lua_pushvalue
  0005c	6a fc		 push	 -4			; fffffffcH
  0005e	56		 push	 esi
  0005f	e8 00 00 00 00	 call	 _lua_pushvalue
  00064	6a 00		 push	 0
  00066	6a 00		 push	 0
  00068	6a 01		 push	 1
  0006a	6a 02		 push	 2
  0006c	56		 push	 esi
  0006d	e8 00 00 00 00	 call	 _lua_callk
  00072	6a ff		 push	 -1
  00074	56		 push	 esi
  00075	e8 00 00 00 00	 call	 _lua_toboolean
  0007a	6a fe		 push	 -2			; fffffffeH
  0007c	56		 push	 esi
  0007d	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00080	e8 00 00 00 00	 call	 _lua_settop
  00085	8b 45 fc	 mov	 eax, DWORD PTR $T1[ebp]
  00088	83 c4 3c	 add	 esp, 60			; 0000003cH
$LN12@partition:
  0008b	85 c0		 test	 eax, eax
  0008d	74 22		 je	 SHORT $LN39@partition
; Line 314
  0008f	3b fb		 cmp	 edi, ebx
  00091	75 0e		 jne	 SHORT $LN5@partition
; Line 315
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@OFHMGIPD@invalid?5order?5function?5for?5sorti@
  00098	56		 push	 esi
  00099	e8 00 00 00 00	 call	 _luaL_error
  0009e	83 c4 08	 add	 esp, 8
$LN5@partition:
; Line 316
  000a1	6a fe		 push	 -2			; fffffffeH
  000a3	56		 push	 esi
  000a4	e8 00 00 00 00	 call	 _lua_settop
  000a9	83 c4 08	 add	 esp, 8
; Line 317
  000ac	e9 6f ff ff ff	 jmp	 $LL7@partition
$LN39@partition:
  000b1	8b 5d 0c	 mov	 ebx, DWORD PTR _j$1$[ebp]
$LL4@partition:
; Line 320
  000b4	6a 00		 push	 0
  000b6	4b		 dec	 ebx
  000b7	53		 push	 ebx
  000b8	6a 01		 push	 1
  000ba	56		 push	 esi
  000bb	e8 00 00 00 00	 call	 _lua_geti
  000c0	6a 02		 push	 2
  000c2	56		 push	 esi
  000c3	e8 00 00 00 00	 call	 _lua_type
  000c8	83 c4 18	 add	 esp, 24			; 00000018H
  000cb	85 c0		 test	 eax, eax
  000cd	75 11		 jne	 SHORT $LN17@partition
  000cf	6a 01		 push	 1
  000d1	6a ff		 push	 -1
  000d3	6a fd		 push	 -3			; fffffffdH
  000d5	56		 push	 esi
  000d6	e8 00 00 00 00	 call	 _lua_compare
  000db	83 c4 10	 add	 esp, 16			; 00000010H
  000de	eb 3f		 jmp	 SHORT $LN16@partition
$LN17@partition:
  000e0	6a 02		 push	 2
  000e2	56		 push	 esi
  000e3	e8 00 00 00 00	 call	 _lua_pushvalue
  000e8	6a fc		 push	 -4			; fffffffcH
  000ea	56		 push	 esi
  000eb	e8 00 00 00 00	 call	 _lua_pushvalue
  000f0	6a fd		 push	 -3			; fffffffdH
  000f2	56		 push	 esi
  000f3	e8 00 00 00 00	 call	 _lua_pushvalue
  000f8	6a 00		 push	 0
  000fa	6a 00		 push	 0
  000fc	6a 01		 push	 1
  000fe	6a 02		 push	 2
  00100	56		 push	 esi
  00101	e8 00 00 00 00	 call	 _lua_callk
  00106	6a ff		 push	 -1
  00108	56		 push	 esi
  00109	e8 00 00 00 00	 call	 _lua_toboolean
  0010e	6a fe		 push	 -2			; fffffffeH
  00110	56		 push	 esi
  00111	89 45 0c	 mov	 DWORD PTR $T2[ebp], eax
  00114	e8 00 00 00 00	 call	 _lua_settop
  00119	8b 45 0c	 mov	 eax, DWORD PTR $T2[ebp]
  0011c	83 c4 3c	 add	 esp, 60			; 0000003cH
$LN16@partition:
  0011f	85 c0		 test	 eax, eax
  00121	74 22		 je	 SHORT $LN3@partition
; Line 321
  00123	3b df		 cmp	 ebx, edi
  00125	73 0e		 jae	 SHORT $LN2@partition
; Line 322
  00127	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@OFHMGIPD@invalid?5order?5function?5for?5sorti@
  0012c	56		 push	 esi
  0012d	e8 00 00 00 00	 call	 _luaL_error
  00132	83 c4 08	 add	 esp, 8
$LN2@partition:
; Line 323
  00135	6a fe		 push	 -2			; fffffffeH
  00137	56		 push	 esi
  00138	e8 00 00 00 00	 call	 _lua_settop
  0013d	83 c4 08	 add	 esp, 8
; Line 324
  00140	e9 6f ff ff ff	 jmp	 $LL4@partition
$LN3@partition:
  00145	89 5d 0c	 mov	 DWORD PTR _j$1$[ebp], ebx
; Line 326
  00148	3b df		 cmp	 ebx, edi
  0014a	72 1e		 jb	 SHORT $LN28@partition
; Line 334
  0014c	6a 00		 push	 0
  0014e	57		 push	 edi
  0014f	6a 01		 push	 1
  00151	56		 push	 esi
  00152	e8 00 00 00 00	 call	 _lua_seti
  00157	6a 00		 push	 0
  00159	53		 push	 ebx
  0015a	6a 01		 push	 1
  0015c	56		 push	 esi
  0015d	e8 00 00 00 00	 call	 _lua_seti
  00162	83 c4 20	 add	 esp, 32			; 00000020H
; Line 335
  00165	e9 ad fe ff ff	 jmp	 $LL9@partition
$LN28@partition:
; Line 328
  0016a	6a fe		 push	 -2			; fffffffeH
  0016c	56		 push	 esi
  0016d	e8 00 00 00 00	 call	 _lua_settop
; Line 330
  00172	6a 00		 push	 0
  00174	ff 75 10	 push	 DWORD PTR tv137[ebp]
  00177	6a 01		 push	 1
  00179	56		 push	 esi
  0017a	e8 00 00 00 00	 call	 _lua_seti
  0017f	6a 00		 push	 0
  00181	57		 push	 edi
  00182	6a 01		 push	 1
  00184	56		 push	 esi
  00185	e8 00 00 00 00	 call	 _lua_seti
  0018a	83 c4 28	 add	 esp, 40			; 00000028H
; Line 331
  0018d	8b c7		 mov	 eax, edi
  0018f	5f		 pop	 edi
  00190	5e		 pop	 esi
  00191	5b		 pop	 ebx
; Line 336
  00192	8b e5		 mov	 esp, ebp
  00194	5d		 pop	 ebp
  00195	c3		 ret	 0
_partition ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _sort_comp
_TEXT	SEGMENT
_L$ = 8							; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
_sort_comp PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 283
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
; Line 284
  00004	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00007	6a 02		 push	 2
  00009	57		 push	 edi
  0000a	e8 00 00 00 00	 call	 _lua_type
  0000f	83 c4 08	 add	 esp, 8
  00012	85 c0		 test	 eax, eax
  00014	75 14		 jne	 SHORT $LN2@sort_comp
; Line 285
  00016	6a 01		 push	 1
  00018	ff 75 10	 push	 DWORD PTR _b$[ebp]
  0001b	ff 75 0c	 push	 DWORD PTR _a$[ebp]
  0001e	57		 push	 edi
  0001f	e8 00 00 00 00	 call	 _lua_compare
  00024	83 c4 10	 add	 esp, 16			; 00000010H
  00027	5f		 pop	 edi
; Line 296
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN2@sort_comp:
  0002a	56		 push	 esi
; Line 288
  0002b	6a 02		 push	 2
  0002d	57		 push	 edi
  0002e	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 289
  00033	8b 45 0c	 mov	 eax, DWORD PTR _a$[ebp]
  00036	48		 dec	 eax
  00037	50		 push	 eax
  00038	57		 push	 edi
  00039	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 290
  0003e	8b 45 10	 mov	 eax, DWORD PTR _b$[ebp]
  00041	83 c0 fe	 add	 eax, -2			; fffffffeH
  00044	50		 push	 eax
  00045	57		 push	 edi
  00046	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 291
  0004b	6a 00		 push	 0
  0004d	6a 00		 push	 0
  0004f	6a 01		 push	 1
  00051	6a 02		 push	 2
  00053	57		 push	 edi
  00054	e8 00 00 00 00	 call	 _lua_callk
; Line 292
  00059	6a ff		 push	 -1
  0005b	57		 push	 edi
  0005c	e8 00 00 00 00	 call	 _lua_toboolean
; Line 293
  00061	6a fe		 push	 -2			; fffffffeH
  00063	57		 push	 edi
  00064	8b f0		 mov	 esi, eax
  00066	e8 00 00 00 00	 call	 _lua_settop
  0006b	83 c4 3c	 add	 esp, 60			; 0000003cH
; Line 294
  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5f		 pop	 edi
; Line 296
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
_sort_comp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _set2
_TEXT	SEGMENT
_L$ = 8							; size = 4
_i$ = 12						; size = 4
_j$ = 16						; size = 4
_set2	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 273
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 274
  00003	6a 00		 push	 0
  00005	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  00008	6a 01		 push	 1
  0000a	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000d	e8 00 00 00 00	 call	 _lua_seti
; Line 275
  00012	6a 00		 push	 0
  00014	ff 75 10	 push	 DWORD PTR _j$[ebp]
  00017	6a 01		 push	 1
  00019	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001c	e8 00 00 00 00	 call	 _lua_seti
  00021	83 c4 20	 add	 esp, 32			; 00000020H
; Line 276
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
_set2	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _l_randomizePivot
_TEXT	SEGMENT
_l_randomizePivot PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 254
  00000	56		 push	 esi
; Line 255
  00001	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__clock
; Line 256
  00007	6a 00		 push	 0
  00009	8b f0		 mov	 esi, eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___time64
  00011	83 c4 04	 add	 esp, 4
; Line 262
  00014	03 c2		 add	 eax, edx
  00016	03 c6		 add	 eax, esi
  00018	5e		 pop	 esi
; Line 264
  00019	c3		 ret	 0
_l_randomizePivot ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT
; File e:\microsoft visual studio 12.0\vc\include\time.inl
; Line 132
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 134
  00003	5d		 pop	 ebp
; Line 133
  00004	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp___time64
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _unpack
_TEXT	SEGMENT
_n$1$ = -12						; size = 4
_e$2$ = -8						; size = 4
_e$1$ = -4						; size = 4
_L$ = 8							; size = 4
_unpack	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 207
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	53		 push	 ebx
; Line 209
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	6a 00		 push	 0
  0000e	6a 01		 push	 1
  00010	6a 02		 push	 2
  00012	53		 push	 ebx
  00013	e8 00 00 00 00	 call	 _luaL_optinteger
; Line 210
  00018	6a 03		 push	 3
  0001a	53		 push	 ebx
  0001b	8b f0		 mov	 esi, eax
  0001d	8b fa		 mov	 edi, edx
  0001f	e8 00 00 00 00	 call	 _lua_type
  00024	83 c4 18	 add	 esp, 24			; 00000018H
  00027	85 c0		 test	 eax, eax
  00029	7f 0f		 jg	 SHORT $LN9@unpack
  0002b	6a 01		 push	 1
  0002d	53		 push	 ebx
  0002e	e8 00 00 00 00	 call	 _luaL_len
  00033	8b ca		 mov	 ecx, edx
  00035	89 4d f8	 mov	 DWORD PTR _e$2$[ebp], ecx
  00038	eb 0d		 jmp	 SHORT $LN23@unpack
$LN9@unpack:
  0003a	6a 03		 push	 3
  0003c	53		 push	 ebx
  0003d	e8 00 00 00 00	 call	 _luaL_checkinteger
  00042	8b ca		 mov	 ecx, edx
  00044	89 55 f8	 mov	 DWORD PTR _e$2$[ebp], edx
$LN23@unpack:
  00047	83 c4 08	 add	 esp, 8
  0004a	89 45 fc	 mov	 DWORD PTR _e$1$[ebp], eax
; Line 211
  0004d	3b f9		 cmp	 edi, ecx
  0004f	7c 0f		 jl	 SHORT $LN6@unpack
  00051	7f 04		 jg	 SHORT $LN15@unpack
  00053	3b f0		 cmp	 esi, eax
  00055	76 09		 jbe	 SHORT $LN6@unpack
$LN15@unpack:
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	33 c0		 xor	 eax, eax
  0005b	5b		 pop	 ebx
; Line 220
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
$LN6@unpack:
; Line 212
  00060	2b c6		 sub	 eax, esi
  00062	1b cf		 sbb	 ecx, edi
; Line 213
  00064	85 c9		 test	 ecx, ecx
  00066	77 65		 ja	 SHORT $LN4@unpack
  00068	72 07		 jb	 SHORT $LN16@unpack
  0006a	3d ff ff ff 7f	 cmp	 eax, 2147483647		; 7fffffffH
  0006f	73 5c		 jae	 SHORT $LN4@unpack
$LN16@unpack:
  00071	83 c0 01	 add	 eax, 1
  00074	50		 push	 eax
  00075	53		 push	 ebx
  00076	89 45 f4	 mov	 DWORD PTR _n$1$[ebp], eax
  00079	e8 00 00 00 00	 call	 _lua_checkstack
  0007e	83 c4 08	 add	 esp, 8
  00081	85 c0		 test	 eax, eax
  00083	74 48		 je	 SHORT $LN4@unpack
; Line 215
  00085	8b 45 f8	 mov	 eax, DWORD PTR _e$2$[ebp]
  00088	3b f8		 cmp	 edi, eax
  0008a	7f 28		 jg	 SHORT $LN21@unpack
  0008c	7c 05		 jl	 SHORT $LL20@unpack
  0008e	3b 75 fc	 cmp	 esi, DWORD PTR _e$1$[ebp]
  00091	73 21		 jae	 SHORT $LN21@unpack
$LL20@unpack:
; Line 216
  00093	57		 push	 edi
  00094	56		 push	 esi
  00095	6a 01		 push	 1
  00097	53		 push	 ebx
  00098	e8 00 00 00 00	 call	 _lua_geti
  0009d	8b 45 f8	 mov	 eax, DWORD PTR _e$2$[ebp]
  000a0	83 c4 10	 add	 esp, 16			; 00000010H
  000a3	83 c6 01	 add	 esi, 1
  000a6	83 d7 00	 adc	 edi, 0
  000a9	3b f8		 cmp	 edi, eax
  000ab	7c e6		 jl	 SHORT $LL20@unpack
; Line 215
  000ad	7f 05		 jg	 SHORT $LN21@unpack
  000af	3b 75 fc	 cmp	 esi, DWORD PTR _e$1$[ebp]
  000b2	72 df		 jb	 SHORT $LL20@unpack
$LN21@unpack:
; Line 218
  000b4	50		 push	 eax
  000b5	ff 75 fc	 push	 DWORD PTR _e$1$[ebp]
  000b8	6a 01		 push	 1
  000ba	53		 push	 ebx
  000bb	e8 00 00 00 00	 call	 _lua_geti
; Line 219
  000c0	8b 45 f4	 mov	 eax, DWORD PTR _n$1$[ebp]
  000c3	83 c4 10	 add	 esp, 16			; 00000010H
  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
; Line 220
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c3		 ret	 0
$LN4@unpack:
; Line 214
  000cd	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@EDBCOFHM@too?5many?5results?5to?5unpack?$AA@
  000d2	53		 push	 ebx
  000d3	e8 00 00 00 00	 call	 _luaL_error
  000d8	83 c4 08	 add	 esp, 8
  000db	5f		 pop	 edi
  000dc	5e		 pop	 esi
  000dd	5b		 pop	 ebx
; Line 220
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c3		 ret	 0
_unpack	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _pack
_TEXT	SEGMENT
_L$ = 8							; size = 4
_pack	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 194
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
; Line 196
  00006	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00009	57		 push	 edi
  0000a	e8 00 00 00 00	 call	 _lua_gettop
  0000f	8b d8		 mov	 ebx, eax
; Line 197
  00011	6a 01		 push	 1
  00013	53		 push	 ebx
  00014	57		 push	 edi
  00015	e8 00 00 00 00	 call	 _lua_createtable
; Line 198
  0001a	6a 01		 push	 1
  0001c	6a 01		 push	 1
  0001e	57		 push	 edi
  0001f	e8 00 00 00 00	 call	 _lua_rotate
  00024	83 c4 1c	 add	 esp, 28			; 0000001cH
; Line 199
  00027	8b f3		 mov	 esi, ebx
  00029	83 fb 01	 cmp	 ebx, 1
  0002c	7c 18		 jl	 SHORT $LN1@pack
  0002e	8b ff		 npad	 2
$LL3@pack:
; Line 200
  00030	8b c6		 mov	 eax, esi
  00032	99		 cdq
  00033	52		 push	 edx
  00034	50		 push	 eax
  00035	6a 01		 push	 1
  00037	57		 push	 edi
  00038	e8 00 00 00 00	 call	 _lua_seti
  0003d	4e		 dec	 esi
  0003e	83 c4 10	 add	 esp, 16			; 00000010H
  00041	83 fe 01	 cmp	 esi, 1
  00044	7d ea		 jge	 SHORT $LL3@pack
$LN1@pack:
; Line 201
  00046	8b c3		 mov	 eax, ebx
  00048	99		 cdq
  00049	52		 push	 edx
  0004a	50		 push	 eax
  0004b	57		 push	 edi
  0004c	e8 00 00 00 00	 call	 _lua_pushinteger
; Line 202
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_01EFFIKLCJ@n?$AA@
  00056	6a 01		 push	 1
  00058	57		 push	 edi
  00059	e8 00 00 00 00	 call	 _lua_setfield
  0005e	83 c4 18	 add	 esp, 24			; 00000018H
; Line 203
  00061	b8 01 00 00 00	 mov	 eax, 1
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
; Line 204
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
_pack	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _tconcat
_TEXT	SEGMENT
_sep$1$ = -8228						; size = 4
_lsep$ = -8224						; size = 4
_last$2$ = -8220					; size = 4
_last$1$ = -8216					; size = 4
_b$ = -8212						; size = 8208
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_tconcat PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 169
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 24 20 00 00	 mov	 eax, 8228		; 00002024H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0001c	57		 push	 edi
; Line 171
  0001d	6a 01		 push	 1
  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 _lua_type
  00025	83 c4 08	 add	 esp, 8
  00028	83 f8 05	 cmp	 eax, 5
  0002b	74 60		 je	 SHORT $LN9@tconcat
  0002d	6a 01		 push	 1
  0002f	56		 push	 esi
  00030	e8 00 00 00 00	 call	 _lua_getmetatable
  00035	83 c4 08	 add	 esp, 8
  00038	85 c0		 test	 eax, eax
  0003a	74 41		 je	 SHORT $LN13@tconcat
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_07NHABFFHN@__index?$AA@
  00041	56		 push	 esi
  00042	e8 00 00 00 00	 call	 _lua_pushstring
  00047	6a fe		 push	 -2			; fffffffeH
  00049	56		 push	 esi
  0004a	e8 00 00 00 00	 call	 _lua_rawget
  0004f	83 c4 10	 add	 esp, 16			; 00000010H
  00052	85 c0		 test	 eax, eax
  00054	74 27		 je	 SHORT $LN13@tconcat
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_05MNDELLDN@__len?$AA@
  0005b	56		 push	 esi
  0005c	e8 00 00 00 00	 call	 _lua_pushstring
  00061	6a fd		 push	 -3			; fffffffdH
  00063	56		 push	 esi
  00064	e8 00 00 00 00	 call	 _lua_rawget
  00069	83 c4 10	 add	 esp, 16			; 00000010H
  0006c	85 c0		 test	 eax, eax
  0006e	74 0d		 je	 SHORT $LN13@tconcat
  00070	6a fc		 push	 -4			; fffffffcH
  00072	56		 push	 esi
  00073	e8 00 00 00 00	 call	 _lua_settop
  00078	83 c4 08	 add	 esp, 8
  0007b	eb 10		 jmp	 SHORT $LN9@tconcat
$LN13@tconcat:
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DAKFMHIM@table?5expected?$AA@
  00082	6a 01		 push	 1
  00084	56		 push	 esi
  00085	e8 00 00 00 00	 call	 _luaL_argerror
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN9@tconcat:
  0008d	6a 01		 push	 1
  0008f	56		 push	 esi
  00090	e8 00 00 00 00	 call	 _luaL_len
  00095	89 85 e8 df ff
	ff		 mov	 DWORD PTR _last$1$[ebp], eax
; Line 173
  0009b	8d 85 e0 df ff
	ff		 lea	 eax, DWORD PTR _lsep$[ebp]
  000a1	50		 push	 eax
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  000a7	6a 02		 push	 2
  000a9	56		 push	 esi
  000aa	89 95 e4 df ff
	ff		 mov	 DWORD PTR _last$2$[ebp], edx
  000b0	e8 00 00 00 00	 call	 _luaL_optlstring
; Line 174
  000b5	6a 00		 push	 0
  000b7	6a 01		 push	 1
  000b9	6a 03		 push	 3
  000bb	56		 push	 esi
  000bc	89 85 dc df ff
	ff		 mov	 DWORD PTR _sep$1$[ebp], eax
  000c2	e8 00 00 00 00	 call	 _luaL_optinteger
; Line 175
  000c7	6a 04		 push	 4
  000c9	56		 push	 esi
  000ca	8b f8		 mov	 edi, eax
  000cc	8b da		 mov	 ebx, edx
  000ce	e8 00 00 00 00	 call	 _lua_type
  000d3	83 c4 30	 add	 esp, 48			; 00000030H
  000d6	85 c0		 test	 eax, eax
  000d8	7e 17		 jle	 SHORT $LN8@tconcat
  000da	6a 04		 push	 4
  000dc	56		 push	 esi
  000dd	e8 00 00 00 00	 call	 _luaL_checkinteger
  000e2	83 c4 08	 add	 esp, 8
  000e5	89 85 e8 df ff
	ff		 mov	 DWORD PTR _last$1$[ebp], eax
  000eb	89 95 e4 df ff
	ff		 mov	 DWORD PTR _last$2$[ebp], edx
$LN8@tconcat:
; Line 176
  000f1	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _b$[ebp]
  000f7	50		 push	 eax
  000f8	56		 push	 esi
  000f9	e8 00 00 00 00	 call	 _luaL_buffinit
; Line 177
  000fe	8b 8d e4 df ff
	ff		 mov	 ecx, DWORD PTR _last$2$[ebp]
  00104	83 c4 08	 add	 esp, 8
  00107	3b d9		 cmp	 ebx, ecx
  00109	0f 8f 92 00 00
	00		 jg	 $LN38@tconcat
  0010f	7c 0f		 jl	 SHORT $LL36@tconcat
  00111	8b 85 e8 df ff
	ff		 mov	 eax, DWORD PTR _last$1$[ebp]
  00117	3b f8		 cmp	 edi, eax
  00119	0f 83 8a 00 00
	00		 jae	 $LN41@tconcat
  0011f	90		 npad	 1
$LL36@tconcat:
; Line 178
  00120	53		 push	 ebx
  00121	57		 push	 edi
  00122	6a 01		 push	 1
  00124	56		 push	 esi
  00125	e8 00 00 00 00	 call	 _lua_geti
  0012a	6a ff		 push	 -1
  0012c	56		 push	 esi
  0012d	e8 00 00 00 00	 call	 _lua_isstring
  00132	83 c4 18	 add	 esp, 24			; 00000018H
  00135	85 c0		 test	 eax, eax
  00137	75 23		 jne	 SHORT $LN23@tconcat
  00139	53		 push	 ebx
  0013a	57		 push	 edi
  0013b	6a ff		 push	 -1
  0013d	56		 push	 esi
  0013e	e8 00 00 00 00	 call	 _lua_type
  00143	50		 push	 eax
  00144	56		 push	 esi
  00145	e8 00 00 00 00	 call	 _lua_typename
  0014a	83 c4 10	 add	 esp, 16			; 00000010H
  0014d	50		 push	 eax
  0014e	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@OJJECDJJ@invalid?5value?5?$CI?$CFs?$CJ?5at?5index?5?$CFd?5i@
  00153	56		 push	 esi
  00154	e8 00 00 00 00	 call	 _luaL_error
  00159	83 c4 14	 add	 esp, 20			; 00000014H
$LN23@tconcat:
  0015c	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _b$[ebp]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 _luaL_addvalue
; Line 179
  00168	ff b5 e0 df ff
	ff		 push	 DWORD PTR _lsep$[ebp]
  0016e	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _b$[ebp]
  00174	ff b5 dc df ff
	ff		 push	 DWORD PTR _sep$1$[ebp]
  0017a	50		 push	 eax
  0017b	e8 00 00 00 00	 call	 _luaL_addlstring
  00180	8b 8d e4 df ff
	ff		 mov	 ecx, DWORD PTR _last$2$[ebp]
  00186	83 c4 10	 add	 esp, 16			; 00000010H
  00189	83 c7 01	 add	 edi, 1
  0018c	83 d3 00	 adc	 ebx, 0
  0018f	3b d9		 cmp	 ebx, ecx
  00191	7c 8d		 jl	 SHORT $LL36@tconcat
; Line 177
  00193	8b 85 e8 df ff
	ff		 mov	 eax, DWORD PTR _last$1$[ebp]
  00199	7f 0c		 jg	 SHORT $LN34@tconcat
  0019b	3b f8		 cmp	 edi, eax
  0019d	72 81		 jb	 SHORT $LL36@tconcat
  0019f	eb 06		 jmp	 SHORT $LN34@tconcat
$LN38@tconcat:
  001a1	8b 85 e8 df ff
	ff		 mov	 eax, DWORD PTR _last$1$[ebp]
$LN34@tconcat:
; Line 181
  001a7	3b f8		 cmp	 edi, eax
$LN41@tconcat:
  001a9	75 4f		 jne	 SHORT $LN27@tconcat
  001ab	3b d9		 cmp	 ebx, ecx
  001ad	75 4b		 jne	 SHORT $LN27@tconcat
; Line 182
  001af	53		 push	 ebx
  001b0	57		 push	 edi
  001b1	6a 01		 push	 1
  001b3	56		 push	 esi
  001b4	e8 00 00 00 00	 call	 _lua_geti
  001b9	6a ff		 push	 -1
  001bb	56		 push	 esi
  001bc	e8 00 00 00 00	 call	 _lua_isstring
  001c1	83 c4 18	 add	 esp, 24			; 00000018H
  001c4	85 c0		 test	 eax, eax
  001c6	75 23		 jne	 SHORT $LN26@tconcat
  001c8	53		 push	 ebx
  001c9	57		 push	 edi
  001ca	6a ff		 push	 -1
  001cc	56		 push	 esi
  001cd	e8 00 00 00 00	 call	 _lua_type
  001d2	50		 push	 eax
  001d3	56		 push	 esi
  001d4	e8 00 00 00 00	 call	 _lua_typename
  001d9	83 c4 10	 add	 esp, 16			; 00000010H
  001dc	50		 push	 eax
  001dd	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@OJJECDJJ@invalid?5value?5?$CI?$CFs?$CJ?5at?5index?5?$CFd?5i@
  001e2	56		 push	 esi
  001e3	e8 00 00 00 00	 call	 _luaL_error
  001e8	83 c4 14	 add	 esp, 20			; 00000014H
$LN26@tconcat:
  001eb	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _b$[ebp]
  001f1	50		 push	 eax
  001f2	e8 00 00 00 00	 call	 _luaL_addvalue
  001f7	83 c4 04	 add	 esp, 4
$LN27@tconcat:
; Line 183
  001fa	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _b$[ebp]
  00200	50		 push	 eax
  00201	e8 00 00 00 00	 call	 _luaL_pushresult
; Line 185
  00206	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00209	83 c4 04	 add	 esp, 4
  0020c	33 cd		 xor	 ecx, ebp
  0020e	b8 01 00 00 00	 mov	 eax, 1
  00213	5f		 pop	 edi
  00214	5e		 pop	 esi
  00215	5b		 pop	 ebx
  00216	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0021b	8b e5		 mov	 esp, ebp
  0021d	5d		 pop	 ebp
  0021e	c3		 ret	 0
_tconcat ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _addfield
_TEXT	SEGMENT
_L$ = 8							; size = 4
_b$ = 12						; size = 4
_i$ = 16						; size = 8
_addfield PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 160
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 161
  00004	ff 75 14	 push	 DWORD PTR _i$[ebp+4]
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	ff 75 10	 push	 DWORD PTR _i$[ebp]
  0000d	6a 01		 push	 1
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 _lua_geti
; Line 162
  00015	6a ff		 push	 -1
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 _lua_isstring
  0001d	83 c4 18	 add	 esp, 24			; 00000018H
  00020	85 c0		 test	 eax, eax
  00022	75 27		 jne	 SHORT $LN1@addfield
; Line 164
  00024	ff 75 14	 push	 DWORD PTR _i$[ebp+4]
  00027	ff 75 10	 push	 DWORD PTR _i$[ebp]
  0002a	6a ff		 push	 -1
  0002c	56		 push	 esi
  0002d	e8 00 00 00 00	 call	 _lua_type
  00032	50		 push	 eax
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 _lua_typename
  00039	83 c4 10	 add	 esp, 16			; 00000010H
  0003c	50		 push	 eax
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@OJJECDJJ@invalid?5value?5?$CI?$CFs?$CJ?5at?5index?5?$CFd?5i@
  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 _luaL_error
  00048	83 c4 14	 add	 esp, 20			; 00000014H
$LN1@addfield:
; Line 165
  0004b	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  0004e	e8 00 00 00 00	 call	 _luaL_addvalue
  00053	83 c4 04	 add	 esp, 4
  00056	5e		 pop	 esi
; Line 166
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
_addfield ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _tmove
_TEXT	SEGMENT
_i$1 = -36						; size = 8
tv209 = -32						; size = 4
_i$2$ = -28						; size = 4
_e$2$ = -28						; size = 4
_f$2$ = -24						; size = 4
_i$4$ = -20						; size = 4
_e$1$ = -20						; size = 4
_t$2$ = -16						; size = 4
_t$1$ = -12						; size = 4
_f$1$ = -8						; size = 4
_tt$1$ = -4						; size = 4
_L$ = 8							; size = 4
_tmove	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 128
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	53		 push	 ebx
  00007	56		 push	 esi
; Line 129
  00008	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000b	57		 push	 edi
  0000c	6a 02		 push	 2
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 _luaL_checkinteger
  00014	8b d8		 mov	 ebx, eax
  00016	8b fa		 mov	 edi, edx
; Line 130
  00018	6a 03		 push	 3
  0001a	56		 push	 esi
  0001b	89 5d f8	 mov	 DWORD PTR _f$1$[ebp], ebx
  0001e	89 7d e8	 mov	 DWORD PTR _f$2$[ebp], edi
  00021	e8 00 00 00 00	 call	 _luaL_checkinteger
; Line 131
  00026	6a 04		 push	 4
  00028	56		 push	 esi
  00029	89 45 ec	 mov	 DWORD PTR _e$1$[ebp], eax
  0002c	89 55 e4	 mov	 DWORD PTR _e$2$[ebp], edx
  0002f	e8 00 00 00 00	 call	 _luaL_checkinteger
; Line 132
  00034	6a 05		 push	 5
  00036	56		 push	 esi
  00037	89 45 f4	 mov	 DWORD PTR _t$1$[ebp], eax
  0003a	89 55 f0	 mov	 DWORD PTR _t$2$[ebp], edx
  0003d	e8 00 00 00 00	 call	 _lua_type
  00042	33 c9		 xor	 ecx, ecx
  00044	85 c0		 test	 eax, eax
; Line 133
  00046	6a 01		 push	 1
  00048	0f 9f c1	 setg	 cl
  0004b	56		 push	 esi
  0004c	8d 0c 8d 01 00
	00 00		 lea	 ecx, DWORD PTR [ecx*4+1]
  00053	89 4d fc	 mov	 DWORD PTR _tt$1$[ebp], ecx
  00056	e8 00 00 00 00	 call	 _lua_type
  0005b	83 c4 28	 add	 esp, 40			; 00000028H
  0005e	83 f8 05	 cmp	 eax, 5
  00061	74 46		 je	 SHORT $LN15@tmove
  00063	6a 01		 push	 1
  00065	56		 push	 esi
  00066	e8 00 00 00 00	 call	 _lua_getmetatable
  0006b	83 c4 08	 add	 esp, 8
  0006e	85 c0		 test	 eax, eax
  00070	74 27		 je	 SHORT $LN19@tmove
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_07NHABFFHN@__index?$AA@
  00077	56		 push	 esi
  00078	e8 00 00 00 00	 call	 _lua_pushstring
  0007d	6a fe		 push	 -2			; fffffffeH
  0007f	56		 push	 esi
  00080	e8 00 00 00 00	 call	 _lua_rawget
  00085	83 c4 10	 add	 esp, 16			; 00000010H
  00088	85 c0		 test	 eax, eax
  0008a	74 0d		 je	 SHORT $LN19@tmove
  0008c	6a fd		 push	 -3			; fffffffdH
  0008e	56		 push	 esi
  0008f	e8 00 00 00 00	 call	 _lua_settop
  00094	83 c4 08	 add	 esp, 8
  00097	eb 10		 jmp	 SHORT $LN15@tmove
$LN19@tmove:
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DAKFMHIM@table?5expected?$AA@
  0009e	6a 01		 push	 1
  000a0	56		 push	 esi
  000a1	e8 00 00 00 00	 call	 _luaL_argerror
  000a6	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN15@tmove:
; Line 134
  000a9	ff 75 fc	 push	 DWORD PTR _tt$1$[ebp]
  000ac	56		 push	 esi
  000ad	e8 00 00 00 00	 call	 _lua_type
  000b2	83 c4 08	 add	 esp, 8
  000b5	83 f8 05	 cmp	 eax, 5
  000b8	74 48		 je	 SHORT $LN29@tmove
  000ba	ff 75 fc	 push	 DWORD PTR _tt$1$[ebp]
  000bd	56		 push	 esi
  000be	e8 00 00 00 00	 call	 _lua_getmetatable
  000c3	83 c4 08	 add	 esp, 8
  000c6	85 c0		 test	 eax, eax
  000c8	74 27		 je	 SHORT $LN33@tmove
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GADKNKH@__newindex?$AA@
  000cf	56		 push	 esi
  000d0	e8 00 00 00 00	 call	 _lua_pushstring
  000d5	6a fe		 push	 -2			; fffffffeH
  000d7	56		 push	 esi
  000d8	e8 00 00 00 00	 call	 _lua_rawget
  000dd	83 c4 10	 add	 esp, 16			; 00000010H
  000e0	85 c0		 test	 eax, eax
  000e2	74 0d		 je	 SHORT $LN33@tmove
  000e4	6a fd		 push	 -3			; fffffffdH
  000e6	56		 push	 esi
  000e7	e8 00 00 00 00	 call	 _lua_settop
  000ec	83 c4 08	 add	 esp, 8
  000ef	eb 11		 jmp	 SHORT $LN29@tmove
$LN33@tmove:
  000f1	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DAKFMHIM@table?5expected?$AA@
  000f6	ff 75 fc	 push	 DWORD PTR _tt$1$[ebp]
  000f9	56		 push	 esi
  000fa	e8 00 00 00 00	 call	 _luaL_argerror
  000ff	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN29@tmove:
; Line 135
  00102	8b 55 e4	 mov	 edx, DWORD PTR _e$2$[ebp]
  00105	3b d7		 cmp	 edx, edi
  00107	0f 8c 69 01 00
	00		 jl	 $LN65@tmove
  0010d	8b 4d ec	 mov	 ecx, DWORD PTR _e$1$[ebp]
  00110	7f 08		 jg	 SHORT $LN51@tmove
  00112	3b cb		 cmp	 ecx, ebx
  00114	0f 82 5c 01 00
	00		 jb	 $LN65@tmove
$LN51@tmove:
; Line 138
  0011a	85 ff		 test	 edi, edi
  0011c	7f 2a		 jg	 SHORT $LN13@tmove
  0011e	7c 04		 jl	 SHORT $LN52@tmove
  00120	85 db		 test	 ebx, ebx
  00122	75 24		 jne	 SHORT $LN13@tmove
$LN52@tmove:
  00124	83 c3 ff	 add	 ebx, -1
  00127	8b c7		 mov	 eax, edi
  00129	15 ff ff ff 7f	 adc	 eax, 2147483647		; 7fffffffH
  0012e	3b d0		 cmp	 edx, eax
  00130	7c 16		 jl	 SHORT $LN13@tmove
  00132	7f 04		 jg	 SHORT $LN53@tmove
  00134	3b cb		 cmp	 ecx, ebx
  00136	72 10		 jb	 SHORT $LN13@tmove
$LN53@tmove:
  00138	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@ICIDIFLD@too?5many?5elements?5to?5move?$AA@
  0013d	6a 03		 push	 3
  0013f	56		 push	 esi
  00140	e8 00 00 00 00	 call	 _luaL_argerror
  00145	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN13@tmove:
; Line 139
  00148	8b 7d ec	 mov	 edi, DWORD PTR _e$1$[ebp]
  0014b	8b 55 f8	 mov	 edx, DWORD PTR _f$1$[ebp]
  0014e	2b fa		 sub	 edi, edx
  00150	8b 5d e4	 mov	 ebx, DWORD PTR _e$2$[ebp]
  00153	8b 4d e8	 mov	 ecx, DWORD PTR _f$2$[ebp]
  00156	1b d9		 sbb	 ebx, ecx
  00158	83 c7 01	 add	 edi, 1
  0015b	83 d3 00	 adc	 ebx, 0
; Line 141
  0015e	33 c0		 xor	 eax, eax
  00160	2b c7		 sub	 eax, edi
  00162	89 45 e0	 mov	 DWORD PTR tv209[ebp], eax
  00165	b8 00 00 00 80	 mov	 eax, -2147483648	; 80000000H
  0016a	1b c3		 sbb	 eax, ebx
  0016c	39 45 f0	 cmp	 DWORD PTR _t$2$[ebp], eax
  0016f	7c 20		 jl	 SHORT $LN66@tmove
  00171	7f 08		 jg	 SHORT $LN54@tmove
  00173	8b 45 f4	 mov	 eax, DWORD PTR _t$1$[ebp]
  00176	3b 45 e0	 cmp	 eax, DWORD PTR tv209[ebp]
  00179	76 19		 jbe	 SHORT $LN14@tmove
$LN54@tmove:
  0017b	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GJMBFEK@destination?5wrap?5around?$AA@
  00180	6a 04		 push	 4
  00182	56		 push	 esi
  00183	e8 00 00 00 00	 call	 _luaL_argerror
  00188	8b 55 f8	 mov	 edx, DWORD PTR _f$1$[ebp]
  0018b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0018e	8b 4d e8	 mov	 ecx, DWORD PTR _f$2$[ebp]
$LN66@tmove:
  00191	8b 45 f4	 mov	 eax, DWORD PTR _t$1$[ebp]
$LN14@tmove:
; Line 142
  00194	8b 75 e4	 mov	 esi, DWORD PTR _e$2$[ebp]
  00197	39 75 f0	 cmp	 DWORD PTR _t$2$[ebp], esi
  0019a	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0019d	7f 70		 jg	 SHORT $LN8@tmove
  0019f	7c 05		 jl	 SHORT $LN55@tmove
  001a1	3b 45 ec	 cmp	 eax, DWORD PTR _e$1$[ebp]
  001a4	77 69		 ja	 SHORT $LN8@tmove
$LN55@tmove:
  001a6	39 4d f0	 cmp	 DWORD PTR _t$2$[ebp], ecx
  001a9	7c 64		 jl	 SHORT $LN8@tmove
  001ab	7f 04		 jg	 SHORT $LN56@tmove
  001ad	3b c2		 cmp	 eax, edx
  001af	76 5e		 jbe	 SHORT $LN8@tmove
$LN56@tmove:
  001b1	83 7d fc 01	 cmp	 DWORD PTR _tt$1$[ebp], 1
  001b5	75 58		 jne	 SHORT $LN8@tmove
; Line 149
  001b7	83 ef 01	 sub	 edi, 1
  001ba	83 db 00	 sbb	 ebx, 0
  001bd	0f 88 b3 00 00
	00		 js	 $LN65@tmove
  001c3	7f 0b		 jg	 SHORT $LL63@tmove
  001c5	85 ff		 test	 edi, edi
  001c7	0f 82 a9 00 00
	00		 jb	 $LN65@tmove
  001cd	8d 49 00	 npad	 3
$LL63@tmove:
; Line 150
  001d0	8b cf		 mov	 ecx, edi
  001d2	8b c3		 mov	 eax, ebx
  001d4	03 ca		 add	 ecx, edx
  001d6	13 45 e8	 adc	 eax, DWORD PTR _f$2$[ebp]
  001d9	50		 push	 eax
  001da	51		 push	 ecx
  001db	6a 01		 push	 1
  001dd	56		 push	 esi
  001de	e8 00 00 00 00	 call	 _lua_geti
; Line 151
  001e3	8b cf		 mov	 ecx, edi
  001e5	8b c3		 mov	 eax, ebx
  001e7	03 4d f4	 add	 ecx, DWORD PTR _t$1$[ebp]
  001ea	13 45 f0	 adc	 eax, DWORD PTR _t$2$[ebp]
  001ed	50		 push	 eax
  001ee	51		 push	 ecx
  001ef	6a 01		 push	 1
  001f1	56		 push	 esi
  001f2	e8 00 00 00 00	 call	 _lua_seti
  001f7	8b 55 f8	 mov	 edx, DWORD PTR _f$1$[ebp]
  001fa	83 c4 20	 add	 esp, 32			; 00000020H
  001fd	83 c7 ff	 add	 edi, -1
  00200	83 d3 ff	 adc	 ebx, -1
  00203	85 db		 test	 ebx, ebx
  00205	7f c9		 jg	 SHORT $LL63@tmove
; Line 149
  00207	7c 6d		 jl	 SHORT $LN65@tmove
  00209	85 ff		 test	 edi, edi
  0020b	73 c3		 jae	 SHORT $LL63@tmove
; Line 142
  0020d	eb 67		 jmp	 SHORT $LN65@tmove
$LN8@tmove:
  0020f	0f 57 c0	 xorps	 xmm0, xmm0
; Line 143
  00212	66 0f 13 45 dc	 movlpd	 QWORD PTR _i$1[ebp], xmm0
  00217	85 db		 test	 ebx, ebx
  00219	7c 5b		 jl	 SHORT $LN65@tmove
  0021b	7f 04		 jg	 SHORT $LN62@tmove
  0021d	85 ff		 test	 edi, edi
  0021f	74 55		 je	 SHORT $LN65@tmove
$LN62@tmove:
  00221	8b 55 e0	 mov	 edx, DWORD PTR _i$1[ebp+4]
  00224	8b 45 dc	 mov	 eax, DWORD PTR _i$1[ebp]
  00227	89 55 ec	 mov	 DWORD PTR _i$4$[ebp], edx
  0022a	89 45 e4	 mov	 DWORD PTR _i$2$[ebp], eax
  0022d	8d 49 00	 npad	 3
$LL59@tmove:
; Line 144
  00230	03 45 f8	 add	 eax, DWORD PTR _f$1$[ebp]
  00233	13 55 e8	 adc	 edx, DWORD PTR _f$2$[ebp]
  00236	52		 push	 edx
  00237	50		 push	 eax
  00238	6a 01		 push	 1
  0023a	56		 push	 esi
  0023b	e8 00 00 00 00	 call	 _lua_geti
; Line 145
  00240	8b 4d e4	 mov	 ecx, DWORD PTR _i$2$[ebp]
  00243	03 4d f4	 add	 ecx, DWORD PTR _t$1$[ebp]
  00246	8b 45 ec	 mov	 eax, DWORD PTR _i$4$[ebp]
  00249	13 45 f0	 adc	 eax, DWORD PTR _t$2$[ebp]
  0024c	50		 push	 eax
  0024d	51		 push	 ecx
  0024e	ff 75 fc	 push	 DWORD PTR _tt$1$[ebp]
  00251	56		 push	 esi
  00252	e8 00 00 00 00	 call	 _lua_seti
  00257	8b 45 e4	 mov	 eax, DWORD PTR _i$2$[ebp]
  0025a	83 c4 20	 add	 esp, 32			; 00000020H
  0025d	8b 55 ec	 mov	 edx, DWORD PTR _i$4$[ebp]
  00260	83 c0 01	 add	 eax, 1
  00263	89 45 e4	 mov	 DWORD PTR _i$2$[ebp], eax
  00266	83 d2 00	 adc	 edx, 0
  00269	89 55 ec	 mov	 DWORD PTR _i$4$[ebp], edx
  0026c	3b d3		 cmp	 edx, ebx
  0026e	7c c0		 jl	 SHORT $LL59@tmove
; Line 143
  00270	7f 04		 jg	 SHORT $LN65@tmove
  00272	3b c7		 cmp	 eax, edi
  00274	72 ba		 jb	 SHORT $LL59@tmove
$LN65@tmove:
; Line 155
  00276	ff 75 fc	 push	 DWORD PTR _tt$1$[ebp]
  00279	56		 push	 esi
  0027a	e8 00 00 00 00	 call	 _lua_pushvalue
  0027f	83 c4 08	 add	 esp, 8
; Line 156
  00282	b8 01 00 00 00	 mov	 eax, 1
  00287	5f		 pop	 edi
  00288	5e		 pop	 esi
  00289	5b		 pop	 ebx
; Line 157
  0028a	8b e5		 mov	 esp, ebp
  0028c	5d		 pop	 ebp
  0028d	c3		 ret	 0
_tmove	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _tremove
_TEXT	SEGMENT
_pos$2$ = -16						; size = 4
_pos$1$ = -12						; size = 4
_size$1$ = -8						; size = 4
_size$2$ = -4						; size = 4
_L$ = 8							; size = 4
_tremove PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 106
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
; Line 107
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	6a 01		 push	 1
  0000e	53		 push	 ebx
  0000f	e8 00 00 00 00	 call	 _lua_type
  00014	83 c4 08	 add	 esp, 8
  00017	83 f8 05	 cmp	 eax, 5
  0001a	74 7a		 je	 SHORT $LN9@tremove
  0001c	6a 01		 push	 1
  0001e	53		 push	 ebx
  0001f	e8 00 00 00 00	 call	 _lua_getmetatable
  00024	83 c4 08	 add	 esp, 8
  00027	85 c0		 test	 eax, eax
  00029	74 5b		 je	 SHORT $LN13@tremove
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_07NHABFFHN@__index?$AA@
  00030	53		 push	 ebx
  00031	e8 00 00 00 00	 call	 _lua_pushstring
  00036	6a fe		 push	 -2			; fffffffeH
  00038	53		 push	 ebx
  00039	e8 00 00 00 00	 call	 _lua_rawget
  0003e	83 c4 10	 add	 esp, 16			; 00000010H
  00041	85 c0		 test	 eax, eax
  00043	74 41		 je	 SHORT $LN13@tremove
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GADKNKH@__newindex?$AA@
  0004a	53		 push	 ebx
  0004b	e8 00 00 00 00	 call	 _lua_pushstring
  00050	6a fd		 push	 -3			; fffffffdH
  00052	53		 push	 ebx
  00053	e8 00 00 00 00	 call	 _lua_rawget
  00058	83 c4 10	 add	 esp, 16			; 00000010H
  0005b	85 c0		 test	 eax, eax
  0005d	74 27		 je	 SHORT $LN13@tremove
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_05MNDELLDN@__len?$AA@
  00064	53		 push	 ebx
  00065	e8 00 00 00 00	 call	 _lua_pushstring
  0006a	6a fc		 push	 -4			; fffffffcH
  0006c	53		 push	 ebx
  0006d	e8 00 00 00 00	 call	 _lua_rawget
  00072	83 c4 10	 add	 esp, 16			; 00000010H
  00075	85 c0		 test	 eax, eax
  00077	74 0d		 je	 SHORT $LN13@tremove
  00079	6a fb		 push	 -5			; fffffffbH
  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 _lua_settop
  00081	83 c4 08	 add	 esp, 8
  00084	eb 10		 jmp	 SHORT $LN9@tremove
$LN13@tremove:
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DAKFMHIM@table?5expected?$AA@
  0008b	6a 01		 push	 1
  0008d	53		 push	 ebx
  0008e	e8 00 00 00 00	 call	 _luaL_argerror
  00093	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN9@tremove:
  00096	6a 01		 push	 1
  00098	53		 push	 ebx
  00099	e8 00 00 00 00	 call	 _luaL_len
  0009e	8b ca		 mov	 ecx, edx
  000a0	89 45 f8	 mov	 DWORD PTR _size$1$[ebp], eax
; Line 108
  000a3	51		 push	 ecx
  000a4	50		 push	 eax
  000a5	6a 02		 push	 2
  000a7	53		 push	 ebx
  000a8	89 4d fc	 mov	 DWORD PTR _size$2$[ebp], ecx
  000ab	e8 00 00 00 00	 call	 _luaL_optinteger
; Line 109
  000b0	8b 4d fc	 mov	 ecx, DWORD PTR _size$2$[ebp]
  000b3	8b f8		 mov	 edi, eax
  000b5	8b 45 f8	 mov	 eax, DWORD PTR _size$1$[ebp]
  000b8	83 c4 18	 add	 esp, 24			; 00000018H
  000bb	89 7d f4	 mov	 DWORD PTR _pos$1$[ebp], edi
  000be	8b f2		 mov	 esi, edx
  000c0	89 75 f0	 mov	 DWORD PTR _pos$2$[ebp], esi
  000c3	3b f8		 cmp	 edi, eax
  000c5	75 04		 jne	 SHORT $LN27@tremove
  000c7	3b f1		 cmp	 esi, ecx
  000c9	74 2f		 je	 SHORT $LN8@tremove
$LN27@tremove:
; Line 110
  000cb	85 f6		 test	 esi, esi
  000cd	7c 1b		 jl	 SHORT $LN29@tremove
  000cf	7f 05		 jg	 SHORT $LN28@tremove
  000d1	83 ff 01	 cmp	 edi, 1
  000d4	72 14		 jb	 SHORT $LN29@tremove
$LN28@tremove:
  000d6	8b d0		 mov	 edx, eax
  000d8	8b c1		 mov	 eax, ecx
  000da	83 c2 01	 add	 edx, 1
  000dd	83 d0 00	 adc	 eax, 0
  000e0	3b f0		 cmp	 esi, eax
  000e2	7c 16		 jl	 SHORT $LN8@tremove
  000e4	7f 04		 jg	 SHORT $LN29@tremove
  000e6	3b fa		 cmp	 edi, edx
  000e8	76 10		 jbe	 SHORT $LN8@tremove
$LN29@tremove:
  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FFAABLEA@position?5out?5of?5bounds?$AA@
  000ef	6a 01		 push	 1
  000f1	53		 push	 ebx
  000f2	e8 00 00 00 00	 call	 _luaL_argerror
  000f7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@tremove:
; Line 111
  000fa	56		 push	 esi
  000fb	57		 push	 edi
  000fc	6a 01		 push	 1
  000fe	53		 push	 ebx
  000ff	e8 00 00 00 00	 call	 _lua_geti
  00104	83 c4 10	 add	 esp, 16			; 00000010H
; Line 112
  00107	3b 75 fc	 cmp	 esi, DWORD PTR _size$2$[ebp]
  0010a	7f 3a		 jg	 SHORT $LN34@tremove
  0010c	7c 05		 jl	 SHORT $LL33@tremove
  0010e	3b 7d f8	 cmp	 edi, DWORD PTR _size$1$[ebp]
  00111	73 33		 jae	 SHORT $LN34@tremove
$LL33@tremove:
; Line 113
  00113	83 c7 01	 add	 edi, 1
  00116	83 d6 00	 adc	 esi, 0
  00119	56		 push	 esi
  0011a	57		 push	 edi
  0011b	6a 01		 push	 1
  0011d	53		 push	 ebx
  0011e	e8 00 00 00 00	 call	 _lua_geti
; Line 114
  00123	ff 75 f0	 push	 DWORD PTR _pos$2$[ebp]
  00126	ff 75 f4	 push	 DWORD PTR _pos$1$[ebp]
  00129	6a 01		 push	 1
  0012b	53		 push	 ebx
  0012c	e8 00 00 00 00	 call	 _lua_seti
  00131	83 c4 20	 add	 esp, 32			; 00000020H
  00134	89 7d f4	 mov	 DWORD PTR _pos$1$[ebp], edi
  00137	89 75 f0	 mov	 DWORD PTR _pos$2$[ebp], esi
  0013a	3b 75 fc	 cmp	 esi, DWORD PTR _size$2$[ebp]
  0013d	7c d4		 jl	 SHORT $LL33@tremove
; Line 112
  0013f	7f 05		 jg	 SHORT $LN34@tremove
  00141	3b 7d f8	 cmp	 edi, DWORD PTR _size$1$[ebp]
  00144	72 cd		 jb	 SHORT $LL33@tremove
$LN34@tremove:
; Line 116
  00146	53		 push	 ebx
  00147	e8 00 00 00 00	 call	 _lua_pushnil
; Line 117
  0014c	56		 push	 esi
  0014d	57		 push	 edi
  0014e	6a 01		 push	 1
  00150	53		 push	 ebx
  00151	e8 00 00 00 00	 call	 _lua_seti
  00156	83 c4 14	 add	 esp, 20			; 00000014H
; Line 118
  00159	b8 01 00 00 00	 mov	 eax, 1
  0015e	5f		 pop	 edi
  0015f	5e		 pop	 esi
  00160	5b		 pop	 ebx
; Line 119
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c3		 ret	 0
_tremove ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _tinsert
_TEXT	SEGMENT
_pos$2$ = -16						; size = 4
_i$2$ = -12						; size = 4
_i$1$ = -8						; size = 4
_pos$1$ = -4						; size = 4
_L$ = 8							; size = 4
_tinsert PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 79
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
; Line 80
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	6a 01		 push	 1
  0000e	53		 push	 ebx
  0000f	e8 00 00 00 00	 call	 _lua_type
  00014	83 c4 08	 add	 esp, 8
  00017	83 f8 05	 cmp	 eax, 5
  0001a	74 7a		 je	 SHORT $LN13@tinsert
  0001c	6a 01		 push	 1
  0001e	53		 push	 ebx
  0001f	e8 00 00 00 00	 call	 _lua_getmetatable
  00024	83 c4 08	 add	 esp, 8
  00027	85 c0		 test	 eax, eax
  00029	74 5b		 je	 SHORT $LN17@tinsert
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_07NHABFFHN@__index?$AA@
  00030	53		 push	 ebx
  00031	e8 00 00 00 00	 call	 _lua_pushstring
  00036	6a fe		 push	 -2			; fffffffeH
  00038	53		 push	 ebx
  00039	e8 00 00 00 00	 call	 _lua_rawget
  0003e	83 c4 10	 add	 esp, 16			; 00000010H
  00041	85 c0		 test	 eax, eax
  00043	74 41		 je	 SHORT $LN17@tinsert
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GADKNKH@__newindex?$AA@
  0004a	53		 push	 ebx
  0004b	e8 00 00 00 00	 call	 _lua_pushstring
  00050	6a fd		 push	 -3			; fffffffdH
  00052	53		 push	 ebx
  00053	e8 00 00 00 00	 call	 _lua_rawget
  00058	83 c4 10	 add	 esp, 16			; 00000010H
  0005b	85 c0		 test	 eax, eax
  0005d	74 27		 je	 SHORT $LN17@tinsert
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_05MNDELLDN@__len?$AA@
  00064	53		 push	 ebx
  00065	e8 00 00 00 00	 call	 _lua_pushstring
  0006a	6a fc		 push	 -4			; fffffffcH
  0006c	53		 push	 ebx
  0006d	e8 00 00 00 00	 call	 _lua_rawget
  00072	83 c4 10	 add	 esp, 16			; 00000010H
  00075	85 c0		 test	 eax, eax
  00077	74 0d		 je	 SHORT $LN17@tinsert
  00079	6a fb		 push	 -5			; fffffffbH
  0007b	53		 push	 ebx
  0007c	e8 00 00 00 00	 call	 _lua_settop
  00081	83 c4 08	 add	 esp, 8
  00084	eb 10		 jmp	 SHORT $LN13@tinsert
$LN17@tinsert:
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DAKFMHIM@table?5expected?$AA@
  0008b	6a 01		 push	 1
  0008d	53		 push	 ebx
  0008e	e8 00 00 00 00	 call	 _luaL_argerror
  00093	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN13@tinsert:
  00096	6a 01		 push	 1
  00098	53		 push	 ebx
  00099	e8 00 00 00 00	 call	 _luaL_len
  0009e	8b f8		 mov	 edi, eax
  000a0	8b f2		 mov	 esi, edx
  000a2	83 c7 01	 add	 edi, 1
; Line 82
  000a5	53		 push	 ebx
  000a6	83 d6 00	 adc	 esi, 0
  000a9	89 7d f8	 mov	 DWORD PTR _i$1$[ebp], edi
  000ac	89 75 f4	 mov	 DWORD PTR _i$2$[ebp], esi
  000af	e8 00 00 00 00	 call	 _lua_gettop
  000b4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b7	83 e8 02	 sub	 eax, 2
  000ba	0f 84 99 00 00
	00		 je	 $LN6@tinsert
  000c0	48		 dec	 eax
  000c1	74 15		 je	 SHORT $LN5@tinsert
; Line 98
  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@LPGHMHCC@wrong?5number?5of?5arguments?5to?5?8in@
  000c8	53		 push	 ebx
  000c9	e8 00 00 00 00	 call	 _luaL_error
  000ce	83 c4 08	 add	 esp, 8
  000d1	5f		 pop	 edi
  000d2	5e		 pop	 esi
  000d3	5b		 pop	 ebx
; Line 103
  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c3		 ret	 0
$LN5@tinsert:
; Line 89
  000d8	6a 02		 push	 2
  000da	53		 push	 ebx
  000db	e8 00 00 00 00	 call	 _luaL_checkinteger
  000e0	8b ca		 mov	 ecx, edx
  000e2	89 45 fc	 mov	 DWORD PTR _pos$1$[ebp], eax
  000e5	83 c4 08	 add	 esp, 8
  000e8	89 4d f0	 mov	 DWORD PTR _pos$2$[ebp], ecx
; Line 90
  000eb	85 c9		 test	 ecx, ecx
  000ed	7c 11		 jl	 SHORT $LN32@tinsert
  000ef	7f 05		 jg	 SHORT $LN31@tinsert
  000f1	83 f8 01	 cmp	 eax, 1
  000f4	72 0a		 jb	 SHORT $LN32@tinsert
$LN31@tinsert:
  000f6	3b ce		 cmp	 ecx, esi
  000f8	7c 1c		 jl	 SHORT $LN12@tinsert
  000fa	7f 04		 jg	 SHORT $LN32@tinsert
  000fc	3b c7		 cmp	 eax, edi
  000fe	76 16		 jbe	 SHORT $LN12@tinsert
$LN32@tinsert:
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FFAABLEA@position?5out?5of?5bounds?$AA@
  00105	6a 02		 push	 2
  00107	53		 push	 ebx
  00108	e8 00 00 00 00	 call	 _luaL_argerror
  0010d	8b 45 fc	 mov	 eax, DWORD PTR _pos$1$[ebp]
  00110	83 c4 0c	 add	 esp, 12			; 0000000cH
  00113	8b 4d f0	 mov	 ecx, DWORD PTR _pos$2$[ebp]
$LN12@tinsert:
; Line 91
  00116	3b f1		 cmp	 esi, ecx
  00118	7c 43		 jl	 SHORT $LN7@tinsert
  0011a	7f 04		 jg	 SHORT $LL36@tinsert
  0011c	3b f8		 cmp	 edi, eax
  0011e	76 3d		 jbe	 SHORT $LN7@tinsert
$LL36@tinsert:
; Line 92
  00120	83 ef 01	 sub	 edi, 1
  00123	83 de 00	 sbb	 esi, 0
  00126	56		 push	 esi
  00127	57		 push	 edi
  00128	6a 01		 push	 1
  0012a	53		 push	 ebx
  0012b	e8 00 00 00 00	 call	 _lua_geti
; Line 93
  00130	ff 75 f4	 push	 DWORD PTR _i$2$[ebp]
  00133	ff 75 f8	 push	 DWORD PTR _i$1$[ebp]
  00136	6a 01		 push	 1
  00138	53		 push	 ebx
  00139	e8 00 00 00 00	 call	 _lua_seti
  0013e	8b 4d f0	 mov	 ecx, DWORD PTR _pos$2$[ebp]
  00141	83 c4 20	 add	 esp, 32			; 00000020H
  00144	89 7d f8	 mov	 DWORD PTR _i$1$[ebp], edi
  00147	89 75 f4	 mov	 DWORD PTR _i$2$[ebp], esi
  0014a	3b f1		 cmp	 esi, ecx
  0014c	7f d2		 jg	 SHORT $LL36@tinsert
; Line 91
  0014e	8b 45 fc	 mov	 eax, DWORD PTR _pos$1$[ebp]
  00151	7c 0a		 jl	 SHORT $LN7@tinsert
  00153	3b f8		 cmp	 edi, eax
  00155	77 c9		 ja	 SHORT $LL36@tinsert
  00157	eb 04		 jmp	 SHORT $LN7@tinsert
$LN6@tinsert:
; Line 84
  00159	8b c7		 mov	 eax, edi
  0015b	8b ce		 mov	 ecx, esi
$LN7@tinsert:
; Line 101
  0015d	51		 push	 ecx
  0015e	50		 push	 eax
  0015f	6a 01		 push	 1
  00161	53		 push	 ebx
  00162	e8 00 00 00 00	 call	 _lua_seti
  00167	83 c4 10	 add	 esp, 16			; 00000010H
; Line 102
  0016a	33 c0		 xor	 eax, eax
  0016c	5f		 pop	 edi
  0016d	5e		 pop	 esi
  0016e	5b		 pop	 ebx
; Line 103
  0016f	8b e5		 mov	 esp, ebp
  00171	5d		 pop	 ebp
  00172	c3		 ret	 0
_tinsert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _maxn
_TEXT	SEGMENT
_v$1 = -16						; size = 8
_max$1$ = -8						; size = 8
_L$ = 8							; size = 4
_maxn	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 62
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
; Line 64
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	0f 57 c0	 xorps	 xmm0, xmm0
  0000d	6a 05		 push	 5
  0000f	6a 01		 push	 1
  00011	56		 push	 esi
  00012	f2 0f 11 45 f8	 movsd	 QWORD PTR _max$1$[ebp], xmm0
  00017	e8 00 00 00 00	 call	 _luaL_checktype
; Line 65
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 _lua_pushnil
; Line 66
  00022	6a 01		 push	 1
  00024	56		 push	 esi
  00025	e8 00 00 00 00	 call	 _lua_next
  0002a	83 c4 18	 add	 esp, 24			; 00000018H
  0002d	85 c0		 test	 eax, eax
  0002f	74 48		 je	 SHORT $LN3@maxn
$LL4@maxn:
; Line 67
  00031	6a fe		 push	 -2			; fffffffeH
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 _lua_settop
; Line 68
  00039	6a ff		 push	 -1
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 _lua_type
  00041	83 c4 10	 add	 esp, 16			; 00000010H
  00044	83 f8 03	 cmp	 eax, 3
  00047	75 21		 jne	 SHORT $LN1@maxn
; Line 69
  00049	6a 00		 push	 0
  0004b	6a ff		 push	 -1
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 _lua_tonumberx
  00053	dd 5d f0	 fstp	 QWORD PTR _v$1[ebp]
; Line 70
  00056	f2 0f 10 45 f0	 movsd	 xmm0, QWORD PTR _v$1[ebp]
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	66 0f 2f 45 f8	 comisd	 xmm0, QWORD PTR _max$1$[ebp]
  00063	76 05		 jbe	 SHORT $LN1@maxn
  00065	f2 0f 11 45 f8	 movsd	 QWORD PTR _max$1$[ebp], xmm0
$LN1@maxn:
; Line 66
  0006a	6a 01		 push	 1
  0006c	56		 push	 esi
  0006d	e8 00 00 00 00	 call	 _lua_next
  00072	83 c4 08	 add	 esp, 8
  00075	85 c0		 test	 eax, eax
  00077	75 b8		 jne	 SHORT $LL4@maxn
$LN3@maxn:
; Line 73
  00079	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _max$1$[ebp]
  0007e	83 ec 08	 sub	 esp, 8
  00081	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00086	56		 push	 esi
  00087	e8 00 00 00 00	 call	 _lua_pushnumber
  0008c	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 74
  0008f	b8 01 00 00 00	 mov	 eax, 1
  00094	5e		 pop	 esi
; Line 75
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c3		 ret	 0
_maxn	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _checktab
_TEXT	SEGMENT
_L$ = 8							; size = 4
_arg$ = 12						; size = 4
_what$ = 16						; size = 4
_checktab PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 46
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 47
  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _arg$[ebp]
  00007	56		 push	 esi
  00008	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _lua_type
  00012	83 c4 08	 add	 esp, 8
  00015	83 f8 05	 cmp	 eax, 5
  00018	0f 84 ac 00 00
	00		 je	 $LN1@checktab
; Line 52
  0001e	57		 push	 edi
  0001f	53		 push	 ebx
  00020	56		 push	 esi
  00021	bf 01 00 00 00	 mov	 edi, 1
  00026	e8 00 00 00 00	 call	 _lua_getmetatable
  0002b	83 c4 08	 add	 esp, 8
  0002e	85 c0		 test	 eax, eax
  00030	0f 84 84 00 00
	00		 je	 $LN5@checktab
  00036	8b 45 10	 mov	 eax, DWORD PTR _what$[ebp]
  00039	a8 01		 test	 al, 1
  0003b	74 22		 je	 SHORT $LN4@checktab
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_07NHABFFHN@__index?$AA@
  00042	56		 push	 esi
  00043	bf 02 00 00 00	 mov	 edi, 2
  00048	e8 00 00 00 00	 call	 _lua_pushstring
  0004d	6a fe		 push	 -2			; fffffffeH
  0004f	56		 push	 esi
  00050	e8 00 00 00 00	 call	 _lua_rawget
  00055	83 c4 10	 add	 esp, 16			; 00000010H
  00058	85 c0		 test	 eax, eax
  0005a	74 5e		 je	 SHORT $LN5@checktab
  0005c	8b 45 10	 mov	 eax, DWORD PTR _what$[ebp]
$LN4@checktab:
  0005f	a8 02		 test	 al, 2
  00061	74 21		 je	 SHORT $LN3@checktab
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GADKNKH@__newindex?$AA@
  00068	56		 push	 esi
  00069	47		 inc	 edi
  0006a	e8 00 00 00 00	 call	 _lua_pushstring
  0006f	8b c7		 mov	 eax, edi
  00071	f7 d8		 neg	 eax
  00073	50		 push	 eax
  00074	56		 push	 esi
  00075	e8 00 00 00 00	 call	 _lua_rawget
  0007a	83 c4 10	 add	 esp, 16			; 00000010H
  0007d	85 c0		 test	 eax, eax
  0007f	74 39		 je	 SHORT $LN5@checktab
  00081	8b 45 10	 mov	 eax, DWORD PTR _what$[ebp]
$LN3@checktab:
  00084	a8 04		 test	 al, 4
  00086	74 1e		 je	 SHORT $LN2@checktab
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_05MNDELLDN@__len?$AA@
  0008d	56		 push	 esi
  0008e	47		 inc	 edi
  0008f	e8 00 00 00 00	 call	 _lua_pushstring
  00094	8b c7		 mov	 eax, edi
  00096	f7 d8		 neg	 eax
  00098	50		 push	 eax
  00099	56		 push	 esi
  0009a	e8 00 00 00 00	 call	 _lua_rawget
  0009f	83 c4 10	 add	 esp, 16			; 00000010H
  000a2	85 c0		 test	 eax, eax
  000a4	74 14		 je	 SHORT $LN5@checktab
$LN2@checktab:
; Line 53
  000a6	83 c8 ff	 or	 eax, -1
  000a9	2b c7		 sub	 eax, edi
  000ab	50		 push	 eax
  000ac	56		 push	 esi
  000ad	e8 00 00 00 00	 call	 _lua_settop
  000b2	83 c4 08	 add	 esp, 8
  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
  000b7	5b		 pop	 ebx
; Line 58
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
$LN5@checktab:
; Line 56
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DAKFMHIM@table?5expected?$AA@
  000bf	53		 push	 ebx
  000c0	56		 push	 esi
  000c1	e8 00 00 00 00	 call	 _luaL_argerror
  000c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c9	5f		 pop	 edi
$LN1@checktab:
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
; Line 58
  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
_checktab ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _checkfield
_TEXT	SEGMENT
_L$ = 8							; size = 4
_key$ = 12						; size = 4
_n$ = 16						; size = 4
_checkfield PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 36
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 37
  00003	ff 75 0c	 push	 DWORD PTR _key$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _lua_pushstring
; Line 38
  0000e	8b 45 10	 mov	 eax, DWORD PTR _n$[ebp]
  00011	f7 d8		 neg	 eax
  00013	50		 push	 eax
  00014	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00017	e8 00 00 00 00	 call	 _lua_rawget
  0001c	83 c4 10	 add	 esp, 16			; 00000010H
  0001f	f7 d8		 neg	 eax
  00021	1b c0		 sbb	 eax, eax
  00023	f7 d8		 neg	 eax
; Line 39
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
_checkfield ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaopen_table
_TEXT	SEGMENT
_L$ = 8							; size = 4
_luaopen_table PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltablib.c
; Line 440
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 441
  00003	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@405bc00000000000
  0000b	56		 push	 esi
  0000c	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000f	68 88 00 00 00	 push	 136			; 00000088H
  00014	83 ec 08	 sub	 esp, 8
  00017	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 _luaL_checkversion_
  00022	6a 08		 push	 8
  00024	6a 00		 push	 0
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 _lua_createtable
  0002c	6a 00		 push	 0
  0002e	68 00 00 00 00	 push	 OFFSET _tab_funcs
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 _luaL_setfuncs
; Line 444
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_06FIONAGJL@unpack?$AA@
  0003e	6a ff		 push	 -1
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 _lua_getfield
; Line 445
  00046	68 00 00 00 00	 push	 OFFSET ??_C@_06FIONAGJL@unpack?$AA@
  0004b	56		 push	 esi
  0004c	e8 00 00 00 00	 call	 _lua_setglobal
  00051	83 c4 3c	 add	 esp, 60			; 0000003cH
; Line 447
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	5e		 pop	 esi
; Line 448
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
_luaopen_table ENDP
_TEXT	ENDS
END
