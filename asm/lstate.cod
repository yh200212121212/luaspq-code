; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_lua_newstate
PUBLIC	_lua_close
PUBLIC	_lua_newthread
PUBLIC	_luaE_setdebt
PUBLIC	_luaE_freethread
PUBLIC	_luaE_extendCI
PUBLIC	_luaE_freeCI
PUBLIC	_luaE_shrinkCI
EXTRN	_lua_version:PROC
EXTRN	_luaT_init:PROC
EXTRN	_luaM_realloc_:PROC
EXTRN	_luaD_rawrunprotected:PROC
EXTRN	_luaF_close:PROC
EXTRN	_luaC_freeallobjects:PROC
EXTRN	_luaC_step:PROC
EXTRN	_luaX_init:PROC
EXTRN	_luaS_hash:PROC
EXTRN	_luaS_init:PROC
EXTRN	_luaH_setint:PROC
EXTRN	_luaH_new:PROC
EXTRN	_luaH_resize:PROC
EXTRN	__imp___time64:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_luaO_nilobject_:BYTE
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogtp
;	COMDAT _close_state
_TEXT	SEGMENT
_L$ = 8							; size = 4
_close_state PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 242
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 243
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
; Line 244
  00008	ff 76 20	 push	 DWORD PTR [esi+32]
  0000b	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 _luaF_close
; Line 245
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 _luaC_freeallobjects
; Line 248
  0001a	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0001d	6a 00		 push	 0
  0001f	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  00022	c1 e0 02	 shl	 eax, 2
  00025	50		 push	 eax
  00026	ff 71 18	 push	 DWORD PTR [ecx+24]
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 _luaM_realloc_
  0002f	83 c4 1c	 add	 esp, 28			; 0000001cH
; Line 249
  00032	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  00036	74 21		 je	 SHORT $LN5@close_stat
  00038	8d 46 34	 lea	 eax, DWORD PTR [esi+52]
  0003b	56		 push	 esi
  0003c	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0003f	e8 00 00 00 00	 call	 _luaE_freeCI
  00044	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  00047	6a 00		 push	 0
  00049	c1 e0 04	 shl	 eax, 4
  0004c	50		 push	 eax
  0004d	ff 76 20	 push	 DWORD PTR [esi+32]
  00050	56		 push	 esi
  00051	e8 00 00 00 00	 call	 _luaM_realloc_
  00056	83 c4 14	 add	 esp, 20			; 00000014H
$LN5@close_stat:
; Line 251
  00059	6a 00		 push	 0
  0005b	68 30 03 00 00	 push	 816			; 00000330H
  00060	8d 46 fc	 lea	 eax, DWORD PTR [esi-4]
  00063	50		 push	 eax
  00064	ff 77 04	 push	 DWORD PTR [edi+4]
  00067	8b 07		 mov	 eax, DWORD PTR [edi]
  00069	ff d0		 call	 eax
  0006b	83 c4 10	 add	 esp, 16			; 00000010H
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
; Line 252
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
_close_state ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _preinit_thread
_TEXT	SEGMENT
_L$ = 8							; size = 4
_g$ = 12						; size = 4
_preinit_thread PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 221
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 222
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR _g$[ebp]
  00009	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; Line 225
  0000c	33 c0		 xor	 eax, eax
  0000e	c7 41 20 00 00
	00 00		 mov	 DWORD PTR [ecx+32], 0
  00015	c7 41 14 00 00
	00 00		 mov	 DWORD PTR [ecx+20], 0
  0001c	66 89 41 06	 mov	 WORD PTR [ecx+6], ax
; Line 226
  00020	89 41 60	 mov	 DWORD PTR [ecx+96], eax
; Line 227
  00023	89 49 2c	 mov	 DWORD PTR [ecx+44], ecx
; Line 228
  00026	89 41 30	 mov	 DWORD PTR [ecx+48], eax
; Line 236
  00029	c7 41 6c 01 00
	00 00		 mov	 DWORD PTR [ecx+108], 1
  00030	89 41 58	 mov	 DWORD PTR [ecx+88], eax
  00033	66 c7 41 70 00
	01		 mov	 WORD PTR [ecx+112], 256	; 00000100H
  00039	89 41 64	 mov	 DWORD PTR [ecx+100], eax
  0003c	89 41 68	 mov	 DWORD PTR [ecx+104], eax
  0003f	89 41 24	 mov	 DWORD PTR [ecx+36], eax
; Line 237
  00042	88 41 08	 mov	 BYTE PTR [ecx+8], al
; Line 238
  00045	89 41 5c	 mov	 DWORD PTR [ecx+92], eax
; Line 239
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
_preinit_thread ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _f_luaopen
_TEXT	SEGMENT
_L$ = 8							; size = 4
_ud$ = 12						; size = 4
_f_luaopen PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 203
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 204
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
; Line 206
  00008	56		 push	 esi
  00009	56		 push	 esi
  0000a	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0000d	e8 00 00 00 00	 call	 _stack_init
; Line 207
  00012	57		 push	 edi
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 _init_registry
; Line 208
  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 _luaS_init
; Line 209
  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 _luaT_init
; Line 210
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 _luaX_init
; Line 212
  0002b	6a 00		 push	 0
  0002d	c6 47 3f 01	 mov	 BYTE PTR [edi+63], 1
  00031	e8 00 00 00 00	 call	 _lua_version
  00036	83 c4 20	 add	 esp, 32			; 00000020H
  00039	89 87 80 00 00
	00		 mov	 DWORD PTR [edi+128], eax
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
; Line 214
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
_f_luaopen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _init_registry
_TEXT	SEGMENT
_temp$ = -16						; size = 16
_L$ = 8							; size = 4
_g$ = 12						; size = 4
_init_registry PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 184
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi
; Line 187
  00008	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0000b	57		 push	 edi
  0000c	e8 00 00 00 00	 call	 _luaH_new
; Line 188
  00011	8b 4d 0c	 mov	 ecx, DWORD PTR _g$[ebp]
  00014	8b f0		 mov	 esi, eax
; Line 189
  00016	6a 00		 push	 0
  00018	6a 02		 push	 2
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	89 71 28	 mov	 DWORD PTR [ecx+40], esi
  0001f	c7 41 30 45 00
	00 00		 mov	 DWORD PTR [ecx+48], 69	; 00000045H
  00026	e8 00 00 00 00	 call	 _luaH_resize
; Line 192
  0002b	8d 45 f0	 lea	 eax, DWORD PTR _temp$[ebp]
  0002e	89 7d f0	 mov	 DWORD PTR _temp$[ebp], edi
  00031	50		 push	 eax
  00032	6a 00		 push	 0
  00034	6a 01		 push	 1
  00036	56		 push	 esi
  00037	57		 push	 edi
  00038	c7 45 f8 48 00
	00 00		 mov	 DWORD PTR _temp$[ebp+8], 72 ; 00000048H
  0003f	e8 00 00 00 00	 call	 _luaH_setint
; Line 194
  00044	57		 push	 edi
  00045	e8 00 00 00 00	 call	 _luaH_new
  0004a	89 45 f0	 mov	 DWORD PTR _temp$[ebp], eax
; Line 195
  0004d	8d 45 f0	 lea	 eax, DWORD PTR _temp$[ebp]
  00050	50		 push	 eax
  00051	6a 00		 push	 0
  00053	6a 02		 push	 2
  00055	56		 push	 esi
  00056	57		 push	 edi
  00057	c7 45 f8 45 00
	00 00		 mov	 DWORD PTR _temp$[ebp+8], 69 ; 00000045H
  0005e	e8 00 00 00 00	 call	 _luaH_setint
  00063	83 c4 40	 add	 esp, 64			; 00000040H
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
; Line 196
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
_init_registry ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _freestack
_TEXT	SEGMENT
_L$ = 8							; size = 4
_freestack PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 171
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 172
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0000b	74 21		 je	 SHORT $LN2@freestack
; Line 174
  0000d	8d 46 34	 lea	 eax, DWORD PTR [esi+52]
; Line 175
  00010	56		 push	 esi
  00011	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00014	e8 00 00 00 00	 call	 _luaE_freeCI
; Line 177
  00019	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  0001c	6a 00		 push	 0
  0001e	c1 e0 04	 shl	 eax, 4
  00021	50		 push	 eax
  00022	ff 76 20	 push	 DWORD PTR [esi+32]
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 _luaM_realloc_
  0002b	83 c4 14	 add	 esp, 20			; 00000014H
$LN2@freestack:
  0002e	5e		 pop	 esi
; Line 178
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_freestack ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _stack_init
_TEXT	SEGMENT
_L1$ = 8						; size = 4
_L$ = 12						; size = 4
_stack_init PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 151
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 154
  00004	8b 75 08	 mov	 esi, DWORD PTR _L1$[ebp]
  00007	68 80 02 00 00	 push	 640			; 00000280H
  0000c	6a 00		 push	 0
  0000e	6a 00		 push	 0
  00010	ff 75 0c	 push	 DWORD PTR _L$[ebp]
  00013	e8 00 00 00 00	 call	 _luaM_realloc_
  00018	83 c4 10	 add	 esp, 16			; 00000010H
  0001b	89 46 20	 mov	 DWORD PTR [esi+32], eax
; Line 155
  0001e	c7 46 60 28 00
	00 00		 mov	 DWORD PTR [esi+96], 40	; 00000028H
  00025	33 c0		 xor	 eax, eax
  00027	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL3@stack_init:
; Line 157
  00030	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00033	c7 44 08 08 00
	00 00 00	 mov	 DWORD PTR [eax+ecx+8], 0
  0003b	83 c0 10	 add	 eax, 16			; 00000010H
  0003e	3d 80 02 00 00	 cmp	 eax, 640		; 00000280H
  00043	7c eb		 jl	 SHORT $LL3@stack_init
; Line 159
  00045	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  00048	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  0004b	83 e8 05	 sub	 eax, 5
  0004e	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00051	c1 e0 04	 shl	 eax, 4
  00054	03 c1		 add	 eax, ecx
; Line 161
  00056	8d 4e 34	 lea	 ecx, DWORD PTR [esi+52]
  00059	89 46 1c	 mov	 DWORD PTR [esi+28], eax
; Line 162
  0005c	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  00063	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
; Line 163
  0006a	c6 41 22 00	 mov	 BYTE PTR [ecx+34], 0
; Line 164
  0006e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00071	89 01		 mov	 DWORD PTR [ecx], eax
; Line 165
  00073	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00076	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  0007d	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
  00081	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
; Line 166
  00084	05 40 01 00 00	 add	 eax, 320		; 00000140H
  00089	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 167
  0008c	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  0008f	5e		 pop	 esi
; Line 168
  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
_stack_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _makeseed
_TEXT	SEGMENT
_h$ = -24						; size = 4
_buff$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_makeseed PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 81
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 83
  00010	6a 00		 push	 0
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___time64
; Line 85
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
; Line 90
  0001b	50		 push	 eax
  0001c	89 45 e8	 mov	 DWORD PTR _h$[ebp], eax
  0001f	8d 45 ec	 lea	 eax, DWORD PTR _buff$[ebp]
  00022	89 4d ec	 mov	 DWORD PTR _buff$[ebp], ecx
  00025	8d 4d e8	 lea	 ecx, DWORD PTR _h$[ebp]
  00028	6a 10		 push	 16			; 00000010H
  0002a	50		 push	 eax
  0002b	89 4d f0	 mov	 DWORD PTR _buff$[ebp+4], ecx
  0002e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _buff$[ebp+8], OFFSET _luaO_nilobject_
  00035	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _buff$[ebp+12], OFFSET _lua_newstate
  0003c	e8 00 00 00 00	 call	 _luaS_hash
; Line 91
  00041	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00044	83 c4 10	 add	 esp, 16			; 00000010H
  00047	33 cd		 xor	 ecx, ebp
  00049	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
_makeseed ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT
; File e:\microsoft visual studio 12.0\vc\include\time.inl
; Line 132
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 134
  00003	5d		 pop	 ebp
; Line 133
  00004	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp___time64
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaE_shrinkCI
_TEXT	SEGMENT
_L$ = 8							; size = 4
_luaE_shrinkCI PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 137
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 138
  00004	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
; Line 141
  0000b	83 7f 0c 00	 cmp	 DWORD PTR [edi+12], 0
  0000f	74 31		 je	 SHORT $LN9@luaE_shrin
  00011	56		 push	 esi
$LL2@luaE_shrin:
  00012	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00015	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00018	85 f6		 test	 esi, esi
  0001a	74 25		 je	 SHORT $LN10@luaE_shrin
; Line 142
  0001c	6a 00		 push	 0
  0001e	6a 24		 push	 36			; 00000024H
  00020	50		 push	 eax
  00021	53		 push	 ebx
  00022	e8 00 00 00 00	 call	 _luaM_realloc_
; Line 143
  00027	b8 ff ff 00 00	 mov	 eax, 65535		; 0000ffffH
  0002c	83 c4 10	 add	 esp, 16			; 00000010H
  0002f	66 01 43 06	 add	 WORD PTR [ebx+6], ax
; Line 144
  00033	89 77 0c	 mov	 DWORD PTR [edi+12], esi
; Line 145
  00036	89 7e 08	 mov	 DWORD PTR [esi+8], edi
; Line 146
  00039	8b fe		 mov	 edi, esi
  0003b	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  0003f	75 d1		 jne	 SHORT $LL2@luaE_shrin
$LN10@luaE_shrin:
  00041	5e		 pop	 esi
$LN9@luaE_shrin:
  00042	5f		 pop	 edi
  00043	5b		 pop	 ebx
; Line 148
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
_luaE_shrinkCI ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaE_freeCI
_TEXT	SEGMENT
_L$ = 8							; size = 4
_luaE_freeCI PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 122
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 123
  00005	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00008	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
; Line 124
  0000b	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
; Line 125
  0000e	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; Line 126
  00015	8b c6		 mov	 eax, esi
  00017	85 f6		 test	 esi, esi
  00019	74 22		 je	 SHORT $LN1@luaE_freeC
  0001b	53		 push	 ebx
  0001c	bb ff ff 00 00	 mov	 ebx, 65535		; 0000ffffH
$LL2@luaE_freeC:
; Line 127
  00021	8b 76 0c	 mov	 esi, DWORD PTR [esi+12]
; Line 128
  00024	6a 00		 push	 0
  00026	6a 24		 push	 36			; 00000024H
  00028	50		 push	 eax
  00029	57		 push	 edi
  0002a	e8 00 00 00 00	 call	 _luaM_realloc_
; Line 129
  0002f	66 01 5f 06	 add	 WORD PTR [edi+6], bx
  00033	83 c4 10	 add	 esp, 16			; 00000010H
  00036	8b c6		 mov	 eax, esi
  00038	85 f6		 test	 esi, esi
  0003a	75 e5		 jne	 SHORT $LL2@luaE_freeC
  0003c	5b		 pop	 ebx
$LN1@luaE_freeC:
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
; Line 131
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
_luaE_freeCI ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaE_extendCI
_TEXT	SEGMENT
_L$ = 8							; size = 4
_luaE_extendCI PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 108
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 109
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 24		 push	 36			; 00000024H
  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	56		 push	 esi
  0000e	e8 00 00 00 00	 call	 _luaM_realloc_
; Line 111
  00013	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00016	83 c4 10	 add	 esp, 16			; 00000010H
  00019	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 112
  0001c	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0001f	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 113
  00022	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
; Line 114
  00029	66 ff 46 06	 inc	 WORD PTR [esi+6]
  0002d	5e		 pop	 esi
; Line 116
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
_luaE_extendCI ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaE_freethread
_TEXT	SEGMENT
_L$ = 8							; size = 4
_L1$ = 12						; size = 4
_luaE_freethread PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 285
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 286
  00004	8b 75 0c	 mov	 esi, DWORD PTR _L1$[ebp]
  00007	57		 push	 edi
; Line 287
  00008	ff 76 20	 push	 DWORD PTR [esi+32]
  0000b	8d 7e fc	 lea	 edi, DWORD PTR [esi-4]
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 _luaF_close
  00014	83 c4 08	 add	 esp, 8
; Line 290
  00017	83 7e 20 00	 cmp	 DWORD PTR [esi+32], 0
  0001b	74 21		 je	 SHORT $LN4@luaE_freet
  0001d	8d 46 34	 lea	 eax, DWORD PTR [esi+52]
  00020	56		 push	 esi
  00021	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00024	e8 00 00 00 00	 call	 _luaE_freeCI
  00029	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  0002c	6a 00		 push	 0
  0002e	c1 e0 04	 shl	 eax, 4
  00031	50		 push	 eax
  00032	ff 76 20	 push	 DWORD PTR [esi+32]
  00035	56		 push	 esi
  00036	e8 00 00 00 00	 call	 _luaM_realloc_
  0003b	83 c4 14	 add	 esp, 20			; 00000014H
$LN4@luaE_freet:
; Line 291
  0003e	6a 00		 push	 0
  00040	6a 78		 push	 120			; 00000078H
  00042	57		 push	 edi
  00043	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00046	e8 00 00 00 00	 call	 _luaM_realloc_
  0004b	83 c4 10	 add	 esp, 16			; 00000010H
  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
; Line 292
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
_luaE_freethread ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaE_setdebt
_TEXT	SEGMENT
_g$ = 8							; size = 4
_debt$ = 12						; size = 4
_luaE_setdebt PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 98
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 101
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _debt$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _g$[ebp]
  0000a	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0000d	03 56 0c	 add	 edx, DWORD PTR [esi+12]
  00010	8d 82 01 00 00
	80		 lea	 eax, DWORD PTR [edx-2147483647]
  00016	3b c8		 cmp	 ecx, eax
  00018	0f 4c c8	 cmovl	 ecx, eax
; Line 103
  0001b	2b d1		 sub	 edx, ecx
; Line 104
  0001d	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00020	89 56 08	 mov	 DWORD PTR [esi+8], edx
  00023	5e		 pop	 esi
; Line 105
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
_luaE_setdebt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_newthread
_TEXT	SEGMENT
_L$ = 8							; size = 4
_lua_newthread PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 255
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
; Line 256
  00006	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00009	8b 5f 10	 mov	 ebx, DWORD PTR [edi+16]
; Line 259
  0000c	83 7b 0c 00	 cmp	 DWORD PTR [ebx+12], 0
  00010	7e 09		 jle	 SHORT $LN1@lua_newthr
  00012	57		 push	 edi
  00013	e8 00 00 00 00	 call	 _luaC_step
  00018	83 c4 04	 add	 esp, 4
$LN1@lua_newthr:
; Line 261
  0001b	6a 78		 push	 120			; 00000078H
  0001d	6a 08		 push	 8
  0001f	6a 00		 push	 0
  00021	57		 push	 edi
  00022	e8 00 00 00 00	 call	 _luaM_realloc_
; Line 279
  00027	57		 push	 edi
  00028	8d 70 04	 lea	 esi, DWORD PTR [eax+4]
  0002b	0f b6 43 3c	 movzx	 eax, BYTE PTR [ebx+60]
  0002f	c6 46 04 08	 mov	 BYTE PTR [esi+4], 8
  00033	24 03		 and	 al, 3
  00035	88 46 05	 mov	 BYTE PTR [esi+5], al
  00038	8b 43 40	 mov	 eax, DWORD PTR [ebx+64]
  0003b	89 06		 mov	 DWORD PTR [esi], eax
  0003d	89 73 40	 mov	 DWORD PTR [ebx+64], esi
  00040	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00043	56		 push	 esi
  00044	89 30		 mov	 DWORD PTR [eax], esi
  00046	c7 40 08 48 00
	00 00		 mov	 DWORD PTR [eax+8], 72	; 00000048H
  0004d	33 c0		 xor	 eax, eax
  0004f	83 47 0c 10	 add	 DWORD PTR [edi+12], 16	; 00000010H
  00053	89 46 64	 mov	 DWORD PTR [esi+100], eax
  00056	89 46 58	 mov	 DWORD PTR [esi+88], eax
  00059	66 c7 46 70 00
	01		 mov	 WORD PTR [esi+112], 256	; 00000100H
  0005f	89 46 68	 mov	 DWORD PTR [esi+104], eax
  00062	89 5e 10	 mov	 DWORD PTR [esi+16], ebx
  00065	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  0006c	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00073	66 89 46 06	 mov	 WORD PTR [esi+6], ax
  00077	89 46 60	 mov	 DWORD PTR [esi+96], eax
  0007a	89 76 2c	 mov	 DWORD PTR [esi+44], esi
  0007d	89 46 30	 mov	 DWORD PTR [esi+48], eax
  00080	c7 46 6c 01 00
	00 00		 mov	 DWORD PTR [esi+108], 1
  00087	89 46 24	 mov	 DWORD PTR [esi+36], eax
  0008a	88 46 08	 mov	 BYTE PTR [esi+8], al
  0008d	89 46 5c	 mov	 DWORD PTR [esi+92], eax
  00090	0f b6 47 70	 movzx	 eax, BYTE PTR [edi+112]
  00094	88 46 70	 mov	 BYTE PTR [esi+112], al
  00097	8b 47 64	 mov	 eax, DWORD PTR [edi+100]
  0009a	89 46 64	 mov	 DWORD PTR [esi+100], eax
  0009d	8b 47 58	 mov	 eax, DWORD PTR [edi+88]
  000a0	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]
  000a3	89 46 58	 mov	 DWORD PTR [esi+88], eax
  000a6	89 4e 68	 mov	 DWORD PTR [esi+104], ecx
  000a9	8b 4b 7c	 mov	 ecx, DWORD PTR [ebx+124]
  000ac	8b 49 fc	 mov	 ecx, DWORD PTR [ecx-4]
  000af	89 4e fc	 mov	 DWORD PTR [esi-4], ecx
  000b2	e8 00 00 00 00	 call	 _stack_init
  000b7	83 c4 18	 add	 esp, 24			; 00000018H
; Line 281
  000ba	8b c6		 mov	 eax, esi
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
; Line 282
  000bf	5d		 pop	 ebp
  000c0	c3		 ret	 0
_lua_newthread ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_close
_TEXT	SEGMENT
_L$ = 8							; size = 4
_lua_close PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 341
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 344
  00003	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00006	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00009	ff 70 7c	 push	 DWORD PTR [eax+124]
  0000c	e8 00 00 00 00	 call	 _close_state
  00011	83 c4 04	 add	 esp, 4
; Line 345
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
_lua_close ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_newstate
_TEXT	SEGMENT
_f$ = 8							; size = 4
_ud$ = 12						; size = 4
_lua_newstate PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 295
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 299
  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _ud$[ebp]
  00007	68 30 03 00 00	 push	 816			; 00000330H
  0000c	6a 08		 push	 8
  0000e	6a 00		 push	 0
  00010	53		 push	 ebx
  00011	ff 55 08	 call	 DWORD PTR _f$[ebp]
  00014	83 c4 10	 add	 esp, 16			; 00000010H
; Line 300
  00017	85 c0		 test	 eax, eax
  00019	75 03		 jne	 SHORT $LN5@lua_newsta
  0001b	5b		 pop	 ebx
; Line 338
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
$LN5@lua_newsta:
  0001e	56		 push	 esi
; Line 302
  0001f	8d 70 78	 lea	 esi, DWORD PTR [eax+120]
; Line 303
  00022	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00029	57		 push	 edi
  0002a	8d 78 04	 lea	 edi, DWORD PTR [eax+4]
; Line 307
  0002d	33 c0		 xor	 eax, eax
  0002f	c6 47 04 08	 mov	 BYTE PTR [edi+4], 8
  00033	c6 46 3c 01	 mov	 BYTE PTR [esi+60], 1
  00037	66 89 47 06	 mov	 WORD PTR [edi+6], ax
  0003b	89 47 60	 mov	 DWORD PTR [edi+96], eax
  0003e	89 47 30	 mov	 DWORD PTR [edi+48], eax
  00041	89 47 58	 mov	 DWORD PTR [edi+88], eax
  00044	89 47 64	 mov	 DWORD PTR [edi+100], eax
  00047	89 47 68	 mov	 DWORD PTR [edi+104], eax
  0004a	89 47 24	 mov	 DWORD PTR [edi+36], eax
  0004d	88 47 08	 mov	 BYTE PTR [edi+8], al
  00050	89 47 5c	 mov	 DWORD PTR [edi+92], eax
; Line 308
  00053	8b 45 08	 mov	 eax, DWORD PTR _f$[ebp]
  00056	c6 47 05 01	 mov	 BYTE PTR [edi+5], 1
  0005a	89 77 10	 mov	 DWORD PTR [edi+16], esi
  0005d	c7 47 20 00 00
	00 00		 mov	 DWORD PTR [edi+32], 0
  00064	c7 47 14 00 00
	00 00		 mov	 DWORD PTR [edi+20], 0
  0006b	89 7f 2c	 mov	 DWORD PTR [edi+44], edi
  0006e	c7 47 6c 01 00
	00 00		 mov	 DWORD PTR [edi+108], 1
  00075	66 c7 47 70 00
	01		 mov	 WORD PTR [edi+112], 256	; 00000100H
; Line 311
  0007b	57		 push	 edi
  0007c	89 06		 mov	 DWORD PTR [esi], eax
  0007e	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  00081	89 7e 7c	 mov	 DWORD PTR [esi+124], edi
  00084	e8 00 00 00 00	 call	 _makeseed
  00089	89 46 38	 mov	 DWORD PTR [esi+56], eax
; Line 320
  0008c	66 c7 46 3e 00
	00		 mov	 WORD PTR [esi+62], 0
  00092	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00099	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
  000a0	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  000a7	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  000ae	c7 46 30 00 00
	00 00		 mov	 DWORD PTR [esi+48], 0
  000b5	c7 46 78 00 00
	00 00		 mov	 DWORD PTR [esi+120], 0
  000bc	c7 86 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+128], 0
  000c6	c6 46 3d 07	 mov	 BYTE PTR [esi+61], 7
; Line 321
  000ca	c7 46 64 00 00
	00 00		 mov	 DWORD PTR [esi+100], 0
  000d1	c7 46 60 00 00
	00 00		 mov	 DWORD PTR [esi+96], 0
  000d8	c7 46 48 00 00
	00 00		 mov	 DWORD PTR [esi+72], 0
  000df	c7 46 40 00 00
	00 00		 mov	 DWORD PTR [esi+64], 0
; Line 322
  000e6	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0
; Line 323
  000ed	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0
  000f4	c7 46 4c 00 00
	00 00		 mov	 DWORD PTR [esi+76], 0
; Line 324
  000fb	c7 46 5c 00 00
	00 00		 mov	 DWORD PTR [esi+92], 0
  00102	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0
  00109	c7 46 54 00 00
	00 00		 mov	 DWORD PTR [esi+84], 0
; Line 325
  00110	c7 46 68 00 00
	00 00		 mov	 DWORD PTR [esi+104], 0
; Line 326
  00117	c7 46 08 30 03
	00 00		 mov	 DWORD PTR [esi+8], 816	; 00000330H
; Line 327
  0011e	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
; Line 328
  00125	c7 46 6c 00 00
	00 00		 mov	 DWORD PTR [esi+108], 0
; Line 329
  0012c	c7 46 70 c8 00
	00 00		 mov	 DWORD PTR [esi+112], 200 ; 000000c8H
; Line 330
  00133	c7 46 74 c8 00
	00 00		 mov	 DWORD PTR [esi+116], 200 ; 000000c8H
; Line 332
  0013a	6a 00		 push	 0
  0013c	68 00 00 00 00	 push	 OFFSET _f_luaopen
  00141	57		 push	 edi
  00142	c7 86 e8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+232], 0
  0014c	c7 86 ec 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+236], 0
  00156	c7 86 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+240], 0
  00160	c7 86 f4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+244], 0
  0016a	c7 86 f8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+248], 0
  00174	c7 86 fc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+252], 0
  0017e	c7 86 00 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+256], 0
  00188	c7 86 04 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+260], 0
  00192	c7 86 08 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+264], 0
  0019c	e8 00 00 00 00	 call	 _luaD_rawrunprotected
  001a1	83 c4 10	 add	 esp, 16			; 00000010H
  001a4	85 c0		 test	 eax, eax
  001a6	74 0b		 je	 SHORT $LN1@lua_newsta
; Line 334
  001a8	57		 push	 edi
  001a9	e8 00 00 00 00	 call	 _close_state
  001ae	83 c4 04	 add	 esp, 4
; Line 335
  001b1	33 ff		 xor	 edi, edi
$LN1@lua_newsta:
; Line 337
  001b3	8b c7		 mov	 eax, edi
  001b5	5f		 pop	 edi
  001b6	5e		 pop	 esi
  001b7	5b		 pop	 ebx
; Line 338
  001b8	5d		 pop	 ebp
  001b9	c3		 ret	 0
_lua_newstate ENDP
_TEXT	ENDS
END
