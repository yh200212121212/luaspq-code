; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\0\luaspq-1.1\luaspq-1.1\src\lzio.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_luaZ_init
PUBLIC	_luaZ_read
PUBLIC	_luaZ_fill
EXTRN	_memcpy:PROC
; Function compile flags: /Ogtp
;	COMDAT _luaZ_fill
_TEXT	SEGMENT
_size$ = 8						; size = 4
_z$ = 8							; size = 4
_luaZ_fill PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lzio.c
; Line 23
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 25
  00004	8b 75 08	 mov	 esi, DWORD PTR _z$[ebp]
; Line 28
  00007	8d 45 08	 lea	 eax, DWORD PTR _size$[ebp]
  0000a	50		 push	 eax
  0000b	ff 76 0c	 push	 DWORD PTR [esi+12]
  0000e	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00011	ff 76 10	 push	 DWORD PTR [esi+16]
  00014	ff d0		 call	 eax
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 30
  00019	85 c0		 test	 eax, eax
  0001b	74 19		 je	 SHORT $LN1@luaZ_fill
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR _size$[ebp]
  00020	85 c9		 test	 ecx, ecx
  00022	74 12		 je	 SHORT $LN1@luaZ_fill
; Line 32
  00024	49		 dec	 ecx
; Line 33
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 0e		 mov	 DWORD PTR [esi], ecx
; Line 34
  0002a	8a 08		 mov	 cl, BYTE PTR [eax]
  0002c	40		 inc	 eax
  0002d	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00030	0f b6 c1	 movzx	 eax, cl
  00033	5e		 pop	 esi
; Line 35
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
$LN1@luaZ_fill:
; Line 31
  00036	83 c8 ff	 or	 eax, -1
  00039	5e		 pop	 esi
; Line 35
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
_luaZ_fill ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaZ_read
_TEXT	SEGMENT
_z$ = 8							; size = 4
_b$ = 12						; size = 4
_size$1 = 16						; size = 4
_n$ = 16						; size = 4
_luaZ_read PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lzio.c
; Line 48
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 49
  00004	8b 5d 10	 mov	 ebx, DWORD PTR _n$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	85 db		 test	 ebx, ebx
  0000b	74 73		 je	 SHORT $LN4@luaZ_read
  0000d	8b 75 08	 mov	 esi, DWORD PTR _z$[ebp]
  00010	8b 45 0c	 mov	 eax, DWORD PTR _b$[ebp]
$LL5@luaZ_read:
; Line 51
  00013	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00016	75 43		 jne	 SHORT $LN1@luaZ_read
; Line 52
  00018	8d 45 10	 lea	 eax, DWORD PTR _size$1[ebp]
  0001b	50		 push	 eax
  0001c	ff 76 0c	 push	 DWORD PTR [esi+12]
  0001f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00022	ff 76 10	 push	 DWORD PTR [esi+16]
  00025	ff d0		 call	 eax
  00027	8b c8		 mov	 ecx, eax
  00029	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002c	85 c9		 test	 ecx, ecx
  0002e	74 57		 je	 SHORT $LN15@luaZ_read
  00030	8b 45 10	 mov	 eax, DWORD PTR _size$1[ebp]
  00033	85 c0		 test	 eax, eax
  00035	74 50		 je	 SHORT $LN15@luaZ_read
  00037	8d 50 ff	 lea	 edx, DWORD PTR [eax-1]
  0003a	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0003d	89 16		 mov	 DWORD PTR [esi], edx
  0003f	8a 01		 mov	 al, BYTE PTR [ecx]
  00041	41		 inc	 ecx
  00042	0f b6 c0	 movzx	 eax, al
  00045	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  00048	83 f8 ff	 cmp	 eax, -1
  0004b	74 3a		 je	 SHORT $LN15@luaZ_read
; Line 55
  0004d	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  00050	89 06		 mov	 DWORD PTR [esi], eax
; Line 56
  00052	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00055	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00058	8b 45 0c	 mov	 eax, DWORD PTR _b$[ebp]
$LN1@luaZ_read:
; Line 59
  0005b	8b 3e		 mov	 edi, DWORD PTR [esi]
  0005d	3b df		 cmp	 ebx, edi
  0005f	0f 46 fb	 cmovbe	 edi, ebx
; Line 60
  00062	57		 push	 edi
  00063	ff 76 04	 push	 DWORD PTR [esi+4]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 _memcpy
; Line 63
  0006c	8b 45 0c	 mov	 eax, DWORD PTR _b$[ebp]
  0006f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00072	29 3e		 sub	 DWORD PTR [esi], edi
  00074	03 c7		 add	 eax, edi
  00076	01 7e 04	 add	 DWORD PTR [esi+4], edi
  00079	89 45 0c	 mov	 DWORD PTR _b$[ebp], eax
; Line 64
  0007c	2b df		 sub	 ebx, edi
  0007e	75 93		 jne	 SHORT $LL5@luaZ_read
$LN4@luaZ_read:
  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
; Line 66
  00082	33 c0		 xor	 eax, eax
  00084	5b		 pop	 ebx
; Line 67
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
$LN15@luaZ_read:
  00087	5f		 pop	 edi
  00088	5e		 pop	 esi
; Line 53
  00089	8b c3		 mov	 eax, ebx
  0008b	5b		 pop	 ebx
; Line 67
  0008c	5d		 pop	 ebp
  0008d	c3		 ret	 0
_luaZ_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaZ_init
_TEXT	SEGMENT
_L$ = 8							; size = 4
_z$ = 12						; size = 4
_reader$ = 16						; size = 4
_data$ = 20						; size = 4
_luaZ_init PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lzio.c
; Line 38
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 39
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _z$[ebp]
  00006	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00009	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; Line 40
  0000c	8b 45 10	 mov	 eax, DWORD PTR _reader$[ebp]
  0000f	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 41
  00012	8b 45 14	 mov	 eax, DWORD PTR _data$[ebp]
  00015	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
; Line 42
  00018	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
; Line 43
  0001e	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
; Line 44
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
_luaZ_init ENDP
_TEXT	ENDS
END
