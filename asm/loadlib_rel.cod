; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_04LNEJFJGI@path?$AA@			; `string'
PUBLIC	??_C@_05EEMJHCCC@cpath?$AA@			; `string'
PUBLIC	??_C@_09IPENMJM@searchers?$AA@			; `string'
PUBLIC	??_C@_07KOEABFCN@loadlib?$AA@			; `string'
PUBLIC	??_C@_0L@LLHGDMBK@searchpath?$AA@		; `string'
PUBLIC	??_C@_06LNOHAKGK@seeall?$AA@			; `string'
PUBLIC	??_C@_07GCEAJMEA@preload?$AA@			; `string'
PUBLIC	??_C@_06IILMCCFO@loaded?$AA@			; `string'
PUBLIC	??_C@_06BIEEJMKO@module?$AA@			; `string'
PUBLIC	??_C@_07FFLLPPLH@require?$AA@			; `string'
;	COMDAT ??_C@_07FFLLPPLH@require?$AA@
CONST	SEGMENT
??_C@_07FFLLPPLH@require?$AA@ DB 'require', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BIEEJMKO@module?$AA@
CONST	SEGMENT
??_C@_06BIEEJMKO@module?$AA@ DB 'module', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IILMCCFO@loaded?$AA@
CONST	SEGMENT
??_C@_06IILMCCFO@loaded?$AA@ DB 'loaded', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GCEAJMEA@preload?$AA@
CONST	SEGMENT
??_C@_07GCEAJMEA@preload?$AA@ DB 'preload', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LNOHAKGK@seeall?$AA@
CONST	SEGMENT
??_C@_06LNOHAKGK@seeall?$AA@ DB 'seeall', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LLHGDMBK@searchpath?$AA@
CONST	SEGMENT
??_C@_0L@LLHGDMBK@searchpath?$AA@ DB 'searchpath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KOEABFCN@loadlib?$AA@
CONST	SEGMENT
??_C@_07KOEABFCN@loadlib?$AA@ DB 'loadlib', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09IPENMJM@searchers?$AA@
CONST	SEGMENT
??_C@_09IPENMJM@searchers?$AA@ DB 'searchers', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05EEMJHCCC@cpath?$AA@
CONST	SEGMENT
??_C@_05EEMJHCCC@cpath?$AA@ DB 'cpath', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LNEJFJGI@path?$AA@
CONST	SEGMENT
??_C@_04LNEJFJGI@path?$AA@ DB 'path', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_CLIBS	DD	00H
?searchers@?1??createsearcherstable@@9@9 DD FLAT:_searcher_preload ; `createsearcherstable'::`2'::searchers
	DD	FLAT:_searcher_Lua
	DD	FLAT:_searcher_C
	DD	FLAT:_searcher_Croot
	DD	00H
_pk_funcs DD	FLAT:??_C@_07KOEABFCN@loadlib?$AA@
	DD	FLAT:_ll_loadlib
	DD	FLAT:??_C@_0L@LLHGDMBK@searchpath?$AA@
	DD	FLAT:_ll_searchpath
	DD	FLAT:??_C@_06LNOHAKGK@seeall?$AA@
	DD	FLAT:_ll_seeall
	DD	FLAT:??_C@_07GCEAJMEA@preload?$AA@
	DD	00H
	DD	FLAT:??_C@_05EEMJHCCC@cpath?$AA@
	DD	00H
	DD	FLAT:??_C@_04LNEJFJGI@path?$AA@
	DD	00H
	DD	FLAT:??_C@_09IPENMJM@searchers?$AA@
	DD	00H
	DD	FLAT:??_C@_06IILMCCFO@loaded?$AA@
	DD	00H
	DD	00H
	DD	00H
_ll_funcs DD	FLAT:??_C@_06BIEEJMKO@module?$AA@
	DD	FLAT:_ll_module
	DD	FLAT:??_C@_07FFLLPPLH@require?$AA@
	DD	FLAT:_ll_require
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	_luaopen_package
PUBLIC	??_C@_01KICIPPFI@?2?$AA@			; `string'
PUBLIC	??_C@_0CG@KOECHPEJ@unable?5to?5get?5process?5executable@ ; `string'
PUBLIC	??_C@_01DCLJPIOD@?$CB?$AA@			; `string'
PUBLIC	??_C@_0DL@DPPJHBHJ@dynamic?5libraries?5not?5enabled?$DL?5c@ ; `string'
PUBLIC	??_C@_06LBPOAOHH@absent?$AA@			; `string'
PUBLIC	??_C@_04HKFDNBLD@init?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_01OGPIMHDM@?$DP?$AA@			; `string'
PUBLIC	??_C@_0P@NEBKIMDC@?6?7no?5file?5?8?$CFs?8?$AA@	; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	??_C@_0BO@COFCKCAL@?8package?4?$CFs?8?5must?5be?5a?5string?$AA@ ; `string'
PUBLIC	??_C@_0CO@KHMIPLKM@error?5loading?5module?5?8?$CFs?8?5from?5f@ ; `string'
PUBLIC	??_C@_01IDAFKMJL@_?$AA@				; `string'
PUBLIC	??_C@_0L@KHKMBFOE@luaopen_?$CFs?$AA@		; `string'
PUBLIC	??_C@_0BO@KOILFIGK@?6?7no?5module?5?8?$CFs?8?5in?5file?5?8?$CFs?8?$AA@ ; `string'
PUBLIC	??_C@_08LBNNGFKE@_PRELOAD?$AA@			; `string'
PUBLIC	??_C@_0CB@NPNABMBF@?6?7no?5field?5package?4preload?$FL?8?$CFs?8?$FN@ ; `string'
PUBLIC	??_C@_0CE@JEDHJEBL@?8package?4searchers?8?5must?5be?5a?5ta@ ; `string'
PUBLIC	??_C@_0BJ@HFHHABH@module?5?8?$CFs?8?5not?5found?3?$CFs?$AA@ ; `string'
PUBLIC	??_C@_07PINPBNPB@_LOADED?$AA@			; `string'
PUBLIC	??_C@_01INIBCBCB@f?$AA@				; `string'
PUBLIC	??_C@_0CI@GKOMOAFD@?8module?8?5not?5called?5from?5a?5Lua?5f@ ; `string'
PUBLIC	??_C@_02CCIJHOCI@_M?$AA@			; `string'
PUBLIC	??_C@_05ICMCJINN@_NAME?$AA@			; `string'
PUBLIC	??_C@_08HONLOGDK@_PACKAGE?$AA@			; `string'
PUBLIC	??_C@_07NHABFFHN@__index?$AA@			; `string'
PUBLIC	??_C@_09EFECHJCA@LUA_NOENV?$AA@			; `string'
PUBLIC	??_C@_03MEOBNKEM@?$DL?$AB?$DL?$AA@		; `string'
PUBLIC	??_C@_02BEDCMDKE@?$DL?$DL?$AA@			; `string'
PUBLIC	??_C@_01KHDNNMEB@?$AB?$AA@			; `string'
PUBLIC	??_C@_07JAOCDFCG@loaders?$AA@			; `string'
PUBLIC	??_C@_04BDLIKKMN@__gc?$AA@			; `string'
PUBLIC	??_C@_0CF@KMBCNEPN@?4?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?2init@ ; `string'
PUBLIC	??_C@_08GLJMJBPN@LUA_PATH?$AA@			; `string'
PUBLIC	??_C@_0N@NMCAMIJK@LUA_PATH_1_1?$AA@		; `string'
PUBLIC	??_C@_0CG@JAFDBDLK@?4?2?$DP?4dll?$DL?$CB?2?4?4?2?2?$DP?4dll?$DL?$CB?2?4?4?2?2loadal@ ; `string'
PUBLIC	??_C@_09FBPOOEID@LUA_CPATH?$AA@			; `string'
PUBLIC	??_C@_0O@JEDNGFBJ@LUA_CPATH_1_1?$AA@		; `string'
PUBLIC	??_C@_0L@GKIMPOMK@?2?6?$DL?6?$DP?6?$CB?6?9?6?$AA@ ; `string'
PUBLIC	??_C@_06HEJKKHEK@config?$AA@			; `string'
PUBLIC	__real@405bc00000000000
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__getenv:PROC
EXTRN	__imp__strchr:PROC
EXTRN	__imp__strrchr:PROC
EXTRN	_lua_gettop:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_rotate:PROC
EXTRN	_lua_isstring:PROC
EXTRN	_lua_iscfunction:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_toboolean:PROC
EXTRN	_lua_tolstring:PROC
EXTRN	_lua_touserdata:PROC
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_pushlstring:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_lua_pushfstring:PROC
EXTRN	_lua_pushcclosure:PROC
EXTRN	_lua_pushboolean:PROC
EXTRN	_lua_pushlightuserdata:PROC
EXTRN	_lua_getfield:PROC
EXTRN	_lua_rawgeti:PROC
EXTRN	_lua_rawgetp:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_getmetatable:PROC
EXTRN	_lua_setfield:PROC
EXTRN	_lua_rawseti:PROC
EXTRN	_lua_rawsetp:PROC
EXTRN	_lua_setmetatable:PROC
EXTRN	_lua_callk:PROC
EXTRN	_lua_getstack:PROC
EXTRN	_lua_getinfo:PROC
EXTRN	_lua_setupvalue:PROC
EXTRN	_luaL_checkversion_:PROC
EXTRN	_luaL_checklstring:PROC
EXTRN	_luaL_optlstring:PROC
EXTRN	_luaL_checktype:PROC
EXTRN	_luaL_error:PROC
EXTRN	_luaL_loadfilex:PROC
EXTRN	_luaL_len:PROC
EXTRN	_luaL_gsub:PROC
EXTRN	_luaL_setfuncs:PROC
EXTRN	_luaL_getsubtable:PROC
EXTRN	_luaL_buffinit:PROC
EXTRN	_luaL_addvalue:PROC
EXTRN	_luaL_pushresult:PROC
EXTRN	_luaL_pushmodule:PROC
EXTRN	__imp__GetModuleFileNameA@12:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@405bc00000000000
CONST	SEGMENT
__real@405bc00000000000 DQ 0405bc00000000000r	; 111
CONST	ENDS
;	COMDAT ??_C@_06HEJKKHEK@config?$AA@
CONST	SEGMENT
??_C@_06HEJKKHEK@config?$AA@ DB 'config', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GKIMPOMK@?2?6?$DL?6?$DP?6?$CB?6?9?6?$AA@
CONST	SEGMENT
??_C@_0L@GKIMPOMK@?2?6?$DL?6?$DP?6?$CB?6?9?6?$AA@ DB '\', 0aH, ';', 0aH, '?'
	DB	0aH, '!', 0aH, '-', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JEDNGFBJ@LUA_CPATH_1_1?$AA@
CONST	SEGMENT
??_C@_0O@JEDNGFBJ@LUA_CPATH_1_1?$AA@ DB 'LUA_CPATH_1_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09FBPOOEID@LUA_CPATH?$AA@
CONST	SEGMENT
??_C@_09FBPOOEID@LUA_CPATH?$AA@ DB 'LUA_CPATH', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JAFDBDLK@?4?2?$DP?4dll?$DL?$CB?2?4?4?2?2?$DP?4dll?$DL?$CB?2?4?4?2?2loadal@
CONST	SEGMENT
??_C@_0CG@JAFDBDLK@?4?2?$DP?4dll?$DL?$CB?2?4?4?2?2?$DP?4dll?$DL?$CB?2?4?4?2?2loadal@ DB '.'
	DB	'\?.dll;!\..\\?.dll;!\..\\loadall.dll', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NMCAMIJK@LUA_PATH_1_1?$AA@
CONST	SEGMENT
??_C@_0N@NMCAMIJK@LUA_PATH_1_1?$AA@ DB 'LUA_PATH_1_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GLJMJBPN@LUA_PATH?$AA@
CONST	SEGMENT
??_C@_08GLJMJBPN@LUA_PATH?$AA@ DB 'LUA_PATH', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KMBCNEPN@?4?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?2init@
CONST	SEGMENT
??_C@_0CF@KMBCNEPN@?4?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?2init@ DB '.'
	DB	'\?.lua;!\..\\?.lua;!\..\\?\init.lua', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04BDLIKKMN@__gc?$AA@
CONST	SEGMENT
??_C@_04BDLIKKMN@__gc?$AA@ DB '__gc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JAOCDFCG@loaders?$AA@
CONST	SEGMENT
??_C@_07JAOCDFCG@loaders?$AA@ DB 'loaders', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KHDNNMEB@?$AB?$AA@
CONST	SEGMENT
??_C@_01KHDNNMEB@?$AB?$AA@ DB 01H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BEDCMDKE@?$DL?$DL?$AA@
CONST	SEGMENT
??_C@_02BEDCMDKE@?$DL?$DL?$AA@ DB ';;', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MEOBNKEM@?$DL?$AB?$DL?$AA@
CONST	SEGMENT
??_C@_03MEOBNKEM@?$DL?$AB?$DL?$AA@ DB ';', 01H, ';', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EFECHJCA@LUA_NOENV?$AA@
CONST	SEGMENT
??_C@_09EFECHJCA@LUA_NOENV?$AA@ DB 'LUA_NOENV', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NHABFFHN@__index?$AA@
CONST	SEGMENT
??_C@_07NHABFFHN@__index?$AA@ DB '__index', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HONLOGDK@_PACKAGE?$AA@
CONST	SEGMENT
??_C@_08HONLOGDK@_PACKAGE?$AA@ DB '_PACKAGE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05ICMCJINN@_NAME?$AA@
CONST	SEGMENT
??_C@_05ICMCJINN@_NAME?$AA@ DB '_NAME', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02CCIJHOCI@_M?$AA@
CONST	SEGMENT
??_C@_02CCIJHOCI@_M?$AA@ DB '_M', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GKOMOAFD@?8module?8?5not?5called?5from?5a?5Lua?5f@
CONST	SEGMENT
??_C@_0CI@GKOMOAFD@?8module?8?5not?5called?5from?5a?5Lua?5f@ DB '''module'
	DB	''' not called from a Lua function', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01INIBCBCB@f?$AA@
CONST	SEGMENT
??_C@_01INIBCBCB@f?$AA@ DB 'f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07PINPBNPB@_LOADED?$AA@
CONST	SEGMENT
??_C@_07PINPBNPB@_LOADED?$AA@ DB '_LOADED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HFHHABH@module?5?8?$CFs?8?5not?5found?3?$CFs?$AA@
CONST	SEGMENT
??_C@_0BJ@HFHHABH@module?5?8?$CFs?8?5not?5found?3?$CFs?$AA@ DB 'module '''
	DB	'%s'' not found:%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@JEDHJEBL@?8package?4searchers?8?5must?5be?5a?5ta@
CONST	SEGMENT
??_C@_0CE@JEDHJEBL@?8package?4searchers?8?5must?5be?5a?5ta@ DB '''package'
	DB	'.searchers'' must be a table', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NPNABMBF@?6?7no?5field?5package?4preload?$FL?8?$CFs?8?$FN@
CONST	SEGMENT
??_C@_0CB@NPNABMBF@?6?7no?5field?5package?4preload?$FL?8?$CFs?8?$FN@ DB 0aH
	DB	09H, 'no field package.preload[''%s'']', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LBNNGFKE@_PRELOAD?$AA@
CONST	SEGMENT
??_C@_08LBNNGFKE@_PRELOAD?$AA@ DB '_PRELOAD', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KOILFIGK@?6?7no?5module?5?8?$CFs?8?5in?5file?5?8?$CFs?8?$AA@
CONST	SEGMENT
??_C@_0BO@KOILFIGK@?6?7no?5module?5?8?$CFs?8?5in?5file?5?8?$CFs?8?$AA@ DB 0aH
	DB	09H, 'no module ''%s'' in file ''%s''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KHKMBFOE@luaopen_?$CFs?$AA@
CONST	SEGMENT
??_C@_0L@KHKMBFOE@luaopen_?$CFs?$AA@ DB 'luaopen_%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01IDAFKMJL@_?$AA@
CONST	SEGMENT
??_C@_01IDAFKMJL@_?$AA@ DB '_', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@KHMIPLKM@error?5loading?5module?5?8?$CFs?8?5from?5f@
CONST	SEGMENT
??_C@_0CO@KHMIPLKM@error?5loading?5module?5?8?$CFs?8?5from?5f@ DB 'error '
	DB	'loading module ''%s'' from file ''%s'':', 0aH, 09H, '%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@COFCKCAL@?8package?4?$CFs?8?5must?5be?5a?5string?$AA@
CONST	SEGMENT
??_C@_0BO@COFCKCAL@?8package?4?$CFs?8?5must?5be?5a?5string?$AA@ DB '''pac'
	DB	'kage.%s'' must be a string', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NEBKIMDC@?6?7no?5file?5?8?$CFs?8?$AA@
CONST	SEGMENT
??_C@_0P@NEBKIMDC@?6?7no?5file?5?8?$CFs?8?$AA@ DB 0aH, 09H, 'no file ''%s'
	DB	'''', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_01OGPIMHDM@?$DP?$AA@
CONST	SEGMENT
??_C@_01OGPIMHDM@?$DP?$AA@ DB '?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKFDNBLD@init?$AA@
CONST	SEGMENT
??_C@_04HKFDNBLD@init?$AA@ DB 'init', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LBPOAOHH@absent?$AA@
CONST	SEGMENT
??_C@_06LBPOAOHH@absent?$AA@ DB 'absent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@DPPJHBHJ@dynamic?5libraries?5not?5enabled?$DL?5c@
CONST	SEGMENT
??_C@_0DL@DPPJHBHJ@dynamic?5libraries?5not?5enabled?$DL?5c@ DB 'dynamic l'
	DB	'ibraries not enabled; check your Lua installation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01DCLJPIOD@?$CB?$AA@
CONST	SEGMENT
??_C@_01DCLJPIOD@?$CB?$AA@ DB '!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KOECHPEJ@unable?5to?5get?5process?5executable@
CONST	SEGMENT
??_C@_0CG@KOECHPEJ@unable?5to?5get?5process?5executable@ DB 'unable to ge'
	DB	't process executable path', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KICIPPFI@?2?$AA@
CONST	SEGMENT
??_C@_01KICIPPFI@?2?$AA@ DB '\', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT _createclibstable
_TEXT	SEGMENT
_L$ = 8							; size = 4
_createclibstable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 825
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 826
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _lua_createtable
; Line 827
  00011	6a 01		 push	 1
  00013	6a 00		 push	 0
  00015	56		 push	 esi
  00016	e8 00 00 00 00	 call	 _lua_createtable
; Line 828
  0001b	6a 00		 push	 0
  0001d	68 00 00 00 00	 push	 OFFSET _gctm
  00022	56		 push	 esi
  00023	e8 00 00 00 00	 call	 _lua_pushcclosure
; Line 829
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_04BDLIKKMN@__gc?$AA@
  0002d	6a fe		 push	 -2			; fffffffeH
  0002f	56		 push	 esi
  00030	e8 00 00 00 00	 call	 _lua_setfield
; Line 830
  00035	6a fe		 push	 -2			; fffffffeH
  00037	56		 push	 esi
  00038	e8 00 00 00 00	 call	 _lua_setmetatable
; Line 831
  0003d	68 00 00 00 00	 push	 OFFSET _CLIBS
  00042	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00047	56		 push	 esi
  00048	e8 00 00 00 00	 call	 _lua_rawsetp
  0004d	83 c4 44	 add	 esp, 68			; 00000044H
  00050	5e		 pop	 esi
; Line 832
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
_createclibstable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _createsearcherstable
_TEXT	SEGMENT
_L$ = 8							; size = 4
_createsearcherstable PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 801
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 806
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	6a 00		 push	 0
  0000a	6a 04		 push	 4
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _lua_createtable
; Line 808
  00012	33 ff		 xor	 edi, edi
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
  00017	39 3d 00 00 00
	00		 cmp	 DWORD PTR ?searchers@?1??createsearcherstable@@9@9, edi
  0001d	74 36		 je	 SHORT $LN1@createsear
  0001f	53		 push	 ebx
  00020	bb 00 00 00 00	 mov	 ebx, OFFSET ?searchers@?1??createsearcherstable@@9@9
$LL3@createsear:
; Line 809
  00025	6a fe		 push	 -2			; fffffffeH
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 810
  0002d	6a 01		 push	 1
  0002f	ff 33		 push	 DWORD PTR [ebx]
  00031	56		 push	 esi
  00032	e8 00 00 00 00	 call	 _lua_pushcclosure
; Line 811
  00037	47		 inc	 edi
  00038	8b c7		 mov	 eax, edi
  0003a	99		 cdq
  0003b	52		 push	 edx
  0003c	50		 push	 eax
  0003d	6a fe		 push	 -2			; fffffffeH
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 _lua_rawseti
  00045	8d 1c bd 00 00
	00 00		 lea	 ebx, DWORD PTR ?searchers@?1??createsearcherstable@@9@9[edi*4]
  0004c	83 c4 24	 add	 esp, 36			; 00000024H
  0004f	83 3b 00	 cmp	 DWORD PTR [ebx], 0
  00052	75 d1		 jne	 SHORT $LL3@createsear
  00054	5b		 pop	 ebx
$LN1@createsear:
; Line 814
  00055	6a ff		 push	 -1
  00057	56		 push	 esi
  00058	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 815
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_07JAOCDFCG@loaders?$AA@
  00062	6a fd		 push	 -3			; fffffffdH
  00064	56		 push	 esi
  00065	e8 00 00 00 00	 call	 _lua_setfield
; Line 817
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_09IPENMJM@searchers?$AA@
  0006f	6a fe		 push	 -2			; fffffffeH
  00071	56		 push	 esi
  00072	e8 00 00 00 00	 call	 _lua_setfield
  00077	83 c4 20	 add	 esp, 32			; 00000020H
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
; Line 818
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
_createsearcherstable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _setpath
_TEXT	SEGMENT
_L$ = 8							; size = 4
_fieldname$ = 12					; size = 4
_envname1$ = 16						; size = 4
_envname2$ = 20						; size = 4
_def$ = 24						; size = 4
_setpath PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 758
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; Line 759
  00005	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__getenv
  0000b	57		 push	 edi
  0000c	ff 75 10	 push	 DWORD PTR _envname1$[ebp]
  0000f	ff d6		 call	 esi
; Line 760
  00011	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00014	8b d8		 mov	 ebx, eax
  00016	83 c4 04	 add	 esp, 4
  00019	85 db		 test	 ebx, ebx
  0001b	75 0e		 jne	 SHORT $LN9@setpath
; Line 761
  0001d	ff 75 14	 push	 DWORD PTR _envname2$[ebp]
  00020	ff d6		 call	 esi
  00022	8b d8		 mov	 ebx, eax
  00024	83 c4 04	 add	 esp, 4
; Line 762
  00027	85 db		 test	 ebx, ebx
  00029	74 60		 je	 SHORT $LN2@setpath
$LN9@setpath:
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_09EFECHJCA@LUA_NOENV?$AA@
  00030	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00035	57		 push	 edi
  00036	e8 00 00 00 00	 call	 _lua_getfield
  0003b	6a ff		 push	 -1
  0003d	57		 push	 edi
  0003e	e8 00 00 00 00	 call	 _lua_toboolean
  00043	6a fe		 push	 -2			; fffffffeH
  00045	57		 push	 edi
  00046	8b f0		 mov	 esi, eax
  00048	e8 00 00 00 00	 call	 _lua_settop
  0004d	83 c4 1c	 add	 esp, 28			; 0000001cH
  00050	85 f6		 test	 esi, esi
  00052	75 37		 jne	 SHORT $LN2@setpath
; Line 767
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_03MEOBNKEM@?$DL?$AB?$DL?$AA@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_02BEDCMDKE@?$DL?$DL?$AA@
  0005e	53		 push	 ebx
  0005f	57		 push	 edi
  00060	e8 00 00 00 00	 call	 _luaL_gsub
; Line 768
  00065	ff 75 18	 push	 DWORD PTR _def$[ebp]
  00068	68 00 00 00 00	 push	 OFFSET ??_C@_01KHDNNMEB@?$AB?$AA@
  0006d	50		 push	 eax
  0006e	57		 push	 edi
  0006f	e8 00 00 00 00	 call	 _luaL_gsub
; Line 769
  00074	6a ff		 push	 -1
  00076	6a fe		 push	 -2			; fffffffeH
  00078	57		 push	 edi
  00079	e8 00 00 00 00	 call	 _lua_rotate
  0007e	6a fe		 push	 -2			; fffffffeH
  00080	57		 push	 edi
  00081	e8 00 00 00 00	 call	 _lua_settop
  00086	83 c4 34	 add	 esp, 52			; 00000034H
  00089	eb 0c		 jmp	 SHORT $LN1@setpath
$LN2@setpath:
; Line 763
  0008b	ff 75 18	 push	 DWORD PTR _def$[ebp]
  0008e	57		 push	 edi
  0008f	e8 00 00 00 00	 call	 _lua_pushstring
  00094	83 c4 08	 add	 esp, 8
$LN1@setpath:
; Line 771
  00097	57		 push	 edi
  00098	e8 00 00 00 00	 call	 _setprogdir
; Line 772
  0009d	ff 75 0c	 push	 DWORD PTR _fieldname$[ebp]
  000a0	6a fe		 push	 -2			; fffffffeH
  000a2	57		 push	 edi
  000a3	e8 00 00 00 00	 call	 _lua_setfield
  000a8	83 c4 10	 add	 esp, 16			; 00000010H
  000ab	5f		 pop	 edi
  000ac	5e		 pop	 esi
  000ad	5b		 pop	 ebx
; Line 773
  000ae	5d		 pop	 ebp
  000af	c3		 ret	 0
_setpath ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _noenv
_TEXT	SEGMENT
_L$ = 8							; size = 4
_noenv	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 748
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 750
  00005	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_09EFECHJCA@LUA_NOENV?$AA@
  0000d	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00012	57		 push	 edi
  00013	e8 00 00 00 00	 call	 _lua_getfield
; Line 751
  00018	6a ff		 push	 -1
  0001a	57		 push	 edi
  0001b	e8 00 00 00 00	 call	 _lua_toboolean
; Line 752
  00020	6a fe		 push	 -2			; fffffffeH
  00022	57		 push	 edi
  00023	8b f0		 mov	 esi, eax
  00025	e8 00 00 00 00	 call	 _lua_settop
  0002a	83 c4 1c	 add	 esp, 28			; 0000001cH
; Line 753
  0002d	8b c6		 mov	 eax, esi
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
; Line 754
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
_noenv	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _ll_seeall
_TEXT	SEGMENT
_L$ = 8							; size = 4
_ll_seeall PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 724
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 725
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 05		 push	 5
  00009	6a 01		 push	 1
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _luaL_checktype
; Line 726
  00011	6a 01		 push	 1
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 _lua_getmetatable
  00019	83 c4 14	 add	 esp, 20			; 00000014H
  0001c	85 c0		 test	 eax, eax
  0001e	75 1c		 jne	 SHORT $LN1@ll_seeall
; Line 727
  00020	6a 01		 push	 1
  00022	50		 push	 eax
  00023	56		 push	 esi
  00024	e8 00 00 00 00	 call	 _lua_createtable
; Line 728
  00029	6a ff		 push	 -1
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 729
  00031	6a 01		 push	 1
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 _lua_setmetatable
  00039	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN1@ll_seeall:
; Line 731
  0003c	6a 00		 push	 0
  0003e	6a 02		 push	 2
  00040	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00045	56		 push	 esi
  00046	e8 00 00 00 00	 call	 _lua_rawgeti
; Line 732
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_07NHABFFHN@__index?$AA@
  00050	6a fe		 push	 -2			; fffffffeH
  00052	56		 push	 esi
  00053	e8 00 00 00 00	 call	 _lua_setfield
  00058	83 c4 1c	 add	 esp, 28			; 0000001cH
; Line 733
  0005b	33 c0		 xor	 eax, eax
  0005d	5e		 pop	 esi
; Line 734
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_ll_seeall ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _ll_module
_TEXT	SEGMENT
_L$ = 8							; size = 4
_ll_module PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 706
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; Line 707
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	57		 push	 edi
  00009	6a 00		 push	 0
  0000b	6a 01		 push	 1
  0000d	56		 push	 esi
  0000e	e8 00 00 00 00	 call	 _luaL_checklstring
; Line 708
  00013	56		 push	 esi
  00014	8b f8		 mov	 edi, eax
  00016	e8 00 00 00 00	 call	 _lua_gettop
; Line 709
  0001b	6a 01		 push	 1
  0001d	57		 push	 edi
  0001e	56		 push	 esi
  0001f	8b d8		 mov	 ebx, eax
  00021	e8 00 00 00 00	 call	 _luaL_pushmodule
; Line 711
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_05ICMCJINN@_NAME?$AA@
  0002b	6a ff		 push	 -1
  0002d	56		 push	 esi
  0002e	e8 00 00 00 00	 call	 _lua_getfield
  00033	83 c4 28	 add	 esp, 40			; 00000028H
; Line 712
  00036	6a fe		 push	 -2			; fffffffeH
  00038	56		 push	 esi
  00039	85 c0		 test	 eax, eax
  0003b	74 0a		 je	 SHORT $LN2@ll_module
  0003d	e8 00 00 00 00	 call	 _lua_settop
  00042	83 c4 08	 add	 esp, 8
; Line 713
  00045	eb 0f		 jmp	 SHORT $LN1@ll_module
$LN2@ll_module:
; Line 714
  00047	e8 00 00 00 00	 call	 _lua_settop
; Line 715
  0004c	57		 push	 edi
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 _modinit
  00053	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@ll_module:
; Line 717
  00056	6a ff		 push	 -1
  00058	56		 push	 esi
  00059	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 718
  0005e	56		 push	 esi
  0005f	e8 00 00 00 00	 call	 _set_env
; Line 719
  00064	53		 push	 ebx
  00065	56		 push	 esi
  00066	e8 00 00 00 00	 call	 _dooptions
  0006b	83 c4 14	 add	 esp, 20			; 00000014H
; Line 720
  0006e	b8 01 00 00 00	 mov	 eax, 1
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
; Line 721
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
_ll_module ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _modinit
_TEXT	SEGMENT
_L$ = 8							; size = 4
_modname$ = 12						; size = 4
_modinit PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 691
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 693
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	6a ff		 push	 -1
  0000a	56		 push	 esi
  0000b	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 694
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_02CCIJHOCI@_M?$AA@
  00015	6a fe		 push	 -2			; fffffffeH
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 _lua_setfield
; Line 695
  0001d	8b 7d 0c	 mov	 edi, DWORD PTR _modname$[ebp]
  00020	57		 push	 edi
  00021	56		 push	 esi
  00022	e8 00 00 00 00	 call	 _lua_pushstring
; Line 696
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_05ICMCJINN@_NAME?$AA@
  0002c	6a fe		 push	 -2			; fffffffeH
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 _lua_setfield
; Line 697
  00034	6a 2e		 push	 46			; 0000002eH
  00036	57		 push	 edi
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strrchr
  0003d	83 c4 30	 add	 esp, 48			; 00000030H
; Line 698
  00040	85 c0		 test	 eax, eax
  00042	75 04		 jne	 SHORT $LN2@modinit
  00044	8b c7		 mov	 eax, edi
  00046	eb 01		 jmp	 SHORT $LN1@modinit
$LN2@modinit:
; Line 699
  00048	40		 inc	 eax
$LN1@modinit:
; Line 701
  00049	2b c7		 sub	 eax, edi
  0004b	50		 push	 eax
  0004c	57		 push	 edi
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 _lua_pushlstring
; Line 702
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_08HONLOGDK@_PACKAGE?$AA@
  00058	6a fe		 push	 -2			; fffffffeH
  0005a	56		 push	 esi
  0005b	e8 00 00 00 00	 call	 _lua_setfield
  00060	83 c4 18	 add	 esp, 24			; 00000018H
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
; Line 703
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
_modinit ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _dooptions
_TEXT	SEGMENT
_L$ = 8							; size = 4
_n$ = 12						; size = 4
_dooptions PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 679
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 681
  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _n$[ebp]
  00007	56		 push	 esi
  00008	be 02 00 00 00	 mov	 esi, 2
  0000d	3b de		 cmp	 ebx, esi
  0000f	7c 39		 jl	 SHORT $LN2@dooptions
  00011	57		 push	 edi
  00012	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
$LL4@dooptions:
; Line 682
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	e8 00 00 00 00	 call	 _lua_type
  0001c	83 c4 08	 add	 esp, 8
  0001f	83 f8 06	 cmp	 eax, 6
  00022	75 20		 jne	 SHORT $LN3@dooptions
; Line 683
  00024	56		 push	 esi
  00025	57		 push	 edi
  00026	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 684
  0002b	6a fe		 push	 -2			; fffffffeH
  0002d	57		 push	 edi
  0002e	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 685
  00033	6a 00		 push	 0
  00035	6a 00		 push	 0
  00037	6a 00		 push	 0
  00039	6a 01		 push	 1
  0003b	57		 push	 edi
  0003c	e8 00 00 00 00	 call	 _lua_callk
  00041	83 c4 24	 add	 esp, 36			; 00000024H
$LN3@dooptions:
; Line 681
  00044	46		 inc	 esi
  00045	3b f3		 cmp	 esi, ebx
  00047	7e cc		 jle	 SHORT $LL4@dooptions
  00049	5f		 pop	 edi
$LN2@dooptions:
  0004a	5e		 pop	 esi
  0004b	5b		 pop	 ebx
; Line 688
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
_dooptions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _set_env
_TEXT	SEGMENT
_ar$ = -104						; size = 100
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_set_env PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 667
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
; Line 671
  00014	8d 45 98	 lea	 eax, DWORD PTR _ar$[ebp]
  00017	50		 push	 eax
  00018	6a 01		 push	 1
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 _lua_getstack
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
  00023	85 c0		 test	 eax, eax
  00025	74 25		 je	 SHORT $LN1@set_env
  00027	8d 45 98	 lea	 eax, DWORD PTR _ar$[ebp]
  0002a	50		 push	 eax
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_01INIBCBCB@f?$AA@
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 _lua_getinfo
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH
  00039	85 c0		 test	 eax, eax
  0003b	74 0f		 je	 SHORT $LN1@set_env
  0003d	6a ff		 push	 -1
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 _lua_iscfunction
  00045	83 c4 08	 add	 esp, 8
  00048	85 c0		 test	 eax, eax
  0004a	74 0e		 je	 SHORT $LN2@set_env
$LN1@set_env:
; Line 672
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@GKOMOAFD@?8module?8?5not?5called?5from?5a?5Lua?5f@
  00051	56		 push	 esi
  00052	e8 00 00 00 00	 call	 _luaL_error
  00057	83 c4 08	 add	 esp, 8
$LN2@set_env:
; Line 673
  0005a	6a fe		 push	 -2			; fffffffeH
  0005c	56		 push	 esi
  0005d	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 674
  00062	6a 01		 push	 1
  00064	6a fe		 push	 -2			; fffffffeH
  00066	56		 push	 esi
  00067	e8 00 00 00 00	 call	 _lua_setupvalue
; Line 675
  0006c	6a fe		 push	 -2			; fffffffeH
  0006e	56		 push	 esi
  0006f	e8 00 00 00 00	 call	 _lua_settop
; Line 676
  00074	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00077	83 c4 1c	 add	 esp, 28			; 0000001cH
  0007a	33 cd		 xor	 ecx, ebp
  0007c	5e		 pop	 esi
  0007d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
_set_env ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _ll_require
_TEXT	SEGMENT
_L$ = 8							; size = 4
_ll_require PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 630
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 631
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	6a 00		 push	 0
  0000a	6a 01		 push	 1
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _luaL_checklstring
; Line 632
  00012	6a 01		 push	 1
  00014	56		 push	 esi
  00015	8b f8		 mov	 edi, eax
  00017	e8 00 00 00 00	 call	 _lua_settop
; Line 633
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_07PINPBNPB@_LOADED?$AA@
  00021	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 _lua_getfield
; Line 634
  0002c	57		 push	 edi
  0002d	6a 02		 push	 2
  0002f	56		 push	 esi
  00030	e8 00 00 00 00	 call	 _lua_getfield
; Line 635
  00035	6a ff		 push	 -1
  00037	56		 push	 esi
  00038	e8 00 00 00 00	 call	 _lua_toboolean
  0003d	83 c4 34	 add	 esp, 52			; 00000034H
  00040	85 c0		 test	 eax, eax
  00042	75 75		 jne	 SHORT $LN1@ll_require
; Line 638
  00044	6a fe		 push	 -2			; fffffffeH
  00046	56		 push	 esi
  00047	e8 00 00 00 00	 call	 _lua_settop
; Line 639
  0004c	57		 push	 edi
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 _findloader
; Line 640
  00053	57		 push	 edi
  00054	56		 push	 esi
  00055	e8 00 00 00 00	 call	 _lua_pushstring
; Line 641
  0005a	6a 01		 push	 1
  0005c	6a fe		 push	 -2			; fffffffeH
  0005e	56		 push	 esi
  0005f	e8 00 00 00 00	 call	 _lua_rotate
; Line 642
  00064	6a 00		 push	 0
  00066	6a 00		 push	 0
  00068	6a 01		 push	 1
  0006a	6a 02		 push	 2
  0006c	56		 push	 esi
  0006d	e8 00 00 00 00	 call	 _lua_callk
; Line 643
  00072	6a ff		 push	 -1
  00074	56		 push	 esi
  00075	e8 00 00 00 00	 call	 _lua_type
  0007a	83 c4 40	 add	 esp, 64			; 00000040H
  0007d	85 c0		 test	 eax, eax
  0007f	74 0c		 je	 SHORT $LN2@ll_require
; Line 644
  00081	57		 push	 edi
  00082	6a 02		 push	 2
  00084	56		 push	 esi
  00085	e8 00 00 00 00	 call	 _lua_setfield
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@ll_require:
; Line 645
  0008d	57		 push	 edi
  0008e	6a 02		 push	 2
  00090	56		 push	 esi
  00091	e8 00 00 00 00	 call	 _lua_getfield
  00096	83 c4 0c	 add	 esp, 12			; 0000000cH
  00099	85 c0		 test	 eax, eax
  0009b	75 1c		 jne	 SHORT $LN1@ll_require
; Line 646
  0009d	6a 01		 push	 1
  0009f	56		 push	 esi
  000a0	e8 00 00 00 00	 call	 _lua_pushboolean
; Line 647
  000a5	6a ff		 push	 -1
  000a7	56		 push	 esi
  000a8	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 648
  000ad	57		 push	 edi
  000ae	6a 02		 push	 2
  000b0	56		 push	 esi
  000b1	e8 00 00 00 00	 call	 _lua_setfield
  000b6	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN1@ll_require:
; Line 650
  000b9	5f		 pop	 edi
  000ba	b8 01 00 00 00	 mov	 eax, 1
  000bf	5e		 pop	 esi
; Line 651
  000c0	5d		 pop	 ebp
  000c1	c3		 ret	 0
_ll_require ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _findloader
_TEXT	SEGMENT
_msg$ = -8212						; size = 8208
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_name$ = 12						; size = 4
_findloader PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 602
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 14 20 00 00	 mov	 eax, 8212		; 00002014H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	8b 5d 0c	 mov	 ebx, DWORD PTR _name$[ebp]
; Line 605
  0001b	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00021	56		 push	 esi
  00022	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00025	57		 push	 edi
  00026	50		 push	 eax
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 _luaL_buffinit
; Line 607
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_09IPENMJM@searchers?$AA@
  00032	68 d7 b9 f0 ff	 push	 -1001001		; fff0b9d7H
  00037	56		 push	 esi
  00038	e8 00 00 00 00	 call	 _lua_getfield
  0003d	83 c4 14	 add	 esp, 20			; 00000014H
  00040	83 f8 05	 cmp	 eax, 5
  00043	74 0e		 je	 SHORT $LN9@findloader
; Line 608
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@JEDHJEBL@?8package?4searchers?8?5must?5be?5a?5ta@
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 _luaL_error
  00050	83 c4 08	 add	 esp, 8
$LN9@findloader:
; Line 610
  00053	bf 01 00 00 00	 mov	 edi, 1
$LL8@findloader:
; Line 611
  00058	8b c7		 mov	 eax, edi
  0005a	99		 cdq
  0005b	52		 push	 edx
  0005c	50		 push	 eax
  0005d	6a 03		 push	 3
  0005f	56		 push	 esi
  00060	e8 00 00 00 00	 call	 _lua_rawgeti
  00065	83 c4 10	 add	 esp, 16			; 00000010H
  00068	85 c0		 test	 eax, eax
  0006a	75 2e		 jne	 SHORT $LN5@findloader
; Line 612
  0006c	6a fe		 push	 -2			; fffffffeH
  0006e	56		 push	 esi
  0006f	e8 00 00 00 00	 call	 _lua_settop
; Line 613
  00074	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 _luaL_pushresult
; Line 614
  00080	6a 00		 push	 0
  00082	6a ff		 push	 -1
  00084	56		 push	 esi
  00085	e8 00 00 00 00	 call	 _lua_tolstring
  0008a	50		 push	 eax
  0008b	53		 push	 ebx
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HFHHABH@module?5?8?$CFs?8?5not?5found?3?$CFs?$AA@
  00091	56		 push	 esi
  00092	e8 00 00 00 00	 call	 _luaL_error
  00097	83 c4 28	 add	 esp, 40			; 00000028H
$LN5@findloader:
; Line 616
  0009a	53		 push	 ebx
  0009b	56		 push	 esi
  0009c	e8 00 00 00 00	 call	 _lua_pushstring
; Line 617
  000a1	6a 00		 push	 0
  000a3	6a 00		 push	 0
  000a5	6a 02		 push	 2
  000a7	6a 01		 push	 1
  000a9	56		 push	 esi
  000aa	e8 00 00 00 00	 call	 _lua_callk
; Line 618
  000af	6a fe		 push	 -2			; fffffffeH
  000b1	56		 push	 esi
  000b2	e8 00 00 00 00	 call	 _lua_type
  000b7	83 c4 24	 add	 esp, 36			; 00000024H
  000ba	83 f8 06	 cmp	 eax, 6
  000bd	74 3d		 je	 SHORT $LN14@findloader
; Line 620
  000bf	6a fe		 push	 -2			; fffffffeH
  000c1	56		 push	 esi
  000c2	e8 00 00 00 00	 call	 _lua_isstring
  000c7	83 c4 08	 add	 esp, 8
  000ca	85 c0		 test	 eax, eax
  000cc	74 1d		 je	 SHORT $LN2@findloader
; Line 621
  000ce	6a fe		 push	 -2			; fffffffeH
  000d0	56		 push	 esi
  000d1	e8 00 00 00 00	 call	 _lua_settop
; Line 622
  000d6	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  000dc	50		 push	 eax
  000dd	e8 00 00 00 00	 call	 _luaL_addvalue
  000e2	83 c4 0c	 add	 esp, 12			; 0000000cH
  000e5	47		 inc	 edi
  000e6	e9 6d ff ff ff	 jmp	 $LL8@findloader
$LN2@findloader:
; Line 625
  000eb	6a fd		 push	 -3			; fffffffdH
  000ed	56		 push	 esi
  000ee	e8 00 00 00 00	 call	 _lua_settop
  000f3	83 c4 08	 add	 esp, 8
  000f6	47		 inc	 edi
  000f7	e9 5c ff ff ff	 jmp	 $LL8@findloader
$LN14@findloader:
; Line 627
  000fc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi
  00101	33 cd		 xor	 ecx, ebp
  00103	5b		 pop	 ebx
  00104	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00109	8b e5		 mov	 esp, ebp
  0010b	5d		 pop	 ebp
  0010c	c3		 ret	 0
_findloader ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _searcher_preload
_TEXT	SEGMENT
_L$ = 8							; size = 4
_searcher_preload PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 593
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 594
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	6a 00		 push	 0
  0000a	6a 01		 push	 1
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _luaL_checklstring
; Line 595
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_08LBNNGFKE@_PRELOAD?$AA@
  00017	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  0001c	56		 push	 esi
  0001d	8b f8		 mov	 edi, eax
  0001f	e8 00 00 00 00	 call	 _lua_getfield
; Line 596
  00024	57		 push	 edi
  00025	6a ff		 push	 -1
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 _lua_getfield
  0002d	83 c4 24	 add	 esp, 36			; 00000024H
  00030	85 c0		 test	 eax, eax
  00032	75 0f		 jne	 SHORT $LN4@searcher_p
; Line 597
  00034	57		 push	 edi
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@NPNABMBF@?6?7no?5field?5package?4preload?$FL?8?$CFs?8?$FN@
  0003a	56		 push	 esi
  0003b	e8 00 00 00 00	 call	 _lua_pushfstring
  00040	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@searcher_p:
; Line 598
  00043	5f		 pop	 edi
  00044	b8 01 00 00 00	 mov	 eax, 1
  00049	5e		 pop	 esi
; Line 599
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
_searcher_preload ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _searcher_Croot
_TEXT	SEGMENT
_name$1$ = -4						; size = 4
_L$ = 8							; size = 4
_searcher_Croot PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 571
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
; Line 573
  00006	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00009	6a 00		 push	 0
  0000b	6a 01		 push	 1
  0000d	56		 push	 esi
  0000e	e8 00 00 00 00	 call	 _luaL_checklstring
  00013	8b d8		 mov	 ebx, eax
; Line 574
  00015	6a 2e		 push	 46			; 0000002eH
  00017	53		 push	 ebx
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  0001e	83 c4 14	 add	 esp, 20			; 00000014H
; Line 576
  00021	85 c0		 test	 eax, eax
  00023	75 06		 jne	 SHORT $LN5@searcher_C
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
; Line 590
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN5@searcher_C:
  0002b	57		 push	 edi
; Line 577
  0002c	2b c3		 sub	 eax, ebx
  0002e	50		 push	 eax
  0002f	53		 push	 ebx
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 _lua_pushlstring
; Line 578
  00036	6a 00		 push	 0
  00038	6a ff		 push	 -1
  0003a	56		 push	 esi
  0003b	e8 00 00 00 00	 call	 _lua_tolstring
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_05EEMJHCCC@cpath?$AA@
  00045	68 d7 b9 f0 ff	 push	 -1001001		; fff0b9d7H
  0004a	56		 push	 esi
  0004b	89 45 fc	 mov	 DWORD PTR _name$1$[ebp], eax
  0004e	e8 00 00 00 00	 call	 _lua_getfield
  00053	6a 00		 push	 0
  00055	6a ff		 push	 -1
  00057	56		 push	 esi
  00058	e8 00 00 00 00	 call	 _lua_tolstring
  0005d	8b f8		 mov	 edi, eax
  0005f	83 c4 30	 add	 esp, 48			; 00000030H
  00062	85 ff		 test	 edi, edi
  00064	75 13		 jne	 SHORT $LN8@searcher_C
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_05EEMJHCCC@cpath?$AA@
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@COFCKCAL@?8package?4?$CFs?8?5must?5be?5a?5string?$AA@
  00070	56		 push	 esi
  00071	e8 00 00 00 00	 call	 _luaL_error
  00076	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@searcher_C:
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_01KICIPPFI@?2?$AA@
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_01LFCBOECM@?4?$AA@
  00083	57		 push	 edi
  00084	ff 75 fc	 push	 DWORD PTR _name$1$[ebp]
  00087	56		 push	 esi
  00088	e8 00 00 00 00	 call	 _searchpath
  0008d	8b f8		 mov	 edi, eax
  0008f	83 c4 14	 add	 esp, 20			; 00000014H
; Line 579
  00092	85 ff		 test	 edi, edi
  00094	74 56		 je	 SHORT $LN16@searcher_C
; Line 580
  00096	53		 push	 ebx
  00097	57		 push	 edi
  00098	56		 push	 esi
  00099	e8 00 00 00 00	 call	 _loadfunc
  0009e	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a1	85 c0		 test	 eax, eax
  000a3	74 53		 je	 SHORT $LN1@searcher_C
; Line 581
  000a5	83 f8 02	 cmp	 eax, 2
  000a8	74 32		 je	 SHORT $LN2@searcher_C
; Line 582
  000aa	6a 00		 push	 0
  000ac	6a ff		 push	 -1
  000ae	56		 push	 esi
  000af	e8 00 00 00 00	 call	 _lua_tolstring
  000b4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b7	50		 push	 eax
  000b8	57		 push	 edi
  000b9	6a 00		 push	 0
  000bb	6a 01		 push	 1
  000bd	56		 push	 esi
  000be	e8 00 00 00 00	 call	 _lua_tolstring
  000c3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c6	50		 push	 eax
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@KHMIPLKM@error?5loading?5module?5?8?$CFs?8?5from?5f@
  000cc	56		 push	 esi
  000cd	e8 00 00 00 00	 call	 _luaL_error
  000d2	83 c4 14	 add	 esp, 20			; 00000014H
  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	5b		 pop	 ebx
; Line 590
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c3		 ret	 0
$LN2@searcher_C:
; Line 584
  000dc	57		 push	 edi
  000dd	53		 push	 ebx
  000de	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@KOILFIGK@?6?7no?5module?5?8?$CFs?8?5in?5file?5?8?$CFs?8?$AA@
  000e3	56		 push	 esi
  000e4	e8 00 00 00 00	 call	 _lua_pushfstring
  000e9	83 c4 10	 add	 esp, 16			; 00000010H
$LN16@searcher_C:
; Line 585
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	b8 01 00 00 00	 mov	 eax, 1
  000f3	5b		 pop	 ebx
; Line 590
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c3		 ret	 0
$LN1@searcher_C:
; Line 588
  000f8	57		 push	 edi
  000f9	56		 push	 esi
  000fa	e8 00 00 00 00	 call	 _lua_pushstring
  000ff	83 c4 08	 add	 esp, 8
; Line 589
  00102	b8 02 00 00 00	 mov	 eax, 2
  00107	5f		 pop	 edi
  00108	5e		 pop	 esi
  00109	5b		 pop	 ebx
; Line 590
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c3		 ret	 0
_searcher_Croot ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _searcher_C
_TEXT	SEGMENT
_L$ = 8							; size = 4
_searcher_C PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 563
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; Line 564
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	57		 push	 edi
  00009	6a 00		 push	 0
  0000b	6a 01		 push	 1
  0000d	56		 push	 esi
  0000e	e8 00 00 00 00	 call	 _luaL_checklstring
; Line 565
  00013	68 00 00 00 00	 push	 OFFSET ??_C@_05EEMJHCCC@cpath?$AA@
  00018	68 d7 b9 f0 ff	 push	 -1001001		; fff0b9d7H
  0001d	56		 push	 esi
  0001e	8b d8		 mov	 ebx, eax
  00020	e8 00 00 00 00	 call	 _lua_getfield
  00025	6a 00		 push	 0
  00027	6a ff		 push	 -1
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 _lua_tolstring
  0002f	8b f8		 mov	 edi, eax
  00031	83 c4 24	 add	 esp, 36			; 00000024H
  00034	85 ff		 test	 edi, edi
  00036	75 13		 jne	 SHORT $LN4@searcher_C
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_05EEMJHCCC@cpath?$AA@
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@COFCKCAL@?8package?4?$CFs?8?5must?5be?5a?5string?$AA@
  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 _luaL_error
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@searcher_C:
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_01KICIPPFI@?2?$AA@
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_01LFCBOECM@?4?$AA@
  00055	57		 push	 edi
  00056	53		 push	 ebx
  00057	56		 push	 esi
  00058	e8 00 00 00 00	 call	 _searchpath
  0005d	8b f8		 mov	 edi, eax
  0005f	83 c4 14	 add	 esp, 20			; 00000014H
; Line 566
  00062	85 ff		 test	 edi, edi
  00064	75 08		 jne	 SHORT $LN1@searcher_C
  00066	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx
; Line 568
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
$LN1@searcher_C:
; Line 567
  0006e	53		 push	 ebx
  0006f	57		 push	 edi
  00070	56		 push	 esi
  00071	e8 00 00 00 00	 call	 _loadfunc
  00076	83 c4 0c	 add	 esp, 12			; 0000000cH
  00079	85 c0		 test	 eax, eax
  0007b	75 14		 jne	 SHORT $LN8@searcher_C
  0007d	57		 push	 edi
  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 _lua_pushstring
  00084	83 c4 08	 add	 esp, 8
  00087	b8 02 00 00 00	 mov	 eax, 2
  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
; Line 568
  0008f	5d		 pop	 ebp
  00090	c3		 ret	 0
; Line 567
$LN8@searcher_C:
  00091	6a 00		 push	 0
  00093	6a ff		 push	 -1
  00095	56		 push	 esi
  00096	e8 00 00 00 00	 call	 _lua_tolstring
  0009b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009e	50		 push	 eax
  0009f	57		 push	 edi
  000a0	6a 00		 push	 0
  000a2	6a 01		 push	 1
  000a4	56		 push	 esi
  000a5	e8 00 00 00 00	 call	 _lua_tolstring
  000aa	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ad	50		 push	 eax
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@KHMIPLKM@error?5loading?5module?5?8?$CFs?8?5from?5f@
  000b3	56		 push	 esi
  000b4	e8 00 00 00 00	 call	 _luaL_error
  000b9	83 c4 14	 add	 esp, 20			; 00000014H
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
; Line 568
  000bf	5d		 pop	 ebp
  000c0	c3		 ret	 0
_searcher_C ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _loadfunc
_TEXT	SEGMENT
_L$ = 8							; size = 4
_filename$ = 12						; size = 4
_modname$ = 16						; size = 4
_loadfunc PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 545
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; Line 548
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	57		 push	 edi
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_01IDAFKMJL@_?$AA@
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_01LFCBOECM@?4?$AA@
  00013	ff 75 10	 push	 DWORD PTR _modname$[ebp]
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 _luaL_gsub
  0001c	8b f8		 mov	 edi, eax
; Line 549
  0001e	6a 2d		 push	 45			; 0000002dH
  00020	57		 push	 edi
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  00027	8b d8		 mov	 ebx, eax
  00029	83 c4 18	 add	 esp, 24			; 00000018H
; Line 550
  0002c	85 db		 test	 ebx, ebx
  0002e	74 2d		 je	 SHORT $LN2@loadfunc
; Line 552
  00030	8b cb		 mov	 ecx, ebx
  00032	2b cf		 sub	 ecx, edi
  00034	51		 push	 ecx
  00035	57		 push	 edi
  00036	56		 push	 esi
  00037	e8 00 00 00 00	 call	 _lua_pushlstring
; Line 553
  0003c	50		 push	 eax
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KHKMBFOE@luaopen_?$CFs?$AA@
  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 _lua_pushfstring
; Line 554
  00048	50		 push	 eax
  00049	ff 75 0c	 push	 DWORD PTR _filename$[ebp]
  0004c	56		 push	 esi
  0004d	e8 00 00 00 00	 call	 _lookforfunc
  00052	83 c4 24	 add	 esp, 36			; 00000024H
; Line 555
  00055	83 f8 02	 cmp	 eax, 2
  00058	75 1c		 jne	 SHORT $LN3@loadfunc
; Line 556
  0005a	8d 7b 01	 lea	 edi, DWORD PTR [ebx+1]
$LN2@loadfunc:
; Line 558
  0005d	57		 push	 edi
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KHKMBFOE@luaopen_?$CFs?$AA@
  00063	56		 push	 esi
  00064	e8 00 00 00 00	 call	 _lua_pushfstring
; Line 559
  00069	50		 push	 eax
  0006a	ff 75 0c	 push	 DWORD PTR _filename$[ebp]
  0006d	56		 push	 esi
  0006e	e8 00 00 00 00	 call	 _lookforfunc
  00073	83 c4 18	 add	 esp, 24			; 00000018H
$LN3@loadfunc:
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
; Line 560
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_loadfunc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _searcher_Lua
_TEXT	SEGMENT
_L$ = 8							; size = 4
_searcher_Lua PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 528
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; Line 530
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	57		 push	 edi
  00009	6a 00		 push	 0
  0000b	6a 01		 push	 1
  0000d	56		 push	 esi
  0000e	e8 00 00 00 00	 call	 _luaL_checklstring
; Line 531
  00013	68 00 00 00 00	 push	 OFFSET ??_C@_04LNEJFJGI@path?$AA@
  00018	68 d7 b9 f0 ff	 push	 -1001001		; fff0b9d7H
  0001d	56		 push	 esi
  0001e	8b d8		 mov	 ebx, eax
  00020	e8 00 00 00 00	 call	 _lua_getfield
  00025	6a 00		 push	 0
  00027	6a ff		 push	 -1
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 _lua_tolstring
  0002f	8b f8		 mov	 edi, eax
  00031	83 c4 24	 add	 esp, 36			; 00000024H
  00034	85 ff		 test	 edi, edi
  00036	75 13		 jne	 SHORT $LN4@searcher_L
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_04LNEJFJGI@path?$AA@
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@COFCKCAL@?8package?4?$CFs?8?5must?5be?5a?5string?$AA@
  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 _luaL_error
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@searcher_L:
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_01KICIPPFI@?2?$AA@
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_01LFCBOECM@?4?$AA@
  00055	57		 push	 edi
  00056	53		 push	 ebx
  00057	56		 push	 esi
  00058	e8 00 00 00 00	 call	 _searchpath
  0005d	8b f8		 mov	 edi, eax
  0005f	83 c4 14	 add	 esp, 20			; 00000014H
; Line 532
  00062	85 ff		 test	 edi, edi
  00064	75 08		 jne	 SHORT $LN1@searcher_L
  00066	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	5b		 pop	 ebx
; Line 534
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
$LN1@searcher_L:
; Line 533
  0006e	6a 00		 push	 0
  00070	57		 push	 edi
  00071	56		 push	 esi
  00072	e8 00 00 00 00	 call	 _luaL_loadfilex
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007a	85 c0		 test	 eax, eax
  0007c	75 14		 jne	 SHORT $LN8@searcher_L
  0007e	57		 push	 edi
  0007f	56		 push	 esi
  00080	e8 00 00 00 00	 call	 _lua_pushstring
  00085	83 c4 08	 add	 esp, 8
  00088	b8 02 00 00 00	 mov	 eax, 2
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	5b		 pop	 ebx
; Line 534
  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
; Line 533
$LN8@searcher_L:
  00092	6a 00		 push	 0
  00094	6a ff		 push	 -1
  00096	56		 push	 esi
  00097	e8 00 00 00 00	 call	 _lua_tolstring
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009f	50		 push	 eax
  000a0	57		 push	 edi
  000a1	6a 00		 push	 0
  000a3	6a 01		 push	 1
  000a5	56		 push	 esi
  000a6	e8 00 00 00 00	 call	 _lua_tolstring
  000ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ae	50		 push	 eax
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@KHMIPLKM@error?5loading?5module?5?8?$CFs?8?5from?5f@
  000b4	56		 push	 esi
  000b5	e8 00 00 00 00	 call	 _luaL_error
  000ba	83 c4 14	 add	 esp, 20			; 00000014H
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
; Line 534
  000c0	5d		 pop	 ebp
  000c1	c3		 ret	 0
_searcher_Lua ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _checkload
_TEXT	SEGMENT
_L$ = 8							; size = 4
_stat$ = 12						; size = 4
_filename$ = 16						; size = 4
_checkload PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 517
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 518
  00003	83 7d 0c 00	 cmp	 DWORD PTR _stat$[ebp], 0
  00007	74 15		 je	 SHORT $LN2@checkload
; Line 519
  00009	ff 75 10	 push	 DWORD PTR _filename$[ebp]
  0000c	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000f	e8 00 00 00 00	 call	 _lua_pushstring
  00014	83 c4 08	 add	 esp, 8
; Line 520
  00017	b8 02 00 00 00	 mov	 eax, 2
; Line 525
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
$LN2@checkload:
  0001e	56		 push	 esi
; Line 524
  0001f	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00022	6a 00		 push	 0
  00024	6a ff		 push	 -1
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 _lua_tolstring
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002f	50		 push	 eax
  00030	ff 75 10	 push	 DWORD PTR _filename$[ebp]
  00033	6a 00		 push	 0
  00035	6a 01		 push	 1
  00037	56		 push	 esi
  00038	e8 00 00 00 00	 call	 _lua_tolstring
  0003d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00040	50		 push	 eax
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@KHMIPLKM@error?5loading?5module?5?8?$CFs?8?5from?5f@
  00046	56		 push	 esi
  00047	e8 00 00 00 00	 call	 _luaL_error
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
  0004f	5e		 pop	 esi
; Line 525
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
_checkload ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _findfile
_TEXT	SEGMENT
_L$ = 8							; size = 4
_name$ = 12						; size = 4
_pname$ = 16						; size = 4
_dirsep$ = 20						; size = 4
_findfile PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 507
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; Line 509
  00005	ff 75 10	 push	 DWORD PTR _pname$[ebp]
  00008	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000b	68 d7 b9 f0 ff	 push	 -1001001		; fff0b9d7H
  00010	56		 push	 esi
  00011	e8 00 00 00 00	 call	 _lua_getfield
; Line 510
  00016	6a 00		 push	 0
  00018	6a ff		 push	 -1
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 _lua_tolstring
  00020	8b d8		 mov	 ebx, eax
  00022	83 c4 18	 add	 esp, 24			; 00000018H
; Line 511
  00025	85 db		 test	 ebx, ebx
  00027	75 11		 jne	 SHORT $LN1@findfile
; Line 512
  00029	ff 75 10	 push	 DWORD PTR _pname$[ebp]
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@COFCKCAL@?8package?4?$CFs?8?5must?5be?5a?5string?$AA@
  00031	56		 push	 esi
  00032	e8 00 00 00 00	 call	 _luaL_error
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@findfile:
; Line 513
  0003a	ff 75 14	 push	 DWORD PTR _dirsep$[ebp]
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_01LFCBOECM@?4?$AA@
  00042	53		 push	 ebx
  00043	ff 75 0c	 push	 DWORD PTR _name$[ebp]
  00046	56		 push	 esi
  00047	e8 00 00 00 00	 call	 _searchpath
  0004c	83 c4 14	 add	 esp, 20			; 00000014H
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
; Line 514
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
_findfile ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _ll_searchpath
_TEXT	SEGMENT
_L$ = 8							; size = 4
_ll_searchpath PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 491
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 495
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 00		 push	 0
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_01KICIPPFI@?2?$AA@
  0000e	6a 04		 push	 4
  00010	56		 push	 esi
  00011	e8 00 00 00 00	 call	 _luaL_optlstring
  00016	83 c4 10	 add	 esp, 16			; 00000010H
  00019	50		 push	 eax
  0001a	6a 00		 push	 0
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_01LFCBOECM@?4?$AA@
  00021	6a 03		 push	 3
  00023	56		 push	 esi
  00024	e8 00 00 00 00	 call	 _luaL_optlstring
  00029	83 c4 10	 add	 esp, 16			; 00000010H
  0002c	50		 push	 eax
  0002d	6a 00		 push	 0
  0002f	6a 02		 push	 2
  00031	56		 push	 esi
  00032	e8 00 00 00 00	 call	 _luaL_checklstring
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	50		 push	 eax
  0003b	6a 00		 push	 0
  0003d	6a 01		 push	 1
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 _luaL_checklstring
  00045	83 c4 0c	 add	 esp, 12			; 0000000cH
  00048	50		 push	 eax
  00049	56		 push	 esi
  0004a	e8 00 00 00 00	 call	 _searchpath
  0004f	83 c4 14	 add	 esp, 20			; 00000014H
; Line 496
  00052	85 c0		 test	 eax, eax
  00054	74 08		 je	 SHORT $LN2@ll_searchp
  00056	b8 01 00 00 00	 mov	 eax, 1
  0005b	5e		 pop	 esi
; Line 502
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
$LN2@ll_searchp:
; Line 498
  0005e	56		 push	 esi
  0005f	e8 00 00 00 00	 call	 _lua_pushnil
; Line 499
  00064	6a 01		 push	 1
  00066	6a fe		 push	 -2			; fffffffeH
  00068	56		 push	 esi
  00069	e8 00 00 00 00	 call	 _lua_rotate
  0006e	83 c4 10	 add	 esp, 16			; 00000010H
; Line 500
  00071	b8 02 00 00 00	 mov	 eax, 2
  00076	5e		 pop	 esi
; Line 502
  00077	5d		 pop	 ebp
  00078	c3		 ret	 0
_ll_searchpath ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _searchpath
_TEXT	SEGMENT
_dirsep$GSCopy$1$ = -8220				; size = 4
_name$GSCopy$1$ = -8216					; size = 4
_msg$ = -8212						; size = 8208
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_name$ = 12						; size = 4
_path$ = 16						; size = 4
_sep$ = 20						; size = 4
_dirsep$ = 24						; size = 4
_searchpath PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 471
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 1c 20 00 00	 mov	 eax, 8220		; 0000201cH
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  0001a	53		 push	 ebx
  0001b	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  0001e	56		 push	 esi
  0001f	8b 75 14	 mov	 esi, DWORD PTR _sep$[ebp]
  00022	89 85 e8 df ff
	ff		 mov	 DWORD PTR _name$GSCopy$1$[ebp], eax
  00028	8b 45 18	 mov	 eax, DWORD PTR _dirsep$[ebp]
  0002b	57		 push	 edi
  0002c	8b 7d 10	 mov	 edi, DWORD PTR _path$[ebp]
  0002f	89 85 e4 df ff
	ff		 mov	 DWORD PTR _dirsep$GSCopy$1$[ebp], eax
; Line 473
  00035	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  0003b	50		 push	 eax
  0003c	53		 push	 ebx
  0003d	e8 00 00 00 00	 call	 _luaL_buffinit
  00042	83 c4 08	 add	 esp, 8
; Line 474
  00045	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00048	74 1c		 je	 SHORT $LL3@searchpath
; Line 475
  0004a	ff b5 e4 df ff
	ff		 push	 DWORD PTR _dirsep$GSCopy$1$[ebp]
  00050	56		 push	 esi
  00051	ff b5 e8 df ff
	ff		 push	 DWORD PTR _name$GSCopy$1$[ebp]
  00057	53		 push	 ebx
  00058	e8 00 00 00 00	 call	 _luaL_gsub
  0005d	83 c4 10	 add	 esp, 16			; 00000010H
  00060	89 85 e8 df ff
	ff		 mov	 DWORD PTR _name$GSCopy$1$[ebp], eax
$LL3@searchpath:
; Line 476
  00066	80 3f 3b	 cmp	 BYTE PTR [edi], 59	; 0000003bH
  00069	8b f7		 mov	 esi, edi
  0006b	75 09		 jne	 SHORT $LN9@searchpath
  0006d	8d 49 00	 npad	 3
$LL10@searchpath:
  00070	46		 inc	 esi
  00071	80 3e 3b	 cmp	 BYTE PTR [esi], 59	; 0000003bH
  00074	74 fa		 je	 SHORT $LL10@searchpath
$LN9@searchpath:
  00076	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00079	0f 84 cf 00 00
	00		 je	 $LN2@searchpath
  0007f	6a 3b		 push	 59			; 0000003bH
  00081	56		 push	 esi
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  00088	8b f8		 mov	 edi, eax
  0008a	83 c4 08	 add	 esp, 8
  0008d	85 ff		 test	 edi, edi
  0008f	75 11		 jne	 SHORT $LN7@searchpath
  00091	8b ce		 mov	 ecx, esi
  00093	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL36@searchpath:
  00096	8a 01		 mov	 al, BYTE PTR [ecx]
  00098	41		 inc	 ecx
  00099	84 c0		 test	 al, al
  0009b	75 f9		 jne	 SHORT $LL36@searchpath
  0009d	2b ca		 sub	 ecx, edx
  0009f	8d 3c 31	 lea	 edi, DWORD PTR [ecx+esi]
$LN7@searchpath:
  000a2	8b c7		 mov	 eax, edi
  000a4	2b c6		 sub	 eax, esi
  000a6	50		 push	 eax
  000a7	56		 push	 esi
  000a8	53		 push	 ebx
  000a9	e8 00 00 00 00	 call	 _lua_pushlstring
  000ae	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b1	85 ff		 test	 edi, edi
  000b3	0f 84 95 00 00
	00		 je	 $LN2@searchpath
; Line 478
  000b9	ff b5 e8 df ff
	ff		 push	 DWORD PTR _name$GSCopy$1$[ebp]
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_01OGPIMHDM@?$DP?$AA@
  000c4	6a 00		 push	 0
  000c6	6a ff		 push	 -1
  000c8	53		 push	 ebx
  000c9	e8 00 00 00 00	 call	 _lua_tolstring
  000ce	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d1	50		 push	 eax
  000d2	53		 push	 ebx
  000d3	e8 00 00 00 00	 call	 _luaL_gsub
; Line 479
  000d8	6a ff		 push	 -1
  000da	6a fe		 push	 -2			; fffffffeH
  000dc	53		 push	 ebx
  000dd	8b f0		 mov	 esi, eax
  000df	e8 00 00 00 00	 call	 _lua_rotate
  000e4	6a fe		 push	 -2			; fffffffeH
  000e6	53		 push	 ebx
  000e7	e8 00 00 00 00	 call	 _lua_settop
; Line 480
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  000f1	56		 push	 esi
  000f2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  000f8	83 c4 2c	 add	 esp, 44			; 0000002cH
  000fb	85 c0		 test	 eax, eax
  000fd	75 32		 jne	 SHORT $LN13@searchpath
; Line 482
  000ff	56		 push	 esi
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NEBKIMDC@?6?7no?5file?5?8?$CFs?8?$AA@
  00105	53		 push	 ebx
  00106	e8 00 00 00 00	 call	 _lua_pushfstring
; Line 483
  0010b	6a ff		 push	 -1
  0010d	6a fe		 push	 -2			; fffffffeH
  0010f	53		 push	 ebx
  00110	e8 00 00 00 00	 call	 _lua_rotate
  00115	6a fe		 push	 -2			; fffffffeH
  00117	53		 push	 ebx
  00118	e8 00 00 00 00	 call	 _lua_settop
; Line 484
  0011d	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00123	50		 push	 eax
  00124	e8 00 00 00 00	 call	 _luaL_addvalue
  00129	83 c4 24	 add	 esp, 36			; 00000024H
; Line 485
  0012c	e9 35 ff ff ff	 jmp	 $LL3@searchpath
; Line 480
$LN13@searchpath:
  00131	50		 push	 eax
  00132	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  00138	83 c4 04	 add	 esp, 4
; Line 481
  0013b	8b c6		 mov	 eax, esi
  0013d	5f		 pop	 edi
  0013e	5e		 pop	 esi
  0013f	5b		 pop	 ebx
; Line 488
  00140	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00143	33 cd		 xor	 ecx, ebp
  00145	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0014a	8b e5		 mov	 esp, ebp
  0014c	5d		 pop	 ebp
  0014d	c3		 ret	 0
$LN2@searchpath:
; Line 486
  0014e	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00154	50		 push	 eax
  00155	e8 00 00 00 00	 call	 _luaL_pushresult
; Line 488
  0015a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0015d	83 c4 04	 add	 esp, 4
  00160	33 cd		 xor	 ecx, ebp
  00162	33 c0		 xor	 eax, eax
  00164	5f		 pop	 edi
  00165	5e		 pop	 esi
  00166	5b		 pop	 ebx
  00167	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016c	8b e5		 mov	 esp, ebp
  0016e	5d		 pop	 ebp
  0016f	c3		 ret	 0
_searchpath ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _pushnexttemplate
_TEXT	SEGMENT
_L$ = 8							; size = 4
_path$ = 12						; size = 4
_pushnexttemplate PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 457
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 459
  00004	8b 75 0c	 mov	 esi, DWORD PTR _path$[ebp]
  00007	80 3e 3b	 cmp	 BYTE PTR [esi], 59	; 0000003bH
  0000a	75 0a		 jne	 SHORT $LN3@pushnextte
  0000c	8d 64 24 00	 npad	 4
$LL4@pushnextte:
  00010	46		 inc	 esi
  00011	80 3e 3b	 cmp	 BYTE PTR [esi], 59	; 0000003bH
  00014	74 fa		 je	 SHORT $LL4@pushnextte
$LN3@pushnextte:
; Line 460
  00016	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00019	75 05		 jne	 SHORT $LN2@pushnextte
  0001b	33 c0		 xor	 eax, eax
  0001d	5e		 pop	 esi
; Line 465
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
$LN2@pushnextte:
  00020	57		 push	 edi
; Line 461
  00021	6a 3b		 push	 59			; 0000003bH
  00023	56		 push	 esi
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  0002a	8b f8		 mov	 edi, eax
  0002c	83 c4 08	 add	 esp, 8
; Line 462
  0002f	85 ff		 test	 edi, edi
  00031	75 11		 jne	 SHORT $LN1@pushnextte
  00033	8b ce		 mov	 ecx, esi
  00035	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL11@pushnextte:
  00038	8a 01		 mov	 al, BYTE PTR [ecx]
  0003a	41		 inc	 ecx
  0003b	84 c0		 test	 al, al
  0003d	75 f9		 jne	 SHORT $LL11@pushnextte
  0003f	2b ca		 sub	 ecx, edx
  00041	8d 3c 31	 lea	 edi, DWORD PTR [ecx+esi]
$LN1@pushnextte:
; Line 463
  00044	8b c7		 mov	 eax, edi
  00046	2b c6		 sub	 eax, esi
  00048	50		 push	 eax
  00049	56		 push	 esi
  0004a	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0004d	e8 00 00 00 00	 call	 _lua_pushlstring
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 464
  00055	8b c7		 mov	 eax, edi
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
; Line 465
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
_pushnexttemplate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _readable
_TEXT	SEGMENT
_filename$ = 8						; size = 4
_readable PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 449
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 450
  00003	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00008	ff 75 08	 push	 DWORD PTR _filename$[ebp]
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  00011	83 c4 08	 add	 esp, 8
; Line 451
  00014	85 c0		 test	 eax, eax
  00016	75 02		 jne	 SHORT $LN1@readable
; Line 454
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
$LN1@readable:
; Line 452
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  00021	83 c4 04	 add	 esp, 4
; Line 453
  00024	b8 01 00 00 00	 mov	 eax, 1
; Line 454
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_readable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _ll_loadlib
_TEXT	SEGMENT
_L$ = 8							; size = 4
_ll_loadlib PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 426
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 427
  00005	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00008	6a 00		 push	 0
  0000a	6a 01		 push	 1
  0000c	57		 push	 edi
  0000d	e8 00 00 00 00	 call	 _luaL_checklstring
; Line 428
  00012	6a 00		 push	 0
  00014	6a 02		 push	 2
  00016	57		 push	 edi
  00017	8b f0		 mov	 esi, eax
  00019	e8 00 00 00 00	 call	 _luaL_checklstring
; Line 429
  0001e	50		 push	 eax
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	e8 00 00 00 00	 call	 _lookforfunc
  00026	8b f0		 mov	 esi, eax
  00028	83 c4 24	 add	 esp, 36			; 00000024H
; Line 430
  0002b	85 f6		 test	 esi, esi
  0002d	75 07		 jne	 SHORT $LN2@ll_loadlib
; Line 431
  0002f	5f		 pop	 edi
  00030	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  00033	5e		 pop	 esi
; Line 438
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
$LN2@ll_loadlib:
; Line 433
  00036	57		 push	 edi
  00037	e8 00 00 00 00	 call	 _lua_pushnil
; Line 434
  0003c	6a 01		 push	 1
  0003e	6a fe		 push	 -2			; fffffffeH
  00040	57		 push	 edi
  00041	e8 00 00 00 00	 call	 _lua_rotate
; Line 435
  00046	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_04HKFDNBLD@init?$AA@
  0004b	83 fe 01	 cmp	 esi, 1
  0004e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_06LBPOAOHH@absent?$AA@
  00053	0f 45 c1	 cmovne	 eax, ecx
  00056	50		 push	 eax
  00057	57		 push	 edi
  00058	e8 00 00 00 00	 call	 _lua_pushstring
  0005d	83 c4 18	 add	 esp, 24			; 00000018H
; Line 436
  00060	b8 03 00 00 00	 mov	 eax, 3
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
; Line 438
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
_ll_loadlib ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lookforfunc
_TEXT	SEGMENT
_L$ = 8							; size = 4
_path$ = 12						; size = 4
_sym$ = 16						; size = 4
_lookforfunc PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 405
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 406
  00005	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00008	68 00 00 00 00	 push	 OFFSET _CLIBS
  0000d	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00012	57		 push	 edi
  00013	e8 00 00 00 00	 call	 _lua_rawgetp
  00018	ff 75 0c	 push	 DWORD PTR _path$[ebp]
  0001b	6a ff		 push	 -1
  0001d	57		 push	 edi
  0001e	e8 00 00 00 00	 call	 _lua_getfield
  00023	6a ff		 push	 -1
  00025	57		 push	 edi
  00026	e8 00 00 00 00	 call	 _lua_touserdata
  0002b	6a fd		 push	 -3			; fffffffdH
  0002d	57		 push	 edi
  0002e	8b f0		 mov	 esi, eax
  00030	e8 00 00 00 00	 call	 _lua_settop
  00035	83 c4 28	 add	 esp, 40			; 00000028H
; Line 407
  00038	85 f6		 test	 esi, esi
  0003a	75 15		 jne	 SHORT $LN5@lookforfun
; Line 408
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@DPPJHBHJ@dynamic?5libraries?5not?5enabled?$DL?5c@
  00041	57		 push	 edi
  00042	e8 00 00 00 00	 call	 _lua_pushstring
; Line 417
  00047	83 c4 08	 add	 esp, 8
  0004a	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
; Line 423
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
$LN5@lookforfun:
; Line 412
  00051	8b 45 10	 mov	 eax, DWORD PTR _sym$[ebp]
  00054	80 38 2a	 cmp	 BYTE PTR [eax], 42	; 0000002aH
  00057	75 11		 jne	 SHORT $LN3@lookforfun
; Line 413
  00059	6a 01		 push	 1
  0005b	57		 push	 edi
  0005c	e8 00 00 00 00	 call	 _lua_pushboolean
  00061	83 c4 08	 add	 esp, 8
; Line 414
  00064	33 c0		 xor	 eax, eax
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
; Line 423
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
$LN3@lookforfun:
; Line 417
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@DPPJHBHJ@dynamic?5libraries?5not?5enabled?$DL?5c@
  0006f	57		 push	 edi
  00070	e8 00 00 00 00	 call	 _lua_pushstring
  00075	83 c4 08	 add	 esp, 8
; Line 419
  00078	b8 02 00 00 00	 mov	 eax, 2
  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
; Line 423
  0007f	5d		 pop	 ebp
  00080	c3		 ret	 0
_lookforfunc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _gctm
_TEXT	SEGMENT
_L$ = 8							; size = 4
_gctm	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 378
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 379
  00004	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	6a 01		 push	 1
  0000b	53		 push	 ebx
  0000c	e8 00 00 00 00	 call	 _luaL_len
; Line 380
  00011	8b fa		 mov	 edi, edx
  00013	83 c4 08	 add	 esp, 8
  00016	8b f0		 mov	 esi, eax
  00018	85 ff		 test	 edi, edi
  0001a	7c 35		 jl	 SHORT $LN17@gctm
  0001c	7f 05		 jg	 SHORT $LL18@gctm
  0001e	83 fe 01	 cmp	 esi, 1
  00021	72 2e		 jb	 SHORT $LN17@gctm
$LL18@gctm:
; Line 381
  00023	57		 push	 edi
  00024	56		 push	 esi
  00025	6a 01		 push	 1
  00027	53		 push	 ebx
  00028	e8 00 00 00 00	 call	 _lua_rawgeti
; Line 382
  0002d	6a ff		 push	 -1
  0002f	53		 push	 ebx
  00030	e8 00 00 00 00	 call	 _lua_touserdata
; Line 383
  00035	6a fe		 push	 -2			; fffffffeH
  00037	53		 push	 ebx
  00038	e8 00 00 00 00	 call	 _lua_settop
  0003d	83 c4 20	 add	 esp, 32			; 00000020H
  00040	83 c6 ff	 add	 esi, -1
  00043	83 d7 ff	 adc	 edi, -1
  00046	85 ff		 test	 edi, edi
  00048	7f d9		 jg	 SHORT $LL18@gctm
; Line 380
  0004a	7c 05		 jl	 SHORT $LN17@gctm
  0004c	83 fe 01	 cmp	 esi, 1
  0004f	73 d2		 jae	 SHORT $LL18@gctm
$LN17@gctm:
  00051	5f		 pop	 edi
  00052	5e		 pop	 esi
; Line 385
  00053	33 c0		 xor	 eax, eax
  00055	5b		 pop	 ebx
; Line 386
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
_gctm	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _addtoclib
_TEXT	SEGMENT
_L$ = 8							; size = 4
_path$ = 12						; size = 4
_plib$ = 16						; size = 4
_addtoclib PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 364
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 365
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	68 00 00 00 00	 push	 OFFSET _CLIBS
  0000c	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 _lua_rawgetp
; Line 366
  00017	ff 75 10	 push	 DWORD PTR _plib$[ebp]
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 _lua_pushlightuserdata
; Line 367
  00020	6a ff		 push	 -1
  00022	56		 push	 esi
  00023	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 368
  00028	ff 75 0c	 push	 DWORD PTR _path$[ebp]
  0002b	6a fd		 push	 -3			; fffffffdH
  0002d	56		 push	 esi
  0002e	e8 00 00 00 00	 call	 _lua_setfield
; Line 369
  00033	6a fe		 push	 -2			; fffffffeH
  00035	56		 push	 esi
  00036	e8 00 00 00 00	 call	 _luaL_len
  0003b	83 c0 01	 add	 eax, 1
  0003e	83 d2 00	 adc	 edx, 0
  00041	52		 push	 edx
  00042	50		 push	 eax
  00043	6a fe		 push	 -2			; fffffffeH
  00045	56		 push	 esi
  00046	e8 00 00 00 00	 call	 _lua_rawseti
  0004b	83 c4 40	 add	 esp, 64			; 00000040H
; Line 370
  0004e	6a fe		 push	 -2			; fffffffeH
  00050	56		 push	 esi
  00051	e8 00 00 00 00	 call	 _lua_settop
  00056	83 c4 08	 add	 esp, 8
  00059	5e		 pop	 esi
; Line 371
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
_addtoclib ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _checkclib
_TEXT	SEGMENT
_L$ = 8							; size = 4
_path$ = 12						; size = 4
_checkclib PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 350
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 352
  00005	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00008	68 00 00 00 00	 push	 OFFSET _CLIBS
  0000d	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00012	57		 push	 edi
  00013	e8 00 00 00 00	 call	 _lua_rawgetp
; Line 353
  00018	ff 75 0c	 push	 DWORD PTR _path$[ebp]
  0001b	6a ff		 push	 -1
  0001d	57		 push	 edi
  0001e	e8 00 00 00 00	 call	 _lua_getfield
; Line 354
  00023	6a ff		 push	 -1
  00025	57		 push	 edi
  00026	e8 00 00 00 00	 call	 _lua_touserdata
; Line 355
  0002b	6a fd		 push	 -3			; fffffffdH
  0002d	57		 push	 edi
  0002e	8b f0		 mov	 esi, eax
  00030	e8 00 00 00 00	 call	 _lua_settop
  00035	83 c4 28	 add	 esp, 40			; 00000028H
; Line 356
  00038	8b c6		 mov	 eax, esi
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
; Line 357
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
_checkclib ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _setprogdir
_TEXT	SEGMENT
_progdir$ = -268					; size = 261
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_setprogdir PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 154
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
; Line 165
  00017	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _progdir$[ebp]
  0001d	68 05 01 00 00	 push	 261			; 00000105H
  00022	50		 push	 eax
  00023	6a 00		 push	 0
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetModuleFileNameA@12
; Line 208
  0002b	85 c0		 test	 eax, eax
  0002d	74 64		 je	 SHORT $LN2@setprogdir
  0002f	3d 05 01 00 00	 cmp	 eax, 261		; 00000105H
  00034	74 5d		 je	 SHORT $LN2@setprogdir
  00036	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _progdir$[ebp]
  0003c	6a 5c		 push	 92			; 0000005cH
  0003e	50		 push	 eax
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strrchr
  00045	83 c4 08	 add	 esp, 8
  00048	85 c0		 test	 eax, eax
  0004a	74 47		 je	 SHORT $LN2@setprogdir
; Line 211
  0004c	c6 00 00	 mov	 BYTE PTR [eax], 0
; Line 214
  0004f	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _progdir$[ebp]
  00055	50		 push	 eax
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_01DCLJPIOD@?$CB?$AA@
  0005b	6a 00		 push	 0
  0005d	6a ff		 push	 -1
  0005f	56		 push	 esi
  00060	e8 00 00 00 00	 call	 _lua_tolstring
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH
  00068	50		 push	 eax
  00069	56		 push	 esi
  0006a	e8 00 00 00 00	 call	 _luaL_gsub
; Line 215
  0006f	6a ff		 push	 -1
  00071	6a fe		 push	 -2			; fffffffeH
  00073	56		 push	 esi
  00074	e8 00 00 00 00	 call	 _lua_rotate
  00079	6a fe		 push	 -2			; fffffffeH
  0007b	56		 push	 esi
  0007c	e8 00 00 00 00	 call	 _lua_settop
  00081	83 c4 24	 add	 esp, 36			; 00000024H
  00084	5e		 pop	 esi
; Line 217
  00085	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00088	33 cd		 xor	 ecx, ebp
  0008a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
$LN2@setprogdir:
; Line 209
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@KOECHPEJ@unable?5to?5get?5process?5executable@
  00098	56		 push	 esi
  00099	e8 00 00 00 00	 call	 _luaL_error
; Line 217
  0009e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a1	83 c4 08	 add	 esp, 8
  000a4	33 cd		 xor	 ecx, ebp
  000a6	5e		 pop	 esi
  000a7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c3		 ret	 0
_setprogdir ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lsys_sym
_TEXT	SEGMENT
_L$ = 8							; size = 4
_lib$ = 12						; size = 4
_sym$ = 16						; size = 4
_lsys_sym PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 337
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 339
  00003	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@DPPJHBHJ@dynamic?5libraries?5not?5enabled?$DL?5c@
  00008	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000b	e8 00 00 00 00	 call	 _lua_pushstring
  00010	83 c4 08	 add	 esp, 8
; Line 340
  00013	33 c0		 xor	 eax, eax
; Line 341
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
_lsys_sym ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lsys_load
_TEXT	SEGMENT
_L$ = 8							; size = 4
_path$ = 12						; size = 4
_seeglb$ = 16						; size = 4
_lsys_load PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 330
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 332
  00003	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@DPPJHBHJ@dynamic?5libraries?5not?5enabled?$DL?5c@
  00008	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000b	e8 00 00 00 00	 call	 _lua_pushstring
  00010	83 c4 08	 add	 esp, 8
; Line 333
  00013	33 c0		 xor	 eax, eax
; Line 334
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
_lsys_load ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lsys_unloadlib
_TEXT	SEGMENT
_lib$ = 8						; size = 4
_lsys_unloadlib PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 327
  00000	c3		 ret	 0
_lsys_unloadlib ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaopen_package
_TEXT	SEGMENT
_L$ = 8							; size = 4
_luaopen_package PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 835
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 836
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _lua_createtable
  00011	6a 01		 push	 1
  00013	6a 00		 push	 0
  00015	56		 push	 esi
  00016	e8 00 00 00 00	 call	 _lua_createtable
  0001b	6a 00		 push	 0
  0001d	68 00 00 00 00	 push	 OFFSET _gctm
  00022	56		 push	 esi
  00023	e8 00 00 00 00	 call	 _lua_pushcclosure
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_04BDLIKKMN@__gc?$AA@
  0002d	6a fe		 push	 -2			; fffffffeH
  0002f	56		 push	 esi
  00030	e8 00 00 00 00	 call	 _lua_setfield
  00035	6a fe		 push	 -2			; fffffffeH
  00037	56		 push	 esi
  00038	e8 00 00 00 00	 call	 _lua_setmetatable
  0003d	68 00 00 00 00	 push	 OFFSET _CLIBS
  00042	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00047	56		 push	 esi
  00048	e8 00 00 00 00	 call	 _lua_rawsetp
; Line 837
  0004d	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@405bc00000000000
  00055	83 c4 44	 add	 esp, 68			; 00000044H
  00058	68 88 00 00 00	 push	 136			; 00000088H
  0005d	83 ec 08	 sub	 esp, 8
  00060	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00065	56		 push	 esi
  00066	e8 00 00 00 00	 call	 _luaL_checkversion_
  0006b	6a 08		 push	 8
  0006d	6a 00		 push	 0
  0006f	56		 push	 esi
  00070	e8 00 00 00 00	 call	 _lua_createtable
  00075	6a 00		 push	 0
  00077	68 00 00 00 00	 push	 OFFSET _pk_funcs
  0007c	56		 push	 esi
  0007d	e8 00 00 00 00	 call	 _luaL_setfuncs
; Line 838
  00082	56		 push	 esi
  00083	e8 00 00 00 00	 call	 _createsearcherstable
; Line 840
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@KMBCNEPN@?4?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?2init@
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_08GLJMJBPN@LUA_PATH?$AA@
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NMCAMIJK@LUA_PATH_1_1?$AA@
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_04LNEJFJGI@path?$AA@
  0009c	56		 push	 esi
  0009d	e8 00 00 00 00	 call	 _setpath
  000a2	83 c4 40	 add	 esp, 64			; 00000040H
; Line 842
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@JAFDBDLK@?4?2?$DP?4dll?$DL?$CB?2?4?4?2?2?$DP?4dll?$DL?$CB?2?4?4?2?2loadal@
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_09FBPOOEID@LUA_CPATH?$AA@
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JEDNGFBJ@LUA_CPATH_1_1?$AA@
  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_05EEMJHCCC@cpath?$AA@
  000b9	56		 push	 esi
  000ba	e8 00 00 00 00	 call	 _setpath
; Line 845
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GKIMPOMK@?2?6?$DL?6?$DP?6?$CB?6?9?6?$AA@
  000c4	56		 push	 esi
  000c5	e8 00 00 00 00	 call	 _lua_pushstring
; Line 846
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_06HEJKKHEK@config?$AA@
  000cf	6a fe		 push	 -2			; fffffffeH
  000d1	56		 push	 esi
  000d2	e8 00 00 00 00	 call	 _lua_setfield
; Line 848
  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_07PINPBNPB@_LOADED?$AA@
  000dc	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  000e1	56		 push	 esi
  000e2	e8 00 00 00 00	 call	 _luaL_getsubtable
; Line 849
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_06IILMCCFO@loaded?$AA@
  000ec	6a fe		 push	 -2			; fffffffeH
  000ee	56		 push	 esi
  000ef	e8 00 00 00 00	 call	 _lua_setfield
  000f4	83 c4 40	 add	 esp, 64			; 00000040H
; Line 851
  000f7	68 00 00 00 00	 push	 OFFSET ??_C@_08LBNNGFKE@_PRELOAD?$AA@
  000fc	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00101	56		 push	 esi
  00102	e8 00 00 00 00	 call	 _luaL_getsubtable
; Line 852
  00107	68 00 00 00 00	 push	 OFFSET ??_C@_07GCEAJMEA@preload?$AA@
  0010c	6a fe		 push	 -2			; fffffffeH
  0010e	56		 push	 esi
  0010f	e8 00 00 00 00	 call	 _lua_setfield
; Line 853
  00114	6a 00		 push	 0
  00116	6a 02		 push	 2
  00118	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  0011d	56		 push	 esi
  0011e	e8 00 00 00 00	 call	 _lua_rawgeti
; Line 854
  00123	6a fe		 push	 -2			; fffffffeH
  00125	56		 push	 esi
  00126	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 855
  0012b	6a 01		 push	 1
  0012d	68 00 00 00 00	 push	 OFFSET _ll_funcs
  00132	56		 push	 esi
  00133	e8 00 00 00 00	 call	 _luaL_setfuncs
; Line 856
  00138	6a fe		 push	 -2			; fffffffeH
  0013a	56		 push	 esi
  0013b	e8 00 00 00 00	 call	 _lua_settop
  00140	83 c4 44	 add	 esp, 68			; 00000044H
; Line 857
  00143	b8 01 00 00 00	 mov	 eax, 1
  00148	5e		 pop	 esi
; Line 858
  00149	5d		 pop	 ebp
  0014a	c3		 ret	 0
_luaopen_package ENDP
_TEXT	ENDS
END
