; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\0\luaspq-1.1\luaspq-1.1\src\ltm.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_08JEIPHCP@no?5value?$AA@			; `string'
PUBLIC	??_C@_03ILAMHENH@nil?$AA@			; `string'
PUBLIC	??_C@_07GOBOHMJA@boolean?$AA@			; `string'
PUBLIC	??_C@_06EBGNBFIA@number?$AA@			; `string'
PUBLIC	??_C@_06ICGJLFIM@string?$AA@			; `string'
PUBLIC	??_C@_05LCLENNFI@table?$AA@			; `string'
PUBLIC	??_C@_08HFFPPCHF@function?$AA@			; `string'
PUBLIC	??_C@_06FJHNOCKE@thread?$AA@			; `string'
PUBLIC	??_C@_05BENFLAID@proto?$AA@			; `string'
PUBLIC	??_C@_07NHABFFHN@__index?$AA@			; `string'
PUBLIC	??_C@_0L@GADKNKH@__newindex?$AA@		; `string'
PUBLIC	??_C@_04BDLIKKMN@__gc?$AA@			; `string'
PUBLIC	??_C@_06BPGFKLEK@__mode?$AA@			; `string'
PUBLIC	??_C@_05MNDELLDN@__len?$AA@			; `string'
PUBLIC	??_C@_04GIMIAOHA@__eq?$AA@			; `string'
PUBLIC	??_C@_05MEHDOBFN@__add?$AA@			; `string'
PUBLIC	??_C@_05HFNNBAII@__sub?$AA@			; `string'
PUBLIC	??_C@_05FLJIBNKK@__mul?$AA@			; `string'
PUBLIC	??_C@_05ICPALBAE@__mod?$AA@			; `string'
PUBLIC	??_C@_05EBGMHPNE@__pow?$AA@			; `string'
PUBLIC	??_C@_05IDIBPCOP@__div?$AA@			; `string'
PUBLIC	??_C@_06FENDFIEK@__idiv?$AA@			; `string'
PUBLIC	??_C@_06GJGGPPDP@__band?$AA@			; `string'
PUBLIC	??_C@_05MGALBEIF@__bor?$AA@			; `string'
PUBLIC	??_C@_06FJCNDIMK@__bxor?$AA@			; `string'
PUBLIC	??_C@_05PPKAANCF@__shl?$AA@			; `string'
PUBLIC	??_C@_05CLOBDCPK@__shr?$AA@			; `string'
PUBLIC	??_C@_05MHFNBPAK@__unm?$AA@			; `string'
PUBLIC	??_C@_06HKAFJHAP@__bnot?$AA@			; `string'
PUBLIC	??_C@_04BKGOMBLK@__lt?$AA@			; `string'
PUBLIC	??_C@_04EJLHOCKK@__le?$AA@			; `string'
PUBLIC	??_C@_08HGDAODEP@__concat?$AA@			; `string'
PUBLIC	??_C@_06JPFLIIOJ@__call?$AA@			; `string'
PUBLIC	_luaT_typenames_
;	COMDAT ??_C@_06JPFLIIOJ@__call?$AA@
CONST	SEGMENT
??_C@_06JPFLIIOJ@__call?$AA@ DB '__call', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HGDAODEP@__concat?$AA@
CONST	SEGMENT
??_C@_08HGDAODEP@__concat?$AA@ DB '__concat', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04EJLHOCKK@__le?$AA@
CONST	SEGMENT
??_C@_04EJLHOCKK@__le?$AA@ DB '__le', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04BKGOMBLK@__lt?$AA@
CONST	SEGMENT
??_C@_04BKGOMBLK@__lt?$AA@ DB '__lt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HKAFJHAP@__bnot?$AA@
CONST	SEGMENT
??_C@_06HKAFJHAP@__bnot?$AA@ DB '__bnot', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MHFNBPAK@__unm?$AA@
CONST	SEGMENT
??_C@_05MHFNBPAK@__unm?$AA@ DB '__unm', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CLOBDCPK@__shr?$AA@
CONST	SEGMENT
??_C@_05CLOBDCPK@__shr?$AA@ DB '__shr', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PPKAANCF@__shl?$AA@
CONST	SEGMENT
??_C@_05PPKAANCF@__shl?$AA@ DB '__shl', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FJCNDIMK@__bxor?$AA@
CONST	SEGMENT
??_C@_06FJCNDIMK@__bxor?$AA@ DB '__bxor', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGALBEIF@__bor?$AA@
CONST	SEGMENT
??_C@_05MGALBEIF@__bor?$AA@ DB '__bor', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GJGGPPDP@__band?$AA@
CONST	SEGMENT
??_C@_06GJGGPPDP@__band?$AA@ DB '__band', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FENDFIEK@__idiv?$AA@
CONST	SEGMENT
??_C@_06FENDFIEK@__idiv?$AA@ DB '__idiv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IDIBPCOP@__div?$AA@
CONST	SEGMENT
??_C@_05IDIBPCOP@__div?$AA@ DB '__div', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05EBGMHPNE@__pow?$AA@
CONST	SEGMENT
??_C@_05EBGMHPNE@__pow?$AA@ DB '__pow', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05ICPALBAE@__mod?$AA@
CONST	SEGMENT
??_C@_05ICPALBAE@__mod?$AA@ DB '__mod', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FLJIBNKK@__mul?$AA@
CONST	SEGMENT
??_C@_05FLJIBNKK@__mul?$AA@ DB '__mul', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HFNNBAII@__sub?$AA@
CONST	SEGMENT
??_C@_05HFNNBAII@__sub?$AA@ DB '__sub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MEHDOBFN@__add?$AA@
CONST	SEGMENT
??_C@_05MEHDOBFN@__add?$AA@ DB '__add', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GIMIAOHA@__eq?$AA@
CONST	SEGMENT
??_C@_04GIMIAOHA@__eq?$AA@ DB '__eq', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MNDELLDN@__len?$AA@
CONST	SEGMENT
??_C@_05MNDELLDN@__len?$AA@ DB '__len', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BPGFKLEK@__mode?$AA@
CONST	SEGMENT
??_C@_06BPGFKLEK@__mode?$AA@ DB '__mode', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04BDLIKKMN@__gc?$AA@
CONST	SEGMENT
??_C@_04BDLIKKMN@__gc?$AA@ DB '__gc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GADKNKH@__newindex?$AA@
CONST	SEGMENT
??_C@_0L@GADKNKH@__newindex?$AA@ DB '__newindex', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NHABFFHN@__index?$AA@
CONST	SEGMENT
??_C@_07NHABFFHN@__index?$AA@ DB '__index', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BENFLAID@proto?$AA@
CONST	SEGMENT
??_C@_05BENFLAID@proto?$AA@ DB 'proto', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FJHNOCKE@thread?$AA@
CONST	SEGMENT
??_C@_06FJHNOCKE@thread?$AA@ DB 'thread', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HFFPPCHF@function?$AA@
CONST	SEGMENT
??_C@_08HFFPPCHF@function?$AA@ DB 'function', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05LCLENNFI@table?$AA@
CONST	SEGMENT
??_C@_05LCLENNFI@table?$AA@ DB 'table', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06ICGJLFIM@string?$AA@
CONST	SEGMENT
??_C@_06ICGJLFIM@string?$AA@ DB 'string', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EBGNBFIA@number?$AA@
CONST	SEGMENT
??_C@_06EBGNBFIA@number?$AA@ DB 'number', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GOBOHMJA@boolean?$AA@
CONST	SEGMENT
??_C@_07GOBOHMJA@boolean?$AA@ DB 'boolean', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03ILAMHENH@nil?$AA@
CONST	SEGMENT
??_C@_03ILAMHENH@nil?$AA@ DB 'nil', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08JEIPHCP@no?5value?$AA@
CONST	SEGMENT
??_C@_08JEIPHCP@no?5value?$AA@ DB 'no value', 00H	; `string'
CONST	ENDS
CONST	SEGMENT
_udatatypename DB 'userdata', 00H
	ORG $+7
?luaT_eventname@?1??luaT_init@@9@9 DD FLAT:??_C@_07NHABFFHN@__index?$AA@ ; `luaT_init'::`2'::luaT_eventname
	DD	FLAT:??_C@_0L@GADKNKH@__newindex?$AA@
	DD	FLAT:??_C@_04BDLIKKMN@__gc?$AA@
	DD	FLAT:??_C@_06BPGFKLEK@__mode?$AA@
	DD	FLAT:??_C@_05MNDELLDN@__len?$AA@
	DD	FLAT:??_C@_04GIMIAOHA@__eq?$AA@
	DD	FLAT:??_C@_05MEHDOBFN@__add?$AA@
	DD	FLAT:??_C@_05HFNNBAII@__sub?$AA@
	DD	FLAT:??_C@_05FLJIBNKK@__mul?$AA@
	DD	FLAT:??_C@_05ICPALBAE@__mod?$AA@
	DD	FLAT:??_C@_05EBGMHPNE@__pow?$AA@
	DD	FLAT:??_C@_05IDIBPCOP@__div?$AA@
	DD	FLAT:??_C@_06FENDFIEK@__idiv?$AA@
	DD	FLAT:??_C@_06GJGGPPDP@__band?$AA@
	DD	FLAT:??_C@_05MGALBEIF@__bor?$AA@
	DD	FLAT:??_C@_06FJCNDIMK@__bxor?$AA@
	DD	FLAT:??_C@_05PPKAANCF@__shl?$AA@
	DD	FLAT:??_C@_05CLOBDCPK@__shr?$AA@
	DD	FLAT:??_C@_05MHFNBPAK@__unm?$AA@
	DD	FLAT:??_C@_06HKAFJHAP@__bnot?$AA@
	DD	FLAT:??_C@_04BKGOMBLK@__lt?$AA@
	DD	FLAT:??_C@_04EJLHOCKK@__le?$AA@
	DD	FLAT:??_C@_08HGDAODEP@__concat?$AA@
	DD	FLAT:??_C@_06JPFLIIOJ@__call?$AA@
_luaT_typenames_ DD FLAT:??_C@_08JEIPHCP@no?5value?$AA@
	DD	FLAT:??_C@_03ILAMHENH@nil?$AA@
	DD	FLAT:??_C@_07GOBOHMJA@boolean?$AA@
	DD	FLAT:_udatatypename
	DD	FLAT:??_C@_06EBGNBFIA@number?$AA@
	DD	FLAT:??_C@_06ICGJLFIM@string?$AA@
	DD	FLAT:??_C@_05LCLENNFI@table?$AA@
	DD	FLAT:??_C@_08HFFPPCHF@function?$AA@
	DD	FLAT:_udatatypename
	DD	FLAT:??_C@_06FJHNOCKE@thread?$AA@
	DD	FLAT:??_C@_05BENFLAID@proto?$AA@
CONST	ENDS
PUBLIC	_luaT_gettm
PUBLIC	_luaT_gettmbyobj
PUBLIC	_luaT_init
PUBLIC	_luaT_callTM
PUBLIC	_luaT_callbinTM
PUBLIC	_luaT_trybinTM
PUBLIC	_luaT_callorderTM
PUBLIC	??_C@_0BN@DBGLHCNA@perform?5bitwise?5operation?5on?$AA@ ; `string'
PUBLIC	??_C@_0BG@IOLALLOM@perform?5arithmetic?5on?$AA@	; `string'
EXTRN	_luaG_concaterror:PROC
EXTRN	_luaG_opinterror:PROC
EXTRN	_luaG_tointerror:PROC
EXTRN	_luaD_call:PROC
EXTRN	_luaD_callnoyield:PROC
EXTRN	_luaC_fix:PROC
EXTRN	_luaS_new:PROC
EXTRN	_luaH_getshortstr:PROC
EXTRN	_luaV_tonumber_:PROC
EXTRN	_luaO_nilobject_:BYTE
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0BG@IOLALLOM@perform?5arithmetic?5on?$AA@
CONST	SEGMENT
??_C@_0BG@IOLALLOM@perform?5arithmetic?5on?$AA@ DB 'perform arithmetic on'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@DBGLHCNA@perform?5bitwise?5operation?5on?$AA@
CONST	SEGMENT
??_C@_0BN@DBGLHCNA@perform?5bitwise?5operation?5on?$AA@ DB 'perform bitwi'
	DB	'se operation on', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaT_callorderTM
_TEXT	SEGMENT
_L$ = 8							; size = 4
_p1$ = 12						; size = 4
_p2$ = 16						; size = 4
_event$ = 20						; size = 4
_luaT_callorderTM PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltm.c
; Line 143
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 144
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	ff 75 14	 push	 DWORD PTR _event$[ebp]
  0000a	ff 76 0c	 push	 DWORD PTR [esi+12]
  0000d	ff 75 10	 push	 DWORD PTR _p2$[ebp]
  00010	ff 75 0c	 push	 DWORD PTR _p1$[ebp]
  00013	56		 push	 esi
  00014	e8 00 00 00 00	 call	 _luaT_callbinTM
  00019	83 c4 14	 add	 esp, 20			; 00000014H
  0001c	85 c0		 test	 eax, eax
  0001e	75 06		 jne	 SHORT $LN2@luaT_callo
; Line 145
  00020	83 c8 ff	 or	 eax, -1
  00023	5e		 pop	 esi
; Line 148
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
$LN2@luaT_callo:
; Line 147
  00026	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00029	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0002c	85 c9		 test	 ecx, ecx
  0002e	74 12		 je	 SHORT $LN6@luaT_callo
  00030	83 f9 01	 cmp	 ecx, 1
  00033	75 05		 jne	 SHORT $LN5@luaT_callo
  00035	83 38 00	 cmp	 DWORD PTR [eax], 0
  00038	74 08		 je	 SHORT $LN6@luaT_callo
$LN5@luaT_callo:
  0003a	b8 01 00 00 00	 mov	 eax, 1
  0003f	5e		 pop	 esi
; Line 148
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
$LN6@luaT_callo:
; Line 147
  00042	33 c0		 xor	 eax, eax
  00044	5e		 pop	 esi
; Line 148
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
_luaT_callorderTM ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaT_trybinTM
_TEXT	SEGMENT
_dummy$1 = -8						; size = 8
_L$ = 8							; size = 4
_p1$ = 12						; size = 4
_p2$ = 16						; size = 4
_res$ = 20						; size = 4
_event$ = 24						; size = 4
_luaT_trybinTM PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltm.c
; Line 120
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
; Line 121
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  0000a	56		 push	 esi
  0000b	8b 75 10	 mov	 esi, DWORD PTR _p2$[ebp]
  0000e	57		 push	 edi
  0000f	ff 75 18	 push	 DWORD PTR _event$[ebp]
  00012	8b 7d 0c	 mov	 edi, DWORD PTR _p1$[ebp]
  00015	ff 75 14	 push	 DWORD PTR _res$[ebp]
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	53		 push	 ebx
  0001b	e8 00 00 00 00	 call	 _luaT_callbinTM
  00020	83 c4 14	 add	 esp, 20			; 00000014H
  00023	85 c0		 test	 eax, eax
  00025	75 5f		 jne	 SHORT $LN6@luaT_trybi
; Line 122
  00027	8b 45 18	 mov	 eax, DWORD PTR _event$[ebp]
  0002a	83 c0 f3	 add	 eax, -13		; fffffff3H
  0002d	83 f8 09	 cmp	 eax, 9
  00030	77 78		 ja	 SHORT $LN2@luaT_trybi
  00032	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN17@luaT_trybi[eax]
  00039	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN22@luaT_trybi[eax*4]
$LN4@luaT_trybi:
; Line 129
  00040	83 7f 08 03	 cmp	 DWORD PTR [edi+8], 3
  00044	75 0b		 jne	 SHORT $LN11@luaT_trybi
  00046	f2 0f 10 07	 movsd	 xmm0, QWORD PTR [edi]
  0004a	f2 0f 11 45 f8	 movsd	 QWORD PTR _dummy$1[ebp], xmm0
  0004f	eb 11		 jmp	 SHORT $LN15@luaT_trybi
$LN11@luaT_trybi:
  00051	8d 45 f8	 lea	 eax, DWORD PTR _dummy$1[ebp]
  00054	50		 push	 eax
  00055	57		 push	 edi
  00056	e8 00 00 00 00	 call	 _luaV_tonumber_
  0005b	83 c4 08	 add	 esp, 8
  0005e	85 c0		 test	 eax, eax
  00060	74 3b		 je	 SHORT $LN21@luaT_trybi
$LN15@luaT_trybi:
  00062	83 7e 08 03	 cmp	 DWORD PTR [esi+8], 3
  00066	75 0b		 jne	 SHORT $LN13@luaT_trybi
  00068	f2 0f 10 06	 movsd	 xmm0, QWORD PTR [esi]
  0006c	f2 0f 11 45 f8	 movsd	 QWORD PTR _dummy$1[ebp], xmm0
  00071	eb 22		 jmp	 SHORT $LN20@luaT_trybi
$LN13@luaT_trybi:
  00073	8d 45 f8	 lea	 eax, DWORD PTR _dummy$1[ebp]
  00076	50		 push	 eax
  00077	56		 push	 esi
  00078	e8 00 00 00 00	 call	 _luaV_tonumber_
  0007d	83 c4 08	 add	 esp, 8
  00080	85 c0		 test	 eax, eax
  00082	75 11		 jne	 SHORT $LN20@luaT_trybi
  00084	eb 17		 jmp	 SHORT $LN21@luaT_trybi
$LN6@luaT_trybi:
  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	5b		 pop	 ebx
; Line 139
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
$LN19@luaT_trybi:
; Line 124
  0008d	56		 push	 esi
  0008e	57		 push	 edi
  0008f	53		 push	 ebx
  00090	e8 00 00 00 00	 call	 _luaG_concaterror
$LN23@luaT_trybi:
$LN20@luaT_trybi:
; Line 130
  00095	56		 push	 esi
  00096	57		 push	 edi
  00097	53		 push	 ebx
  00098	e8 00 00 00 00	 call	 _luaG_tointerror
$LN24@luaT_trybi:
$LN21@luaT_trybi:
; Line 132
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@DBGLHCNA@perform?5bitwise?5operation?5on?$AA@
  000a2	56		 push	 esi
  000a3	57		 push	 edi
  000a4	53		 push	 ebx
  000a5	e8 00 00 00 00	 call	 _luaG_opinterror
$LN25@luaT_trybi:
$LN2@luaT_trybi:
; Line 136
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IOLALLOM@perform?5arithmetic?5on?$AA@
  000af	56		 push	 esi
  000b0	57		 push	 edi
  000b1	53		 push	 ebx
  000b2	e8 00 00 00 00	 call	 _luaG_opinterror
$LN26@luaT_trybi:
$LN18@luaT_trybi:
  000b7	90		 npad	 1
$LN22@luaT_trybi:
; Line 139
  000b8	00 00 00 00	 DD	 $LN4@luaT_trybi
  000bc	00 00 00 00	 DD	 $LN19@luaT_trybi
  000c0	00 00 00 00	 DD	 $LN2@luaT_trybi
$LN17@luaT_trybi:
  000c4	00		 DB	 0
  000c5	00		 DB	 0
  000c6	00		 DB	 0
  000c7	00		 DB	 0
  000c8	00		 DB	 0
  000c9	02		 DB	 2
  000ca	00		 DB	 0
  000cb	02		 DB	 2
  000cc	02		 DB	 2
  000cd	01		 DB	 1
_luaT_trybinTM ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaT_callbinTM
_TEXT	SEGMENT
_L$ = 8							; size = 4
_p1$ = 12						; size = 4
_p2$ = 16						; size = 4
_res$ = 20						; size = 4
_event$ = 24						; size = 4
_luaT_callbinTM PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltm.c
; Line 109
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; Line 110
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR _p1$[ebp]
  0000c	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0000f	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00012	8b c1		 mov	 eax, ecx
  00014	83 e8 05	 sub	 eax, 5
  00017	74 18		 je	 SHORT $LN7@luaT_callb
  00019	83 e8 02	 sub	 eax, 2
  0001c	74 0c		 je	 SHORT $LN6@luaT_callb
  0001e	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00021	8b 8c 88 e8 00
	00 00		 mov	 ecx, DWORD PTR [eax+ecx*4+232]
  00028	eb 0c		 jmp	 SHORT $LN8@luaT_callb
$LN6@luaT_callb:
  0002a	8b 07		 mov	 eax, DWORD PTR [edi]
  0002c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0002f	eb 05		 jmp	 SHORT $LN8@luaT_callb
$LN7@luaT_callb:
  00031	8b 07		 mov	 eax, DWORD PTR [edi]
  00033	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
$LN8@luaT_callb:
  00036	8b 5d 18	 mov	 ebx, DWORD PTR _event$[ebp]
  00039	85 c9		 test	 ecx, ecx
  0003b	74 15		 je	 SHORT $LN12@luaT_callb
  0003d	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00040	ff b4 98 88 00
	00 00		 push	 DWORD PTR [eax+ebx*4+136]
  00047	51		 push	 ecx
  00048	e8 00 00 00 00	 call	 _luaH_getshortstr
  0004d	83 c4 08	 add	 esp, 8
  00050	eb 05		 jmp	 SHORT $LN13@luaT_callb
$LN12@luaT_callb:
  00052	b8 00 00 00 00	 mov	 eax, OFFSET _luaO_nilobject_
$LN13@luaT_callb:
; Line 111
  00057	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0005b	75 10		 jne	 SHORT $LN20@luaT_callb
; Line 112
  0005d	53		 push	 ebx
  0005e	8b 5d 10	 mov	 ebx, DWORD PTR _p2$[ebp]
  00061	53		 push	 ebx
  00062	56		 push	 esi
  00063	e8 00 00 00 00	 call	 _luaT_gettmbyobj
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	eb 03		 jmp	 SHORT $LN2@luaT_callb
$LN20@luaT_callb:
  0006d	8b 5d 10	 mov	 ebx, DWORD PTR _p2$[ebp]
$LN2@luaT_callb:
; Line 113
  00070	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00074	75 07		 jne	 SHORT $LN1@luaT_callb
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	33 c0		 xor	 eax, eax
  0007a	5b		 pop	 ebx
; Line 116
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
$LN1@luaT_callb:
; Line 114
  0007d	8b 4d 14	 mov	 ecx, DWORD PTR _res$[ebp]
  00080	2b 4e 20	 sub	 ecx, DWORD PTR [esi+32]
  00083	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00087	89 4d 14	 mov	 DWORD PTR _res$[ebp], ecx
  0008a	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0008d	6a 01		 push	 1
  0008f	51		 push	 ecx
  00090	56		 push	 esi
  00091	f3 0f 7f 01	 movdqu	 XMMWORD PTR [ecx], xmm0
  00095	f3 0f 6f 07	 movdqu	 xmm0, XMMWORD PTR [edi]
  00099	f3 0f 7f 41 10	 movdqu	 XMMWORD PTR [ecx+16], xmm0
  0009e	f3 0f 6f 03	 movdqu	 xmm0, XMMWORD PTR [ebx]
  000a2	f3 0f 7f 41 20	 movdqu	 XMMWORD PTR [ecx+32], xmm0
  000a7	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  000aa	83 46 0c 30	 add	 DWORD PTR [esi+12], 48	; 00000030H
  000ae	f6 40 22 02	 test	 BYTE PTR [eax+34], 2
  000b2	74 07		 je	 SHORT $LN16@luaT_callb
  000b4	e8 00 00 00 00	 call	 _luaD_call
  000b9	eb 05		 jmp	 SHORT $LN21@luaT_callb
$LN16@luaT_callb:
  000bb	e8 00 00 00 00	 call	 _luaD_callnoyield
$LN21@luaT_callb:
  000c0	83 46 0c f0	 add	 DWORD PTR [esi+12], -16	; fffffff0H
  000c4	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c7	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  000ca	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  000cd	03 4d 14	 add	 ecx, DWORD PTR _res$[ebp]
  000d0	5f		 pop	 edi
  000d1	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  000d5	5e		 pop	 esi
; Line 115
  000d6	b8 01 00 00 00	 mov	 eax, 1
  000db	f3 0f 7f 01	 movdqu	 XMMWORD PTR [ecx], xmm0
  000df	5b		 pop	 ebx
; Line 116
  000e0	5d		 pop	 ebp
  000e1	c3		 ret	 0
_luaT_callbinTM ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaT_callTM
_TEXT	SEGMENT
_L$ = 8							; size = 4
_f$ = 12						; size = 4
_p1$ = 16						; size = 4
_p2$ = 20						; size = 4
_p3$ = 24						; size = 4
_hasres$ = 28						; size = 4
_luaT_callTM PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltm.c
; Line 87
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 90
  00003	8b 45 0c	 mov	 eax, DWORD PTR _f$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 18	 mov	 ebx, DWORD PTR _p3$[ebp]
  0000a	56		 push	 esi
  0000b	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000e	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
; Line 91
  00012	8b 45 10	 mov	 eax, DWORD PTR _p1$[ebp]
  00015	57		 push	 edi
  00016	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00019	2b 5e 20	 sub	 ebx, DWORD PTR [esi+32]
; Line 94
  0001c	8b 7d 1c	 mov	 edi, DWORD PTR _hasres$[ebp]
  0001f	f3 0f 7f 01	 movdqu	 XMMWORD PTR [ecx], xmm0
  00023	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00027	8b 45 14	 mov	 eax, DWORD PTR _p2$[ebp]
  0002a	f3 0f 7f 41 10	 movdqu	 XMMWORD PTR [ecx+16], xmm0
  0002f	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00033	f3 0f 7f 41 20	 movdqu	 XMMWORD PTR [ecx+32], xmm0
  00038	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  0003b	83 c2 30	 add	 edx, 48			; 00000030H
  0003e	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  00041	85 ff		 test	 edi, edi
  00043	75 11		 jne	 SHORT $LN4@luaT_callT
; Line 95
  00045	8d 42 10	 lea	 eax, DWORD PTR [edx+16]
  00048	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  0004b	8b 45 18	 mov	 eax, DWORD PTR _p3$[ebp]
  0004e	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00052	f3 0f 7f 02	 movdqu	 XMMWORD PTR [edx], xmm0
$LN4@luaT_callT:
; Line 97
  00056	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
; Line 98
  00059	57		 push	 edi
  0005a	51		 push	 ecx
  0005b	56		 push	 esi
  0005c	f6 40 22 02	 test	 BYTE PTR [eax+34], 2
  00060	74 07		 je	 SHORT $LN3@luaT_callT
  00062	e8 00 00 00 00	 call	 _luaD_call
; Line 99
  00067	eb 05		 jmp	 SHORT $LN7@luaT_callT
$LN3@luaT_callT:
; Line 100
  00069	e8 00 00 00 00	 call	 _luaD_callnoyield
$LN7@luaT_callT:
  0006e	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 101
  00071	85 ff		 test	 edi, edi
  00073	74 13		 je	 SHORT $LN1@luaT_callT
; Line 103
  00075	83 46 0c f0	 add	 DWORD PTR [esi+12], -16	; fffffff0H
  00079	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0007c	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  0007f	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00083	f3 0f 7f 04 19	 movdqu	 XMMWORD PTR [ecx+ebx], xmm0
$LN1@luaT_callT:
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	5b		 pop	 ebx
; Line 105
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
_luaT_callTM ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaT_init
_TEXT	SEGMENT
_L$ = 8							; size = 4
_luaT_init PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltm.c
; Line 37
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
; Line 48
  00009	be 88 00 00 00	 mov	 esi, 136		; 00000088H
  0000e	bb 00 00 00 00	 mov	 ebx, OFFSET ?luaT_eventname@?1??luaT_init@@9@9
$LL3@luaT_init:
; Line 49
  00013	ff b4 33 78 ff
	ff ff		 push	 DWORD PTR [ebx+esi-136]
  0001a	57		 push	 edi
  0001b	e8 00 00 00 00	 call	 _luaS_new
  00020	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00023	89 04 0e	 mov	 DWORD PTR [esi+ecx], eax
; Line 50
  00026	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00029	ff 34 30	 push	 DWORD PTR [eax+esi]
  0002c	57		 push	 edi
  0002d	e8 00 00 00 00	 call	 _luaC_fix
  00032	83 c6 04	 add	 esi, 4
  00035	83 c4 10	 add	 esp, 16			; 00000010H
  00038	81 fe e8 00 00
	00		 cmp	 esi, 232		; 000000e8H
  0003e	7c d3		 jl	 SHORT $LL3@luaT_init
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
; Line 52
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
_luaT_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaT_gettmbyobj
_TEXT	SEGMENT
_L$ = 8							; size = 4
_o$ = 12						; size = 4
_event$ = 16						; size = 4
_luaT_gettmbyobj PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltm.c
; Line 70
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 72
  00003	8b 55 0c	 mov	 edx, DWORD PTR _o$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0000d	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00010	8b c1		 mov	 eax, ecx
  00012	83 e8 05	 sub	 eax, 5
  00015	74 18		 je	 SHORT $LN3@luaT_gettm
  00017	83 e8 02	 sub	 eax, 2
  0001a	74 0c		 je	 SHORT $LN2@luaT_gettm
; Line 80
  0001c	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0001f	8b 94 88 e8 00
	00 00		 mov	 edx, DWORD PTR [eax+ecx*4+232]
  00026	eb 0c		 jmp	 SHORT $LN4@luaT_gettm
$LN2@luaT_gettm:
; Line 77
  00028	8b 02		 mov	 eax, DWORD PTR [edx]
  0002a	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
; Line 78
  0002d	eb 05		 jmp	 SHORT $LN4@luaT_gettm
$LN3@luaT_gettm:
; Line 74
  0002f	8b 02		 mov	 eax, DWORD PTR [edx]
  00031	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
$LN4@luaT_gettm:
; Line 82
  00034	85 d2		 test	 edx, edx
  00036	74 19		 je	 SHORT $LN8@luaT_gettm
  00038	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0003b	8b 45 10	 mov	 eax, DWORD PTR _event$[ebp]
  0003e	ff b4 81 88 00
	00 00		 push	 DWORD PTR [ecx+eax*4+136]
  00045	52		 push	 edx
  00046	e8 00 00 00 00	 call	 _luaH_getshortstr
  0004b	83 c4 08	 add	 esp, 8
  0004e	5e		 pop	 esi
; Line 83
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
$LN8@luaT_gettm:
; Line 82
  00051	b8 00 00 00 00	 mov	 eax, OFFSET _luaO_nilobject_
  00056	5e		 pop	 esi
; Line 83
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
_luaT_gettmbyobj ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaT_gettm
_TEXT	SEGMENT
_events$ = 8						; size = 4
_event$ = 12						; size = 4
_ename$ = 16						; size = 4
_luaT_gettm PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\ltm.c
; Line 59
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 60
  00004	ff 75 10	 push	 DWORD PTR _ename$[ebp]
  00007	8b 75 08	 mov	 esi, DWORD PTR _events$[ebp]
  0000a	56		 push	 esi
  0000b	e8 00 00 00 00	 call	 _luaH_getshortstr
  00010	83 c4 08	 add	 esp, 8
; Line 62
  00013	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00017	75 0c		 jne	 SHORT $LN1@luaT_gettm
; Line 63
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _event$[ebp]
  0001c	b0 01		 mov	 al, 1
  0001e	d2 e0		 shl	 al, cl
  00020	08 46 06	 or	 BYTE PTR [esi+6], al
; Line 64
  00023	33 c0		 xor	 eax, eax
$LN1@luaT_gettm:
  00025	5e		 pop	 esi
; Line 67
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
_luaT_gettm ENDP
_TEXT	ENDS
END
