; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_03KCHOJKKI@set?$AA@			; `string'
PUBLIC	??_C@_03LIBLMJMB@cur?$AA@			; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_02KAJCLHKP@no?$AA@			; `string'
PUBLIC	??_C@_04PLMLMMEO@full?$AA@			; `string'
PUBLIC	??_C@_04HJPCFDOP@line?$AA@			; `string'
PUBLIC	??_C@_05LBOHBHFK@close?$AA@			; `string'
PUBLIC	??_C@_05GLCAEPFP@flush?$AA@			; `string'
PUBLIC	??_C@_05DFJCHPDH@input?$AA@			; `string'
PUBLIC	??_C@_05DENOCHIP@lines?$AA@			; `string'
PUBLIC	??_C@_04PMOCAHAA@open?$AA@			; `string'
PUBLIC	??_C@_06DKIGHACF@output?$AA@			; `string'
PUBLIC	??_C@_05IACAFMHP@popen?$AA@			; `string'
PUBLIC	??_C@_04POLDLDMI@read?$AA@			; `string'
PUBLIC	??_C@_07FKJPAINK@tmpfile?$AA@			; `string'
PUBLIC	??_C@_04GPMDFGEJ@type?$AA@			; `string'
PUBLIC	??_C@_05NGFEDHGN@write?$AA@			; `string'
PUBLIC	??_C@_04EDECCOGL@seek?$AA@			; `string'
PUBLIC	??_C@_07HHBPNGAN@setvbuf?$AA@			; `string'
PUBLIC	??_C@_04BDLIKKMN@__gc?$AA@			; `string'
PUBLIC	??_C@_0L@HDFPAPPH@__tostring?$AA@		; `string'
;	COMDAT ??_C@_0L@HDFPAPPH@__tostring?$AA@
CONST	SEGMENT
??_C@_0L@HDFPAPPH@__tostring?$AA@ DB '__tostring', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04BDLIKKMN@__gc?$AA@
CONST	SEGMENT
??_C@_04BDLIKKMN@__gc?$AA@ DB '__gc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HHBPNGAN@setvbuf?$AA@
CONST	SEGMENT
??_C@_07HHBPNGAN@setvbuf?$AA@ DB 'setvbuf', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04EDECCOGL@seek?$AA@
CONST	SEGMENT
??_C@_04EDECCOGL@seek?$AA@ DB 'seek', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05NGFEDHGN@write?$AA@
CONST	SEGMENT
??_C@_05NGFEDHGN@write?$AA@ DB 'write', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GPMDFGEJ@type?$AA@
CONST	SEGMENT
??_C@_04GPMDFGEJ@type?$AA@ DB 'type', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FKJPAINK@tmpfile?$AA@
CONST	SEGMENT
??_C@_07FKJPAINK@tmpfile?$AA@ DB 'tmpfile', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04POLDLDMI@read?$AA@
CONST	SEGMENT
??_C@_04POLDLDMI@read?$AA@ DB 'read', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IACAFMHP@popen?$AA@
CONST	SEGMENT
??_C@_05IACAFMHP@popen?$AA@ DB 'popen', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DKIGHACF@output?$AA@
CONST	SEGMENT
??_C@_06DKIGHACF@output?$AA@ DB 'output', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PMOCAHAA@open?$AA@
CONST	SEGMENT
??_C@_04PMOCAHAA@open?$AA@ DB 'open', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DENOCHIP@lines?$AA@
CONST	SEGMENT
??_C@_05DENOCHIP@lines?$AA@ DB 'lines', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05DFJCHPDH@input?$AA@
CONST	SEGMENT
??_C@_05DFJCHPDH@input?$AA@ DB 'input', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GLCAEPFP@flush?$AA@
CONST	SEGMENT
??_C@_05GLCAEPFP@flush?$AA@ DB 'flush', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LBOHBHFK@close?$AA@
CONST	SEGMENT
??_C@_05LBOHBHFK@close?$AA@ DB 'close', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HJPCFDOP@line?$AA@
CONST	SEGMENT
??_C@_04HJPCFDOP@line?$AA@ DB 'line', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PLMLMMEO@full?$AA@
CONST	SEGMENT
??_C@_04PLMLMMEO@full?$AA@ DB 'full', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02KAJCLHKP@no?$AA@
CONST	SEGMENT
??_C@_02KAJCLHKP@no?$AA@ DB 'no', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LIBLMJMB@cur?$AA@
CONST	SEGMENT
??_C@_03LIBLMJMB@cur?$AA@ DB 'cur', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KCHOJKKI@set?$AA@
CONST	SEGMENT
??_C@_03KCHOJKKI@set?$AA@ DB 'set', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
?mode@?1??f_seek@@9@9 DD 00H				; `f_seek'::`2'::mode
	DD	01H
	DD	02H
?modenames@?1??f_seek@@9@9 DD FLAT:??_C@_03KCHOJKKI@set?$AA@ ; `f_seek'::`2'::modenames
	DD	FLAT:??_C@_03LIBLMJMB@cur?$AA@
	DD	FLAT:??_C@_03JBJLGPFL@end?$AA@
	DD	00H
?mode@?1??f_setvbuf@@9@9 DD 04H				; `f_setvbuf'::`2'::mode
	DD	00H
	DD	040H
?modenames@?1??f_setvbuf@@9@9 DD FLAT:??_C@_02KAJCLHKP@no?$AA@ ; `f_setvbuf'::`2'::modenames
	DD	FLAT:??_C@_04PLMLMMEO@full?$AA@
	DD	FLAT:??_C@_04HJPCFDOP@line?$AA@
	DD	00H
_iolib	DD	FLAT:??_C@_05LBOHBHFK@close?$AA@
	DD	FLAT:_io_close
	DD	FLAT:??_C@_05GLCAEPFP@flush?$AA@
	DD	FLAT:_io_flush
	DD	FLAT:??_C@_05DFJCHPDH@input?$AA@
	DD	FLAT:_io_input
	DD	FLAT:??_C@_05DENOCHIP@lines?$AA@
	DD	FLAT:_io_lines
	DD	FLAT:??_C@_04PMOCAHAA@open?$AA@
	DD	FLAT:_io_open
	DD	FLAT:??_C@_06DKIGHACF@output?$AA@
	DD	FLAT:_io_output
	DD	FLAT:??_C@_05IACAFMHP@popen?$AA@
	DD	FLAT:_io_popen
	DD	FLAT:??_C@_04POLDLDMI@read?$AA@
	DD	FLAT:_io_read
	DD	FLAT:??_C@_07FKJPAINK@tmpfile?$AA@
	DD	FLAT:_io_tmpfile
	DD	FLAT:??_C@_04GPMDFGEJ@type?$AA@
	DD	FLAT:_io_type
	DD	FLAT:??_C@_05NGFEDHGN@write?$AA@
	DD	FLAT:_io_write
	DD	00H
	DD	00H
_flib	DD	FLAT:??_C@_05LBOHBHFK@close?$AA@
	DD	FLAT:_io_close
	DD	FLAT:??_C@_05GLCAEPFP@flush?$AA@
	DD	FLAT:_f_flush
	DD	FLAT:??_C@_05DENOCHIP@lines?$AA@
	DD	FLAT:_f_lines
	DD	FLAT:??_C@_04POLDLDMI@read?$AA@
	DD	FLAT:_f_read
	DD	FLAT:??_C@_04EDECCOGL@seek?$AA@
	DD	FLAT:_f_seek
	DD	FLAT:??_C@_07HHBPNGAN@setvbuf?$AA@
	DD	FLAT:_f_setvbuf
	DD	FLAT:??_C@_05NGFEDHGN@write?$AA@
	DD	FLAT:_f_write
	DD	FLAT:??_C@_04BDLIKKMN@__gc?$AA@
	DD	FLAT:_f_gc
	DD	FLAT:??_C@_0L@HDFPAPPH@__tostring?$AA@
	DD	FLAT:_f_tostring
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	_luaopen_io
PUBLIC	??_C@_05KCHOJJD@FILE?$CK?$AA@			; `string'
PUBLIC	??_C@_0M@IBKPHHKH@closed?5file?$AA@		; `string'
PUBLIC	??_C@_04DAMGJPCA@file?$AA@			; `string'
PUBLIC	??_C@_0O@PLFAPHPG@file?5?$CIclosed?$CJ?$AA@	; `string'
PUBLIC	??_C@_09BPMAMLLD@file?5?$CI?$CFp?$CJ?$AA@	; `string'
PUBLIC	??_C@_0BN@LPOOHAOM@attempt?5to?5use?5a?5closed?5file?$AA@ ; `string'
PUBLIC	??_C@_0L@MIKJDGID@_IO_output?$AA@		; `string'
PUBLIC	??_C@_0BL@JABDLMOO@cannot?5open?5file?5?8?$CFs?8?5?$CI?$CFs?$CJ?$AA@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_03DCNFGMMH@rwa?$AA@			; `string'
PUBLIC	??_C@_01OJONOECF@b?$AA@				; `string'
PUBLIC	??_C@_0N@MICJCNHE@invalid?5mode?$AA@		; `string'
PUBLIC	??_C@_0BL@JMNLNGCA@standard?5?$CFs?5file?5is?5closed?$AA@ ; `string'
PUBLIC	??_C@_09HINEJHGE@_IO_input?$AA@			; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	??_C@_0BD@IOJAAODF@too?5many?5arguments?$AA@	; `string'
PUBLIC	??_C@_02EGFLAODH@?9?$CL?$AA@			; `string'
PUBLIC	??_C@_02CIDOMIFJ@xX?$AA@			; `string'
PUBLIC	??_C@_02OOPEBDOJ@pP?$AA@			; `string'
PUBLIC	??_C@_02MDKMJEGG@eE?$AA@			; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_0P@CENJCLHM@invalid?5format?$AA@		; `string'
PUBLIC	??_C@_0BH@PBGIDLEF@file?5is?5already?5closed?$AA@ ; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_04BFAHMMK@?$CFlld?$AA@			; `string'
PUBLIC	??_C@_05CGOEHEFE@?$CF?414g?$AA@			; `string'
PUBLIC	??_C@_07NHABFFHN@__index?$AA@			; `string'
PUBLIC	??_C@_0BL@PEFGCPAG@cannot?5close?5standard?5file?$AA@ ; `string'
PUBLIC	??_C@_05MHOFLBOO@stdin?$AA@			; `string'
PUBLIC	??_C@_06DJDOIFHB@stdout?$AA@			; `string'
PUBLIC	??_C@_06FJGNEBG@stderr?$AA@			; `string'
PUBLIC	__real@405bc00000000000
EXTRN	__imp__isdigit:PROC
EXTRN	__imp__isxdigit:PROC
EXTRN	__imp__isspace:PROC
EXTRN	__imp___errno:PROC
EXTRN	__imp__localeconv:PROC
EXTRN	__imp____iob_func:PROC
EXTRN	__imp__clearerr:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__ferror:PROC
EXTRN	__imp__fflush:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fprintf:PROC
EXTRN	__imp__fread:PROC
EXTRN	__imp___fseeki64:PROC
EXTRN	__imp___ftelli64:PROC
EXTRN	__imp__fwrite:PROC
EXTRN	__imp__getc:PROC
EXTRN	__imp___pclose:PROC
EXTRN	__imp___popen:PROC
EXTRN	__imp__setvbuf:PROC
EXTRN	__imp__tmpfile:PROC
EXTRN	__imp__ungetc:PROC
EXTRN	__imp__strchr:PROC
EXTRN	__imp__strerror:PROC
EXTRN	__imp__strspn:PROC
EXTRN	_lua_gettop:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_rotate:PROC
EXTRN	_lua_copy:PROC
EXTRN	_lua_isinteger:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_tonumberx:PROC
EXTRN	_lua_tointegerx:PROC
EXTRN	_lua_toboolean:PROC
EXTRN	_lua_tolstring:PROC
EXTRN	_lua_rawlen:PROC
EXTRN	_lua_touserdata:PROC
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_pushinteger:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_lua_pushfstring:PROC
EXTRN	_lua_pushcclosure:PROC
EXTRN	_lua_pushboolean:PROC
EXTRN	_lua_getfield:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_newuserdata:PROC
EXTRN	_lua_setfield:PROC
EXTRN	_lua_stringtonumber:PROC
EXTRN	_luaL_checkversion_:PROC
EXTRN	_luaL_argerror:PROC
EXTRN	_luaL_checklstring:PROC
EXTRN	_luaL_optlstring:PROC
EXTRN	_luaL_checkinteger:PROC
EXTRN	_luaL_optinteger:PROC
EXTRN	_luaL_checkstack:PROC
EXTRN	_luaL_checkany:PROC
EXTRN	_luaL_newmetatable:PROC
EXTRN	_luaL_setmetatable:PROC
EXTRN	_luaL_testudata:PROC
EXTRN	_luaL_checkudata:PROC
EXTRN	_luaL_error:PROC
EXTRN	_luaL_checkoption:PROC
EXTRN	_luaL_fileresult:PROC
EXTRN	_luaL_execresult:PROC
EXTRN	_luaL_setfuncs:PROC
EXTRN	_luaL_buffinit:PROC
EXTRN	_luaL_prepbuffsize:PROC
EXTRN	_luaL_pushresult:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@405bc00000000000
CONST	SEGMENT
__real@405bc00000000000 DQ 0405bc00000000000r	; 111
CONST	ENDS
;	COMDAT ??_C@_06FJGNEBG@stderr?$AA@
CONST	SEGMENT
??_C@_06FJGNEBG@stderr?$AA@ DB 'stderr', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DJDOIFHB@stdout?$AA@
CONST	SEGMENT
??_C@_06DJDOIFHB@stdout?$AA@ DB 'stdout', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MHOFLBOO@stdin?$AA@
CONST	SEGMENT
??_C@_05MHOFLBOO@stdin?$AA@ DB 'stdin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PEFGCPAG@cannot?5close?5standard?5file?$AA@
CONST	SEGMENT
??_C@_0BL@PEFGCPAG@cannot?5close?5standard?5file?$AA@ DB 'cannot close st'
	DB	'andard file', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07NHABFFHN@__index?$AA@
CONST	SEGMENT
??_C@_07NHABFFHN@__index?$AA@ DB '__index', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CGOEHEFE@?$CF?414g?$AA@
CONST	SEGMENT
??_C@_05CGOEHEFE@?$CF?414g?$AA@ DB '%.14g', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04BFAHMMK@?$CFlld?$AA@
CONST	SEGMENT
??_C@_04BFAHMMK@?$CFlld?$AA@ DB '%lld', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PBGIDLEF@file?5is?5already?5closed?$AA@
CONST	SEGMENT
??_C@_0BH@PBGIDLEF@file?5is?5already?5closed?$AA@ DB 'file is already clo'
	DB	'sed', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CENJCLHM@invalid?5format?$AA@
CONST	SEGMENT
??_C@_0P@CENJCLHM@invalid?5format?$AA@ DB 'invalid format', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02MDKMJEGG@eE?$AA@
CONST	SEGMENT
??_C@_02MDKMJEGG@eE?$AA@ DB 'eE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02OOPEBDOJ@pP?$AA@
CONST	SEGMENT
??_C@_02OOPEBDOJ@pP?$AA@ DB 'pP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02CIDOMIFJ@xX?$AA@
CONST	SEGMENT
??_C@_02CIDOMIFJ@xX?$AA@ DB 'xX', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02EGFLAODH@?9?$CL?$AA@
CONST	SEGMENT
??_C@_02EGFLAODH@?9?$CL?$AA@ DB '-+', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IOJAAODF@too?5many?5arguments?$AA@
CONST	SEGMENT
??_C@_0BD@IOJAAODF@too?5many?5arguments?$AA@ DB 'too many arguments', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09HINEJHGE@_IO_input?$AA@
CONST	SEGMENT
??_C@_09HINEJHGE@_IO_input?$AA@ DB '_IO_input', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JMNLNGCA@standard?5?$CFs?5file?5is?5closed?$AA@
CONST	SEGMENT
??_C@_0BL@JMNLNGCA@standard?5?$CFs?5file?5is?5closed?$AA@ DB 'standard %s'
	DB	' file is closed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MICJCNHE@invalid?5mode?$AA@
CONST	SEGMENT
??_C@_0N@MICJCNHE@invalid?5mode?$AA@ DB 'invalid mode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01OJONOECF@b?$AA@
CONST	SEGMENT
??_C@_01OJONOECF@b?$AA@ DB 'b', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03DCNFGMMH@rwa?$AA@
CONST	SEGMENT
??_C@_03DCNFGMMH@rwa?$AA@ DB 'rwa', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JABDLMOO@cannot?5open?5file?5?8?$CFs?8?5?$CI?$CFs?$CJ?$AA@
CONST	SEGMENT
??_C@_0BL@JABDLMOO@cannot?5open?5file?5?8?$CFs?8?5?$CI?$CFs?$CJ?$AA@ DB 'c'
	DB	'annot open file ''%s'' (%s)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MIKJDGID@_IO_output?$AA@
CONST	SEGMENT
??_C@_0L@MIKJDGID@_IO_output?$AA@ DB '_IO_output', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LPOOHAOM@attempt?5to?5use?5a?5closed?5file?$AA@
CONST	SEGMENT
??_C@_0BN@LPOOHAOM@attempt?5to?5use?5a?5closed?5file?$AA@ DB 'attempt to '
	DB	'use a closed file', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09BPMAMLLD@file?5?$CI?$CFp?$CJ?$AA@
CONST	SEGMENT
??_C@_09BPMAMLLD@file?5?$CI?$CFp?$CJ?$AA@ DB 'file (%p)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PLFAPHPG@file?5?$CIclosed?$CJ?$AA@
CONST	SEGMENT
??_C@_0O@PLFAPHPG@file?5?$CIclosed?$CJ?$AA@ DB 'file (closed)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04DAMGJPCA@file?$AA@
CONST	SEGMENT
??_C@_04DAMGJPCA@file?$AA@ DB 'file', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IBKPHHKH@closed?5file?$AA@
CONST	SEGMENT
??_C@_0M@IBKPHHKH@closed?5file?$AA@ DB 'closed file', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KCHOJJD@FILE?$CK?$AA@
CONST	SEGMENT
??_C@_05KCHOJJD@FILE?$CK?$AA@ DB 'FILE*', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT _createstdfile
_TEXT	SEGMENT
_L$ = 8							; size = 4
_f$ = 12						; size = 4
_k$ = 16						; size = 4
_fname$ = 20						; size = 4
_createstdfile PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 744
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 745
  00005	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00008	6a 08		 push	 8
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 _lua_newuserdata
  00010	8b f0		 mov	 esi, eax
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00017	57		 push	 edi
  00018	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001f	e8 00 00 00 00	 call	 _luaL_setmetatable
; Line 746
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _f$[ebp]
  00027	83 c4 10	 add	 esp, 16			; 00000010H
  0002a	89 0e		 mov	 DWORD PTR [esi], ecx
; Line 747
  0002c	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET _io_noclose
; Line 748
  00033	8b 75 10	 mov	 esi, DWORD PTR _k$[ebp]
  00036	85 f6		 test	 esi, esi
  00038	74 17		 je	 SHORT $LN1@createstdf
; Line 749
  0003a	6a ff		 push	 -1
  0003c	57		 push	 edi
  0003d	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 750
  00042	56		 push	 esi
  00043	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00048	57		 push	 edi
  00049	e8 00 00 00 00	 call	 _lua_setfield
  0004e	83 c4 14	 add	 esp, 20			; 00000014H
$LN1@createstdf:
; Line 752
  00051	ff 75 14	 push	 DWORD PTR _fname$[ebp]
  00054	6a fe		 push	 -2			; fffffffeH
  00056	57		 push	 edi
  00057	e8 00 00 00 00	 call	 _lua_setfield
  0005c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
; Line 753
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
_createstdfile ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_noclose
_TEXT	SEGMENT
_L$ = 8							; size = 4
_io_noclose PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 735
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  0000c	6a 01		 push	 1
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 _luaL_checkudata
; Line 737
  00014	56		 push	 esi
  00015	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], OFFSET _io_noclose
  0001c	e8 00 00 00 00	 call	 _lua_pushnil
; Line 738
  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@PEFGCPAG@cannot?5close?5standard?5file?$AA@
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 _lua_pushstring
  0002c	83 c4 18	 add	 esp, 24			; 00000018H
; Line 739
  0002f	b8 02 00 00 00	 mov	 eax, 2
  00034	5e		 pop	 esi
; Line 740
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
_io_noclose ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _createmeta
_TEXT	SEGMENT
_L$ = 8							; size = 4
_createmeta PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 722
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 723
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _luaL_newmetatable
; Line 724
  00012	6a ff		 push	 -1
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 725
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_07NHABFFHN@__index?$AA@
  0001f	6a fe		 push	 -2			; fffffffeH
  00021	56		 push	 esi
  00022	e8 00 00 00 00	 call	 _lua_setfield
; Line 726
  00027	6a 00		 push	 0
  00029	68 00 00 00 00	 push	 OFFSET _flib
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 _luaL_setfuncs
; Line 727
  00034	6a fe		 push	 -2			; fffffffeH
  00036	56		 push	 esi
  00037	e8 00 00 00 00	 call	 _lua_settop
  0003c	83 c4 30	 add	 esp, 48			; 00000030H
  0003f	5e		 pop	 esi
; Line 728
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
_createmeta ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _f_flush
_TEXT	SEGMENT
_L$ = 8							; size = 4
_f_flush PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 681
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 682
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  0000d	6a 01		 push	 1
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 _luaL_checkudata
  00015	8b f8		 mov	 edi, eax
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001a	83 7f 04 00	 cmp	 DWORD PTR [edi+4], 0
  0001e	75 0e		 jne	 SHORT $LN3@f_flush
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LPOOHAOM@attempt?5to?5use?5a?5closed?5file?$AA@
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 _luaL_error
  0002b	83 c4 08	 add	 esp, 8
$LN3@f_flush:
  0002e	6a 00		 push	 0
  00030	ff 37		 push	 DWORD PTR [edi]
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  00038	83 c4 04	 add	 esp, 4
  0003b	f7 d8		 neg	 eax
  0003d	1b c0		 sbb	 eax, eax
  0003f	40		 inc	 eax
  00040	50		 push	 eax
  00041	56		 push	 esi
  00042	e8 00 00 00 00	 call	 _luaL_fileresult
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
; Line 683
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
_f_flush ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_flush
_TEXT	SEGMENT
_L$ = 8							; size = 4
_io_flush PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 676
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 677
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MIKJDGID@_IO_output?$AA@
  0000d	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _lua_getfield
  00018	6a ff		 push	 -1
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 _lua_touserdata
  00020	8b f8		 mov	 edi, eax
  00022	83 c4 14	 add	 esp, 20			; 00000014H
  00025	83 7f 04 00	 cmp	 DWORD PTR [edi+4], 0
  00029	75 13		 jne	 SHORT $LN3@io_flush
  0002b	68 04 00 00 00	 push	 OFFSET ??_C@_0L@MIKJDGID@_IO_output?$AA@+4
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@JMNLNGCA@standard?5?$CFs?5file?5is?5closed?$AA@
  00035	56		 push	 esi
  00036	e8 00 00 00 00	 call	 _luaL_error
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@io_flush:
  0003e	6a 00		 push	 0
  00040	ff 37		 push	 DWORD PTR [edi]
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  00048	83 c4 04	 add	 esp, 4
  0004b	f7 d8		 neg	 eax
  0004d	1b c0		 sbb	 eax, eax
  0004f	40		 inc	 eax
  00050	50		 push	 eax
  00051	56		 push	 esi
  00052	e8 00 00 00 00	 call	 _luaL_fileresult
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
; Line 678
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
_io_flush ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _f_setvbuf
_TEXT	SEGMENT
_sz$ = -8						; size = 8
_L$ = 8							; size = 4
_f_setvbuf PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 664
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
; Line 667
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00011	6a 01		 push	 1
  00013	53		 push	 ebx
  00014	e8 00 00 00 00	 call	 _luaL_checkudata
  00019	8b f8		 mov	 edi, eax
  0001b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001e	83 7f 04 00	 cmp	 DWORD PTR [edi+4], 0
  00022	75 0e		 jne	 SHORT $LN3@f_setvbuf
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LPOOHAOM@attempt?5to?5use?5a?5closed?5file?$AA@
  00029	53		 push	 ebx
  0002a	e8 00 00 00 00	 call	 _luaL_error
  0002f	83 c4 08	 add	 esp, 8
$LN3@f_setvbuf:
  00032	8b 3f		 mov	 edi, DWORD PTR [edi]
; Line 668
  00034	68 00 00 00 00	 push	 OFFSET ?modenames@?1??f_setvbuf@@9@9
  00039	6a 00		 push	 0
  0003b	6a 02		 push	 2
  0003d	53		 push	 ebx
  0003e	e8 00 00 00 00	 call	 _luaL_checkoption
; Line 669
  00043	6a 00		 push	 0
  00045	68 00 20 00 00	 push	 8192			; 00002000H
  0004a	6a 03		 push	 3
  0004c	53		 push	 ebx
  0004d	8b f0		 mov	 esi, eax
  0004f	e8 00 00 00 00	 call	 _luaL_optinteger
; Line 670
  00054	50		 push	 eax
  00055	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?mode@?1??f_setvbuf@@9@9[esi*4]
  0005c	89 55 fc	 mov	 DWORD PTR _sz$[ebp+4], edx
  0005f	6a 00		 push	 0
  00061	57		 push	 edi
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__setvbuf
; Line 671
  00068	33 c9		 xor	 ecx, ecx
  0006a	85 c0		 test	 eax, eax
  0006c	6a 00		 push	 0
  0006e	0f 94 c1	 sete	 cl
  00071	51		 push	 ecx
  00072	53		 push	 ebx
  00073	e8 00 00 00 00	 call	 _luaL_fileresult
  00078	83 c4 3c	 add	 esp, 60			; 0000003cH
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
; Line 672
  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c3		 ret	 0
_f_setvbuf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _f_seek
_TEXT	SEGMENT
_L$ = 8							; size = 4
_f_seek	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 645
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
; Line 648
  00006	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00009	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  0000e	6a 01		 push	 1
  00010	57		 push	 edi
  00011	e8 00 00 00 00	 call	 _luaL_checkudata
  00016	8b f0		 mov	 esi, eax
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  0001f	75 0e		 jne	 SHORT $LN6@f_seek
  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LPOOHAOM@attempt?5to?5use?5a?5closed?5file?$AA@
  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 _luaL_error
  0002c	83 c4 08	 add	 esp, 8
$LN6@f_seek:
  0002f	8b 1e		 mov	 ebx, DWORD PTR [esi]
; Line 649
  00031	68 00 00 00 00	 push	 OFFSET ?modenames@?1??f_seek@@9@9
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_03LIBLMJMB@cur?$AA@
  0003b	6a 02		 push	 2
  0003d	57		 push	 edi
  0003e	e8 00 00 00 00	 call	 _luaL_checkoption
; Line 650
  00043	6a 00		 push	 0
  00045	6a 00		 push	 0
  00047	6a 03		 push	 3
  00049	57		 push	 edi
  0004a	8b f0		 mov	 esi, eax
  0004c	e8 00 00 00 00	 call	 _luaL_optinteger
; Line 654
  00051	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?mode@?1??f_seek@@9@9[esi*4]
  00058	52		 push	 edx
  00059	50		 push	 eax
  0005a	53		 push	 ebx
  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___fseeki64
  00061	83 c4 30	 add	 esp, 48			; 00000030H
; Line 655
  00064	85 c0		 test	 eax, eax
  00066	74 12		 je	 SHORT $LN2@f_seek
; Line 656
  00068	6a 00		 push	 0
  0006a	6a 00		 push	 0
  0006c	57		 push	 edi
  0006d	e8 00 00 00 00	 call	 _luaL_fileresult
  00072	83 c4 0c	 add	 esp, 12			; 0000000cH
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx
; Line 661
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
$LN2@f_seek:
; Line 658
  0007a	53		 push	 ebx
  0007b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___ftelli64
  00081	52		 push	 edx
  00082	50		 push	 eax
  00083	57		 push	 edi
  00084	e8 00 00 00 00	 call	 _lua_pushinteger
  00089	83 c4 10	 add	 esp, 16			; 00000010H
; Line 659
  0008c	b8 01 00 00 00	 mov	 eax, 1
  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
; Line 661
  00094	5d		 pop	 ebp
  00095	c3		 ret	 0
_f_seek	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _f_write
_TEXT	SEGMENT
_L$ = 8							; size = 4
_f_write PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 638
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 639
  00005	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  0000d	6a 01		 push	 1
  0000f	57		 push	 edi
  00010	e8 00 00 00 00	 call	 _luaL_checkudata
  00015	8b f0		 mov	 esi, eax
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001a	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  0001e	75 0e		 jne	 SHORT $LN3@f_write
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LPOOHAOM@attempt?5to?5use?5a?5closed?5file?$AA@
  00025	57		 push	 edi
  00026	e8 00 00 00 00	 call	 _luaL_error
  0002b	83 c4 08	 add	 esp, 8
$LN3@f_write:
  0002e	8b 36		 mov	 esi, DWORD PTR [esi]
; Line 640
  00030	6a 01		 push	 1
  00032	57		 push	 edi
  00033	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 641
  00038	6a 02		 push	 2
  0003a	56		 push	 esi
  0003b	57		 push	 edi
  0003c	e8 00 00 00 00	 call	 _g_write
  00041	83 c4 14	 add	 esp, 20			; 00000014H
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
; Line 642
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
_f_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_write
_TEXT	SEGMENT
_L$ = 8							; size = 4
_io_write PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 633
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 634
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MIKJDGID@_IO_output?$AA@
  0000d	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _lua_getfield
  00018	6a ff		 push	 -1
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 _lua_touserdata
  00020	8b f8		 mov	 edi, eax
  00022	83 c4 14	 add	 esp, 20			; 00000014H
  00025	83 7f 04 00	 cmp	 DWORD PTR [edi+4], 0
  00029	75 13		 jne	 SHORT $LN3@io_write
  0002b	68 04 00 00 00	 push	 OFFSET ??_C@_0L@MIKJDGID@_IO_output?$AA@+4
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@JMNLNGCA@standard?5?$CFs?5file?5is?5closed?$AA@
  00035	56		 push	 esi
  00036	e8 00 00 00 00	 call	 _luaL_error
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@io_write:
  0003e	6a 01		 push	 1
  00040	ff 37		 push	 DWORD PTR [edi]
  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 _g_write
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
; Line 635
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
_io_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _g_write
_TEXT	SEGMENT
_nargs$1$ = -4						; size = 4
_L$ = 8							; size = 4
_f$ = 12						; size = 4
_l$1 = 16						; size = 4
_arg$ = 16						; size = 4
_g_write PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; Line 612
  00005	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	53		 push	 ebx
  0000b	e8 00 00 00 00	 call	 _lua_gettop
  00010	8b 7d 10	 mov	 edi, DWORD PTR _arg$[ebp]
  00013	83 c4 04	 add	 esp, 4
; Line 613
  00016	be 01 00 00 00	 mov	 esi, 1
  0001b	2b c7		 sub	 eax, edi
; Line 614
  0001d	0f 84 b3 00 00
	00		 je	 $LN21@g_write
$LL7@g_write:
  00023	48		 dec	 eax
; Line 615
  00024	57		 push	 edi
  00025	53		 push	 ebx
  00026	89 45 fc	 mov	 DWORD PTR _nargs$1$[ebp], eax
  00029	e8 00 00 00 00	 call	 _lua_type
  0002e	83 c4 08	 add	 esp, 8
  00031	83 f8 03	 cmp	 eax, 3
  00034	75 70		 jne	 SHORT $LN4@g_write
; Line 619
  00036	57		 push	 edi
  00037	53		 push	 ebx
  00038	e8 00 00 00 00	 call	 _lua_isinteger
  0003d	83 c4 08	 add	 esp, 8
  00040	6a 00		 push	 0
  00042	57		 push	 edi
  00043	53		 push	 ebx
  00044	85 c0		 test	 eax, eax
  00046	74 1a		 je	 SHORT $LN10@g_write
  00048	e8 00 00 00 00	 call	 _lua_tointegerx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_04BFAHMMK@?$CFlld?$AA@
  00054	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  0005d	83 c4 1c	 add	 esp, 28			; 0000001cH
  00060	eb 1c		 jmp	 SHORT $LN11@g_write
$LN10@g_write:
  00062	e8 00 00 00 00	 call	 _lua_tonumberx
  00067	83 c4 04	 add	 esp, 4
  0006a	dd 1c 24	 fstp	 QWORD PTR [esp]
  0006d	68 00 00 00 00	 push	 OFFSET ??_C@_05CGOEHEFE@?$CF?414g?$AA@
  00072	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  00075	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fprintf
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
$LN11@g_write:
; Line 620
  0007e	85 f6		 test	 esi, esi
  00080	74 04		 je	 SHORT $LN14@g_write
  00082	85 c0		 test	 eax, eax
  00084	7f 49		 jg	 SHORT $LN22@g_write
$LN14@g_write:
; Line 625
  00086	33 f6		 xor	 esi, esi
$LN6@g_write:
; Line 614
  00088	8b 45 fc	 mov	 eax, DWORD PTR _nargs$1$[ebp]
  0008b	47		 inc	 edi
  0008c	85 c0		 test	 eax, eax
  0008e	75 93		 jne	 SHORT $LL7@g_write
; Line 628
  00090	85 f6		 test	 esi, esi
  00092	75 42		 jne	 SHORT $LN21@g_write
; Line 629
  00094	56		 push	 esi
  00095	56		 push	 esi
  00096	53		 push	 ebx
  00097	e8 00 00 00 00	 call	 _luaL_fileresult
  0009c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx
; Line 630
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
$LN4@g_write:
; Line 624
  000a6	8d 45 10	 lea	 eax, DWORD PTR _l$1[ebp]
  000a9	50		 push	 eax
  000aa	57		 push	 edi
  000ab	53		 push	 ebx
  000ac	e8 00 00 00 00	 call	 _luaL_checklstring
  000b1	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 625
  000b4	85 f6		 test	 esi, esi
  000b6	74 ce		 je	 SHORT $LN14@g_write
  000b8	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  000bb	ff 75 10	 push	 DWORD PTR _l$1[ebp]
  000be	6a 01		 push	 1
  000c0	50		 push	 eax
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  000c7	83 c4 10	 add	 esp, 16			; 00000010H
  000ca	3b 45 10	 cmp	 eax, DWORD PTR _l$1[ebp]
  000cd	75 b7		 jne	 SHORT $LN14@g_write
$LN22@g_write:
  000cf	be 01 00 00 00	 mov	 esi, 1
  000d4	eb b2		 jmp	 SHORT $LN6@g_write
$LN21@g_write:
  000d6	5f		 pop	 edi
  000d7	5e		 pop	 esi
; Line 628
  000d8	b8 01 00 00 00	 mov	 eax, 1
  000dd	5b		 pop	 ebx
; Line 630
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c3		 ret	 0
_g_write ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _f_read
_TEXT	SEGMENT
_L$ = 8							; size = 4
_f_read	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 575
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 576
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  0000d	6a 01		 push	 1
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 _luaL_checkudata
  00015	8b f8		 mov	 edi, eax
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001a	83 7f 04 00	 cmp	 DWORD PTR [edi+4], 0
  0001e	75 0e		 jne	 SHORT $LN3@f_read
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LPOOHAOM@attempt?5to?5use?5a?5closed?5file?$AA@
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 _luaL_error
  0002b	83 c4 08	 add	 esp, 8
$LN3@f_read:
  0002e	6a 02		 push	 2
  00030	ff 37		 push	 DWORD PTR [edi]
  00032	56		 push	 esi
  00033	e8 00 00 00 00	 call	 _g_read
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
; Line 577
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
_f_read	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_read
_TEXT	SEGMENT
_L$ = 8							; size = 4
_io_read PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 570
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 571
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_09HINEJHGE@_IO_input?$AA@
  0000d	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00012	56		 push	 esi
  00013	e8 00 00 00 00	 call	 _lua_getfield
  00018	6a ff		 push	 -1
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 _lua_touserdata
  00020	8b f8		 mov	 edi, eax
  00022	83 c4 14	 add	 esp, 20			; 00000014H
  00025	83 7f 04 00	 cmp	 DWORD PTR [edi+4], 0
  00029	75 13		 jne	 SHORT $LN3@io_read
  0002b	68 04 00 00 00	 push	 OFFSET ??_C@_09HINEJHGE@_IO_input?$AA@+4
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@JMNLNGCA@standard?5?$CFs?5file?5is?5closed?$AA@
  00035	56		 push	 esi
  00036	e8 00 00 00 00	 call	 _luaL_error
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@io_read:
  0003e	6a 01		 push	 1
  00040	ff 37		 push	 DWORD PTR [edi]
  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 _g_read
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
; Line 572
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
_io_read ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _g_read
_TEXT	SEGMENT
_nargs$1$ = -8						; size = 4
_success$1$ = -4					; size = 4
_L$ = 8							; size = 4
_f$ = 12						; size = 4
_first$ = 16						; size = 4
_g_read	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 520
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
; Line 521
  00009	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0000c	57		 push	 edi
  0000d	e8 00 00 00 00	 call	 _lua_gettop
; Line 524
  00012	8b 5d 0c	 mov	 ebx, DWORD PTR _f$[ebp]
  00015	8b f0		 mov	 esi, eax
  00017	53		 push	 ebx
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__clearerr
  0001e	83 c4 08	 add	 esp, 8
  00021	4e		 dec	 esi
; Line 525
  00022	75 17		 jne	 SHORT $LN17@g_read
; Line 526
  00024	6a 01		 push	 1
  00026	53		 push	 ebx
  00027	57		 push	 edi
  00028	e8 00 00 00 00	 call	 _read_line
; Line 527
  0002d	8b 5d 10	 mov	 ebx, DWORD PTR _first$[ebp]
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH
  00033	8b f0		 mov	 esi, eax
  00035	43		 inc	 ebx
; Line 529
  00036	e9 fb 00 00 00	 jmp	 $LN25@g_read
$LN17@g_read:
; Line 530
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@IOJAAODF@too?5many?5arguments?$AA@
  00040	8d 46 14	 lea	 eax, DWORD PTR [esi+20]
  00043	50		 push	 eax
  00044	57		 push	 edi
  00045	e8 00 00 00 00	 call	 _luaL_checkstack
; Line 532
  0004a	8b 5d 10	 mov	 ebx, DWORD PTR _first$[ebp]
  0004d	b8 01 00 00 00	 mov	 eax, 1
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH
  00055	89 45 fc	 mov	 DWORD PTR _success$1$[ebp], eax
$LL15@g_read:
  00058	4e		 dec	 esi
  00059	89 75 f8	 mov	 DWORD PTR _nargs$1$[ebp], esi
  0005c	85 c0		 test	 eax, eax
  0005e	0f 84 cf 00 00
	00		 je	 $LN30@g_read
; Line 533
  00064	53		 push	 ebx
  00065	57		 push	 edi
  00066	e8 00 00 00 00	 call	 _lua_type
  0006b	83 c4 08	 add	 esp, 8
  0006e	83 f8 03	 cmp	 eax, 3
  00071	75 4d		 jne	 SHORT $LN12@g_read
; Line 534
  00073	53		 push	 ebx
  00074	57		 push	 edi
  00075	e8 00 00 00 00	 call	 _luaL_checkinteger
  0007a	83 c4 08	 add	 esp, 8
; Line 535
  0007d	85 c0		 test	 eax, eax
  0007f	75 30		 jne	 SHORT $LN20@g_read
  00081	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  00084	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__getc
  0008a	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  0008d	8b f0		 mov	 esi, eax
  0008f	56		 push	 esi
  00090	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ungetc
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0009b	57		 push	 edi
  0009c	e8 00 00 00 00	 call	 _lua_pushstring
  000a1	33 c0		 xor	 eax, eax
  000a3	83 c4 14	 add	 esp, 20			; 00000014H
  000a6	83 fe ff	 cmp	 esi, -1
  000a9	8b 75 f8	 mov	 esi, DWORD PTR _nargs$1$[ebp]
  000ac	0f 95 c0	 setne	 al
  000af	eb 76		 jmp	 SHORT $LN31@g_read
$LN20@g_read:
  000b1	50		 push	 eax
  000b2	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  000b5	57		 push	 edi
  000b6	e8 00 00 00 00	 call	 _read_chars
  000bb	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 537
  000be	eb 67		 jmp	 SHORT $LN31@g_read
$LN12@g_read:
; Line 538
  000c0	6a 00		 push	 0
  000c2	53		 push	 ebx
  000c3	57		 push	 edi
  000c4	e8 00 00 00 00	 call	 _luaL_checklstring
  000c9	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 539
  000cc	80 38 2a	 cmp	 BYTE PTR [eax], 42	; 0000002aH
  000cf	75 01		 jne	 SHORT $LN10@g_read
  000d1	40		 inc	 eax
$LN10@g_read:
; Line 540
  000d2	0f be 00	 movsx	 eax, BYTE PTR [eax]
  000d5	83 c0 b4	 add	 eax, -76		; ffffffb4H
  000d8	83 f8 22	 cmp	 eax, 34			; 00000022H
  000db	77 7d		 ja	 SHORT $LN3@g_read
  000dd	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN29@g_read[eax]
  000e4	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN34@g_read[eax*4]
$LN7@g_read:
; Line 542
  000eb	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  000ee	57		 push	 edi
  000ef	e8 00 00 00 00	 call	 _read_number
; Line 543
  000f4	eb 2e		 jmp	 SHORT $LN32@g_read
$LN6@g_read:
; Line 545
  000f6	6a 01		 push	 1
  000f8	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  000fb	57		 push	 edi
  000fc	e8 00 00 00 00	 call	 _read_line
  00101	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 546
  00104	eb 21		 jmp	 SHORT $LN31@g_read
$LN5@g_read:
; Line 548
  00106	6a 00		 push	 0
  00108	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 _read_line
  00111	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 549
  00114	eb 11		 jmp	 SHORT $LN31@g_read
$LN4@g_read:
; Line 551
  00116	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  00119	57		 push	 edi
  0011a	e8 00 00 00 00	 call	 _read_all
; Line 552
  0011f	b8 01 00 00 00	 mov	 eax, 1
$LN32@g_read:
; Line 551
  00124	83 c4 08	 add	 esp, 8
$LN31@g_read:
; Line 532
  00127	43		 inc	 ebx
; Line 552
  00128	89 45 fc	 mov	 DWORD PTR _success$1$[ebp], eax
  0012b	85 f6		 test	 esi, esi
  0012d	0f 85 25 ff ff
	ff		 jne	 $LL15@g_read
$LN30@g_read:
  00133	8b 75 fc	 mov	 esi, DWORD PTR _success$1$[ebp]
$LN25@g_read:
; Line 560
  00136	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  00139	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ferror
  0013f	83 c4 04	 add	 esp, 4
  00142	85 c0		 test	 eax, eax
  00144	74 2a		 je	 SHORT $LN2@g_read
; Line 561
  00146	6a 00		 push	 0
  00148	6a 00		 push	 0
  0014a	57		 push	 edi
  0014b	e8 00 00 00 00	 call	 _luaL_fileresult
  00150	83 c4 0c	 add	 esp, 12			; 0000000cH
  00153	5f		 pop	 edi
  00154	5e		 pop	 esi
  00155	5b		 pop	 ebx
; Line 567
  00156	8b e5		 mov	 esp, ebp
  00158	5d		 pop	 ebp
  00159	c3		 ret	 0
$LN3@g_read:
; Line 555
  0015a	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CENJCLHM@invalid?5format?$AA@
  0015f	53		 push	 ebx
  00160	57		 push	 edi
  00161	e8 00 00 00 00	 call	 _luaL_argerror
  00166	83 c4 0c	 add	 esp, 12			; 0000000cH
  00169	5f		 pop	 edi
  0016a	5e		 pop	 esi
  0016b	5b		 pop	 ebx
; Line 567
  0016c	8b e5		 mov	 esp, ebp
  0016e	5d		 pop	 ebp
  0016f	c3		 ret	 0
$LN2@g_read:
; Line 562
  00170	85 f6		 test	 esi, esi
  00172	75 11		 jne	 SHORT $LN1@g_read
; Line 563
  00174	6a fe		 push	 -2			; fffffffeH
  00176	57		 push	 edi
  00177	e8 00 00 00 00	 call	 _lua_settop
; Line 564
  0017c	57		 push	 edi
  0017d	e8 00 00 00 00	 call	 _lua_pushnil
  00182	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@g_read:
; Line 566
  00185	2b 5d 10	 sub	 ebx, DWORD PTR _first$[ebp]
  00188	5f		 pop	 edi
  00189	5e		 pop	 esi
  0018a	8b c3		 mov	 eax, ebx
  0018c	5b		 pop	 ebx
; Line 567
  0018d	8b e5		 mov	 esp, ebp
  0018f	5d		 pop	 ebp
  00190	c3		 ret	 0
  00191	8d 49 00	 npad	 3
$LN34@g_read:
  00194	00 00 00 00	 DD	 $LN5@g_read
  00198	00 00 00 00	 DD	 $LN4@g_read
  0019c	00 00 00 00	 DD	 $LN6@g_read
  001a0	00 00 00 00	 DD	 $LN7@g_read
  001a4	00 00 00 00	 DD	 $LN3@g_read
$LN29@g_read:
  001a8	00		 DB	 0
  001a9	04		 DB	 4
  001aa	04		 DB	 4
  001ab	04		 DB	 4
  001ac	04		 DB	 4
  001ad	04		 DB	 4
  001ae	04		 DB	 4
  001af	04		 DB	 4
  001b0	04		 DB	 4
  001b1	04		 DB	 4
  001b2	04		 DB	 4
  001b3	04		 DB	 4
  001b4	04		 DB	 4
  001b5	04		 DB	 4
  001b6	04		 DB	 4
  001b7	04		 DB	 4
  001b8	04		 DB	 4
  001b9	04		 DB	 4
  001ba	04		 DB	 4
  001bb	04		 DB	 4
  001bc	04		 DB	 4
  001bd	01		 DB	 1
  001be	04		 DB	 4
  001bf	04		 DB	 4
  001c0	04		 DB	 4
  001c1	04		 DB	 4
  001c2	04		 DB	 4
  001c3	04		 DB	 4
  001c4	04		 DB	 4
  001c5	04		 DB	 4
  001c6	04		 DB	 4
  001c7	04		 DB	 4
  001c8	02		 DB	 2
  001c9	04		 DB	 4
  001ca	03		 DB	 3
_g_read	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _read_chars
_TEXT	SEGMENT
_b$ = -8212						; size = 8208
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_f$ = 12						; size = 4
_n$ = 16						; size = 4
_read_chars PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 507
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 14 20 00 00	 mov	 eax, 8212		; 00002014H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
; Line 511
  0001a	8d 8d ec df ff
	ff		 lea	 ecx, DWORD PTR _b$[ebp]
  00020	56		 push	 esi
  00021	8b 75 0c	 mov	 esi, DWORD PTR _f$[ebp]
  00024	57		 push	 edi
  00025	8b 7d 10	 mov	 edi, DWORD PTR _n$[ebp]
  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 _luaL_buffinit
; Line 512
  0002f	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _b$[ebp]
  00035	57		 push	 edi
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 _luaL_prepbuffsize
; Line 513
  0003c	56		 push	 esi
  0003d	57		 push	 edi
  0003e	6a 01		 push	 1
  00040	50		 push	 eax
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  00047	8b f0		 mov	 esi, eax
; Line 515
  00049	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _b$[ebp]
  0004f	01 b5 f4 df ff
	ff		 add	 DWORD PTR _b$[ebp+8], esi
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 _luaL_pushresult
; Line 517
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005e	83 c4 24	 add	 esp, 36			; 00000024H
  00061	33 c0		 xor	 eax, eax
  00063	3b c6		 cmp	 eax, esi
  00065	1b c0		 sbb	 eax, eax
  00067	33 cd		 xor	 ecx, ebp
  00069	5f		 pop	 edi
  0006a	f7 d8		 neg	 eax
  0006c	5e		 pop	 esi
  0006d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
_read_chars ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _read_all
_TEXT	SEGMENT
_b$ = -8212						; size = 8208
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_f$ = 12						; size = 4
_read_all PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 494
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 14 20 00 00	 mov	 eax, 8212		; 00002014H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
; Line 497
  0001a	8d 8d ec df ff
	ff		 lea	 ecx, DWORD PTR _b$[ebp]
  00020	56		 push	 esi
  00021	8b 75 0c	 mov	 esi, DWORD PTR _f$[ebp]
  00024	57		 push	 edi
  00025	51		 push	 ecx
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _luaL_buffinit
  0002c	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__fread
  00032	83 c4 08	 add	 esp, 8
  00035	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$LL3@read_all:
; Line 499
  00040	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _b$[ebp]
  00046	68 00 20 00 00	 push	 8192			; 00002000H
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 _luaL_prepbuffsize
; Line 500
  00051	56		 push	 esi
  00052	68 00 20 00 00	 push	 8192			; 00002000H
  00057	6a 01		 push	 1
  00059	50		 push	 eax
  0005a	ff d7		 call	 edi
; Line 501
  0005c	01 85 f4 df ff
	ff		 add	 DWORD PTR _b$[ebp+8], eax
  00062	83 c4 18	 add	 esp, 24			; 00000018H
; Line 502
  00065	3d 00 20 00 00	 cmp	 eax, 8192		; 00002000H
  0006a	74 d4		 je	 SHORT $LL3@read_all
; Line 503
  0006c	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _b$[ebp]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 _luaL_pushresult
; Line 504
  00078	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007b	83 c4 04	 add	 esp, 4
  0007e	33 cd		 xor	 ecx, ebp
  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c3		 ret	 0
_read_all ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _read_line
_TEXT	SEGMENT
_f$GSCopy$1$ = -8220					; size = 4
_L$GSCopy$1$ = -8216					; size = 4
_b$ = -8212						; size = 8208
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_f$ = 12						; size = 4
_chop$ = 16						; size = 4
_read_line PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 473
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 1c 20 00 00	 mov	 eax, 8220		; 0000201cH
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	8b 45 0c	 mov	 eax, DWORD PTR _f$[ebp]
  0001a	53		 push	 ebx
  0001b	56		 push	 esi
  0001c	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
; Line 475
  0001f	33 db		 xor	 ebx, ebx
  00021	89 85 e4 df ff
	ff		 mov	 DWORD PTR _f$GSCopy$1$[ebp], eax
; Line 476
  00027	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _b$[ebp]
  0002d	50		 push	 eax
  0002e	56		 push	 esi
  0002f	89 b5 e8 df ff
	ff		 mov	 DWORD PTR _L$GSCopy$1$[ebp], esi
  00035	e8 00 00 00 00	 call	 _luaL_buffinit
  0003a	8b 8d f4 df ff
	ff		 mov	 ecx, DWORD PTR _b$[ebp+8]
  00040	83 c4 08	 add	 esp, 8
  00043	57		 push	 edi
$LL5@read_line:
; Line 477
  00044	83 fb 0a	 cmp	 ebx, 10			; 0000000aH
  00047	74 52		 je	 SHORT $LN4@read_line
; Line 478
  00049	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _b$[ebp]
  0004f	68 00 20 00 00	 push	 8192			; 00002000H
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 _luaL_prepbuffsize
  0005a	83 c4 08	 add	 esp, 8
  0005d	8b f8		 mov	 edi, eax
; Line 479
  0005f	33 f6		 xor	 esi, esi
$LL3@read_line:
; Line 481
  00061	ff b5 e4 df ff
	ff		 push	 DWORD PTR _f$GSCopy$1$[ebp]
  00067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__getc
  0006d	8b d8		 mov	 ebx, eax
  0006f	83 c4 04	 add	 esp, 4
  00072	83 fb ff	 cmp	 ebx, -1
  00075	74 11		 je	 SHORT $LN2@read_line
  00077	83 fb 0a	 cmp	 ebx, 10			; 0000000aH
  0007a	74 0c		 je	 SHORT $LN2@read_line
; Line 482
  0007c	88 1c 3e	 mov	 BYTE PTR [esi+edi], bl
  0007f	46		 inc	 esi
  00080	81 fe 00 20 00
	00		 cmp	 esi, 8192		; 00002000H
  00086	7c d9		 jl	 SHORT $LL3@read_line
$LN2@read_line:
; Line 484
  00088	8b 8d f4 df ff
	ff		 mov	 ecx, DWORD PTR _b$[ebp+8]
  0008e	03 ce		 add	 ecx, esi
  00090	89 8d f4 df ff
	ff		 mov	 DWORD PTR _b$[ebp+8], ecx
  00096	83 fb ff	 cmp	 ebx, -1
  00099	75 a9		 jne	 SHORT $LL5@read_line
$LN4@read_line:
; Line 486
  0009b	83 7d 10 00	 cmp	 DWORD PTR _chop$[ebp], 0
  0009f	5f		 pop	 edi
  000a0	75 34		 jne	 SHORT $LN1@read_line
  000a2	83 fb 0a	 cmp	 ebx, 10			; 0000000aH
  000a5	75 2f		 jne	 SHORT $LN1@read_line
; Line 487
  000a7	3b 8d f0 df ff
	ff		 cmp	 ecx, DWORD PTR _b$[ebp+4]
  000ad	72 17		 jb	 SHORT $LN8@read_line
  000af	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _b$[ebp]
  000b5	6a 01		 push	 1
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 _luaL_prepbuffsize
  000bd	8b 8d f4 df ff
	ff		 mov	 ecx, DWORD PTR _b$[ebp+8]
  000c3	83 c4 08	 add	 esp, 8
$LN8@read_line:
  000c6	8b 85 ec df ff
	ff		 mov	 eax, DWORD PTR _b$[ebp]
  000cc	c6 04 08 0a	 mov	 BYTE PTR [eax+ecx], 10	; 0000000aH
  000d0	ff 85 f4 df ff
	ff		 inc	 DWORD PTR _b$[ebp+8]
$LN1@read_line:
; Line 488
  000d6	8d 85 ec df ff
	ff		 lea	 eax, DWORD PTR _b$[ebp]
  000dc	50		 push	 eax
  000dd	e8 00 00 00 00	 call	 _luaL_pushresult
  000e2	83 c4 04	 add	 esp, 4
; Line 490
  000e5	83 fb 0a	 cmp	 ebx, 10			; 0000000aH
  000e8	5e		 pop	 esi
  000e9	5b		 pop	 ebx
  000ea	74 22		 je	 SHORT $LN9@read_line
  000ec	6a ff		 push	 -1
  000ee	ff b5 e8 df ff
	ff		 push	 DWORD PTR _L$GSCopy$1$[ebp]
  000f4	e8 00 00 00 00	 call	 _lua_rawlen
  000f9	83 c4 08	 add	 esp, 8
  000fc	85 c0		 test	 eax, eax
  000fe	75 0e		 jne	 SHORT $LN9@read_line
; Line 491
  00100	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00103	33 cd		 xor	 ecx, ebp
  00105	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0010a	8b e5		 mov	 esp, ebp
  0010c	5d		 pop	 ebp
  0010d	c3		 ret	 0
$LN9@read_line:
  0010e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00111	b8 01 00 00 00	 mov	 eax, 1
  00116	33 cd		 xor	 ecx, ebp
  00118	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c3		 ret	 0
_read_line ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _test_eof
_TEXT	SEGMENT
_L$ = 8							; size = 4
_f$ = 12						; size = 4
_test_eof PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 465
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
; Line 466
  00004	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  00007	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__getc
; Line 467
  0000d	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  00010	8b f8		 mov	 edi, eax
  00012	57		 push	 edi
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ungetc
; Line 468
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0001e	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00021	e8 00 00 00 00	 call	 _lua_pushstring
  00026	83 c4 14	 add	 esp, 20			; 00000014H
; Line 469
  00029	33 c0		 xor	 eax, eax
  0002b	83 ff ff	 cmp	 edi, -1
  0002e	0f 95 c0	 setne	 al
  00031	5f		 pop	 edi
; Line 470
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
_test_eof ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _read_number
_TEXT	SEGMENT
_L$GSCopy$1$ = -228					; size = 4
_decp$1$ = -221						; size = 1
_rn$ = -220						; size = 216
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_f$ = 12						; size = 4
_read_number PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 431
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	89 85 1c ff ff
	ff		 mov	 DWORD PTR _L$GSCopy$1$[ebp], eax
; Line 433
  0001e	33 f6		 xor	 esi, esi
  00020	8b 45 0c	 mov	 eax, DWORD PTR _f$[ebp]
  00023	57		 push	 edi
; Line 436
  00024	89 85 24 ff ff
	ff		 mov	 DWORD PTR _rn$[ebp], eax
  0002a	89 b5 2c ff ff
	ff		 mov	 DWORD PTR _rn$[ebp+8], esi
; Line 437
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__localeconv
  00036	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__getc
  0003c	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__isspace
  00042	8b 00		 mov	 eax, DWORD PTR [eax]
  00044	8a 00		 mov	 al, BYTE PTR [eax]
  00046	88 85 23 ff ff
	ff		 mov	 BYTE PTR _decp$1$[ebp], al
  0004c	8d 64 24 00	 npad	 4
$LL10@read_numbe:
; Line 440
  00050	ff b5 24 ff ff
	ff		 push	 DWORD PTR _rn$[ebp]
  00056	ff d7		 call	 edi
  00058	50		 push	 eax
  00059	89 85 28 ff ff
	ff		 mov	 DWORD PTR _rn$[ebp+4], eax
  0005f	ff d3		 call	 ebx
  00061	83 c4 08	 add	 esp, 8
  00064	85 c0		 test	 eax, eax
  00066	75 e8		 jne	 SHORT $LL10@read_numbe
; Line 441
  00068	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _rn$[ebp+4]
  0006e	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  00071	74 05		 je	 SHORT $LN16@read_numbe
  00073	83 f8 2b	 cmp	 eax, 43			; 0000002bH
  00076	75 3b		 jne	 SHORT $LN50@read_numbe
$LN16@read_numbe:
  00078	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _rn$[ebp+8]
  0007e	81 f9 c8 00 00
	00		 cmp	 ecx, 200		; 000000c8H
  00084	7c 09		 jl	 SHORT $LN21@read_numbe
  00086	c6 85 30 ff ff
	ff 00		 mov	 BYTE PTR _rn$[ebp+12], 0
  0008d	eb 2a		 jmp	 SHORT $LN20@read_numbe
$LN21@read_numbe:
  0008f	8a 85 28 ff ff
	ff		 mov	 al, BYTE PTR _rn$[ebp+4]
  00095	88 84 0d 30 ff
	ff ff		 mov	 BYTE PTR _rn$[ebp+ecx+12], al
  0009c	ff b5 24 ff ff
	ff		 push	 DWORD PTR _rn$[ebp]
  000a2	ff 85 2c ff ff
	ff		 inc	 DWORD PTR _rn$[ebp+8]
  000a8	ff d7		 call	 edi
  000aa	83 c4 04	 add	 esp, 4
  000ad	89 85 28 ff ff
	ff		 mov	 DWORD PTR _rn$[ebp+4], eax
$LN50@read_numbe:
  000b3	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _rn$[ebp+8]
$LN20@read_numbe:
; Line 442
  000b9	83 f8 30	 cmp	 eax, 48			; 00000030H
  000bc	75 51		 jne	 SHORT $LN49@read_numbe
  000be	81 f9 c8 00 00
	00		 cmp	 ecx, 200		; 000000c8H
  000c4	7c 09		 jl	 SHORT $LN30@read_numbe
  000c6	c6 85 30 ff ff
	ff 00		 mov	 BYTE PTR _rn$[ebp+12], 0
  000cd	eb 40		 jmp	 SHORT $LN49@read_numbe
$LN30@read_numbe:
  000cf	c6 84 0d 30 ff
	ff ff 30	 mov	 BYTE PTR _rn$[ebp+ecx+12], 48 ; 00000030H
  000d7	ff b5 24 ff ff
	ff		 push	 DWORD PTR _rn$[ebp]
  000dd	ff 85 2c ff ff
	ff		 inc	 DWORD PTR _rn$[ebp+8]
  000e3	ff d7		 call	 edi
  000e5	89 85 28 ff ff
	ff		 mov	 DWORD PTR _rn$[ebp+4], eax
; Line 443
  000eb	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _rn$[ebp]
  000f1	68 00 00 00 00	 push	 OFFSET ??_C@_02CIDOMIFJ@xX?$AA@
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 _test2
  000fc	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ff	85 c0		 test	 eax, eax
  00101	74 07		 je	 SHORT $LN6@read_numbe
  00103	bb 01 00 00 00	 mov	 ebx, 1
  00108	eb 07		 jmp	 SHORT $LN5@read_numbe
$LN6@read_numbe:
; Line 444
  0010a	be 01 00 00 00	 mov	 esi, 1
$LN49@read_numbe:
  0010f	33 db		 xor	 ebx, ebx
$LN5@read_numbe:
; Line 446
  00111	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _rn$[ebp]
  00117	53		 push	 ebx
  00118	50		 push	 eax
  00119	e8 00 00 00 00	 call	 _readdigits
  0011e	03 f0		 add	 esi, eax
  00120	83 c4 08	 add	 esp, 8
; Line 447
  00123	0f be 85 23 ff
	ff ff		 movsx	 eax, BYTE PTR _decp$1$[ebp]
  0012a	39 85 28 ff ff
	ff		 cmp	 DWORD PTR _rn$[ebp+4], eax
  00130	75 4a		 jne	 SHORT $LN4@read_numbe
  00132	8b 8d 2c ff ff
	ff		 mov	 ecx, DWORD PTR _rn$[ebp+8]
  00138	81 f9 c8 00 00
	00		 cmp	 ecx, 200		; 000000c8H
  0013e	7c 09		 jl	 SHORT $LN39@read_numbe
  00140	c6 85 30 ff ff
	ff 00		 mov	 BYTE PTR _rn$[ebp+12], 0
  00147	eb 33		 jmp	 SHORT $LN4@read_numbe
$LN39@read_numbe:
  00149	8a 85 28 ff ff
	ff		 mov	 al, BYTE PTR _rn$[ebp+4]
  0014f	88 84 0d 30 ff
	ff ff		 mov	 BYTE PTR _rn$[ebp+ecx+12], al
  00156	ff b5 24 ff ff
	ff		 push	 DWORD PTR _rn$[ebp]
  0015c	ff 85 2c ff ff
	ff		 inc	 DWORD PTR _rn$[ebp+8]
  00162	ff d7		 call	 edi
  00164	89 85 28 ff ff
	ff		 mov	 DWORD PTR _rn$[ebp+4], eax
; Line 448
  0016a	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _rn$[ebp]
  00170	53		 push	 ebx
  00171	50		 push	 eax
  00172	e8 00 00 00 00	 call	 _readdigits
  00177	83 c4 0c	 add	 esp, 12			; 0000000cH
  0017a	03 f0		 add	 esi, eax
$LN4@read_numbe:
; Line 449
  0017c	85 f6		 test	 esi, esi
  0017e	7e 45		 jle	 SHORT $LN48@read_numbe
  00180	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02MDKMJEGG@eE?$AA@
  00185	85 db		 test	 ebx, ebx
  00187	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_02OOPEBDOJ@pP?$AA@
  0018c	0f 44 c1	 cmove	 eax, ecx
  0018f	50		 push	 eax
  00190	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _rn$[ebp]
  00196	50		 push	 eax
  00197	e8 00 00 00 00	 call	 _test2
  0019c	83 c4 08	 add	 esp, 8
  0019f	85 c0		 test	 eax, eax
  001a1	74 22		 je	 SHORT $LN48@read_numbe
; Line 450
  001a3	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _rn$[ebp]
  001a9	68 00 00 00 00	 push	 OFFSET ??_C@_02EGFLAODH@?9?$CL?$AA@
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 _test2
; Line 451
  001b4	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _rn$[ebp]
  001ba	6a 00		 push	 0
  001bc	50		 push	 eax
  001bd	e8 00 00 00 00	 call	 _readdigits
  001c2	83 c4 10	 add	 esp, 16			; 00000010H
$LN48@read_numbe:
; Line 453
  001c5	ff b5 24 ff ff
	ff		 push	 DWORD PTR _rn$[ebp]
  001cb	ff b5 28 ff ff
	ff		 push	 DWORD PTR _rn$[ebp+4]
  001d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ungetc
; Line 455
  001d7	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _rn$[ebp+8]
; Line 456
  001dd	8b b5 1c ff ff
	ff		 mov	 esi, DWORD PTR _L$GSCopy$1$[ebp]
  001e3	c6 84 05 30 ff
	ff ff 00	 mov	 BYTE PTR _rn$[ebp+eax+12], 0
  001eb	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _rn$[ebp+12]
  001f1	50		 push	 eax
  001f2	56		 push	 esi
  001f3	e8 00 00 00 00	 call	 _lua_stringtonumber
  001f8	83 c4 10	 add	 esp, 16			; 00000010H
  001fb	85 c0		 test	 eax, eax
  001fd	74 16		 je	 SHORT $LN2@read_numbe
; Line 457
  001ff	5f		 pop	 edi
  00200	5e		 pop	 esi
  00201	b8 01 00 00 00	 mov	 eax, 1
  00206	5b		 pop	 ebx
; Line 462
  00207	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0020a	33 cd		 xor	 ecx, ebp
  0020c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00211	8b e5		 mov	 esp, ebp
  00213	5d		 pop	 ebp
  00214	c3		 ret	 0
$LN2@read_numbe:
; Line 459
  00215	56		 push	 esi
  00216	e8 00 00 00 00	 call	 _lua_pushnil
; Line 462
  0021b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0021e	83 c4 04	 add	 esp, 4
  00221	33 cd		 xor	 ecx, ebp
  00223	33 c0		 xor	 eax, eax
  00225	5f		 pop	 edi
  00226	5e		 pop	 esi
  00227	5b		 pop	 ebx
  00228	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0022d	8b e5		 mov	 esp, ebp
  0022f	5d		 pop	 ebp
  00230	c3		 ret	 0
_read_number ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _readdigits
_TEXT	SEGMENT
_rn$ = 8						; size = 4
_hex$ = 12						; size = 4
_readdigits PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 418
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 419
  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _hex$[ebp]
  00007	56		 push	 esi
  00008	8b 75 08	 mov	 esi, DWORD PTR _rn$[ebp]
  0000b	57		 push	 edi
  0000c	33 ff		 xor	 edi, edi
  0000e	8b ff		 npad	 2
$LL2@readdigits:
; Line 420
  00010	ff 76 04	 push	 DWORD PTR [esi+4]
  00013	85 db		 test	 ebx, ebx
  00015	74 08		 je	 SHORT $LN5@readdigits
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__isxdigit
  0001d	eb 06		 jmp	 SHORT $LN17@readdigits
$LN5@readdigits:
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__isdigit
$LN17@readdigits:
  00025	83 c4 04	 add	 esp, 4
  00028	85 c0		 test	 eax, eax
  0002a	74 2a		 je	 SHORT $LN16@readdigits
  0002c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0002f	81 f9 c8 00 00
	00		 cmp	 ecx, 200		; 000000c8H
  00035	7d 1b		 jge	 SHORT $LN15@readdigits
  00037	8a 46 04	 mov	 al, BYTE PTR [esi+4]
  0003a	88 44 31 0c	 mov	 BYTE PTR [ecx+esi+12], al
  0003e	ff 36		 push	 DWORD PTR [esi]
  00040	ff 46 08	 inc	 DWORD PTR [esi+8]
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__getc
  00049	83 c4 04	 add	 esp, 4
  0004c	89 46 04	 mov	 DWORD PTR [esi+4], eax
; Line 421
  0004f	47		 inc	 edi
  00050	eb be		 jmp	 SHORT $LL2@readdigits
$LN15@readdigits:
; Line 420
  00052	c6 46 0c 00	 mov	 BYTE PTR [esi+12], 0
$LN16@readdigits:
; Line 422
  00056	8b c7		 mov	 eax, edi
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
; Line 423
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
_readdigits ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _test2
_TEXT	SEGMENT
_rn$ = 8						; size = 4
_set$ = 12						; size = 4
_test2	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 408
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 409
  00003	8b 55 0c	 mov	 edx, DWORD PTR _set$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _rn$[ebp]
  0000a	0f be 02	 movsx	 eax, BYTE PTR [edx]
  0000d	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00010	3b c8		 cmp	 ecx, eax
  00012	74 0c		 je	 SHORT $LN2@test2
  00014	0f be 42 01	 movsx	 eax, BYTE PTR [edx+1]
  00018	3b c8		 cmp	 ecx, eax
  0001a	75 13		 jne	 SHORT $LN3@test2
  0001c	85 c9		 test	 ecx, ecx
  0001e	74 0f		 je	 SHORT $LN3@test2
$LN2@test2:
; Line 410
  00020	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00023	81 f9 c8 00 00
	00		 cmp	 ecx, 200		; 000000c8H
  00029	7c 09		 jl	 SHORT $LN7@test2
  0002b	c6 46 0c 00	 mov	 BYTE PTR [esi+12], 0
$LN3@test2:
  0002f	33 c0		 xor	 eax, eax
  00031	5e		 pop	 esi
; Line 412
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
; Line 410
$LN7@test2:
  00034	8a 46 04	 mov	 al, BYTE PTR [esi+4]
  00037	88 44 31 0c	 mov	 BYTE PTR [ecx+esi+12], al
  0003b	ff 36		 push	 DWORD PTR [esi]
  0003d	ff 46 08	 inc	 DWORD PTR [esi+8]
  00040	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__getc
  00046	83 c4 04	 add	 esp, 4
  00049	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0004c	b8 01 00 00 00	 mov	 eax, 1
  00051	5e		 pop	 esi
; Line 412
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
_test2	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _nextc
_TEXT	SEGMENT
_rn$ = 8						; size = 4
_nextc	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 392
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 393
  00004	8b 75 08	 mov	 esi, DWORD PTR _rn$[ebp]
  00007	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0000a	81 f9 c8 00 00
	00		 cmp	 ecx, 200		; 000000c8H
  00010	7c 09		 jl	 SHORT $LN2@nextc
; Line 394
  00012	c6 46 0c 00	 mov	 BYTE PTR [esi+12], 0
; Line 395
  00016	33 c0		 xor	 eax, eax
  00018	5e		 pop	 esi
; Line 402
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
$LN2@nextc:
; Line 398
  0001b	8a 46 04	 mov	 al, BYTE PTR [esi+4]
  0001e	88 44 31 0c	 mov	 BYTE PTR [ecx+esi+12], al
; Line 399
  00022	ff 36		 push	 DWORD PTR [esi]
  00024	ff 46 08	 inc	 DWORD PTR [esi+8]
  00027	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__getc
  0002d	83 c4 04	 add	 esp, 4
  00030	89 46 04	 mov	 DWORD PTR [esi+4], eax
; Line 400
  00033	b8 01 00 00 00	 mov	 eax, 1
  00038	5e		 pop	 esi
; Line 402
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
_nextc	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_lines
_TEXT	SEGMENT
_L$ = 8							; size = 4
_io_lines PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 350
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 352
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 01		 push	 1
  00009	56		 push	 esi
  0000a	e8 00 00 00 00	 call	 _lua_type
  0000f	83 c4 08	 add	 esp, 8
  00012	83 f8 ff	 cmp	 eax, -1
  00015	75 09		 jne	 SHORT $LN3@io_lines
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 _lua_pushnil
  0001d	83 c4 04	 add	 esp, 4
$LN3@io_lines:
; Line 353
  00020	6a 01		 push	 1
  00022	56		 push	 esi
  00023	e8 00 00 00 00	 call	 _lua_type
  00028	83 c4 08	 add	 esp, 8
  0002b	85 c0		 test	 eax, eax
  0002d	75 5a		 jne	 SHORT $LN2@io_lines
; Line 354
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_09HINEJHGE@_IO_input?$AA@
  00034	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00039	56		 push	 esi
  0003a	e8 00 00 00 00	 call	 _lua_getfield
; Line 355
  0003f	6a 01		 push	 1
  00041	6a ff		 push	 -1
  00043	56		 push	 esi
  00044	e8 00 00 00 00	 call	 _lua_copy
  00049	6a fe		 push	 -2			; fffffffeH
  0004b	56		 push	 esi
  0004c	e8 00 00 00 00	 call	 _lua_settop
; Line 356
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00056	6a 01		 push	 1
  00058	56		 push	 esi
  00059	e8 00 00 00 00	 call	 _luaL_checkudata
  0005e	83 c4 2c	 add	 esp, 44			; 0000002cH
  00061	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00065	75 0e		 jne	 SHORT $LN6@io_lines
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LPOOHAOM@attempt?5to?5use?5a?5closed?5file?$AA@
  0006c	56		 push	 esi
  0006d	e8 00 00 00 00	 call	 _luaL_error
  00072	83 c4 08	 add	 esp, 8
$LN6@io_lines:
; Line 357
  00075	33 c0		 xor	 eax, eax
; Line 365
  00077	50		 push	 eax
  00078	56		 push	 esi
  00079	e8 00 00 00 00	 call	 _aux_lines
  0007e	83 c4 08	 add	 esp, 8
; Line 366
  00081	b8 01 00 00 00	 mov	 eax, 1
  00086	5e		 pop	 esi
; Line 367
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
$LN2@io_lines:
; Line 360
  00089	6a 00		 push	 0
  0008b	6a 01		 push	 1
  0008d	56		 push	 esi
  0008e	e8 00 00 00 00	 call	 _luaL_checklstring
; Line 361
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00098	50		 push	 eax
  00099	56		 push	 esi
  0009a	e8 00 00 00 00	 call	 _opencheck
; Line 362
  0009f	6a 01		 push	 1
  000a1	6a ff		 push	 -1
  000a3	56		 push	 esi
  000a4	e8 00 00 00 00	 call	 _lua_copy
  000a9	6a fe		 push	 -2			; fffffffeH
  000ab	56		 push	 esi
  000ac	e8 00 00 00 00	 call	 _lua_settop
  000b1	83 c4 2c	 add	 esp, 44			; 0000002cH
; Line 363
  000b4	b8 01 00 00 00	 mov	 eax, 1
; Line 365
  000b9	50		 push	 eax
  000ba	56		 push	 esi
  000bb	e8 00 00 00 00	 call	 _aux_lines
  000c0	83 c4 08	 add	 esp, 8
; Line 366
  000c3	b8 01 00 00 00	 mov	 eax, 1
  000c8	5e		 pop	 esi
; Line 367
  000c9	5d		 pop	 ebp
  000ca	c3		 ret	 0
_io_lines ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _f_lines
_TEXT	SEGMENT
_L$ = 8							; size = 4
_f_lines PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 343
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 344
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  0000d	6a 01		 push	 1
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 _luaL_checkudata
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	75 0e		 jne	 SHORT $LN3@f_lines
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LPOOHAOM@attempt?5to?5use?5a?5closed?5file?$AA@
  00023	56		 push	 esi
  00024	e8 00 00 00 00	 call	 _luaL_error
  00029	83 c4 08	 add	 esp, 8
$LN3@f_lines:
; Line 345
  0002c	56		 push	 esi
  0002d	e8 00 00 00 00	 call	 _lua_gettop
  00032	83 c4 04	 add	 esp, 4
  00035	8d 78 ff	 lea	 edi, DWORD PTR [eax-1]
  00038	81 ff fa 00 00
	00		 cmp	 edi, 250		; 000000faH
  0003e	7e 13		 jle	 SHORT $LN8@f_lines
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@IOJAAODF@too?5many?5arguments?$AA@
  00045	68 fc 00 00 00	 push	 252			; 000000fcH
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 _luaL_argerror
  00050	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@f_lines:
  00053	8b c7		 mov	 eax, edi
  00055	99		 cdq
  00056	52		 push	 edx
  00057	50		 push	 eax
  00058	56		 push	 esi
  00059	e8 00 00 00 00	 call	 _lua_pushinteger
  0005e	6a 00		 push	 0
  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 _lua_pushboolean
  00066	6a 02		 push	 2
  00068	6a 02		 push	 2
  0006a	56		 push	 esi
  0006b	e8 00 00 00 00	 call	 _lua_rotate
  00070	8d 47 03	 lea	 eax, DWORD PTR [edi+3]
  00073	50		 push	 eax
  00074	68 00 00 00 00	 push	 OFFSET _io_readline
  00079	56		 push	 esi
  0007a	e8 00 00 00 00	 call	 _lua_pushcclosure
  0007f	83 c4 2c	 add	 esp, 44			; 0000002cH
; Line 346
  00082	b8 01 00 00 00	 mov	 eax, 1
  00087	5f		 pop	 edi
  00088	5e		 pop	 esi
; Line 347
  00089	5d		 pop	 ebp
  0008a	c3		 ret	 0
_f_lines ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _aux_lines
_TEXT	SEGMENT
_L$ = 8							; size = 4
_toclose$ = 12						; size = 4
_aux_lines PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 333
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 334
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	56		 push	 esi
  00009	e8 00 00 00 00	 call	 _lua_gettop
  0000e	83 c4 04	 add	 esp, 4
  00011	8d 78 ff	 lea	 edi, DWORD PTR [eax-1]
; Line 335
  00014	81 ff fa 00 00
	00		 cmp	 edi, 250		; 000000faH
  0001a	7e 13		 jle	 SHORT $LN3@aux_lines
  0001c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@IOJAAODF@too?5many?5arguments?$AA@
  00021	68 fc 00 00 00	 push	 252			; 000000fcH
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 _luaL_argerror
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@aux_lines:
; Line 336
  0002f	8b c7		 mov	 eax, edi
  00031	99		 cdq
  00032	52		 push	 edx
  00033	50		 push	 eax
  00034	56		 push	 esi
  00035	e8 00 00 00 00	 call	 _lua_pushinteger
; Line 337
  0003a	ff 75 0c	 push	 DWORD PTR _toclose$[ebp]
  0003d	56		 push	 esi
  0003e	e8 00 00 00 00	 call	 _lua_pushboolean
; Line 338
  00043	6a 02		 push	 2
  00045	6a 02		 push	 2
  00047	56		 push	 esi
  00048	e8 00 00 00 00	 call	 _lua_rotate
; Line 339
  0004d	8d 47 03	 lea	 eax, DWORD PTR [edi+3]
  00050	50		 push	 eax
  00051	68 00 00 00 00	 push	 OFFSET _io_readline
  00056	56		 push	 esi
  00057	e8 00 00 00 00	 call	 _lua_pushcclosure
  0005c	83 c4 2c	 add	 esp, 44			; 0000002cH
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
; Line 340
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
_aux_lines ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_readline
_TEXT	SEGMENT
_p$1$ = -4						; size = 4
_cf$1 = -4						; size = 4
_L$ = 8							; size = 4
_io_readline PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 580
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
; Line 581
  00006	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00009	57		 push	 edi
  0000a	68 d7 b9 f0 ff	 push	 -1001001		; fff0b9d7H
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 _lua_touserdata
; Line 583
  00015	6a 00		 push	 0
  00017	8b f8		 mov	 edi, eax
  00019	68 d6 b9 f0 ff	 push	 -1001002		; fff0b9d6H
  0001e	56		 push	 esi
  0001f	89 7d fc	 mov	 DWORD PTR _p$1$[ebp], edi
  00022	e8 00 00 00 00	 call	 _lua_tointegerx
  00027	83 c4 14	 add	 esp, 20			; 00000014H
  0002a	8b d8		 mov	 ebx, eax
; Line 584
  0002c	83 7f 04 00	 cmp	 DWORD PTR [edi+4], 0
  00030	75 15		 jne	 SHORT $LN8@io_readlin
; Line 585
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@PBGIDLEF@file?5is?5already?5closed?$AA@
  00037	56		 push	 esi
  00038	e8 00 00 00 00	 call	 _luaL_error
  0003d	83 c4 08	 add	 esp, 8
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
; Line 606
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
$LN8@io_readlin:
; Line 586
  00047	6a 01		 push	 1
  00049	56		 push	 esi
  0004a	e8 00 00 00 00	 call	 _lua_settop
; Line 587
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@IOJAAODF@too?5many?5arguments?$AA@
  00054	53		 push	 ebx
  00055	56		 push	 esi
  00056	e8 00 00 00 00	 call	 _luaL_checkstack
  0005b	83 c4 14	 add	 esp, 20			; 00000014H
; Line 588
  0005e	83 fb 01	 cmp	 ebx, 1
  00061	7c 16		 jl	 SHORT $LN5@io_readlin
; Line 586
  00063	bf d4 b9 f0 ff	 mov	 edi, -1001004		; fff0b9d4H
$LL7@io_readlin:
; Line 589
  00068	57		 push	 edi
  00069	56		 push	 esi
  0006a	e8 00 00 00 00	 call	 _lua_pushvalue
  0006f	83 c4 08	 add	 esp, 8
  00072	4f		 dec	 edi
  00073	4b		 dec	 ebx
  00074	75 f2		 jne	 SHORT $LL7@io_readlin
  00076	8b 7d fc	 mov	 edi, DWORD PTR _p$1$[ebp]
$LN5@io_readlin:
; Line 590
  00079	6a 02		 push	 2
  0007b	ff 37		 push	 DWORD PTR [edi]
  0007d	56		 push	 esi
  0007e	e8 00 00 00 00	 call	 _g_read
  00083	8b f8		 mov	 edi, eax
; Line 592
  00085	8b cf		 mov	 ecx, edi
  00087	f7 d9		 neg	 ecx
  00089	51		 push	 ecx
  0008a	56		 push	 esi
  0008b	e8 00 00 00 00	 call	 _lua_toboolean
  00090	83 c4 14	 add	 esp, 20			; 00000014H
  00093	85 c0		 test	 eax, eax
  00095	74 09		 je	 SHORT $LN4@io_readlin
; Line 593
  00097	8b c7		 mov	 eax, edi
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5b		 pop	 ebx
; Line 606
  0009c	8b e5		 mov	 esp, ebp
  0009e	5d		 pop	 ebp
  0009f	c3		 ret	 0
$LN4@io_readlin:
; Line 595
  000a0	83 ff 01	 cmp	 edi, 1
  000a3	7e 26		 jle	 SHORT $LN2@io_readlin
; Line 597
  000a5	b8 01 00 00 00	 mov	 eax, 1
  000aa	6a 00		 push	 0
  000ac	2b c7		 sub	 eax, edi
  000ae	50		 push	 eax
  000af	56		 push	 esi
  000b0	e8 00 00 00 00	 call	 _lua_tolstring
  000b5	50		 push	 eax
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
  000bb	56		 push	 esi
  000bc	e8 00 00 00 00	 call	 _luaL_error
  000c1	83 c4 18	 add	 esp, 24			; 00000018H
  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
  000c6	5b		 pop	 ebx
; Line 606
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c3		 ret	 0
$LN2@io_readlin:
; Line 599
  000cb	68 d5 b9 f0 ff	 push	 -1001003		; fff0b9d5H
  000d0	56		 push	 esi
  000d1	e8 00 00 00 00	 call	 _lua_toboolean
  000d6	83 c4 08	 add	 esp, 8
  000d9	85 c0		 test	 eax, eax
  000db	74 36		 je	 SHORT $LN11@io_readlin
; Line 600
  000dd	6a 00		 push	 0
  000df	56		 push	 esi
  000e0	e8 00 00 00 00	 call	 _lua_settop
; Line 601
  000e5	68 d7 b9 f0 ff	 push	 -1001001		; fff0b9d7H
  000ea	56		 push	 esi
  000eb	e8 00 00 00 00	 call	 _lua_pushvalue
; Line 602
  000f0	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  000f5	6a 01		 push	 1
  000f7	56		 push	 esi
  000f8	e8 00 00 00 00	 call	 _luaL_checkudata
  000fd	56		 push	 esi
  000fe	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00101	89 4d fc	 mov	 DWORD PTR _cf$1[ebp], ecx
  00104	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0010b	8b 45 fc	 mov	 eax, DWORD PTR _cf$1[ebp]
  0010e	ff d0		 call	 eax
  00110	83 c4 20	 add	 esp, 32			; 00000020H
$LN11@io_readlin:
; Line 604
  00113	5f		 pop	 edi
  00114	5e		 pop	 esi
  00115	33 c0		 xor	 eax, eax
  00117	5b		 pop	 ebx
; Line 606
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c3		 ret	 0
_io_readline ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_output
_TEXT	SEGMENT
_L$ = 8							; size = 4
_io_output PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 319
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 320
  00003	68 00 00 00 00	 push	 OFFSET ??_C@_01NOFIACDB@w?$AA@
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MIKJDGID@_IO_output?$AA@
  0000d	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00010	e8 00 00 00 00	 call	 _g_iofile
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 321
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
_io_output ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_input
_TEXT	SEGMENT
_L$ = 8							; size = 4
_io_input PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 314
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 315
  00003	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_09HINEJHGE@_IO_input?$AA@
  0000d	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00010	e8 00 00 00 00	 call	 _g_iofile
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 316
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
_io_input ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _g_iofile
_TEXT	SEGMENT
_L$ = 8							; size = 4
_f$ = 12						; size = 4
_mode$ = 16						; size = 4
_g_iofile PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 297
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 298
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 01		 push	 1
  00009	56		 push	 esi
  0000a	e8 00 00 00 00	 call	 _lua_type
  0000f	83 c4 08	 add	 esp, 8
  00012	85 c0		 test	 eax, eax
  00014	7e 60		 jle	 SHORT $LN3@g_iofile
; Line 299
  00016	6a 00		 push	 0
  00018	6a 01		 push	 1
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 _lua_tolstring
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 300
  00023	85 c0		 test	 eax, eax
  00025	74 0f		 je	 SHORT $LN2@g_iofile
; Line 301
  00027	ff 75 10	 push	 DWORD PTR _mode$[ebp]
  0002a	50		 push	 eax
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 _opencheck
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 302
  00034	eb 2f		 jmp	 SHORT $LN1@g_iofile
$LN2@g_iofile:
; Line 303
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  0003b	6a 01		 push	 1
  0003d	56		 push	 esi
  0003e	e8 00 00 00 00	 call	 _luaL_checkudata
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
  00046	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0004a	75 0e		 jne	 SHORT $LN6@g_iofile
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LPOOHAOM@attempt?5to?5use?5a?5closed?5file?$AA@
  00051	56		 push	 esi
  00052	e8 00 00 00 00	 call	 _luaL_error
  00057	83 c4 08	 add	 esp, 8
$LN6@g_iofile:
; Line 304
  0005a	6a 01		 push	 1
  0005c	56		 push	 esi
  0005d	e8 00 00 00 00	 call	 _lua_pushvalue
  00062	83 c4 08	 add	 esp, 8
$LN1@g_iofile:
; Line 306
  00065	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  00068	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  0006d	56		 push	 esi
  0006e	e8 00 00 00 00	 call	 _lua_setfield
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@g_iofile:
; Line 309
  00076	ff 75 0c	 push	 DWORD PTR _f$[ebp]
  00079	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 _lua_getfield
  00084	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 310
  00087	b8 01 00 00 00	 mov	 eax, 1
  0008c	5e		 pop	 esi
; Line 311
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0
_g_iofile ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _getiofile
_TEXT	SEGMENT
_L$ = 8							; size = 4
_findex$ = 12						; size = 4
_getiofile PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 287
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 289
  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _findex$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0000c	53		 push	 ebx
  0000d	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00012	57		 push	 edi
  00013	e8 00 00 00 00	 call	 _lua_getfield
; Line 290
  00018	6a ff		 push	 -1
  0001a	57		 push	 edi
  0001b	e8 00 00 00 00	 call	 _lua_touserdata
  00020	8b f0		 mov	 esi, eax
  00022	83 c4 14	 add	 esp, 20			; 00000014H
; Line 291
  00025	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  00029	75 12		 jne	 SHORT $LN4@getiofile
; Line 292
  0002b	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  0002e	51		 push	 ecx
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@JMNLNGCA@standard?5?$CFs?5file?5is?5closed?$AA@
  00034	57		 push	 edi
  00035	e8 00 00 00 00	 call	 _luaL_error
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@getiofile:
; Line 293
  0003d	8b 06		 mov	 eax, DWORD PTR [esi]
  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
; Line 294
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
_getiofile ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_tmpfile
_TEXT	SEGMENT
_L$ = 8							; size = 4
_io_tmpfile PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 281
  00005	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00008	6a 08		 push	 8
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 _lua_newuserdata
  00010	8b f0		 mov	 esi, eax
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00017	57		 push	 edi
  00018	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001f	e8 00 00 00 00	 call	 _luaL_setmetatable
  00024	83 c4 10	 add	 esp, 16			; 00000010H
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0002d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET _io_fclose
; Line 282
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__tmpfile
  0003a	89 06		 mov	 DWORD PTR [esi], eax
; Line 283
  0003c	85 c0		 test	 eax, eax
  0003e	75 0f		 jne	 SHORT $LN3@io_tmpfile
  00040	50		 push	 eax
  00041	50		 push	 eax
  00042	57		 push	 edi
  00043	e8 00 00 00 00	 call	 _luaL_fileresult
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
; Line 284
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
$LN3@io_tmpfile:
  0004f	5f		 pop	 edi
; Line 283
  00050	b8 01 00 00 00	 mov	 eax, 1
  00055	5e		 pop	 esi
; Line 284
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
_io_tmpfile ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_popen
_TEXT	SEGMENT
_filename$1$ = -4					; size = 4
_L$ = 8							; size = 4
_io_popen PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 270
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; Line 271
  00005	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	6a 00		 push	 0
  0000c	6a 01		 push	 1
  0000e	53		 push	 ebx
  0000f	e8 00 00 00 00	 call	 _luaL_checklstring
; Line 272
  00014	6a 00		 push	 0
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  0001b	6a 02		 push	 2
  0001d	53		 push	 ebx
  0001e	89 45 fc	 mov	 DWORD PTR _filename$1$[ebp], eax
  00021	e8 00 00 00 00	 call	 _luaL_optlstring
; Line 273
  00026	6a 08		 push	 8
  00028	53		 push	 ebx
  00029	8b f0		 mov	 esi, eax
  0002b	e8 00 00 00 00	 call	 _lua_newuserdata
  00030	8b f8		 mov	 edi, eax
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00037	53		 push	 ebx
  00038	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  0003f	e8 00 00 00 00	 call	 _luaL_setmetatable
; Line 274
  00044	56		 push	 esi
  00045	8b 75 fc	 mov	 esi, DWORD PTR _filename$1$[ebp]
  00048	56		 push	 esi
  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___popen
  0004f	83 c4 34	 add	 esp, 52			; 00000034H
  00052	89 07		 mov	 DWORD PTR [edi], eax
; Line 275
  00054	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET _io_pclose
; Line 276
  0005b	85 c0		 test	 eax, eax
  0005d	75 12		 jne	 SHORT $LN3@io_popen
  0005f	56		 push	 esi
  00060	50		 push	 eax
  00061	53		 push	 ebx
  00062	e8 00 00 00 00	 call	 _luaL_fileresult
  00067	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
; Line 277
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
$LN3@io_popen:
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
; Line 276
  00073	b8 01 00 00 00	 mov	 eax, 1
  00078	5b		 pop	 ebx
; Line 277
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
_io_popen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_pclose
_TEXT	SEGMENT
_L$ = 8							; size = 4
_io_pclose PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 264
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 265
  00003	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00008	6a 01		 push	 1
  0000a	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000d	e8 00 00 00 00	 call	 _luaL_checkudata
; Line 266
  00012	ff 30		 push	 DWORD PTR [eax]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___pclose
  0001a	50		 push	 eax
  0001b	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001e	e8 00 00 00 00	 call	 _luaL_execresult
  00023	83 c4 18	 add	 esp, 24			; 00000018H
; Line 267
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
_io_pclose ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_open
_TEXT	SEGMENT
_filename$1$ = -8					; size = 4
_mode$1$ = -4						; size = 4
_L$ = 8							; size = 4
_io_open PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 250
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
; Line 251
  00009	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0000c	6a 00		 push	 0
  0000e	6a 01		 push	 1
  00010	57		 push	 edi
  00011	e8 00 00 00 00	 call	 _luaL_checklstring
; Line 252
  00016	6a 00		 push	 0
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r?$AA@
  0001d	6a 02		 push	 2
  0001f	57		 push	 edi
  00020	89 45 f8	 mov	 DWORD PTR _filename$1$[ebp], eax
  00023	e8 00 00 00 00	 call	 _luaL_optlstring
  00028	8b f0		 mov	 esi, eax
; Line 253
  0002a	6a 08		 push	 8
  0002c	57		 push	 edi
  0002d	89 75 fc	 mov	 DWORD PTR _mode$1$[ebp], esi
  00030	e8 00 00 00 00	 call	 _lua_newuserdata
  00035	8b d8		 mov	 ebx, eax
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  0003c	57		 push	 edi
  0003d	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
  00044	e8 00 00 00 00	 call	 _luaL_setmetatable
  00049	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0
  0004f	83 c4 2c	 add	 esp, 44			; 0000002cH
  00052	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], OFFSET _io_fclose
; Line 255
  00059	8a 06		 mov	 al, BYTE PTR [esi]
  0005b	84 c0		 test	 al, al
  0005d	74 40		 je	 SHORT $LN3@io_open
  0005f	0f be c0	 movsx	 eax, al
  00062	50		 push	 eax
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_03DCNFGMMH@rwa?$AA@
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  0006e	83 c4 08	 add	 esp, 8
  00071	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00074	85 c0		 test	 eax, eax
  00076	74 27		 je	 SHORT $LN3@io_open
  00078	80 39 2b	 cmp	 BYTE PTR [ecx], 43	; 0000002bH
  0007b	75 01		 jne	 SHORT $LN4@io_open
  0007d	41		 inc	 ecx
$LN4@io_open:
  0007e	8b f1		 mov	 esi, ecx
  00080	8d 56 01	 lea	 edx, DWORD PTR [esi+1]
$LL12@io_open:
  00083	8a 06		 mov	 al, BYTE PTR [esi]
  00085	46		 inc	 esi
  00086	84 c0		 test	 al, al
  00088	75 f9		 jne	 SHORT $LL12@io_open
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_01OJONOECF@b?$AA@
  0008f	51		 push	 ecx
  00090	2b f2		 sub	 esi, edx
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strspn
  00098	83 c4 08	 add	 esp, 8
  0009b	3b c6		 cmp	 eax, esi
  0009d	74 10		 je	 SHORT $LN5@io_open
$LN3@io_open:
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MICJCNHE@invalid?5mode?$AA@
  000a4	6a 02		 push	 2
  000a6	57		 push	 edi
  000a7	e8 00 00 00 00	 call	 _luaL_argerror
  000ac	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@io_open:
; Line 256
  000af	ff 75 fc	 push	 DWORD PTR _mode$1$[ebp]
  000b2	8b 75 f8	 mov	 esi, DWORD PTR _filename$1$[ebp]
  000b5	56		 push	 esi
  000b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  000bc	83 c4 08	 add	 esp, 8
  000bf	89 03		 mov	 DWORD PTR [ebx], eax
; Line 257
  000c1	85 c0		 test	 eax, eax
  000c3	75 12		 jne	 SHORT $LN6@io_open
  000c5	56		 push	 esi
  000c6	50		 push	 eax
  000c7	57		 push	 edi
  000c8	e8 00 00 00 00	 call	 _luaL_fileresult
  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d0	5f		 pop	 edi
  000d1	5e		 pop	 esi
  000d2	5b		 pop	 ebx
; Line 258
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
$LN6@io_open:
  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi
; Line 257
  000d9	b8 01 00 00 00	 mov	 eax, 1
  000de	5b		 pop	 ebx
; Line 258
  000df	8b e5		 mov	 esp, ebp
  000e1	5d		 pop	 ebp
  000e2	c3		 ret	 0
_io_open ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _opencheck
_TEXT	SEGMENT
_L$ = 8							; size = 4
_fname$ = 12						; size = 4
_mode$ = 16						; size = 4
_opencheck PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 242
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 243
  00005	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00008	6a 08		 push	 8
  0000a	57		 push	 edi
  0000b	e8 00 00 00 00	 call	 _lua_newuserdata
  00010	8b f0		 mov	 esi, eax
  00012	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00017	57		 push	 edi
  00018	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001f	e8 00 00 00 00	 call	 _luaL_setmetatable
; Line 244
  00024	ff 75 10	 push	 DWORD PTR _mode$[ebp]
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0002d	ff 75 0c	 push	 DWORD PTR _fname$[ebp]
  00030	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET _io_fclose
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  0003d	83 c4 18	 add	 esp, 24			; 00000018H
  00040	89 06		 mov	 DWORD PTR [esi], eax
; Line 245
  00042	85 c0		 test	 eax, eax
  00044	75 20		 jne	 SHORT $LN1@opencheck
; Line 246
  00046	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___errno
  0004c	ff 30		 push	 DWORD PTR [eax]
  0004e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strerror
  00054	50		 push	 eax
  00055	ff 75 0c	 push	 DWORD PTR _fname$[ebp]
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@JABDLMOO@cannot?5open?5file?5?8?$CFs?8?5?$CI?$CFs?$CJ?$AA@
  0005d	57		 push	 edi
  0005e	e8 00 00 00 00	 call	 _luaL_error
  00063	83 c4 14	 add	 esp, 20			; 00000014H
$LN1@opencheck:
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
; Line 247
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
_opencheck ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _newfile
_TEXT	SEGMENT
_L$ = 8							; size = 4
_newfile PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 234
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
; Line 235
  00004	6a 08		 push	 8
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _lua_newuserdata
  0000e	8b f8		 mov	 edi, eax
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00015	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00018	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0
  0001f	e8 00 00 00 00	 call	 _luaL_setmetatable
  00024	83 c4 10	 add	 esp, 16			; 00000010H
; Line 236
  00027	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
; Line 237
  0002d	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], OFFSET _io_fclose
; Line 238
  00034	8b c7		 mov	 eax, edi
  00036	5f		 pop	 edi
; Line 239
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_newfile ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_fclose
_TEXT	SEGMENT
_L$ = 8							; size = 4
_io_fclose PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 227
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 228
  00003	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00008	6a 01		 push	 1
  0000a	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000d	e8 00 00 00 00	 call	 _luaL_checkudata
; Line 229
  00012	ff 30		 push	 DWORD PTR [eax]
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
; Line 230
  0001a	33 c9		 xor	 ecx, ecx
  0001c	85 c0		 test	 eax, eax
  0001e	6a 00		 push	 0
  00020	0f 94 c1	 sete	 cl
  00023	51		 push	 ecx
  00024	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00027	e8 00 00 00 00	 call	 _luaL_fileresult
  0002c	83 c4 1c	 add	 esp, 28			; 0000001cH
; Line 231
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_io_fclose ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _f_gc
_TEXT	SEGMENT
_cf$1 = -4						; size = 4
_L$ = 8							; size = 4
_f_gc	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 216
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
; Line 217
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  0000d	6a 01		 push	 1
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 _luaL_checkudata
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 218
  00018	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001c	74 28		 je	 SHORT $LN6@f_gc
  0001e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00021	74 23		 je	 SHORT $LN6@f_gc
; Line 219
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00028	6a 01		 push	 1
  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 _luaL_checkudata
  00030	56		 push	 esi
  00031	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00034	89 4d fc	 mov	 DWORD PTR _cf$1[ebp], ecx
  00037	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0003e	8b 45 fc	 mov	 eax, DWORD PTR _cf$1[ebp]
  00041	ff d0		 call	 eax
  00043	83 c4 10	 add	 esp, 16			; 00000010H
$LN6@f_gc:
; Line 220
  00046	33 c0		 xor	 eax, eax
  00048	5e		 pop	 esi
; Line 221
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
_f_gc	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_close
_TEXT	SEGMENT
_cf$1 = -4						; size = 4
_L$ = 8							; size = 4
_io_close PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 208
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
; Line 209
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	6a 01		 push	 1
  0000a	56		 push	 esi
  0000b	e8 00 00 00 00	 call	 _lua_type
  00010	83 c4 08	 add	 esp, 8
  00013	83 f8 ff	 cmp	 eax, -1
  00016	75 13		 jne	 SHORT $LN1@io_close
; Line 210
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MIKJDGID@_IO_output?$AA@
  0001d	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00022	56		 push	 esi
  00023	e8 00 00 00 00	 call	 _lua_getfield
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@io_close:
; Line 211
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00030	6a 01		 push	 1
  00032	56		 push	 esi
  00033	e8 00 00 00 00	 call	 _luaL_checkudata
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003b	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0003f	75 0e		 jne	 SHORT $LN4@io_close
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LPOOHAOM@attempt?5to?5use?5a?5closed?5file?$AA@
  00046	56		 push	 esi
  00047	e8 00 00 00 00	 call	 _luaL_error
  0004c	83 c4 08	 add	 esp, 8
$LN4@io_close:
; Line 212
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00054	6a 01		 push	 1
  00056	56		 push	 esi
  00057	e8 00 00 00 00	 call	 _luaL_checkudata
  0005c	56		 push	 esi
  0005d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00060	89 4d fc	 mov	 DWORD PTR _cf$1[ebp], ecx
  00063	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  0006a	8b 45 fc	 mov	 eax, DWORD PTR _cf$1[ebp]
  0006d	ff d0		 call	 eax
  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	5e		 pop	 esi
; Line 213
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
_io_close ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _aux_close
_TEXT	SEGMENT
_cf$ = -4						; size = 4
_L$ = 8							; size = 4
_aux_close PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 200
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; Line 201
  00004	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00009	6a 01		 push	 1
  0000b	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000e	e8 00 00 00 00	 call	 _luaL_checkudata
; Line 204
  00013	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00016	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00019	89 4d fc	 mov	 DWORD PTR _cf$[ebp], ecx
  0001c	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00023	8b 45 fc	 mov	 eax, DWORD PTR _cf$[ebp]
  00026	ff d0		 call	 eax
  00028	83 c4 10	 add	 esp, 16			; 00000010H
; Line 205
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
_aux_close ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _newprefile
_TEXT	SEGMENT
_L$ = 8							; size = 4
_newprefile PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 187
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 188
  00004	6a 08		 push	 8
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _lua_newuserdata
  0000e	8b f0		 mov	 esi, eax
; Line 190
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00015	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00018	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001f	e8 00 00 00 00	 call	 _luaL_setmetatable
  00024	83 c4 10	 add	 esp, 16			; 00000010H
; Line 191
  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
; Line 192
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
_newprefile ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _tofile
_TEXT	SEGMENT
_L$ = 8							; size = 4
_tofile	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 173
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 174
  00004	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00009	6a 01		 push	 1
  0000b	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000e	e8 00 00 00 00	 call	 _luaL_checkudata
  00013	8b f0		 mov	 esi, eax
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 175
  00018	83 7e 04 00	 cmp	 DWORD PTR [esi+4], 0
  0001c	75 10		 jne	 SHORT $LN4@tofile
; Line 176
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LPOOHAOM@attempt?5to?5use?5a?5closed?5file?$AA@
  00023	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00026	e8 00 00 00 00	 call	 _luaL_error
  0002b	83 c4 08	 add	 esp, 8
$LN4@tofile:
; Line 178
  0002e	8b 06		 mov	 eax, DWORD PTR [esi]
  00030	5e		 pop	 esi
; Line 179
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
_tofile	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _f_tostring
_TEXT	SEGMENT
_L$ = 8							; size = 4
_f_tostring PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 163
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 164
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  0000c	6a 01		 push	 1
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 _luaL_checkudata
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 165
  00017	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001b	75 16		 jne	 SHORT $LN2@f_tostring
; Line 166
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PLFAPHPG@file?5?$CIclosed?$CJ?$AA@
  00022	56		 push	 esi
  00023	e8 00 00 00 00	 call	 _lua_pushstring
  00028	83 c4 08	 add	 esp, 8
; Line 169
  0002b	b8 01 00 00 00	 mov	 eax, 1
  00030	5e		 pop	 esi
; Line 170
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
$LN2@f_tostring:
; Line 168
  00033	ff 30		 push	 DWORD PTR [eax]
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_09BPMAMLLD@file?5?$CI?$CFp?$CJ?$AA@
  0003a	56		 push	 esi
  0003b	e8 00 00 00 00	 call	 _lua_pushfstring
  00040	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 169
  00043	b8 01 00 00 00	 mov	 eax, 1
  00048	5e		 pop	 esi
; Line 170
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
_f_tostring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _io_type
_TEXT	SEGMENT
_L$ = 8							; size = 4
_io_type PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 149
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 151
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 01		 push	 1
  00009	56		 push	 esi
  0000a	e8 00 00 00 00	 call	 _luaL_checkany
; Line 152
  0000f	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00014	6a 01		 push	 1
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 _luaL_testudata
  0001c	83 c4 14	 add	 esp, 20			; 00000014H
; Line 153
  0001f	85 c0		 test	 eax, eax
  00021	75 11		 jne	 SHORT $LN4@io_type
; Line 154
  00023	56		 push	 esi
  00024	e8 00 00 00 00	 call	 _lua_pushnil
  00029	83 c4 04	 add	 esp, 4
; Line 159
  0002c	b8 01 00 00 00	 mov	 eax, 1
  00031	5e		 pop	 esi
; Line 160
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
$LN4@io_type:
; Line 155
  00034	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  00038	75 16		 jne	 SHORT $LN2@io_type
; Line 156
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IBKPHHKH@closed?5file?$AA@
; Line 158
  0003f	56		 push	 esi
  00040	e8 00 00 00 00	 call	 _lua_pushstring
  00045	83 c4 08	 add	 esp, 8
; Line 159
  00048	b8 01 00 00 00	 mov	 eax, 1
  0004d	5e		 pop	 esi
; Line 160
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
$LN2@io_type:
; Line 158
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_04DAMGJPCA@file?$AA@
  00055	56		 push	 esi
  00056	e8 00 00 00 00	 call	 _lua_pushstring
  0005b	83 c4 08	 add	 esp, 8
; Line 159
  0005e	b8 01 00 00 00	 mov	 eax, 1
  00063	5e		 pop	 esi
; Line 160
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
_io_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaopen_io
_TEXT	SEGMENT
_L$ = 8							; size = 4
_luaopen_io PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\liolib.c
; Line 756
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 757
  00003	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@405bc00000000000
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00010	57		 push	 edi
  00011	68 88 00 00 00	 push	 136			; 00000088H
  00016	83 ec 08	 sub	 esp, 8
  00019	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0001e	56		 push	 esi
  0001f	e8 00 00 00 00	 call	 _luaL_checkversion_
  00024	6a 0b		 push	 11			; 0000000bH
  00026	6a 00		 push	 0
  00028	56		 push	 esi
  00029	e8 00 00 00 00	 call	 _lua_createtable
  0002e	6a 00		 push	 0
  00030	68 00 00 00 00	 push	 OFFSET _iolib
  00035	56		 push	 esi
  00036	e8 00 00 00 00	 call	 _luaL_setfuncs
; Line 758
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 _luaL_newmetatable
  00046	6a ff		 push	 -1
  00048	56		 push	 esi
  00049	e8 00 00 00 00	 call	 _lua_pushvalue
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_07NHABFFHN@__index?$AA@
  00053	6a fe		 push	 -2			; fffffffeH
  00055	56		 push	 esi
  00056	e8 00 00 00 00	 call	 _lua_setfield
  0005b	83 c4 44	 add	 esp, 68			; 00000044H
  0005e	6a 00		 push	 0
  00060	68 00 00 00 00	 push	 OFFSET _flib
  00065	56		 push	 esi
  00066	e8 00 00 00 00	 call	 _luaL_setfuncs
  0006b	6a fe		 push	 -2			; fffffffeH
  0006d	56		 push	 esi
  0006e	e8 00 00 00 00	 call	 _lua_settop
; Line 760
  00073	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp____iob_func
  00079	ff d3		 call	 ebx
  0007b	6a 08		 push	 8
  0007d	56		 push	 esi
  0007e	8b f8		 mov	 edi, eax
  00080	e8 00 00 00 00	 call	 _lua_newuserdata
  00085	8b f0		 mov	 esi, eax
  00087	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  0008f	50		 push	 eax
  00090	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00097	e8 00 00 00 00	 call	 _luaL_setmetatable
  0009c	89 3e		 mov	 DWORD PTR [esi], edi
  0009e	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET _io_noclose
  000a5	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  000a8	6a ff		 push	 -1
  000aa	56		 push	 esi
  000ab	e8 00 00 00 00	 call	 _lua_pushvalue
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_09HINEJHGE@_IO_input?$AA@
  000b5	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  000ba	56		 push	 esi
  000bb	e8 00 00 00 00	 call	 _lua_setfield
  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_05MHOFLBOO@stdin?$AA@
  000c5	6a fe		 push	 -2			; fffffffeH
  000c7	56		 push	 esi
  000c8	e8 00 00 00 00	 call	 _lua_setfield
  000cd	83 c4 44	 add	 esp, 68			; 00000044H
; Line 761
  000d0	ff d3		 call	 ebx
  000d2	6a 08		 push	 8
  000d4	56		 push	 esi
  000d5	8d 78 20	 lea	 edi, DWORD PTR [eax+32]
  000d8	e8 00 00 00 00	 call	 _lua_newuserdata
  000dd	8b f0		 mov	 esi, eax
  000df	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  000e2	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  000e7	50		 push	 eax
  000e8	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  000ef	e8 00 00 00 00	 call	 _luaL_setmetatable
  000f4	89 3e		 mov	 DWORD PTR [esi], edi
  000f6	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET _io_noclose
  000fd	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00100	6a ff		 push	 -1
  00102	56		 push	 esi
  00103	e8 00 00 00 00	 call	 _lua_pushvalue
  00108	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MIKJDGID@_IO_output?$AA@
  0010d	68 d8 b9 f0 ff	 push	 -1001000		; fff0b9d8H
  00112	56		 push	 esi
  00113	e8 00 00 00 00	 call	 _lua_setfield
  00118	68 00 00 00 00	 push	 OFFSET ??_C@_06DJDOIFHB@stdout?$AA@
  0011d	6a fe		 push	 -2			; fffffffeH
  0011f	56		 push	 esi
  00120	e8 00 00 00 00	 call	 _lua_setfield
; Line 762
  00125	ff d3		 call	 ebx
  00127	6a 08		 push	 8
  00129	56		 push	 esi
  0012a	8d 78 40	 lea	 edi, DWORD PTR [eax+64]
  0012d	e8 00 00 00 00	 call	 _lua_newuserdata
  00132	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00135	8b f0		 mov	 esi, eax
  00137	68 00 00 00 00	 push	 OFFSET ??_C@_05KCHOJJD@FILE?$CK?$AA@
  0013c	53		 push	 ebx
  0013d	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  00144	e8 00 00 00 00	 call	 _luaL_setmetatable
  00149	83 c4 40	 add	 esp, 64			; 00000040H
  0014c	89 3e		 mov	 DWORD PTR [esi], edi
  0014e	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], OFFSET _io_noclose
  00155	68 00 00 00 00	 push	 OFFSET ??_C@_06FJGNEBG@stderr?$AA@
  0015a	6a fe		 push	 -2			; fffffffeH
  0015c	53		 push	 ebx
  0015d	e8 00 00 00 00	 call	 _lua_setfield
  00162	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 763
  00165	b8 01 00 00 00	 mov	 eax, 1
  0016a	5f		 pop	 edi
  0016b	5e		 pop	 esi
  0016c	5b		 pop	 ebx
; Line 764
  0016d	5d		 pop	 ebp
  0016e	c3		 ret	 0
_luaopen_io ENDP
_TEXT	ENDS
END
