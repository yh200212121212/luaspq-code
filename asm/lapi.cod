; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_lua_ident
CONST	SEGMENT
?version@?1??lua_version@@9@9 DQ 0405bc00000000000r ; 111 ; `lua_version'::`2'::version
_lua_ident DB	'$LuaVersion: Lua spq 1.1.1  Copyright (C) 1994-2017 Lua.'
	DB	'org, PUC-Rio $$LuaAuthors: R. Ierusalimschy, L. H. de Figueir'
	DB	'edo, W. Celes,Q. John $', 00H
CONST	ENDS
PUBLIC	_lua_atpanic
PUBLIC	_lua_version
PUBLIC	_lua_absindex
PUBLIC	_lua_gettop
PUBLIC	_lua_settop
PUBLIC	_lua_pushvalue
PUBLIC	_lua_rotate
PUBLIC	_lua_copy
PUBLIC	_lua_checkstack
PUBLIC	_lua_xmove
PUBLIC	_lua_isnumber
PUBLIC	_lua_isstring
PUBLIC	_lua_iscfunction
PUBLIC	_lua_isinteger
PUBLIC	_lua_isuserdata
PUBLIC	_lua_type
PUBLIC	_lua_typename
PUBLIC	_lua_tonumberx
PUBLIC	_lua_tointegerx
PUBLIC	_lua_toboolean
PUBLIC	_lua_tolstring
PUBLIC	_lua_rawlen
PUBLIC	_lua_tocfunction
PUBLIC	_lua_touserdata
PUBLIC	_lua_tothread
PUBLIC	_lua_topointer
PUBLIC	_lua_arith
PUBLIC	_lua_rawequal
PUBLIC	_lua_compare
PUBLIC	_lua_pushnil
PUBLIC	_lua_pushnumber
PUBLIC	_lua_pushinteger
PUBLIC	_lua_pushlstring
PUBLIC	_lua_pushstring
PUBLIC	_lua_pushvfstring
PUBLIC	_lua_pushfstring
PUBLIC	_lua_pushcclosure
PUBLIC	_lua_pushboolean
PUBLIC	_lua_pushlightuserdata
PUBLIC	_lua_pushthread
PUBLIC	_lua_getglobal
PUBLIC	_lua_gettable
PUBLIC	_lua_getfield
PUBLIC	_lua_geti
PUBLIC	_lua_rawget
PUBLIC	_lua_rawgeti
PUBLIC	_lua_rawgetp
PUBLIC	_lua_createtable
PUBLIC	_lua_newuserdata
PUBLIC	_lua_getmetatable
PUBLIC	_lua_getuservalue
PUBLIC	_lua_setglobal
PUBLIC	_lua_settable
PUBLIC	_lua_setfield
PUBLIC	_lua_seti
PUBLIC	_lua_rawset
PUBLIC	_lua_rawseti
PUBLIC	_lua_rawsetp
PUBLIC	_lua_setmetatable
PUBLIC	_lua_setuservalue
PUBLIC	_lua_callk
PUBLIC	_lua_pcallk
PUBLIC	_lua_load
PUBLIC	_lua_dump
PUBLIC	_lua_status
PUBLIC	_lua_gc
PUBLIC	_lua_error
PUBLIC	_lua_next
PUBLIC	_lua_concat
PUBLIC	_lua_len
PUBLIC	_lua_stringtonumber
PUBLIC	_lua_getallocf
PUBLIC	_lua_setallocf
PUBLIC	_lua_getupvalue
PUBLIC	_lua_setupvalue
PUBLIC	_lua_upvalueid
PUBLIC	_lua_upvaluejoin
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_01OGPIMHDM@?$DP?$AA@			; `string'
PUBLIC	??_C@_0L@PHDFOLAM@?$CI?$CKno?5name?$CJ?$AA@	; `string'
EXTRN	_luaO_arith:PROC
EXTRN	_luaO_str2num:PROC
EXTRN	_luaO_tostring:PROC
EXTRN	_luaO_pushvfstring:PROC
EXTRN	_luaT_gettm:PROC
EXTRN	_luaZ_init:PROC
EXTRN	_luaE_setdebt:PROC
EXTRN	_luaG_errormsg:PROC
EXTRN	_luaD_protectedparser:PROC
EXTRN	_luaD_call:PROC
EXTRN	_luaD_callnoyield:PROC
EXTRN	_luaD_pcall:PROC
EXTRN	_luaD_growstack:PROC
EXTRN	_luaD_rawrunprotected:PROC
EXTRN	_luaF_newCclosure:PROC
EXTRN	_luaC_step:PROC
EXTRN	_luaC_fullgc:PROC
EXTRN	_luaC_barrier_:PROC
EXTRN	_luaC_barrierback_:PROC
EXTRN	_luaC_upvalbarrier_:PROC
EXTRN	_luaC_checkfinalizer:PROC
EXTRN	_luaC_upvdeccount:PROC
EXTRN	_luaS_newudata:PROC
EXTRN	_luaS_newlstr:PROC
EXTRN	_luaS_new:PROC
EXTRN	_luaH_getint:PROC
EXTRN	_luaH_setint:PROC
EXTRN	_luaH_getstr:PROC
EXTRN	_luaH_get:PROC
EXTRN	_luaH_set:PROC
EXTRN	_luaH_new:PROC
EXTRN	_luaH_resize:PROC
EXTRN	_luaH_next:PROC
EXTRN	_luaH_getn:PROC
EXTRN	_luaU_dump:PROC
EXTRN	_luaV_equalobj:PROC
EXTRN	_luaV_lessthan:PROC
EXTRN	_luaV_lessequal:PROC
EXTRN	_luaV_tonumber_:PROC
EXTRN	_luaV_tointeger:PROC
EXTRN	_luaV_finishget:PROC
EXTRN	_luaV_finishset:PROC
EXTRN	_luaV_concat:PROC
EXTRN	_luaV_objlen:PROC
EXTRN	_luaO_nilobject_:BYTE
EXTRN	_luaT_typenames_:BYTE
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0L@PHDFOLAM@?$CI?$CKno?5name?$CJ?$AA@
CONST	SEGMENT
??_C@_0L@PHDFOLAM@?$CI?$CKno?5name?$CJ?$AA@ DB '(*no name)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01OGPIMHDM@?$DP?$AA@
CONST	SEGMENT
??_C@_01OGPIMHDM@?$DP?$AA@ DB '?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT _getupvalref
_TEXT	SEGMENT
_L$ = 8							; size = 4
_fidx$ = 12						; size = 4
_n$ = 16						; size = 4
_pf$ = 20						; size = 4
_getupvalref PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1256
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1258
  00003	ff 75 0c	 push	 DWORD PTR _fidx$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _index2addr
  0000e	83 c4 08	 add	 esp, 8
; Line 1260
  00011	8b 08		 mov	 ecx, DWORD PTR [eax]
; Line 1262
  00013	8b 45 14	 mov	 eax, DWORD PTR _pf$[ebp]
  00016	85 c0		 test	 eax, eax
  00018	74 02		 je	 SHORT $LN4@getupvalre
  0001a	89 08		 mov	 DWORD PTR [eax], ecx
$LN4@getupvalre:
; Line 1263
  0001c	8b 45 10	 mov	 eax, DWORD PTR _n$[ebp]
  0001f	83 c0 03	 add	 eax, 3
  00022	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
; Line 1264
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
_getupvalref ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _aux_upvalue
_TEXT	SEGMENT
_fi$ = 8						; size = 4
_n$ = 12						; size = 4
_val$ = 16						; size = 4
_owner$ = 20						; size = 4
_uv$ = 24						; size = 4
_aux_upvalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1198
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _fi$[ebp]
  00006	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00009	83 e0 3f	 and	 eax, 63			; 0000003fH
  0000c	83 f8 06	 cmp	 eax, 6
  0000f	74 35		 je	 SHORT $LN5@aux_upvalu
  00011	83 f8 26	 cmp	 eax, 38			; 00000026H
  00014	75 2c		 jne	 SHORT $LN7@aux_upvalu
; Line 1200
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
; Line 1201
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _n$[ebp]
  0001b	83 f9 01	 cmp	 ecx, 1
  0001e	7c 22		 jl	 SHORT $LN7@aux_upvalu
  00020	0f b6 42 06	 movzx	 eax, BYTE PTR [edx+6]
  00024	3b c8		 cmp	 ecx, eax
  00026	7f 1a		 jg	 SHORT $LN7@aux_upvalu
; Line 1202
  00028	8b 45 10	 mov	 eax, DWORD PTR _val$[ebp]
  0002b	c1 e1 04	 shl	 ecx, 4
  0002e	03 ca		 add	 ecx, edx
  00030	89 08		 mov	 DWORD PTR [eax], ecx
; Line 1203
  00032	8b 45 14	 mov	 eax, DWORD PTR _owner$[ebp]
  00035	85 c0		 test	 eax, eax
  00037	74 02		 je	 SHORT $LN6@aux_upvalu
  00039	89 10		 mov	 DWORD PTR [eax], edx
$LN6@aux_upvalu:
; Line 1204
  0003b	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
; Line 1218
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
$LN7@aux_upvalu:
; Line 1201
  00042	33 c0		 xor	 eax, eax
; Line 1218
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
$LN5@aux_upvalu:
; Line 1207
  00046	8b 01		 mov	 eax, DWORD PTR [ecx]
; Line 1210
  00048	8b 55 0c	 mov	 edx, DWORD PTR _n$[ebp]
  0004b	56		 push	 esi
  0004c	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  0004f	83 fa 01	 cmp	 edx, 1
  00052	7c 39		 jl	 SHORT $LN3@aux_upvalu
  00054	3b 56 0c	 cmp	 edx, DWORD PTR [esi+12]
  00057	7f 34		 jg	 SHORT $LN3@aux_upvalu
; Line 1211
  00059	57		 push	 edi
  0005a	8d 3c 90	 lea	 edi, DWORD PTR [eax+edx*4]
  0005d	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00060	8b 08		 mov	 ecx, DWORD PTR [eax]
  00062	8b 45 10	 mov	 eax, DWORD PTR _val$[ebp]
  00065	89 08		 mov	 DWORD PTR [eax], ecx
; Line 1212
  00067	8b 4d 18	 mov	 ecx, DWORD PTR _uv$[ebp]
  0006a	85 c9		 test	 ecx, ecx
  0006c	74 05		 je	 SHORT $LN2@aux_upvalu
  0006e	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00071	89 01		 mov	 DWORD PTR [ecx], eax
$LN2@aux_upvalu:
; Line 1213
  00073	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
  00076	5f		 pop	 edi
  00077	8b 44 d0 f8	 mov	 eax, DWORD PTR [eax+edx*8-8]
; Line 1214
  0007b	85 c0		 test	 eax, eax
  0007d	75 08		 jne	 SHORT $LN14@aux_upvalu
  0007f	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0L@PHDFOLAM@?$CI?$CKno?5name?$CJ?$AA@
  00084	5e		 pop	 esi
; Line 1218
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
$LN14@aux_upvalu:
; Line 1214
  00087	83 c0 10	 add	 eax, 16			; 00000010H
  0008a	5e		 pop	 esi
; Line 1218
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
$LN3@aux_upvalu:
; Line 1210
  0008d	33 c0		 xor	 eax, eax
  0008f	5e		 pop	 esi
; Line 1218
  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
_aux_upvalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _f_call
_TEXT	SEGMENT
_L$ = 8							; size = 4
_ud$ = 12						; size = 4
_f_call	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 940
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 942
  00003	8b 45 0c	 mov	 eax, DWORD PTR _ud$[ebp]
  00006	ff 70 04	 push	 DWORD PTR [eax+4]
  00009	ff 30		 push	 DWORD PTR [eax]
  0000b	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000e	e8 00 00 00 00	 call	 _luaD_callnoyield
  00013	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 943
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
_f_call	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _auxsetstr
_TEXT	SEGMENT
_str$1$ = -4						; size = 4
_L$ = 8							; size = 4
_t$ = 12						; size = 4
_k$ = 16						; size = 4
_auxsetstr PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 742
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
; Line 744
  00006	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00009	57		 push	 edi
  0000a	ff 75 10	 push	 DWORD PTR _k$[ebp]
  0000d	56		 push	 esi
  0000e	e8 00 00 00 00	 call	 _luaS_new
; Line 746
  00013	8b 7d 0c	 mov	 edi, DWORD PTR _t$[ebp]
  00016	83 c4 08	 add	 esp, 8
  00019	89 45 fc	 mov	 DWORD PTR _str$1$[ebp], eax
  0001c	83 7f 08 45	 cmp	 DWORD PTR [edi+8], 69	; 00000045H
  00020	74 04		 je	 SHORT $LN9@auxsetstr
  00022	33 db		 xor	 ebx, ebx
  00024	eb 51		 jmp	 SHORT $LN2@auxsetstr
$LN9@auxsetstr:
  00026	50		 push	 eax
  00027	ff 37		 push	 DWORD PTR [edi]
  00029	e8 00 00 00 00	 call	 _luaH_getstr
  0002e	8b d8		 mov	 ebx, eax
  00030	83 c4 08	 add	 esp, 8
  00033	83 7b 08 00	 cmp	 DWORD PTR [ebx+8], 0
  00037	74 3b		 je	 SHORT $LN12@auxsetstr
  00039	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0003c	f6 40 f8 40	 test	 BYTE PTR [eax-8], 64	; 00000040H
  00040	74 1b		 je	 SHORT $LN5@auxsetstr
  00042	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00044	f6 41 05 04	 test	 BYTE PTR [ecx+5], 4
  00048	74 13		 je	 SHORT $LN5@auxsetstr
  0004a	8b 40 f0	 mov	 eax, DWORD PTR [eax-16]
  0004d	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00051	74 0a		 je	 SHORT $LN5@auxsetstr
  00053	51		 push	 ecx
  00054	56		 push	 esi
  00055	e8 00 00 00 00	 call	 _luaC_barrierback_
  0005a	83 c4 08	 add	 esp, 8
$LN5@auxsetstr:
  0005d	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00060	5f		 pop	 edi
  00061	f3 0f 6f 40 f0	 movdqu	 xmm0, XMMWORD PTR [eax-16]
  00066	f3 0f 7f 03	 movdqu	 XMMWORD PTR [ebx], xmm0
; Line 747
  0006a	83 46 0c f0	 add	 DWORD PTR [esi+12], -16	; fffffff0H
  0006e	5e		 pop	 esi
  0006f	5b		 pop	 ebx
; Line 755
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
$LN12@auxsetstr:
  00074	8b 45 fc	 mov	 eax, DWORD PTR _str$1$[ebp]
$LN2@auxsetstr:
; Line 749
  00077	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
; Line 751
  0007a	53		 push	 ebx
  0007b	89 01		 mov	 DWORD PTR [ecx], eax
  0007d	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  00081	83 c8 40	 or	 eax, 64			; 00000040H
  00084	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00087	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0008a	83 c1 10	 add	 ecx, 16			; 00000010H
  0008d	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00090	8d 41 e0	 lea	 eax, DWORD PTR [ecx-32]
  00093	50		 push	 eax
  00094	8d 41 f0	 lea	 eax, DWORD PTR [ecx-16]
  00097	50		 push	 eax
  00098	57		 push	 edi
  00099	56		 push	 esi
  0009a	e8 00 00 00 00	 call	 _luaV_finishset
  0009f	83 c4 14	 add	 esp, 20			; 00000014H
; Line 752
  000a2	83 46 0c e0	 add	 DWORD PTR [esi+12], -32	; ffffffe0H
  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
  000a8	5b		 pop	 ebx
; Line 755
  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
_auxsetstr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _auxgetstr
_TEXT	SEGMENT
_str$1$ = 8						; size = 4
_L$ = 8							; size = 4
_t$ = 12						; size = 4
_k$ = 16						; size = 4
_auxgetstr PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 587
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; Line 589
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	57		 push	 edi
  00009	ff 75 10	 push	 DWORD PTR _k$[ebp]
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _luaS_new
; Line 590
  00012	8b 7d 0c	 mov	 edi, DWORD PTR _t$[ebp]
  00015	83 c4 08	 add	 esp, 8
  00018	89 45 08	 mov	 DWORD PTR _str$1$[ebp], eax
  0001b	83 7f 08 45	 cmp	 DWORD PTR [edi+8], 69	; 00000045H
  0001f	74 04		 je	 SHORT $LN13@auxgetstr
  00021	33 db		 xor	 ebx, ebx
  00023	eb 3f		 jmp	 SHORT $LN2@auxgetstr
$LN13@auxgetstr:
  00025	50		 push	 eax
  00026	ff 37		 push	 DWORD PTR [edi]
  00028	e8 00 00 00 00	 call	 _luaH_getstr
  0002d	8b c8		 mov	 ecx, eax
  0002f	83 c4 08	 add	 esp, 8
  00032	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00036	75 65		 jne	 SHORT $LN15@auxgetstr
  00038	8b 07		 mov	 eax, DWORD PTR [edi]
  0003a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003d	85 c9		 test	 ecx, ecx
  0003f	74 57		 je	 SHORT $LN9@auxgetstr
  00041	f6 41 06 01	 test	 BYTE PTR [ecx+6], 1
  00045	75 51		 jne	 SHORT $LN9@auxgetstr
  00047	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0004a	ff b0 88 00 00
	00		 push	 DWORD PTR [eax+136]
  00050	6a 00		 push	 0
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 _luaT_gettm
  00058	8b d8		 mov	 ebx, eax
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005d	85 db		 test	 ebx, ebx
  0005f	74 37		 je	 SHORT $LN9@auxgetstr
  00061	8b 45 08	 mov	 eax, DWORD PTR _str$1$[ebp]
$LN2@auxgetstr:
; Line 595
  00064	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
; Line 597
  00067	53		 push	 ebx
  00068	89 02		 mov	 DWORD PTR [edx], eax
  0006a	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  0006e	83 c9 40	 or	 ecx, 64			; 00000040H
  00071	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  00074	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
  00078	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0007b	83 c0 f0	 add	 eax, -16		; fffffff0H
  0007e	50		 push	 eax
  0007f	50		 push	 eax
  00080	57		 push	 edi
  00081	56		 push	 esi
  00082	e8 00 00 00 00	 call	 _luaV_finishget
; Line 600
  00087	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0008a	83 c4 14	 add	 esp, 20			; 00000014H
  0008d	8b 40 f8	 mov	 eax, DWORD PTR [eax-8]
  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	83 e0 0f	 and	 eax, 15			; 0000000fH
  00095	5b		 pop	 ebx
; Line 601
  00096	5d		 pop	 ebp
  00097	c3		 ret	 0
$LN9@auxgetstr:
; Line 590
  00098	b9 00 00 00 00	 mov	 ecx, OFFSET _luaO_nilobject_
$LN15@auxgetstr:
; Line 591
  0009d	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  000a0	f3 0f 6f 01	 movdqu	 xmm0, XMMWORD PTR [ecx]
  000a4	5f		 pop	 edi
  000a5	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
; Line 592
  000a9	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
; Line 600
  000ad	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
  000b2	8b 40 f8	 mov	 eax, DWORD PTR [eax-8]
  000b5	83 e0 0f	 and	 eax, 15			; 0000000fH
; Line 601
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
_auxgetstr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _reverse
_TEXT	SEGMENT
_L$ = 8							; size = 4
_from$ = 12						; size = 4
_to$ = 16						; size = 4
_reverse PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 193
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 194
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _from$[ebp]
  00006	8b 45 10	 mov	 eax, DWORD PTR _to$[ebp]
  00009	3b c8		 cmp	 ecx, eax
  0000b	73 1d		 jae	 SHORT $LN1@reverse
  0000d	8d 49 00	 npad	 3
$LL3@reverse:
; Line 197
  00010	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00014	f3 0f 6f 09	 movdqu	 xmm1, XMMWORD PTR [ecx]
  00018	f3 0f 7f 01	 movdqu	 XMMWORD PTR [ecx], xmm0
  0001c	83 c1 10	 add	 ecx, 16			; 00000010H
; Line 198
  0001f	f3 0f 7f 08	 movdqu	 XMMWORD PTR [eax], xmm1
  00023	83 e8 10	 sub	 eax, 16			; 00000010H
  00026	3b c8		 cmp	 ecx, eax
  00028	72 e6		 jb	 SHORT $LL3@reverse
$LN1@reverse:
; Line 200
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
_reverse ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _growstack
_TEXT	SEGMENT
_L$ = 8							; size = 4
_ud$ = 12						; size = 4
_growstack PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 91
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 93
  00003	8b 45 0c	 mov	 eax, DWORD PTR _ud$[ebp]
  00006	ff 30		 push	 DWORD PTR [eax]
  00008	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000b	e8 00 00 00 00	 call	 _luaD_growstack
  00010	83 c4 08	 add	 esp, 8
; Line 94
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
_growstack ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _index2addr
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_index2addr PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 60
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 61
  00003	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
; Line 62
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR _idx$[ebp]
  00009	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  0000c	85 c9		 test	 ecx, ecx
  0000e	7e 12		 jle	 SHORT $LN10@index2addr
; Line 63
  00010	c1 e1 04	 shl	 ecx, 4
  00013	03 08		 add	 ecx, DWORD PTR [eax]
; Line 65
  00015	b8 00 00 00 00	 mov	 eax, OFFSET _luaO_nilobject_
  0001a	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0001d	0f 42 c1	 cmovb	 eax, ecx
; Line 84
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
$LN10@index2addr:
; Line 68
  00022	81 f9 d8 b9 f0
	ff		 cmp	 ecx, -1001000		; fff0b9d8H
  00028	7e 0a		 jle	 SHORT $LN15@index2addr
; Line 70
  0002a	c1 e1 04	 shl	 ecx, 4
  0002d	03 4a 0c	 add	 ecx, DWORD PTR [edx+12]
  00030	8b c1		 mov	 eax, ecx
; Line 84
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
$LN15@index2addr:
; Line 72
  00034	75 08		 jne	 SHORT $LN4@index2addr
; Line 73
  00036	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00039	83 c0 28	 add	 eax, 40			; 00000028H
; Line 84
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
$LN4@index2addr:
; Line 75
  0003e	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fff0b9d8H
  00043	2b d1		 sub	 edx, ecx
; Line 77
  00045	8b 08		 mov	 ecx, DWORD PTR [eax]
  00047	83 79 08 16	 cmp	 DWORD PTR [ecx+8], 22	; 00000016H
  0004b	75 07		 jne	 SHORT $LN2@index2addr
; Line 78
  0004d	b8 00 00 00 00	 mov	 eax, OFFSET _luaO_nilobject_
; Line 84
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
$LN2@index2addr:
; Line 80
  00054	8b 09		 mov	 ecx, DWORD PTR [ecx]
; Line 81
  00056	0f b6 41 06	 movzx	 eax, BYTE PTR [ecx+6]
  0005a	3b d0		 cmp	 edx, eax
  0005c	7f 09		 jg	 SHORT $LN13@index2addr
  0005e	c1 e2 04	 shl	 edx, 4
  00061	03 d1		 add	 edx, ecx
  00063	8b c2		 mov	 eax, edx
; Line 84
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
$LN13@index2addr:
; Line 81
  00067	ba 00 00 00 00	 mov	 edx, OFFSET _luaO_nilobject_
  0006c	8b c2		 mov	 eax, edx
; Line 84
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
_index2addr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_upvaluejoin
_TEXT	SEGMENT
_L$ = 8							; size = 4
_fidx1$ = 12						; size = 4
_n1$ = 16						; size = 4
_fidx2$ = 20						; size = 4
_n2$ = 24						; size = 4
_lua_upvaluejoin PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1287
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
; Line 1289
  00006	ff 75 0c	 push	 DWORD PTR _fidx1$[ebp]
  00009	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0000c	57		 push	 edi
  0000d	e8 00 00 00 00	 call	 _index2addr
; Line 1290
  00012	ff 75 14	 push	 DWORD PTR _fidx2$[ebp]
  00015	57		 push	 edi
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	8b 45 10	 mov	 eax, DWORD PTR _n1$[ebp]
  0001b	8d 1c 81	 lea	 ebx, DWORD PTR [ecx+eax*4]
  0001e	e8 00 00 00 00	 call	 _index2addr
; Line 1291
  00023	ff 73 0c	 push	 DWORD PTR [ebx+12]
  00026	57		 push	 edi
  00027	8b 30		 mov	 esi, DWORD PTR [eax]
  00029	e8 00 00 00 00	 call	 _luaC_upvdeccount
; Line 1292
  0002e	8b 45 18	 mov	 eax, DWORD PTR _n2$[ebp]
  00031	83 c4 18	 add	 esp, 24			; 00000018H
  00034	8b 44 86 0c	 mov	 eax, DWORD PTR [esi+eax*4+12]
  00038	89 43 0c	 mov	 DWORD PTR [ebx+12], eax
; Line 1293
  0003b	ff 40 04	 inc	 DWORD PTR [eax+4]
; Line 1294
  0003e	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  00041	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00044	39 01		 cmp	 DWORD PTR [ecx], eax
  00046	74 07		 je	 SHORT $LN1@lua_upvalu
  00048	c7 41 0c 01 00
	00 00		 mov	 DWORD PTR [ecx+12], 1
$LN1@lua_upvalu:
; Line 1295
  0004f	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  00052	8b 11		 mov	 edx, DWORD PTR [ecx]
  00054	f6 42 08 40	 test	 BYTE PTR [edx+8], 64	; 00000040H
  00058	74 11		 je	 SHORT $LN4@lua_upvalu
  0005a	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  0005d	3b d0		 cmp	 edx, eax
  0005f	75 0a		 jne	 SHORT $LN4@lua_upvalu
  00061	51		 push	 ecx
  00062	57		 push	 edi
  00063	e8 00 00 00 00	 call	 _luaC_upvalbarrier_
  00068	83 c4 08	 add	 esp, 8
$LN4@lua_upvalu:
  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi
  0006d	5b		 pop	 ebx
; Line 1296
  0006e	5d		 pop	 ebp
  0006f	c3		 ret	 0
_lua_upvaluejoin ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_upvalueid
_TEXT	SEGMENT
_L$ = 8							; size = 4
_fidx$ = 12						; size = 4
_n$ = 16						; size = 4
_lua_upvalueid PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1267
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1268
  00003	ff 75 0c	 push	 DWORD PTR _fidx$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _index2addr
  0000e	8b d0		 mov	 edx, eax
  00010	83 c4 08	 add	 esp, 8
; Line 1269
  00013	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00016	83 e1 3f	 and	 ecx, 63			; 0000003fH
  00019	83 f9 06	 cmp	 ecx, 6
  0001c	74 13		 je	 SHORT $LN3@lua_upvalu
  0001e	83 f9 26	 cmp	 ecx, 38			; 00000026H
  00021	74 04		 je	 SHORT $LN2@lua_upvalu
; Line 1280
  00023	33 c0		 xor	 eax, eax
; Line 1283
  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
$LN2@lua_upvalu:
; Line 1276
  00027	8b 45 10	 mov	 eax, DWORD PTR _n$[ebp]
  0002a	c1 e0 04	 shl	 eax, 4
  0002d	03 02		 add	 eax, DWORD PTR [edx]
; Line 1283
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
$LN3@lua_upvalu:
; Line 1271
  00031	ff 75 0c	 push	 DWORD PTR _fidx$[ebp]
  00034	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00037	e8 00 00 00 00	 call	 _index2addr
  0003c	83 c4 08	 add	 esp, 8
  0003f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00041	8b 45 10	 mov	 eax, DWORD PTR _n$[ebp]
  00044	8b 44 81 0c	 mov	 eax, DWORD PTR [ecx+eax*4+12]
; Line 1283
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
_lua_upvalueid ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_setupvalue
_TEXT	SEGMENT
_uv$ = -12						; size = 4
_owner$ = -8						; size = 4
_val$ = -4						; size = 4
_L$ = 8							; size = 4
_funcindex$ = 12					; size = 4
_n$ = 16						; size = 4
_lua_setupvalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1235
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
; Line 1242
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
; Line 1244
  0000a	8d 45 f4	 lea	 eax, DWORD PTR _uv$[ebp]
  0000d	57		 push	 edi
  0000e	50		 push	 eax
  0000f	8d 45 f8	 lea	 eax, DWORD PTR _owner$[ebp]
  00012	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _val$[ebp], 0
  00019	50		 push	 eax
  0001a	8d 45 fc	 lea	 eax, DWORD PTR _val$[ebp]
  0001d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _owner$[ebp], 0
  00024	50		 push	 eax
  00025	ff 75 10	 push	 DWORD PTR _n$[ebp]
  00028	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _uv$[ebp], 0
  0002f	ff 75 0c	 push	 DWORD PTR _funcindex$[ebp]
  00032	56		 push	 esi
  00033	e8 00 00 00 00	 call	 _index2addr
  00038	83 c4 08	 add	 esp, 8
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 _aux_upvalue
  00041	8b f8		 mov	 edi, eax
  00043	83 c4 14	 add	 esp, 20			; 00000014H
; Line 1245
  00046	85 ff		 test	 edi, edi
  00048	74 63		 je	 SHORT $LN9@lua_setupv
; Line 1248
  0004a	83 46 0c f0	 add	 DWORD PTR [esi+12], -16	; fffffff0H
  0004e	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00051	8b 45 f8	 mov	 eax, DWORD PTR _owner$[ebp]
  00054	f3 0f 6f 01	 movdqu	 xmm0, XMMWORD PTR [ecx]
  00058	8b 4d fc	 mov	 ecx, DWORD PTR _val$[ebp]
  0005b	f3 0f 7f 01	 movdqu	 XMMWORD PTR [ecx], xmm0
  0005f	85 c0		 test	 eax, eax
  00061	74 2a		 je	 SHORT $LN3@lua_setupv
  00063	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00066	f6 41 08 40	 test	 BYTE PTR [ecx+8], 64	; 00000040H
  0006a	74 41		 je	 SHORT $LN9@lua_setupv
  0006c	f6 40 05 04	 test	 BYTE PTR [eax+5], 4
  00070	74 3b		 je	 SHORT $LN9@lua_setupv
  00072	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00074	f6 41 05 03	 test	 BYTE PTR [ecx+5], 3
  00078	74 33		 je	 SHORT $LN9@lua_setupv
  0007a	51		 push	 ecx
  0007b	50		 push	 eax
  0007c	56		 push	 esi
  0007d	e8 00 00 00 00	 call	 _luaC_barrier_
  00082	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1252
  00085	8b c7		 mov	 eax, edi
  00087	5f		 pop	 edi
  00088	5e		 pop	 esi
; Line 1253
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
$LN3@lua_setupv:
; Line 1249
  0008d	8b 4d f4	 mov	 ecx, DWORD PTR _uv$[ebp]
  00090	85 c9		 test	 ecx, ecx
  00092	74 19		 je	 SHORT $LN9@lua_setupv
  00094	8b 11		 mov	 edx, DWORD PTR [ecx]
  00096	f6 42 08 40	 test	 BYTE PTR [edx+8], 64	; 00000040H
  0009a	74 11		 je	 SHORT $LN9@lua_setupv
  0009c	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  0009f	3b d0		 cmp	 edx, eax
  000a1	75 0a		 jne	 SHORT $LN9@lua_setupv
  000a3	51		 push	 ecx
  000a4	56		 push	 esi
  000a5	e8 00 00 00 00	 call	 _luaC_upvalbarrier_
  000aa	83 c4 08	 add	 esp, 8
$LN9@lua_setupv:
; Line 1252
  000ad	8b c7		 mov	 eax, edi
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
; Line 1253
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
_lua_setupvalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_getupvalue
_TEXT	SEGMENT
_L$ = 8							; size = 4
_funcindex$ = 12					; size = 4
_n$ = 16						; size = 4
_lua_getupvalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1221
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 1225
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	ff 75 0c	 push	 DWORD PTR _funcindex$[ebp]
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _index2addr
  00011	83 c4 08	 add	 esp, 8
  00014	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00017	83 e1 3f	 and	 ecx, 63			; 0000003fH
  0001a	83 f9 06	 cmp	 ecx, 6
  0001d	74 38		 je	 SHORT $LN8@lua_getupv
  0001f	83 f9 26	 cmp	 ecx, 38			; 00000026H
  00022	0f 85 82 00 00
	00		 jne	 $LN6@lua_getupv
  00028	8b 55 10	 mov	 edx, DWORD PTR _n$[ebp]
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	83 fa 01	 cmp	 edx, 1
  00030	7c 78		 jl	 SHORT $LN6@lua_getupv
  00032	0f b6 41 06	 movzx	 eax, BYTE PTR [ecx+6]
  00036	3b d0		 cmp	 edx, eax
  00038	7f 70		 jg	 SHORT $LN6@lua_getupv
  0003a	c1 e2 04	 shl	 edx, 4
  0003d	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_00CNPNBAHC@?$AA@
  00042	03 d1		 add	 edx, ecx
; Line 1227
  00044	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00047	5f		 pop	 edi
  00048	f3 0f 6f 02	 movdqu	 xmm0, XMMWORD PTR [edx]
  0004c	f3 0f 7f 01	 movdqu	 XMMWORD PTR [ecx], xmm0
; Line 1228
  00050	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
  00054	5e		 pop	 esi
; Line 1232
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
; Line 1225
$LN8@lua_getupv:
  00057	8b 00		 mov	 eax, DWORD PTR [eax]
  00059	8b 4d 10	 mov	 ecx, DWORD PTR _n$[ebp]
  0005c	8b 78 0c	 mov	 edi, DWORD PTR [eax+12]
  0005f	83 f9 01	 cmp	 ecx, 1
  00062	7c 46		 jl	 SHORT $LN6@lua_getupv
  00064	3b 4f 0c	 cmp	 ecx, DWORD PTR [edi+12]
  00067	7f 41		 jg	 SHORT $LN6@lua_getupv
  00069	8b 44 88 0c	 mov	 eax, DWORD PTR [eax+ecx*4+12]
  0006d	8b 10		 mov	 edx, DWORD PTR [eax]
  0006f	8b 47 40	 mov	 eax, DWORD PTR [edi+64]
  00072	8b 44 c8 f8	 mov	 eax, DWORD PTR [eax+ecx*8-8]
  00076	85 c0		 test	 eax, eax
  00078	75 18		 jne	 SHORT $LN17@lua_getupv
; Line 1227
  0007a	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0007d	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0L@PHDFOLAM@?$CI?$CKno?5name?$CJ?$AA@
  00082	f3 0f 6f 02	 movdqu	 xmm0, XMMWORD PTR [edx]
  00086	5f		 pop	 edi
  00087	f3 0f 7f 01	 movdqu	 XMMWORD PTR [ecx], xmm0
; Line 1228
  0008b	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
  0008f	5e		 pop	 esi
; Line 1232
  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
; Line 1225
$LN17@lua_getupv:
  00092	83 c0 10	 add	 eax, 16			; 00000010H
; Line 1226
  00095	74 15		 je	 SHORT $LN1@lua_getupv
; Line 1227
  00097	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0009a	f3 0f 6f 02	 movdqu	 xmm0, XMMWORD PTR [edx]
  0009e	5f		 pop	 edi
  0009f	f3 0f 7f 01	 movdqu	 XMMWORD PTR [ecx], xmm0
; Line 1228
  000a3	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
  000a7	5e		 pop	 esi
; Line 1232
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
; Line 1225
$LN6@lua_getupv:
; Line 1231
  000aa	33 c0		 xor	 eax, eax
$LN1@lua_getupv:
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
; Line 1232
  000ae	5d		 pop	 ebp
  000af	c3		 ret	 0
_lua_getupvalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_setallocf
_TEXT	SEGMENT
_L$ = 8							; size = 4
_f$ = 12						; size = 4
_ud$ = 16						; size = 4
_lua_setallocf PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1175
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1177
  00003	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
  00006	8b 45 10	 mov	 eax, DWORD PTR _ud$[ebp]
  00009	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  0000c	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 1178
  0000f	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _f$[ebp]
  00015	89 01		 mov	 DWORD PTR [ecx], eax
; Line 1180
  00017	5d		 pop	 ebp
  00018	c3		 ret	 0
_lua_setallocf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_getallocf
_TEXT	SEGMENT
_L$ = 8							; size = 4
_ud$ = 12						; size = 4
_lua_getallocf PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1165
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1168
  00003	8b 55 0c	 mov	 edx, DWORD PTR _ud$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	74 12		 je	 SHORT $LN4@lua_getall
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  0000d	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00010	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00013	89 02		 mov	 DWORD PTR [edx], eax
; Line 1169
  00015	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
; Line 1171
  00018	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 1172
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
$LN4@lua_getall:
; Line 1169
  0001c	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  0001f	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
; Line 1171
  00022	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 1172
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
_lua_getallocf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_stringtonumber
_TEXT	SEGMENT
_L$ = 8							; size = 4
_s$ = 12						; size = 4
_lua_stringtonumber PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 337
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 338
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	ff 76 0c	 push	 DWORD PTR [esi+12]
  0000a	ff 75 0c	 push	 DWORD PTR _s$[ebp]
  0000d	e8 00 00 00 00	 call	 _luaO_str2num
  00012	83 c4 08	 add	 esp, 8
; Line 339
  00015	85 c0		 test	 eax, eax
  00017	74 04		 je	 SHORT $LN1@lua_string
; Line 340
  00019	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
$LN1@lua_string:
  0001d	5e		 pop	 esi
; Line 342
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
_lua_stringtonumber ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_len
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_len PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1155
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 1158
  00004	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
; Line 1159
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	56		 push	 esi
  0000b	e8 00 00 00 00	 call	 _index2addr
  00010	50		 push	 eax
  00011	ff 76 0c	 push	 DWORD PTR [esi+12]
  00014	56		 push	 esi
  00015	e8 00 00 00 00	 call	 _luaV_objlen
  0001a	83 c4 14	 add	 esp, 20			; 00000014H
; Line 1160
  0001d	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
  00021	5e		 pop	 esi
; Line 1162
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
_lua_len ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_concat
_TEXT	SEGMENT
_L$ = 8							; size = 4
_n$ = 12						; size = 4
_lua_concat PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1139
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 1142
  00004	8b 75 0c	 mov	 esi, DWORD PTR _n$[ebp]
  00007	57		 push	 edi
  00008	83 fe 02	 cmp	 esi, 2
  0000b	7c 23		 jl	 SHORT $LN4@lua_concat
; Line 1143
  0000d	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00010	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00013	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00017	7e 09		 jle	 SHORT $LN3@lua_concat
  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 _luaC_step
  0001f	83 c4 04	 add	 esp, 4
$LN3@lua_concat:
; Line 1144
  00022	56		 push	 esi
  00023	57		 push	 edi
  00024	e8 00 00 00 00	 call	 _luaV_concat
  00029	83 c4 08	 add	 esp, 8
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
; Line 1152
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
$LN4@lua_concat:
; Line 1146
  00030	85 f6		 test	 esi, esi
  00032	75 26		 jne	 SHORT $LN1@lua_concat
; Line 1147
  00034	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00037	6a 00		 push	 0
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0003e	57		 push	 edi
  0003f	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]
  00042	e8 00 00 00 00	 call	 _luaS_newlstr
  00047	89 06		 mov	 DWORD PTR [esi], eax
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004c	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  00050	83 c8 40	 or	 eax, 64			; 00000040H
  00053	89 46 08	 mov	 DWORD PTR [esi+8], eax
; Line 1148
  00056	83 47 0c 10	 add	 DWORD PTR [edi+12], 16	; 00000010H
$LN1@lua_concat:
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
; Line 1152
  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
_lua_concat ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_next
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_next PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1122
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 1126
  00004	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	56		 push	 esi
  0000b	e8 00 00 00 00	 call	 _index2addr
; Line 1128
  00010	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00013	83 e9 10	 sub	 ecx, 16			; 00000010H
  00016	51		 push	 ecx
  00017	ff 30		 push	 DWORD PTR [eax]
  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 _luaH_next
  0001f	83 c4 14	 add	 esp, 20			; 00000014H
; Line 1129
  00022	85 c0		 test	 eax, eax
  00024	74 07		 je	 SHORT $LN2@lua_next
; Line 1130
  00026	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
  0002a	5e		 pop	 esi
; Line 1136
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
$LN2@lua_next:
; Line 1133
  0002d	83 46 0c f0	 add	 DWORD PTR [esi+12], -16	; fffffff0H
  00031	5e		 pop	 esi
; Line 1136
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
_lua_next ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_error
_TEXT	SEGMENT
_L$ = 8							; size = 4
_lua_error PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1113
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1116
  00003	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00006	e8 00 00 00 00	 call	 _luaG_errormsg
$LN4@lua_error:
$LN3@lua_error:
  0000b	cc		 int	 3
_lua_error ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_gc
_TEXT	SEGMENT
_L$ = 8							; size = 4
_oldrunning$1$ = 11					; size = 1
_debt$1$ = 12						; size = 4
_what$ = 12						; size = 4
_data$ = 16						; size = 4
_lua_gc	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1039
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1044
  00003	8b 45 0c	 mov	 eax, DWORD PTR _what$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	33 ff		 xor	 edi, edi
  0000e	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
  00011	83 f8 09	 cmp	 eax, 9
  00014	0f 87 01 01 00
	00		 ja	 $LN1@lua_gc
  0001a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN21@lua_gc[eax*4]
$LN15@lua_gc:
; Line 1103
  00021	8b c7		 mov	 eax, edi
  00023	c6 46 3f 00	 mov	 BYTE PTR [esi+63], 0
  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
; Line 1104
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
$LN14@lua_gc:
; Line 1050
  0002c	6a 00		 push	 0
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 _luaE_setdebt
  00034	83 c4 08	 add	 esp, 8
; Line 1051
  00037	c6 46 3f 01	 mov	 BYTE PTR [esi+63], 1
; Line 1103
  0003b	8b c7		 mov	 eax, edi
  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
; Line 1104
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
$LN13@lua_gc:
; Line 1055
  00042	6a 00		 push	 0
  00044	53		 push	 ebx
  00045	e8 00 00 00 00	 call	 _luaC_fullgc
  0004a	83 c4 08	 add	 esp, 8
; Line 1103
  0004d	8b c7		 mov	 eax, edi
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
; Line 1104
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
$LN12@lua_gc:
; Line 1060
  00054	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  00057	03 7e 08	 add	 edi, DWORD PTR [esi+8]
  0005a	c1 ef 0a	 shr	 edi, 10			; 0000000aH
; Line 1103
  0005d	8b c7		 mov	 eax, edi
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
; Line 1104
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
$LN11@lua_gc:
; Line 1064
  00064	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  00067	03 7e 08	 add	 edi, DWORD PTR [esi+8]
  0006a	81 e7 ff 03 00
	00		 and	 edi, 1023		; 000003ffH
; Line 1103
  00070	8b c7		 mov	 eax, edi
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx
; Line 1104
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
$LN10@lua_gc:
; Line 1069
  00077	8a 46 3f	 mov	 al, BYTE PTR [esi+63]
  0007a	88 45 0b	 mov	 BYTE PTR _oldrunning$1$[ebp], al
; Line 1071
  0007d	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  00080	c7 45 0c 01 00
	00 00		 mov	 DWORD PTR _debt$1$[ebp], 1
  00087	c6 46 3f 01	 mov	 BYTE PTR [esi+63], 1
  0008b	85 c0		 test	 eax, eax
  0008d	75 16		 jne	 SHORT $LN9@lua_gc
; Line 1072
  0008f	68 c0 f9 ff ff	 push	 -1600			; fffff9c0H
  00094	56		 push	 esi
  00095	e8 00 00 00 00	 call	 _luaE_setdebt
; Line 1073
  0009a	53		 push	 ebx
  0009b	e8 00 00 00 00	 call	 _luaC_step
  000a0	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 1075
  000a3	eb 24		 jmp	 SHORT $LN7@lua_gc
$LN9@lua_gc:
; Line 1076
  000a5	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  000a8	03 46 0c	 add	 eax, DWORD PTR [esi+12]
; Line 1077
  000ab	50		 push	 eax
  000ac	56		 push	 esi
  000ad	89 45 0c	 mov	 DWORD PTR _debt$1$[ebp], eax
  000b0	e8 00 00 00 00	 call	 _luaE_setdebt
; Line 1078
  000b5	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  000b8	83 c4 08	 add	 esp, 8
  000bb	39 78 0c	 cmp	 DWORD PTR [eax+12], edi
  000be	7e 09		 jle	 SHORT $LN7@lua_gc
  000c0	53		 push	 ebx
  000c1	e8 00 00 00 00	 call	 _luaC_step
  000c6	83 c4 04	 add	 esp, 4
$LN7@lua_gc:
; Line 1080
  000c9	8a 45 0b	 mov	 al, BYTE PTR _oldrunning$1$[ebp]
  000cc	88 46 3f	 mov	 BYTE PTR [esi+63], al
; Line 1081
  000cf	39 7d 0c	 cmp	 DWORD PTR _debt$1$[ebp], edi
  000d2	7e 4a		 jle	 SHORT $LN16@lua_gc
  000d4	80 7e 3d 07	 cmp	 BYTE PTR [esi+61], 7
  000d8	75 44		 jne	 SHORT $LN16@lua_gc
; Line 1082
  000da	bf 01 00 00 00	 mov	 edi, 1
; Line 1103
  000df	8b c7		 mov	 eax, edi
  000e1	5f		 pop	 edi
  000e2	5e		 pop	 esi
  000e3	5b		 pop	 ebx
; Line 1104
  000e4	5d		 pop	 ebp
  000e5	c3		 ret	 0
$LN5@lua_gc:
; Line 1086
  000e6	8b 7e 70	 mov	 edi, DWORD PTR [esi+112]
; Line 1087
  000e9	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  000ec	89 46 70	 mov	 DWORD PTR [esi+112], eax
; Line 1103
  000ef	8b c7		 mov	 eax, edi
  000f1	5f		 pop	 edi
  000f2	5e		 pop	 esi
  000f3	5b		 pop	 ebx
; Line 1104
  000f4	5d		 pop	 ebp
  000f5	c3		 ret	 0
$LN4@lua_gc:
; Line 1092
  000f6	8b 45 10	 mov	 eax, DWORD PTR _data$[ebp]
  000f9	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000fe	8b 7e 74	 mov	 edi, DWORD PTR [esi+116]
  00101	3b c1		 cmp	 eax, ecx
  00103	0f 4c c1	 cmovl	 eax, ecx
; Line 1093
  00106	89 46 74	 mov	 DWORD PTR [esi+116], eax
; Line 1103
  00109	8b c7		 mov	 eax, edi
  0010b	5f		 pop	 edi
  0010c	5e		 pop	 esi
  0010d	5b		 pop	 ebx
; Line 1104
  0010e	5d		 pop	 ebp
  0010f	c3		 ret	 0
$LN2@lua_gc:
; Line 1097
  00110	0f b6 7e 3f	 movzx	 edi, BYTE PTR [esi+63]
; Line 1103
  00114	8b c7		 mov	 eax, edi
  00116	5f		 pop	 edi
  00117	5e		 pop	 esi
  00118	5b		 pop	 ebx
; Line 1104
  00119	5d		 pop	 ebp
  0011a	c3		 ret	 0
$LN1@lua_gc:
; Line 1100
  0011b	83 cf ff	 or	 edi, -1
$LN16@lua_gc:
; Line 1103
  0011e	8b c7		 mov	 eax, edi
  00120	5f		 pop	 edi
  00121	5e		 pop	 esi
  00122	5b		 pop	 ebx
; Line 1104
  00123	5d		 pop	 ebp
  00124	c3		 ret	 0
  00125	8d 49 00	 npad	 3
$LN21@lua_gc:
  00128	00 00 00 00	 DD	 $LN15@lua_gc
  0012c	00 00 00 00	 DD	 $LN14@lua_gc
  00130	00 00 00 00	 DD	 $LN13@lua_gc
  00134	00 00 00 00	 DD	 $LN12@lua_gc
  00138	00 00 00 00	 DD	 $LN11@lua_gc
  0013c	00 00 00 00	 DD	 $LN10@lua_gc
  00140	00 00 00 00	 DD	 $LN5@lua_gc
  00144	00 00 00 00	 DD	 $LN4@lua_gc
  00148	00 00 00 00	 DD	 $LN1@lua_gc
  0014c	00 00 00 00	 DD	 $LN2@lua_gc
_lua_gc	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_status
_TEXT	SEGMENT
_L$ = 8							; size = 4
_lua_status PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1030
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1031
  00003	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00006	0f b6 40 08	 movzx	 eax, BYTE PTR [eax+8]
; Line 1032
  0000a	5d		 pop	 ebp
  0000b	c3		 ret	 0
_lua_status ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_dump
_TEXT	SEGMENT
_L$ = 8							; size = 4
_writer$ = 12						; size = 4
_data$ = 16						; size = 4
_strip$ = 20						; size = 4
_lua_dump PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1015
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1020
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
; Line 1021
  00009	83 78 f8 46	 cmp	 DWORD PTR [eax-8], 70	; 00000046H
  0000d	75 1a		 jne	 SHORT $LN2@lua_dump
; Line 1022
  0000f	ff 75 14	 push	 DWORD PTR _strip$[ebp]
  00012	8b 40 f0	 mov	 eax, DWORD PTR [eax-16]
  00015	ff 75 10	 push	 DWORD PTR _data$[ebp]
  00018	ff 75 0c	 push	 DWORD PTR _writer$[ebp]
  0001b	ff 70 0c	 push	 DWORD PTR [eax+12]
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 _luaU_dump
  00024	83 c4 14	 add	 esp, 20			; 00000014H
; Line 1027
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN2@lua_dump:
; Line 1026
  00029	b8 01 00 00 00	 mov	 eax, 1
; Line 1027
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
_lua_dump ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_load
_TEXT	SEGMENT
_z$ = -20						; size = 20
_L$ = 8							; size = 4
_reader$ = 12						; size = 4
_data$ = 16						; size = 4
_chunkname$ = 20					; size = 4
_mode$ = 24						; size = 4
_lua_load PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 992
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 996
  00003	8b 45 14	 mov	 eax, DWORD PTR _chunkname$[ebp]
  00006	83 ec 14	 sub	 esp, 20			; 00000014H
  00009	85 c0		 test	 eax, eax
  0000b	56		 push	 esi
  0000c	57		 push	 edi
; Line 997
  0000d	ff 75 10	 push	 DWORD PTR _data$[ebp]
  00010	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00013	be 00 00 00 00	 mov	 esi, OFFSET ??_C@_01OGPIMHDM@?$DP?$AA@
  00018	ff 75 0c	 push	 DWORD PTR _reader$[ebp]
  0001b	0f 45 f0	 cmovne	 esi, eax
  0001e	8d 45 ec	 lea	 eax, DWORD PTR _z$[ebp]
  00021	50		 push	 eax
  00022	57		 push	 edi
  00023	e8 00 00 00 00	 call	 _luaZ_init
; Line 998
  00028	ff 75 18	 push	 DWORD PTR _mode$[ebp]
  0002b	8d 45 ec	 lea	 eax, DWORD PTR _z$[ebp]
  0002e	56		 push	 esi
  0002f	50		 push	 eax
  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 _luaD_protectedparser
  00036	8b f0		 mov	 esi, eax
  00038	83 c4 20	 add	 esp, 32			; 00000020H
; Line 999
  0003b	85 f6		 test	 esi, esi
  0003d	75 4a		 jne	 SHORT $LN6@lua_load
; Line 1000
  0003f	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00042	53		 push	 ebx
  00043	8b 59 f0	 mov	 ebx, DWORD PTR [ecx-16]
; Line 1001
  00046	80 7b 06 01	 cmp	 BYTE PTR [ebx+6], 1
  0004a	72 3c		 jb	 SHORT $LN12@lua_load
; Line 1003
  0004c	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
; Line 1004
  0004f	50		 push	 eax
  00050	6a 02		 push	 2
  00052	ff 71 28	 push	 DWORD PTR [ecx+40]
  00055	e8 00 00 00 00	 call	 _luaH_getint
; Line 1006
  0005a	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00064	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00066	f3 0f 7f 01	 movdqu	 XMMWORD PTR [ecx], xmm0
; Line 1007
  0006a	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  0006d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006f	f6 42 08 40	 test	 BYTE PTR [edx+8], 64	; 00000040H
  00073	74 11		 je	 SHORT $LN8@lua_load
  00075	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  00078	3b d0		 cmp	 edx, eax
  0007a	75 0a		 jne	 SHORT $LN8@lua_load
  0007c	51		 push	 ecx
  0007d	57		 push	 edi
  0007e	e8 00 00 00 00	 call	 _luaC_upvalbarrier_
  00083	83 c4 08	 add	 esp, 8
$LN8@lua_load:
; Line 1011
  00086	8b c6		 mov	 eax, esi
$LN12@lua_load:
  00088	5b		 pop	 ebx
$LN6@lua_load:
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
; Line 1012
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0
_lua_load ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_pcallk
_TEXT	SEGMENT
_c$ = -8						; size = 8
_L$ = 8							; size = 4
_nargs$ = 12						; size = 4
_nresults$ = 16						; size = 4
_errfunc$ = 20						; size = 4
_ctx$ = 24						; size = 4
_k$ = 28						; size = 4
_lua_pcallk PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 948
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 958
  00003	8b 45 14	 mov	 eax, DWORD PTR _errfunc$[ebp]
  00006	83 ec 08	 sub	 esp, 8
  00009	53		 push	 ebx
  0000a	57		 push	 edi
  0000b	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0000e	85 c0		 test	 eax, eax
  00010	75 04		 jne	 SHORT $LN6@lua_pcallk
; Line 959
  00012	33 db		 xor	 ebx, ebx
; Line 960
  00014	eb 0f		 jmp	 SHORT $LN5@lua_pcallk
$LN6@lua_pcallk:
; Line 961
  00016	50		 push	 eax
  00017	57		 push	 edi
  00018	e8 00 00 00 00	 call	 _index2addr
  0001d	8b d8		 mov	 ebx, eax
  0001f	83 c4 08	 add	 esp, 8
; Line 963
  00022	2b 5f 20	 sub	 ebx, DWORD PTR [edi+32]
$LN5@lua_pcallk:
; Line 965
  00025	8b 4d 0c	 mov	 ecx, DWORD PTR _nargs$[ebp]
  00028	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  0002b	41		 inc	 ecx
; Line 966
  0002c	8b 45 1c	 mov	 eax, DWORD PTR _k$[ebp]
  0002f	c1 e1 04	 shl	 ecx, 4
  00032	2b d1		 sub	 edx, ecx
  00034	89 55 f8	 mov	 DWORD PTR _c$[ebp], edx
  00037	85 c0		 test	 eax, eax
  00039	74 52		 je	 SHORT $LN3@lua_pcallk
  0003b	66 83 7f 6c 00	 cmp	 WORD PTR [edi+108], 0
  00040	77 4b		 ja	 SHORT $LN3@lua_pcallk
; Line 971
  00042	56		 push	 esi
  00043	8b 77 14	 mov	 esi, DWORD PTR [edi+20]
; Line 972
  00046	89 46 10	 mov	 DWORD PTR [esi+16], eax
; Line 973
  00049	8b 45 18	 mov	 eax, DWORD PTR _ctx$[ebp]
  0004c	89 46 18	 mov	 DWORD PTR [esi+24], eax
; Line 975
  0004f	8b 45 f8	 mov	 eax, DWORD PTR _c$[ebp]
  00052	2b 47 20	 sub	 eax, DWORD PTR [edi+32]
  00055	89 46 1c	 mov	 DWORD PTR [esi+28], eax
; Line 976
  00058	8b 47 5c	 mov	 eax, DWORD PTR [edi+92]
  0005b	89 46 14	 mov	 DWORD PTR [esi+20], eax
; Line 977
  0005e	89 5f 5c	 mov	 DWORD PTR [edi+92], ebx
; Line 978
  00061	8a 46 22	 mov	 al, BYTE PTR [esi+34]
; Line 980
  00064	8b 5d 10	 mov	 ebx, DWORD PTR _nresults$[ebp]
  00067	24 fe		 and	 al, 254			; 000000feH
  00069	0a 47 71	 or	 al, BYTE PTR [edi+113]
  0006c	0c 10		 or	 al, 16			; 00000010H
  0006e	53		 push	 ebx
  0006f	88 46 22	 mov	 BYTE PTR [esi+34], al
  00072	ff 75 f8	 push	 DWORD PTR _c$[ebp]
  00075	57		 push	 edi
  00076	e8 00 00 00 00	 call	 _luaD_call
; Line 981
  0007b	80 66 22 ef	 and	 BYTE PTR [esi+34], 239	; 000000efH
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 982
  00082	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00085	89 47 5c	 mov	 DWORD PTR [edi+92], eax
; Line 983
  00088	33 c0		 xor	 eax, eax
  0008a	5e		 pop	 esi
  0008b	eb 20		 jmp	 SHORT $LN2@lua_pcallk
$LN3@lua_pcallk:
; Line 967
  0008d	8b 45 10	 mov	 eax, DWORD PTR _nresults$[ebp]
; Line 968
  00090	2b 57 20	 sub	 edx, DWORD PTR [edi+32]
  00093	53		 push	 ebx
  00094	52		 push	 edx
  00095	89 45 fc	 mov	 DWORD PTR _c$[ebp+4], eax
  00098	8d 45 f8	 lea	 eax, DWORD PTR _c$[ebp]
  0009b	50		 push	 eax
  0009c	68 00 00 00 00	 push	 OFFSET _f_call
  000a1	57		 push	 edi
  000a2	e8 00 00 00 00	 call	 _luaD_pcall
  000a7	8b 5d 10	 mov	 ebx, DWORD PTR _nresults$[ebp]
  000aa	83 c4 14	 add	 esp, 20			; 00000014H
$LN2@lua_pcallk:
; Line 985
  000ad	83 fb ff	 cmp	 ebx, -1
  000b0	75 0e		 jne	 SHORT $LN1@lua_pcallk
  000b2	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  000b5	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  000b8	39 51 04	 cmp	 DWORD PTR [ecx+4], edx
  000bb	73 03		 jae	 SHORT $LN1@lua_pcallk
  000bd	89 51 04	 mov	 DWORD PTR [ecx+4], edx
$LN1@lua_pcallk:
  000c0	5f		 pop	 edi
  000c1	5b		 pop	 ebx
; Line 988
  000c2	8b e5		 mov	 esp, ebp
  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
_lua_pcallk ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_callk
_TEXT	SEGMENT
_L$ = 8							; size = 4
_nargs$ = 12						; size = 4
_nresults$ = 16						; size = 4
_ctx$ = 20						; size = 4
_k$ = 24						; size = 4
_lua_callk PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 909
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 917
  00003	8b 45 0c	 mov	 eax, DWORD PTR _nargs$[ebp]
; Line 918
  00006	8b 4d 18	 mov	 ecx, DWORD PTR _k$[ebp]
  00009	40		 inc	 eax
  0000a	56		 push	 esi
  0000b	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000e	c1 e0 04	 shl	 eax, 4
  00011	57		 push	 edi
  00012	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00015	2b d0		 sub	 edx, eax
  00017	85 c9		 test	 ecx, ecx
  00019	74 23		 je	 SHORT $LN3@lua_callk
  0001b	66 83 7e 6c 00	 cmp	 WORD PTR [esi+108], 0
  00020	75 1c		 jne	 SHORT $LN3@lua_callk
; Line 919
  00022	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
; Line 921
  00025	8b 7d 10	 mov	 edi, DWORD PTR _nresults$[ebp]
  00028	57		 push	 edi
  00029	52		 push	 edx
  0002a	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  0002d	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00030	8b 45 14	 mov	 eax, DWORD PTR _ctx$[ebp]
  00033	56		 push	 esi
  00034	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  00037	e8 00 00 00 00	 call	 _luaD_call
; Line 923
  0003c	eb 0b		 jmp	 SHORT $LN6@lua_callk
$LN3@lua_callk:
; Line 924
  0003e	8b 7d 10	 mov	 edi, DWORD PTR _nresults$[ebp]
  00041	57		 push	 edi
  00042	52		 push	 edx
  00043	56		 push	 esi
  00044	e8 00 00 00 00	 call	 _luaD_callnoyield
$LN6@lua_callk:
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 925
  0004c	83 ff ff	 cmp	 edi, -1
  0004f	75 0e		 jne	 SHORT $LN1@lua_callk
  00051	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00054	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00057	39 48 04	 cmp	 DWORD PTR [eax+4], ecx
  0005a	73 03		 jae	 SHORT $LN1@lua_callk
  0005c	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$LN1@lua_callk:
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
; Line 927
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
_lua_callk ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_setuservalue
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_setuservalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 885
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
; Line 889
  00006	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00009	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0000c	57		 push	 edi
  0000d	e8 00 00 00 00	 call	 _index2addr
; Line 891
  00012	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]
  00015	8b d8		 mov	 ebx, eax
  00017	83 c4 08	 add	 esp, 8
  0001a	8b 13		 mov	 edx, DWORD PTR [ebx]
  0001c	8b 4e f0	 mov	 ecx, DWORD PTR [esi-16]
  0001f	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
  00022	8b 4e f4	 mov	 ecx, DWORD PTR [esi-12]
  00025	89 4a 14	 mov	 DWORD PTR [edx+20], ecx
  00028	8a 46 f8	 mov	 al, BYTE PTR [esi-8]
  0002b	88 42 06	 mov	 BYTE PTR [edx+6], al
; Line 892
  0002e	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00031	f6 40 f8 40	 test	 BYTE PTR [eax-8], 64	; 00000040H
  00035	74 1c		 je	 SHORT $LN5@lua_setuse
  00037	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00039	f6 41 05 04	 test	 BYTE PTR [ecx+5], 4
  0003d	74 14		 je	 SHORT $LN5@lua_setuse
  0003f	8b 40 f0	 mov	 eax, DWORD PTR [eax-16]
  00042	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00046	74 0b		 je	 SHORT $LN5@lua_setuse
  00048	50		 push	 eax
  00049	51		 push	 ecx
  0004a	57		 push	 edi
  0004b	e8 00 00 00 00	 call	 _luaC_barrier_
  00050	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@lua_setuse:
; Line 893
  00053	83 47 0c f0	 add	 DWORD PTR [edi+12], -16	; fffffff0H
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
; Line 895
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
_lua_setuservalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_setmetatable
_TEXT	SEGMENT
_L$ = 8							; size = 4
_objindex$ = 12						; size = 4
_lua_setmetatable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 845
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
; Line 850
  00006	ff 75 0c	 push	 DWORD PTR _objindex$[ebp]
  00009	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0000c	57		 push	 edi
  0000d	e8 00 00 00 00	 call	 _index2addr
; Line 851
  00012	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]
  00015	83 c4 08	 add	 esp, 8
  00018	8b d8		 mov	 ebx, eax
  0001a	83 7e f8 00	 cmp	 DWORD PTR [esi-8], 0
  0001e	75 04		 jne	 SHORT $LN9@lua_setmet
; Line 852
  00020	33 f6		 xor	 esi, esi
; Line 853
  00022	eb 03		 jmp	 SHORT $LN8@lua_setmet
$LN9@lua_setmet:
; Line 855
  00024	8b 76 f0	 mov	 esi, DWORD PTR [esi-16]
$LN8@lua_setmet:
; Line 857
  00027	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0002a	83 e1 0f	 and	 ecx, 15			; 0000000fH
  0002d	8b c1		 mov	 eax, ecx
  0002f	83 e8 05	 sub	 eax, 5
  00032	74 24		 je	 SHORT $LN5@lua_setmet
  00034	83 e8 02	 sub	 eax, 2
  00037	74 18		 je	 SHORT $LN3@lua_setmet
; Line 875
  00039	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0003c	89 b4 88 e8 00
	00 00		 mov	 DWORD PTR [eax+ecx*4+232], esi
; Line 881
  00043	b8 01 00 00 00	 mov	 eax, 1
  00048	83 47 0c f0	 add	 DWORD PTR [edi+12], -16	; fffffff0H
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
; Line 882
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
$LN3@lua_setmet:
; Line 867
  00051	8b 03		 mov	 eax, DWORD PTR [ebx]
  00053	89 70 08	 mov	 DWORD PTR [eax+8], esi
; Line 872
  00056	eb 05		 jmp	 SHORT $LN20@lua_setmet
$LN5@lua_setmet:
; Line 859
  00058	8b 03		 mov	 eax, DWORD PTR [ebx]
  0005a	89 70 18	 mov	 DWORD PTR [eax+24], esi
$LN20@lua_setmet:
; Line 860
  0005d	85 f6		 test	 esi, esi
  0005f	74 25		 je	 SHORT $LN4@lua_setmet
; Line 861
  00061	8b 03		 mov	 eax, DWORD PTR [ebx]
  00063	f6 40 05 04	 test	 BYTE PTR [eax+5], 4
  00067	74 11		 je	 SHORT $LN12@lua_setmet
  00069	f6 46 05 03	 test	 BYTE PTR [esi+5], 3
  0006d	74 0b		 je	 SHORT $LN12@lua_setmet
  0006f	56		 push	 esi
  00070	50		 push	 eax
  00071	57		 push	 edi
  00072	e8 00 00 00 00	 call	 _luaC_barrier_
  00077	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN12@lua_setmet:
; Line 862
  0007a	56		 push	 esi
  0007b	ff 33		 push	 DWORD PTR [ebx]
  0007d	57		 push	 edi
  0007e	e8 00 00 00 00	 call	 _luaC_checkfinalizer
  00083	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@lua_setmet:
; Line 879
  00086	83 47 0c f0	 add	 DWORD PTR [edi+12], -16	; fffffff0H
; Line 881
  0008a	b8 01 00 00 00	 mov	 eax, 1
  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	5b		 pop	 ebx
; Line 882
  00092	5d		 pop	 ebp
  00093	c3		 ret	 0
_lua_setmetatable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_rawsetp
_TEXT	SEGMENT
_k$ = -16						; size = 16
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_p$ = 16						; size = 4
_lua_rawsetp PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 829
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
; Line 834
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	57		 push	 edi
  0000b	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 _index2addr
; Line 836
  00014	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
  00017	8b f8		 mov	 edi, eax
; Line 837
  00019	8d 45 f0	 lea	 eax, DWORD PTR _k$[ebp]
  0001c	89 4d f0	 mov	 DWORD PTR _k$[ebp], ecx
  0001f	50		 push	 eax
  00020	c7 45 f8 02 00
	00 00		 mov	 DWORD PTR _k$[ebp+8], 2
  00027	ff 37		 push	 DWORD PTR [edi]
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 _luaH_set
; Line 838
  0002f	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00032	83 c4 14	 add	 esp, 20			; 00000014H
  00035	f3 0f 6f 41 f0	 movdqu	 xmm0, XMMWORD PTR [ecx-16]
  0003a	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
; Line 839
  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	f6 40 f8 40	 test	 BYTE PTR [eax-8], 64	; 00000040H
  00045	74 1b		 je	 SHORT $LN5@lua_rawset
  00047	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00049	f6 41 05 04	 test	 BYTE PTR [ecx+5], 4
  0004d	74 13		 je	 SHORT $LN5@lua_rawset
  0004f	8b 40 f0	 mov	 eax, DWORD PTR [eax-16]
  00052	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00056	74 0a		 je	 SHORT $LN5@lua_rawset
  00058	51		 push	 ecx
  00059	56		 push	 esi
  0005a	e8 00 00 00 00	 call	 _luaC_barrierback_
  0005f	83 c4 08	 add	 esp, 8
$LN5@lua_rawset:
; Line 840
  00062	83 46 0c f0	 add	 DWORD PTR [esi+12], -16	; fffffff0H
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
; Line 842
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
_lua_rawsetp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_rawseti
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_n$ = 16						; size = 8
_lua_rawseti PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 816
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 820
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _index2addr
; Line 822
  00011	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00014	8b f8		 mov	 edi, eax
  00016	83 e9 10	 sub	 ecx, 16			; 00000010H
  00019	51		 push	 ecx
  0001a	ff 75 14	 push	 DWORD PTR _n$[ebp+4]
  0001d	ff 75 10	 push	 DWORD PTR _n$[ebp]
  00020	ff 37		 push	 DWORD PTR [edi]
  00022	56		 push	 esi
  00023	e8 00 00 00 00	 call	 _luaH_setint
; Line 823
  00028	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0002b	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002e	f6 40 f8 40	 test	 BYTE PTR [eax-8], 64	; 00000040H
  00032	74 1b		 je	 SHORT $LN5@lua_rawset
  00034	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00036	f6 41 05 04	 test	 BYTE PTR [ecx+5], 4
  0003a	74 13		 je	 SHORT $LN5@lua_rawset
  0003c	8b 40 f0	 mov	 eax, DWORD PTR [eax-16]
  0003f	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00043	74 0a		 je	 SHORT $LN5@lua_rawset
  00045	51		 push	 ecx
  00046	56		 push	 esi
  00047	e8 00 00 00 00	 call	 _luaC_barrierback_
  0004c	83 c4 08	 add	 esp, 8
$LN5@lua_rawset:
; Line 824
  0004f	83 46 0c f0	 add	 DWORD PTR [esi+12], -16	; fffffff0H
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
; Line 826
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
_lua_rawseti ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_rawset
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_rawset PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 800
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 805
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _index2addr
; Line 807
  00011	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00014	8b f8		 mov	 edi, eax
  00016	83 e9 20	 sub	 ecx, 32			; 00000020H
  00019	51		 push	 ecx
  0001a	ff 37		 push	 DWORD PTR [edi]
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 _luaH_set
; Line 808
  00022	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00025	83 c4 14	 add	 esp, 20			; 00000014H
  00028	f3 0f 6f 41 f0	 movdqu	 xmm0, XMMWORD PTR [ecx-16]
  0002d	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
; Line 809
  00031	8b 07		 mov	 eax, DWORD PTR [edi]
  00033	c6 40 06 00	 mov	 BYTE PTR [eax+6], 0
; Line 810
  00037	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0003a	f6 40 f8 40	 test	 BYTE PTR [eax-8], 64	; 00000040H
  0003e	74 1b		 je	 SHORT $LN5@lua_rawset
  00040	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00042	f6 41 05 04	 test	 BYTE PTR [ecx+5], 4
  00046	74 13		 je	 SHORT $LN5@lua_rawset
  00048	8b 40 f0	 mov	 eax, DWORD PTR [eax-16]
  0004b	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0004f	74 0a		 je	 SHORT $LN5@lua_rawset
  00051	51		 push	 ecx
  00052	56		 push	 esi
  00053	e8 00 00 00 00	 call	 _luaC_barrierback_
  00058	83 c4 08	 add	 esp, 8
$LN5@lua_rawset:
; Line 811
  0005b	83 46 0c e0	 add	 DWORD PTR [esi+12], -32	; ffffffe0H
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
; Line 813
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
_lua_rawset ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_seti
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_n$ = 16						; size = 8
_lua_seti PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 782
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; Line 787
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	57		 push	 edi
  00009	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _index2addr
  00012	8b f8		 mov	 edi, eax
  00014	83 c4 08	 add	 esp, 8
; Line 788
  00017	83 7f 08 45	 cmp	 DWORD PTR [edi+8], 69	; 00000045H
  0001b	74 3c		 je	 SHORT $LN9@lua_seti
  0001d	33 db		 xor	 ebx, ebx
$LN2@lua_seti:
; Line 791
  0001f	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00022	8b 4d 10	 mov	 ecx, DWORD PTR _n$[ebp]
; Line 793
  00025	53		 push	 ebx
  00026	89 08		 mov	 DWORD PTR [eax], ecx
  00028	8b 4d 14	 mov	 ecx, DWORD PTR _n$[ebp+4]
  0002b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0002e	c7 40 08 13 00
	00 00		 mov	 DWORD PTR [eax+8], 19	; 00000013H
  00035	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00038	83 c1 10	 add	 ecx, 16			; 00000010H
  0003b	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  0003e	8d 41 e0	 lea	 eax, DWORD PTR [ecx-32]
  00041	50		 push	 eax
  00042	8d 41 f0	 lea	 eax, DWORD PTR [ecx-16]
  00045	50		 push	 eax
  00046	57		 push	 edi
  00047	56		 push	 esi
  00048	e8 00 00 00 00	 call	 _luaV_finishset
  0004d	83 c4 14	 add	 esp, 20			; 00000014H
; Line 794
  00050	83 46 0c e0	 add	 DWORD PTR [esi+12], -32	; ffffffe0H
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
; Line 797
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
$LN9@lua_seti:
; Line 788
  00059	ff 75 14	 push	 DWORD PTR _n$[ebp+4]
  0005c	ff 75 10	 push	 DWORD PTR _n$[ebp]
  0005f	ff 37		 push	 DWORD PTR [edi]
  00061	e8 00 00 00 00	 call	 _luaH_getint
  00066	8b d8		 mov	 ebx, eax
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	83 7b 08 00	 cmp	 DWORD PTR [ebx+8], 0
  0006f	74 ae		 je	 SHORT $LN2@lua_seti
  00071	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00074	f6 40 f8 40	 test	 BYTE PTR [eax-8], 64	; 00000040H
  00078	74 1b		 je	 SHORT $LN5@lua_seti
  0007a	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0007c	f6 41 05 04	 test	 BYTE PTR [ecx+5], 4
  00080	74 13		 je	 SHORT $LN5@lua_seti
  00082	8b 40 f0	 mov	 eax, DWORD PTR [eax-16]
  00085	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00089	74 0a		 je	 SHORT $LN5@lua_seti
  0008b	51		 push	 ecx
  0008c	56		 push	 esi
  0008d	e8 00 00 00 00	 call	 _luaC_barrierback_
  00092	83 c4 08	 add	 esp, 8
$LN5@lua_seti:
  00095	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00098	5f		 pop	 edi
  00099	f3 0f 6f 40 f0	 movdqu	 xmm0, XMMWORD PTR [eax-16]
  0009e	f3 0f 7f 03	 movdqu	 XMMWORD PTR [ebx], xmm0
; Line 789
  000a2	83 46 0c f0	 add	 DWORD PTR [esi+12], -16	; fffffff0H
  000a6	5e		 pop	 esi
  000a7	5b		 pop	 ebx
; Line 797
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
_lua_seti ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_setfield
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_k$ = 16						; size = 4
_lua_setfield PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 776
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 778
  00003	ff 75 10	 push	 DWORD PTR _k$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00009	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000c	e8 00 00 00 00	 call	 _index2addr
  00011	83 c4 08	 add	 esp, 8
  00014	50		 push	 eax
  00015	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00018	e8 00 00 00 00	 call	 _auxsetstr
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 779
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
_lua_setfield ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_settable
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_settable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 765
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; Line 769
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	57		 push	 edi
  00009	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _index2addr
  00012	8b f8		 mov	 edi, eax
  00014	83 c4 08	 add	 esp, 8
; Line 770
  00017	83 7f 08 45	 cmp	 DWORD PTR [edi+8], 69	; 00000045H
  0001b	74 21		 je	 SHORT $LN8@lua_settab
  0001d	33 db		 xor	 ebx, ebx
$LN10@lua_settab:
  0001f	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00022	53		 push	 ebx
  00023	8d 41 f0	 lea	 eax, DWORD PTR [ecx-16]
  00026	50		 push	 eax
  00027	8d 41 e0	 lea	 eax, DWORD PTR [ecx-32]
  0002a	50		 push	 eax
  0002b	57		 push	 edi
  0002c	56		 push	 esi
  0002d	e8 00 00 00 00	 call	 _luaV_finishset
  00032	83 c4 14	 add	 esp, 20			; 00000014H
; Line 771
  00035	83 46 0c e0	 add	 DWORD PTR [esi+12], -32	; ffffffe0H
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
; Line 773
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
$LN8@lua_settab:
; Line 770
  0003e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00041	83 e8 20	 sub	 eax, 32			; 00000020H
  00044	50		 push	 eax
  00045	ff 37		 push	 DWORD PTR [edi]
  00047	e8 00 00 00 00	 call	 _luaH_get
  0004c	8b d8		 mov	 ebx, eax
  0004e	83 c4 08	 add	 esp, 8
  00051	83 7b 08 00	 cmp	 DWORD PTR [ebx+8], 0
  00055	74 c8		 je	 SHORT $LN10@lua_settab
  00057	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0005a	f6 40 f8 40	 test	 BYTE PTR [eax-8], 64	; 00000040H
  0005e	74 1b		 je	 SHORT $LN4@lua_settab
  00060	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00062	f6 41 05 04	 test	 BYTE PTR [ecx+5], 4
  00066	74 13		 je	 SHORT $LN4@lua_settab
  00068	8b 40 f0	 mov	 eax, DWORD PTR [eax-16]
  0006b	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0006f	74 0a		 je	 SHORT $LN4@lua_settab
  00071	51		 push	 ecx
  00072	56		 push	 esi
  00073	e8 00 00 00 00	 call	 _luaC_barrierback_
  00078	83 c4 08	 add	 esp, 8
$LN4@lua_settab:
  0007b	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0007e	5f		 pop	 edi
  0007f	f3 0f 6f 40 f0	 movdqu	 xmm0, XMMWORD PTR [eax-16]
  00084	f3 0f 7f 03	 movdqu	 XMMWORD PTR [ebx], xmm0
; Line 771
  00088	83 46 0c e0	 add	 DWORD PTR [esi+12], -32	; ffffffe0H
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
; Line 773
  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
_lua_settable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_setglobal
_TEXT	SEGMENT
_L$ = 8							; size = 4
_name$ = 12						; size = 4
_lua_setglobal PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 758
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 759
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
; Line 761
  00007	ff 75 0c	 push	 DWORD PTR _name$[ebp]
  0000a	6a 00		 push	 0
  0000c	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000f	6a 02		 push	 2
  00011	ff 70 28	 push	 DWORD PTR [eax+40]
  00014	e8 00 00 00 00	 call	 _luaH_getint
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	e8 00 00 00 00	 call	 _auxsetstr
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH
  00026	5e		 pop	 esi
; Line 762
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
_lua_setglobal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_getuservalue
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_getuservalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 723
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 728
  00005	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00008	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  0000b	57		 push	 edi
  0000c	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]
  0000f	e8 00 00 00 00	 call	 _index2addr
  00014	83 c4 08	 add	 esp, 8
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0001c	89 06		 mov	 DWORD PTR [esi], eax
  0001e	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  00021	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00024	0f b6 41 06	 movzx	 eax, BYTE PTR [ecx+6]
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	83 47 0c 10	 add	 DWORD PTR [edi+12], 16	; 00000010H
  0002f	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
; Line 731
  00034	8b 40 f8	 mov	 eax, DWORD PTR [eax-8]
  00037	83 e0 0f	 and	 eax, 15			; 0000000fH
; Line 732
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
_lua_getuservalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_getmetatable
_TEXT	SEGMENT
_L$ = 8							; size = 4
_objindex$ = 12						; size = 4
_lua_getmetatable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 696
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 701
  00004	ff 75 0c	 push	 DWORD PTR _objindex$[ebp]
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	56		 push	 esi
  0000b	e8 00 00 00 00	 call	 _index2addr
  00010	8b d0		 mov	 edx, eax
  00012	83 c4 08	 add	 esp, 8
; Line 702
  00015	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00018	83 e1 0f	 and	 ecx, 15			; 0000000fH
  0001b	8b c1		 mov	 eax, ecx
  0001d	83 e8 05	 sub	 eax, 5
  00020	74 18		 je	 SHORT $LN4@lua_getmet
  00022	83 e8 02	 sub	 eax, 2
  00025	74 0c		 je	 SHORT $LN3@lua_getmet
; Line 710
  00027	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0002a	8b 8c 88 e8 00
	00 00		 mov	 ecx, DWORD PTR [eax+ecx*4+232]
; Line 711
  00031	eb 0c		 jmp	 SHORT $LN5@lua_getmet
$LN3@lua_getmet:
; Line 707
  00033	8b 02		 mov	 eax, DWORD PTR [edx]
  00035	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; Line 708
  00038	eb 05		 jmp	 SHORT $LN5@lua_getmet
$LN4@lua_getmet:
; Line 704
  0003a	8b 02		 mov	 eax, DWORD PTR [edx]
  0003c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
$LN5@lua_getmet:
; Line 713
  0003f	85 c9		 test	 ecx, ecx
  00041	74 18		 je	 SHORT $LN9@lua_getmet
; Line 714
  00043	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00046	89 08		 mov	 DWORD PTR [eax], ecx
  00048	c7 40 08 45 00
	00 00		 mov	 DWORD PTR [eax+8], 69	; 00000045H
; Line 719
  0004f	b8 01 00 00 00	 mov	 eax, 1
  00054	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
  00058	5e		 pop	 esi
; Line 720
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
$LN9@lua_getmet:
; Line 719
  0005b	33 c0		 xor	 eax, eax
  0005d	5e		 pop	 esi
; Line 720
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_lua_getmetatable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_newuserdata
_TEXT	SEGMENT
_L$ = 8							; size = 4
_size$ = 12						; size = 4
_lua_newuserdata PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1183
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 1186
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000a	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0000e	7e 09		 jle	 SHORT $LN1@lua_newuse
  00010	56		 push	 esi
  00011	e8 00 00 00 00	 call	 _luaC_step
  00016	83 c4 04	 add	 esp, 4
$LN1@lua_newuse:
; Line 1187
  00019	ff 75 0c	 push	 DWORD PTR _size$[ebp]
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 _luaS_newudata
; Line 1188
  00022	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00025	83 c4 08	 add	 esp, 8
  00028	89 01		 mov	 DWORD PTR [ecx], eax
  0002a	c7 41 08 47 00
	00 00		 mov	 DWORD PTR [ecx+8], 71	; 00000047H
; Line 1189
  00031	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
; Line 1191
  00035	83 c0 18	 add	 eax, 24			; 00000018H
  00038	5e		 pop	 esi
; Line 1192
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
_lua_newuserdata ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_createtable
_TEXT	SEGMENT
_L$ = 8							; size = 4
_narray$ = 12						; size = 4
_nrec$ = 16						; size = 4
_lua_createtable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 683
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 686
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000a	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0000e	7e 09		 jle	 SHORT $LN3@lua_create
  00010	56		 push	 esi
  00011	e8 00 00 00 00	 call	 _luaC_step
  00016	83 c4 04	 add	 esp, 4
$LN3@lua_create:
; Line 687
  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 _luaH_new
; Line 688
  0001f	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00022	83 c4 04	 add	 esp, 4
; Line 690
  00025	8b 55 0c	 mov	 edx, DWORD PTR _narray$[ebp]
  00028	89 01		 mov	 DWORD PTR [ecx], eax
  0002a	c7 41 08 45 00
	00 00		 mov	 DWORD PTR [ecx+8], 69	; 00000045H
  00031	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
  00035	8b 4d 10	 mov	 ecx, DWORD PTR _nrec$[ebp]
  00038	85 d2		 test	 edx, edx
  0003a	7f 04		 jg	 SHORT $LN1@lua_create
  0003c	85 c9		 test	 ecx, ecx
  0003e	7e 0c		 jle	 SHORT $LN2@lua_create
$LN1@lua_create:
; Line 691
  00040	51		 push	 ecx
  00041	52		 push	 edx
  00042	50		 push	 eax
  00043	56		 push	 esi
  00044	e8 00 00 00 00	 call	 _luaH_resize
  00049	83 c4 10	 add	 esp, 16			; 00000010H
$LN2@lua_create:
  0004c	5e		 pop	 esi
; Line 693
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
_lua_createtable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_rawgetp
_TEXT	SEGMENT
_k$ = -16						; size = 16
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_p$ = 16						; size = 4
_lua_rawgetp PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 669
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi
; Line 673
  00008	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  0000b	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0000e	57		 push	 edi
  0000f	e8 00 00 00 00	 call	 _index2addr
; Line 675
  00014	8b 4d 10	 mov	 ecx, DWORD PTR _p$[ebp]
; Line 676
  00017	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]
  0001a	89 4d f0	 mov	 DWORD PTR _k$[ebp], ecx
  0001d	8d 4d f0	 lea	 ecx, DWORD PTR _k$[ebp]
  00020	51		 push	 ecx
  00021	c7 45 f8 02 00
	00 00		 mov	 DWORD PTR _k$[ebp+8], 2
  00028	ff 30		 push	 DWORD PTR [eax]
  0002a	e8 00 00 00 00	 call	 _luaH_get
  0002f	83 c4 10	 add	 esp, 16			; 00000010H
  00032	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00036	f3 0f 7f 06	 movdqu	 XMMWORD PTR [esi], xmm0
  0003a	83 47 0c 10	 add	 DWORD PTR [edi+12], 16	; 00000010H
  0003e	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
; Line 679
  00043	8b 40 f8	 mov	 eax, DWORD PTR [eax-8]
  00046	83 e0 0f	 and	 eax, 15			; 0000000fH
; Line 680
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
_lua_rawgetp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_rawgeti
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_n$ = 16						; size = 8
_lua_rawgeti PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 657
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 660
  00005	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00008	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0000b	57		 push	 edi
  0000c	e8 00 00 00 00	 call	 _index2addr
; Line 662
  00011	ff 75 14	 push	 DWORD PTR _n$[ebp+4]
  00014	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]
  00017	ff 75 10	 push	 DWORD PTR _n$[ebp]
  0001a	ff 30		 push	 DWORD PTR [eax]
  0001c	e8 00 00 00 00	 call	 _luaH_getint
  00021	83 c4 14	 add	 esp, 20			; 00000014H
  00024	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00028	f3 0f 7f 06	 movdqu	 XMMWORD PTR [esi], xmm0
  0002c	83 47 0c 10	 add	 DWORD PTR [edi+12], 16	; 00000010H
  00030	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
; Line 665
  00035	8b 40 f8	 mov	 eax, DWORD PTR [eax-8]
  00038	83 e0 0f	 and	 eax, 15			; 0000000fH
; Line 666
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_lua_rawgeti ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_rawget
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_rawget PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 646
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; Line 649
  00005	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00008	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0000b	57		 push	 edi
  0000c	e8 00 00 00 00	 call	 _index2addr
; Line 651
  00011	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]
  00014	83 c6 f0	 add	 esi, -16		; fffffff0H
  00017	56		 push	 esi
  00018	ff 30		 push	 DWORD PTR [eax]
  0001a	e8 00 00 00 00	 call	 _luaH_get
  0001f	83 c4 10	 add	 esp, 16			; 00000010H
  00022	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00026	f3 0f 7f 06	 movdqu	 XMMWORD PTR [esi], xmm0
; Line 653
  0002a	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	8b 40 f8	 mov	 eax, DWORD PTR [eax-8]
  00032	83 e0 0f	 and	 eax, 15			; 0000000fH
; Line 654
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
_lua_rawget ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_geti
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_n$ = 16						; size = 8
_lua_geti PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 627
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
; Line 631
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	57		 push	 edi
  00009	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _index2addr
; Line 632
  00012	8b 5d 14	 mov	 ebx, DWORD PTR _n$[ebp+4]
  00015	8b f8		 mov	 edi, eax
  00017	83 c4 08	 add	 esp, 8
  0001a	83 7f 08 45	 cmp	 DWORD PTR [edi+8], 69	; 00000045H
  0001e	74 04		 je	 SHORT $LN13@lua_geti
  00020	33 d2		 xor	 edx, edx
  00022	eb 3f		 jmp	 SHORT $LN2@lua_geti
$LN13@lua_geti:
  00024	53		 push	 ebx
  00025	ff 75 10	 push	 DWORD PTR _n$[ebp]
  00028	ff 37		 push	 DWORD PTR [edi]
  0002a	e8 00 00 00 00	 call	 _luaH_getint
  0002f	8b c8		 mov	 ecx, eax
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
  00034	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00038	75 65		 jne	 SHORT $LN15@lua_geti
  0003a	8b 07		 mov	 eax, DWORD PTR [edi]
  0003c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003f	85 c9		 test	 ecx, ecx
  00041	74 57		 je	 SHORT $LN9@lua_geti
  00043	f6 41 06 01	 test	 BYTE PTR [ecx+6], 1
  00047	75 51		 jne	 SHORT $LN9@lua_geti
  00049	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0004c	ff b0 88 00 00
	00		 push	 DWORD PTR [eax+136]
  00052	6a 00		 push	 0
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 _luaT_gettm
  0005a	8b d0		 mov	 edx, eax
  0005c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005f	85 d2		 test	 edx, edx
  00061	74 37		 je	 SHORT $LN9@lua_geti
$LN2@lua_geti:
; Line 637
  00063	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00066	8b 45 10	 mov	 eax, DWORD PTR _n$[ebp]
; Line 639
  00069	52		 push	 edx
  0006a	89 01		 mov	 DWORD PTR [ecx], eax
  0006c	89 59 04	 mov	 DWORD PTR [ecx+4], ebx
  0006f	c7 41 08 13 00
	00 00		 mov	 DWORD PTR [ecx+8], 19	; 00000013H
  00076	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
  0007a	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0007d	83 c0 f0	 add	 eax, -16		; fffffff0H
  00080	50		 push	 eax
  00081	50		 push	 eax
  00082	57		 push	 edi
  00083	56		 push	 esi
  00084	e8 00 00 00 00	 call	 _luaV_finishget
; Line 642
  00089	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0008c	83 c4 14	 add	 esp, 20			; 00000014H
  0008f	8b 40 f8	 mov	 eax, DWORD PTR [eax-8]
  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	83 e0 0f	 and	 eax, 15			; 0000000fH
  00097	5b		 pop	 ebx
; Line 643
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
$LN9@lua_geti:
; Line 632
  0009a	b9 00 00 00 00	 mov	 ecx, OFFSET _luaO_nilobject_
$LN15@lua_geti:
; Line 633
  0009f	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  000a2	f3 0f 6f 01	 movdqu	 xmm0, XMMWORD PTR [ecx]
  000a6	5f		 pop	 edi
  000a7	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
; Line 634
  000ab	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
; Line 642
  000af	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx
  000b4	8b 40 f8	 mov	 eax, DWORD PTR [eax-8]
  000b7	83 e0 0f	 and	 eax, 15			; 0000000fH
; Line 643
  000ba	5d		 pop	 ebp
  000bb	c3		 ret	 0
_lua_geti ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_getfield
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_k$ = 16						; size = 4
_lua_getfield PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 621
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 623
  00003	ff 75 10	 push	 DWORD PTR _k$[ebp]
  00006	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00009	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000c	e8 00 00 00 00	 call	 _index2addr
  00011	83 c4 08	 add	 esp, 8
  00014	50		 push	 eax
  00015	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00018	e8 00 00 00 00	 call	 _auxgetstr
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 624
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
_lua_getfield ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_gettable
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_gettable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 611
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 614
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _index2addr
  00011	8b f8		 mov	 edi, eax
  00013	83 c4 08	 add	 esp, 8
; Line 615
  00016	83 7f 08 45	 cmp	 DWORD PTR [edi+8], 69	; 00000045H
  0001a	74 04		 je	 SHORT $LN13@lua_gettab
  0001c	33 c0		 xor	 eax, eax
  0001e	eb 40		 jmp	 SHORT $LN2@lua_gettab
$LN13@lua_gettab:
  00020	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00023	83 e8 10	 sub	 eax, 16			; 00000010H
  00026	50		 push	 eax
  00027	ff 37		 push	 DWORD PTR [edi]
  00029	e8 00 00 00 00	 call	 _luaH_get
  0002e	8b c8		 mov	 ecx, eax
  00030	83 c4 08	 add	 esp, 8
  00033	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00037	75 4c		 jne	 SHORT $LN15@lua_gettab
  00039	8b 07		 mov	 eax, DWORD PTR [edi]
  0003b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0003e	85 c9		 test	 ecx, ecx
  00040	74 3e		 je	 SHORT $LN9@lua_gettab
  00042	f6 41 06 01	 test	 BYTE PTR [ecx+6], 1
  00046	75 38		 jne	 SHORT $LN9@lua_gettab
  00048	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0004b	ff b0 88 00 00
	00		 push	 DWORD PTR [eax+136]
  00051	6a 00		 push	 0
  00053	51		 push	 ecx
  00054	e8 00 00 00 00	 call	 _luaT_gettm
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005c	85 c0		 test	 eax, eax
  0005e	74 20		 je	 SHORT $LN9@lua_gettab
$LN2@lua_gettab:
  00060	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00063	50		 push	 eax
  00064	83 c1 f0	 add	 ecx, -16		; fffffff0H
  00067	51		 push	 ecx
  00068	51		 push	 ecx
  00069	57		 push	 edi
  0006a	56		 push	 esi
  0006b	e8 00 00 00 00	 call	 _luaV_finishget
; Line 617
  00070	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00073	83 c4 14	 add	 esp, 20			; 00000014H
  00076	8b 40 f8	 mov	 eax, DWORD PTR [eax-8]
  00079	5f		 pop	 edi
  0007a	83 e0 0f	 and	 eax, 15			; 0000000fH
  0007d	5e		 pop	 esi
; Line 618
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
$LN9@lua_gettab:
; Line 615
  00080	b9 00 00 00 00	 mov	 ecx, OFFSET _luaO_nilobject_
$LN15@lua_gettab:
  00085	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00088	f3 0f 6f 01	 movdqu	 xmm0, XMMWORD PTR [ecx]
  0008c	5f		 pop	 edi
  0008d	f3 0f 7f 40 f0	 movdqu	 XMMWORD PTR [eax-16], xmm0
; Line 617
  00092	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00095	5e		 pop	 esi
  00096	8b 40 f8	 mov	 eax, DWORD PTR [eax-8]
  00099	83 e0 0f	 and	 eax, 15			; 0000000fH
; Line 618
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
_lua_gettable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_getglobal
_TEXT	SEGMENT
_L$ = 8							; size = 4
_name$ = 12						; size = 4
_lua_getglobal PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 604
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 605
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
; Line 607
  00007	ff 75 0c	 push	 DWORD PTR _name$[ebp]
  0000a	6a 00		 push	 0
  0000c	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000f	6a 02		 push	 2
  00011	ff 70 28	 push	 DWORD PTR [eax+40]
  00014	e8 00 00 00 00	 call	 _luaH_getint
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	e8 00 00 00 00	 call	 _auxgetstr
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH
  00026	5e		 pop	 esi
; Line 608
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
_lua_getglobal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_pushthread
_TEXT	SEGMENT
_L$ = 8							; size = 4
_lua_pushthread PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 572
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 574
  00003	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
  00006	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00009	89 10		 mov	 DWORD PTR [eax], edx
  0000b	c7 40 08 48 00
	00 00		 mov	 DWORD PTR [eax+8], 72	; 00000048H
; Line 577
  00012	33 c0		 xor	 eax, eax
  00014	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  00017	83 42 0c 10	 add	 DWORD PTR [edx+12], 16	; 00000010H
  0001b	39 51 7c	 cmp	 DWORD PTR [ecx+124], edx
  0001e	0f 94 c0	 sete	 al
; Line 578
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
_lua_pushthread ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_pushlightuserdata
_TEXT	SEGMENT
_L$ = 8							; size = 4
_p$ = 12						; size = 4
_lua_pushlightuserdata PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 564
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 566
  00003	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR _p$[ebp]
  00009	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax
  0000e	c7 41 08 02 00
	00 00		 mov	 DWORD PTR [ecx+8], 2
; Line 567
  00015	83 42 0c 10	 add	 DWORD PTR [edx+12], 16	; 00000010H
; Line 569
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
_lua_pushlightuserdata ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_pushboolean
_TEXT	SEGMENT
_L$ = 8							; size = 4
_b$ = 12						; size = 4
_lua_pushboolean PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 556
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 558
  00003	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
  00006	33 c0		 xor	 eax, eax
  00008	39 45 0c	 cmp	 DWORD PTR _b$[ebp], eax
  0000b	0f 95 c0	 setne	 al
  0000e	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00011	89 01		 mov	 DWORD PTR [ecx], eax
  00013	c7 41 08 01 00
	00 00		 mov	 DWORD PTR [ecx+8], 1
; Line 559
  0001a	83 42 0c 10	 add	 DWORD PTR [edx+12], 16	; 00000010H
; Line 561
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
_lua_pushboolean ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_pushcclosure
_TEXT	SEGMENT
_L$ = 8							; size = 4
_fn$ = 12						; size = 4
_n$ = 16						; size = 4
_lua_pushcclosure PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 532
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
; Line 534
  00004	8b 7d 10	 mov	 edi, DWORD PTR _n$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	75 19		 jne	 SHORT $LN5@lua_pushcc
; Line 535
  0000b	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
  0000e	8b 45 0c	 mov	 eax, DWORD PTR _fn$[ebp]
  00011	5f		 pop	 edi
  00012	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00015	89 01		 mov	 DWORD PTR [ecx], eax
  00017	c7 41 08 16 00
	00 00		 mov	 DWORD PTR [ecx+8], 22	; 00000016H
; Line 551
  0001e	83 42 0c 10	 add	 DWORD PTR [edx+12], 16	; 00000010H
; Line 553
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
$LN5@lua_pushcc:
  00024	56		 push	 esi
; Line 541
  00025	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00028	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0002b	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0002f	7e 09		 jle	 SHORT $LN3@lua_pushcc
  00031	56		 push	 esi
  00032	e8 00 00 00 00	 call	 _luaC_step
  00037	83 c4 04	 add	 esp, 4
$LN3@lua_pushcc:
; Line 542
  0003a	57		 push	 edi
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 _luaF_newCclosure
; Line 543
  00041	8b 4d 0c	 mov	 ecx, DWORD PTR _fn$[ebp]
  00044	8b d0		 mov	 edx, eax
  00046	83 c4 08	 add	 esp, 8
  00049	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
; Line 544
  0004c	8b cf		 mov	 ecx, edi
  0004e	c1 e1 04	 shl	 ecx, 4
  00051	29 4e 0c	 sub	 DWORD PTR [esi+12], ecx
$LL2@lua_pushcc:
; Line 546
  00054	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00057	8d 49 f0	 lea	 ecx, DWORD PTR [ecx-16]
  0005a	f3 0f 6f 04 08	 movdqu	 xmm0, XMMWORD PTR [eax+ecx]
  0005f	f3 0f 7f 44 0a
	10		 movdqu	 XMMWORD PTR [edx+ecx+16], xmm0
  00065	4f		 dec	 edi
  00066	75 ec		 jne	 SHORT $LL2@lua_pushcc
; Line 549
  00068	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0006b	89 10		 mov	 DWORD PTR [eax], edx
  0006d	c7 40 08 66 00
	00 00		 mov	 DWORD PTR [eax+8], 102	; 00000066H
; Line 551
  00074	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
  00078	5e		 pop	 esi
  00079	5f		 pop	 edi
; Line 553
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
_lua_pushcclosure ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_pushfstring
_TEXT	SEGMENT
_L$ = 8							; size = 4
_fmt$ = 12						; size = 4
_lua_pushfstring PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 519
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 523
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000a	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0000e	7e 09		 jle	 SHORT $LN1@lua_pushfs
  00010	56		 push	 esi
  00011	e8 00 00 00 00	 call	 _luaC_step
  00016	83 c4 04	 add	 esp, 4
$LN1@lua_pushfs:
; Line 525
  00019	8d 45 10	 lea	 eax, DWORD PTR _fmt$[ebp+4]
  0001c	50		 push	 eax
  0001d	ff 75 0c	 push	 DWORD PTR _fmt$[ebp]
  00020	56		 push	 esi
  00021	e8 00 00 00 00	 call	 _luaO_pushvfstring
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH
  00029	5e		 pop	 esi
; Line 529
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
_lua_pushfstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_pushvfstring
_TEXT	SEGMENT
_L$ = 8							; size = 4
_fmt$ = 12						; size = 4
_argp$ = 16						; size = 4
_lua_pushvfstring PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 509
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 512
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000a	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0000e	7e 09		 jle	 SHORT $LN1@lua_pushvf
  00010	56		 push	 esi
  00011	e8 00 00 00 00	 call	 _luaC_step
  00016	83 c4 04	 add	 esp, 4
$LN1@lua_pushvf:
; Line 513
  00019	ff 75 10	 push	 DWORD PTR _argp$[ebp]
  0001c	ff 75 0c	 push	 DWORD PTR _fmt$[ebp]
  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 _luaO_pushvfstring
  00025	83 c4 0c	 add	 esp, 12			; 0000000cH
  00028	5e		 pop	 esi
; Line 516
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_lua_pushvfstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_pushstring
_TEXT	SEGMENT
_L$ = 8							; size = 4
_s$ = 12						; size = 4
_lua_pushstring PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 491
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
; Line 493
  00004	8b 7d 0c	 mov	 edi, DWORD PTR _s$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	75 12		 jne	 SHORT $LN3@lua_pushst
; Line 494
  0000b	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
; Line 504
  0000e	8b c7		 mov	 eax, edi
  00010	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00013	89 79 08	 mov	 DWORD PTR [ecx+8], edi
  00016	83 42 0c 10	 add	 DWORD PTR [edx+12], 16	; 00000010H
  0001a	5f		 pop	 edi
; Line 505
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
$LN3@lua_pushst:
  0001d	56		 push	 esi
; Line 497
  0001e	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00021	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00024	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00028	7e 09		 jle	 SHORT $LN1@lua_pushst
  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 _luaC_step
  00030	83 c4 04	 add	 esp, 4
$LN1@lua_pushst:
; Line 498
  00033	57		 push	 edi
  00034	56		 push	 esi
  00035	e8 00 00 00 00	 call	 _luaS_new
; Line 499
  0003a	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  0003d	83 c4 08	 add	 esp, 8
  00040	89 02		 mov	 DWORD PTR [edx], eax
  00042	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
; Line 500
  00046	83 c0 10	 add	 eax, 16			; 00000010H
  00049	83 c9 40	 or	 ecx, 64			; 00000040H
  0004c	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
; Line 502
  0004f	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
  00053	5e		 pop	 esi
  00054	5f		 pop	 edi
; Line 505
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
_lua_pushstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_pushlstring
_TEXT	SEGMENT
_L$ = 8							; size = 4
_s$ = 12						; size = 4
_len$ = 16						; size = 4
_lua_pushlstring PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 479
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 482
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0000a	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  0000e	7e 09		 jle	 SHORT $LN1@lua_pushls
  00010	56		 push	 esi
  00011	e8 00 00 00 00	 call	 _luaC_step
  00016	83 c4 04	 add	 esp, 4
$LN1@lua_pushls:
; Line 483
  00019	8b 45 10	 mov	 eax, DWORD PTR _len$[ebp]
  0001c	85 c0		 test	 eax, eax
  0001e	75 10		 jne	 SHORT $LN4@lua_pushls
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 _luaS_new
  0002b	83 c4 08	 add	 esp, 8
  0002e	eb 0d		 jmp	 SHORT $LN6@lua_pushls
$LN4@lua_pushls:
  00030	50		 push	 eax
  00031	ff 75 0c	 push	 DWORD PTR _s$[ebp]
  00034	56		 push	 esi
  00035	e8 00 00 00 00	 call	 _luaS_newlstr
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@lua_pushls:
; Line 484
  0003d	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00040	8b d0		 mov	 edx, eax
  00042	89 11		 mov	 DWORD PTR [ecx], edx
  00044	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00048	83 c8 40	 or	 eax, 64			; 00000040H
  0004b	89 41 08	 mov	 DWORD PTR [ecx+8], eax
; Line 487
  0004e	8d 42 10	 lea	 eax, DWORD PTR [edx+16]
  00051	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
  00055	5e		 pop	 esi
; Line 488
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
_lua_pushlstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_pushinteger
_TEXT	SEGMENT
_L$ = 8							; size = 4
_n$ = 12						; size = 8
_lua_pushinteger PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 466
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 468
  00003	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR _n$[ebp]
  00009	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax
  0000e	8b 45 10	 mov	 eax, DWORD PTR _n$[ebp+4]
  00011	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00014	c7 41 08 13 00
	00 00		 mov	 DWORD PTR [ecx+8], 19	; 00000013H
; Line 469
  0001b	83 42 0c 10	 add	 DWORD PTR [edx+12], 16	; 00000010H
; Line 471
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
_lua_pushinteger ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_pushnumber
_TEXT	SEGMENT
_L$ = 8							; size = 4
_n$ = 12						; size = 8
_lua_pushnumber PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 458
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 460
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00006	f2 0f 10 45 0c	 movsd	 xmm0, QWORD PTR _n$[ebp]
  0000b	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000e	f2 0f 11 00	 movsd	 QWORD PTR [eax], xmm0
  00012	c7 40 08 03 00
	00 00		 mov	 DWORD PTR [eax+8], 3
; Line 461
  00019	83 41 0c 10	 add	 DWORD PTR [ecx+12], 16	; 00000010H
; Line 463
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
_lua_pushnumber ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_pushnil
_TEXT	SEGMENT
_L$ = 8							; size = 4
_lua_pushnil PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 450
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 452
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00006	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00009	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 453
  00010	83 41 0c 10	 add	 DWORD PTR [ecx+12], 16	; 00000010H
; Line 455
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
_lua_pushnil ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_compare
_TEXT	SEGMENT
_L$ = 8							; size = 4
_index1$ = 12						; size = 4
_index2$ = 16						; size = 4
_op$ = 20						; size = 4
_lua_compare PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 318
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 322
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	ff 75 0c	 push	 DWORD PTR _index1$[ebp]
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _index2addr
; Line 323
  00011	ff 75 10	 push	 DWORD PTR _index2$[ebp]
  00014	8b f8		 mov	 edi, eax
  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 _index2addr
  0001c	83 c4 10	 add	 esp, 16			; 00000010H
  0001f	8b c8		 mov	 ecx, eax
; Line 324
  00021	81 ff 00 00 00
	00		 cmp	 edi, OFFSET _luaO_nilobject_
  00027	74 43		 je	 SHORT $LN11@lua_compar
  00029	81 f9 00 00 00
	00		 cmp	 ecx, OFFSET _luaO_nilobject_
  0002f	74 3b		 je	 SHORT $LN11@lua_compar
; Line 325
  00031	8b 45 14	 mov	 eax, DWORD PTR _op$[ebp]
  00034	83 e8 00	 sub	 eax, 0
  00037	74 24		 je	 SHORT $LN4@lua_compar
  00039	48		 dec	 eax
  0003a	74 12		 je	 SHORT $LN3@lua_compar
  0003c	48		 dec	 eax
  0003d	75 2d		 jne	 SHORT $LN11@lua_compar
; Line 328
  0003f	51		 push	 ecx
  00040	57		 push	 edi
  00041	56		 push	 esi
  00042	e8 00 00 00 00	 call	 _luaV_lessequal
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
; Line 334
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
$LN3@lua_compar:
; Line 327
  0004e	51		 push	 ecx
  0004f	57		 push	 edi
  00050	56		 push	 esi
  00051	e8 00 00 00 00	 call	 _luaV_lessthan
  00056	83 c4 0c	 add	 esp, 12			; 0000000cH
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
; Line 334
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
$LN4@lua_compar:
; Line 326
  0005d	51		 push	 ecx
  0005e	57		 push	 edi
  0005f	56		 push	 esi
  00060	e8 00 00 00 00	 call	 _luaV_equalobj
  00065	83 c4 0c	 add	 esp, 12			; 0000000cH
  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
; Line 334
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
$LN11@lua_compar:
  0006c	5f		 pop	 edi
; Line 333
  0006d	33 c0		 xor	 eax, eax
  0006f	5e		 pop	 esi
; Line 334
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
_lua_compare ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_rawequal
_TEXT	SEGMENT
_L$ = 8							; size = 4
_index1$ = 12						; size = 4
_index2$ = 16						; size = 4
_lua_rawequal PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 295
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
; Line 296
  00004	ff 75 0c	 push	 DWORD PTR _index1$[ebp]
  00007	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000a	e8 00 00 00 00	 call	 _index2addr
; Line 297
  0000f	ff 75 10	 push	 DWORD PTR _index2$[ebp]
  00012	8b f8		 mov	 edi, eax
  00014	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00017	e8 00 00 00 00	 call	 _index2addr
  0001c	83 c4 10	 add	 esp, 16			; 00000010H
; Line 298
  0001f	81 ff 00 00 00
	00		 cmp	 edi, OFFSET _luaO_nilobject_
  00025	74 16		 je	 SHORT $LN3@lua_rawequ
  00027	3d 00 00 00 00	 cmp	 eax, OFFSET _luaO_nilobject_
  0002c	74 0f		 je	 SHORT $LN3@lua_rawequ
  0002e	50		 push	 eax
  0002f	57		 push	 edi
  00030	6a 00		 push	 0
  00032	e8 00 00 00 00	 call	 _luaV_equalobj
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003a	5f		 pop	 edi
; Line 299
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
$LN3@lua_rawequ:
; Line 298
  0003d	33 c0		 xor	 eax, eax
  0003f	5f		 pop	 edi
; Line 299
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
_lua_rawequal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_arith
_TEXT	SEGMENT
_L$ = 8							; size = 4
_op$ = 12						; size = 4
_lua_arith PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 302
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 304
  00003	8b 55 0c	 mov	 edx, DWORD PTR _op$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	83 fa 0c	 cmp	 edx, 12			; 0000000cH
  0000d	74 05		 je	 SHORT $LN2@lua_arith
  0000f	83 fa 0d	 cmp	 edx, 13			; 0000000dH
  00012	75 10		 jne	 SHORT $LN1@lua_arith
$LN2@lua_arith:
; Line 308
  00014	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00017	f3 0f 6f 40 f0	 movdqu	 xmm0, XMMWORD PTR [eax-16]
  0001c	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
; Line 309
  00020	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
$LN1@lua_arith:
; Line 312
  00024	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00027	8d 48 e0	 lea	 ecx, DWORD PTR [eax-32]
  0002a	83 c0 f0	 add	 eax, -16		; fffffff0H
  0002d	51		 push	 ecx
  0002e	50		 push	 eax
  0002f	51		 push	 ecx
  00030	52		 push	 edx
  00031	56		 push	 esi
  00032	e8 00 00 00 00	 call	 _luaO_arith
  00037	83 c4 14	 add	 esp, 20			; 00000014H
; Line 313
  0003a	83 46 0c f0	 add	 DWORD PTR [esi+12], -16	; fffffff0H
  0003e	5e		 pop	 esi
; Line 315
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
_lua_arith ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_topointer
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_topointer PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 429
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 430
  00003	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _index2addr
  0000e	83 c4 08	 add	 esp, 8
; Line 431
  00011	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00014	83 e1 3f	 and	 ecx, 63			; 0000003fH
  00017	83 c1 fe	 add	 ecx, -2			; fffffffeH
  0001a	83 f9 24	 cmp	 ecx, 36			; 00000024H
  0001d	77 19		 ja	 SHORT $LN1@lua_topoin
  0001f	0f b6 89 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN13@lua_topoin[ecx]
  00026	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN15@lua_topoin[ecx*4]
$LN8@lua_topoin:
; Line 432
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 441
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
$LN3@lua_topoin:
; Line 437
  00031	8b 00		 mov	 eax, DWORD PTR [eax]
  00033	83 c0 18	 add	 eax, 24			; 00000018H
; Line 441
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
$LN1@lua_topoin:
; Line 439
  00038	33 c0		 xor	 eax, eax
; Line 441
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
$LN15@lua_topoin:
  0003c	00 00 00 00	 DD	 $LN8@lua_topoin
  00040	00 00 00 00	 DD	 $LN3@lua_topoin
  00044	00 00 00 00	 DD	 $LN1@lua_topoin
$LN13@lua_topoin:
  00048	00		 DB	 0
  00049	02		 DB	 2
  0004a	02		 DB	 2
  0004b	00		 DB	 0
  0004c	00		 DB	 0
  0004d	01		 DB	 1
  0004e	00		 DB	 0
  0004f	02		 DB	 2
  00050	02		 DB	 2
  00051	02		 DB	 2
  00052	02		 DB	 2
  00053	02		 DB	 2
  00054	02		 DB	 2
  00055	02		 DB	 2
  00056	02		 DB	 2
  00057	02		 DB	 2
  00058	02		 DB	 2
  00059	02		 DB	 2
  0005a	02		 DB	 2
  0005b	02		 DB	 2
  0005c	00		 DB	 0
  0005d	02		 DB	 2
  0005e	02		 DB	 2
  0005f	02		 DB	 2
  00060	02		 DB	 2
  00061	02		 DB	 2
  00062	02		 DB	 2
  00063	02		 DB	 2
  00064	02		 DB	 2
  00065	02		 DB	 2
  00066	02		 DB	 2
  00067	02		 DB	 2
  00068	02		 DB	 2
  00069	02		 DB	 2
  0006a	02		 DB	 2
  0006b	02		 DB	 2
  0006c	00		 DB	 0
_lua_topointer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_tothread
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_tothread PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 423
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 424
  00003	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _index2addr
  0000e	83 c4 08	 add	 esp, 8
; Line 425
  00011	83 78 08 48	 cmp	 DWORD PTR [eax+8], 72	; 00000048H
  00015	74 04		 je	 SHORT $LN3@lua_tothre
  00017	33 c0		 xor	 eax, eax
; Line 426
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
$LN3@lua_tothre:
; Line 425
  0001b	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 426
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
_lua_tothread ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_touserdata
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_touserdata PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 413
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 414
  00003	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _index2addr
  0000e	83 c4 08	 add	 esp, 8
; Line 415
  00011	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00014	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00017	83 e9 02	 sub	 ecx, 2
  0001a	74 10		 je	 SHORT $LN2@lua_touser
  0001c	83 e9 05	 sub	 ecx, 5
  0001f	74 04		 je	 SHORT $LN3@lua_touser
; Line 418
  00021	33 c0		 xor	 eax, eax
; Line 420
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
$LN3@lua_touser:
; Line 416
  00025	8b 00		 mov	 eax, DWORD PTR [eax]
  00027	83 c0 18	 add	 eax, 24			; 00000018H
; Line 420
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
$LN2@lua_touser:
; Line 417
  0002c	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 420
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
_lua_touserdata ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_tocfunction
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_tocfunction PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 404
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 405
  00003	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _index2addr
  0000e	83 c4 08	 add	 esp, 8
; Line 406
  00011	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00014	83 f9 16	 cmp	 ecx, 22			; 00000016H
  00017	75 04		 jne	 SHORT $LN4@lua_tocfun
  00019	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 410
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
$LN4@lua_tocfun:
; Line 407
  0001d	83 f9 66	 cmp	 ecx, 102		; 00000066H
  00020	75 07		 jne	 SHORT $LN2@lua_tocfun
; Line 408
  00022	8b 00		 mov	 eax, DWORD PTR [eax]
  00024	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
; Line 410
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN2@lua_tocfun:
; Line 409
  00029	33 c0		 xor	 eax, eax
; Line 410
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
_lua_tocfunction ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_rawlen
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_rawlen PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 392
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 393
  00003	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _index2addr
  0000e	83 c4 08	 add	 esp, 8
; Line 394
  00011	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00014	83 e1 3f	 and	 ecx, 63			; 0000003fH
  00017	83 c1 fc	 add	 ecx, -4			; fffffffcH
  0001a	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0001d	77 29		 ja	 SHORT $LN1@lua_rawlen
  0001f	0f b6 89 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN10@lua_rawlen[ecx]
  00026	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN12@lua_rawlen[ecx*4]
$LN5@lua_rawlen:
; Line 395
  0002d	8b 00		 mov	 eax, DWORD PTR [eax]
  0002f	0f b6 40 07	 movzx	 eax, BYTE PTR [eax+7]
; Line 401
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
$LN4@lua_rawlen:
; Line 396
  00035	8b 00		 mov	 eax, DWORD PTR [eax]
  00037	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
; Line 401
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
$LN2@lua_rawlen:
; Line 398
  0003c	ff 30		 push	 DWORD PTR [eax]
  0003e	e8 00 00 00 00	 call	 _luaH_getn
  00043	83 c4 04	 add	 esp, 4
; Line 401
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
$LN1@lua_rawlen:
; Line 399
  00048	33 c0		 xor	 eax, eax
; Line 401
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
$LN12@lua_rawlen:
  0004c	00 00 00 00	 DD	 $LN5@lua_rawlen
  00050	00 00 00 00	 DD	 $LN2@lua_rawlen
  00054	00 00 00 00	 DD	 $LN4@lua_rawlen
  00058	00 00 00 00	 DD	 $LN1@lua_rawlen
$LN10@lua_rawlen:
  0005c	00		 DB	 0
  0005d	01		 DB	 1
  0005e	03		 DB	 3
  0005f	02		 DB	 2
  00060	03		 DB	 3
  00061	03		 DB	 3
  00062	03		 DB	 3
  00063	03		 DB	 3
  00064	03		 DB	 3
  00065	03		 DB	 3
  00066	03		 DB	 3
  00067	03		 DB	 3
  00068	03		 DB	 3
  00069	03		 DB	 3
  0006a	03		 DB	 3
  0006b	03		 DB	 3
  0006c	02		 DB	 2
_lua_rawlen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_tolstring
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_len$ = 16						; size = 4
_lua_tolstring PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 373
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 374
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  0000b	56		 push	 esi
  0000c	e8 00 00 00 00	 call	 _index2addr
  00011	8b f8		 mov	 edi, eax
  00013	83 c4 08	 add	 esp, 8
; Line 375
  00016	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00019	83 e0 0f	 and	 eax, 15			; 0000000fH
  0001c	83 f8 04	 cmp	 eax, 4
  0001f	74 3f		 je	 SHORT $LN5@lua_tolstr
; Line 376
  00021	83 f8 03	 cmp	 eax, 3
  00024	74 13		 je	 SHORT $LN4@lua_tolstr
; Line 377
  00026	8b 45 10	 mov	 eax, DWORD PTR _len$[ebp]
  00029	85 c0		 test	 eax, eax
  0002b	74 06		 je	 SHORT $LN3@lua_tolstr
  0002d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN3@lua_tolstr:
  00033	5f		 pop	 edi
; Line 378
  00034	33 c0		 xor	 eax, eax
  00036	5e		 pop	 esi
; Line 389
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
$LN4@lua_tolstr:
; Line 381
  00039	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0003c	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00040	7e 09		 jle	 SHORT $LN2@lua_tolstr
  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 _luaC_step
  00048	83 c4 04	 add	 esp, 4
$LN2@lua_tolstr:
; Line 382
  0004b	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  0004e	56		 push	 esi
  0004f	e8 00 00 00 00	 call	 _index2addr
  00054	8b f8		 mov	 edi, eax
; Line 383
  00056	57		 push	 edi
  00057	56		 push	 esi
  00058	e8 00 00 00 00	 call	 _luaO_tostring
  0005d	83 c4 10	 add	 esp, 16			; 00000010H
$LN5@lua_tolstr:
; Line 386
  00060	8b 4d 10	 mov	 ecx, DWORD PTR _len$[ebp]
  00063	85 c9		 test	 ecx, ecx
  00065	74 1c		 je	 SHORT $LN1@lua_tolstr
; Line 387
  00067	8b 07		 mov	 eax, DWORD PTR [edi]
  00069	80 78 04 04	 cmp	 BYTE PTR [eax+4], 4
  0006d	75 0f		 jne	 SHORT $LN8@lua_tolstr
  0006f	0f b6 40 07	 movzx	 eax, BYTE PTR [eax+7]
  00073	89 01		 mov	 DWORD PTR [ecx], eax
; Line 388
  00075	8b 07		 mov	 eax, DWORD PTR [edi]
  00077	5f		 pop	 edi
  00078	83 c0 10	 add	 eax, 16			; 00000010H
  0007b	5e		 pop	 esi
; Line 389
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
$LN8@lua_tolstr:
; Line 387
  0007e	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00081	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@lua_tolstr:
; Line 388
  00083	8b 07		 mov	 eax, DWORD PTR [edi]
  00085	5f		 pop	 edi
  00086	83 c0 10	 add	 eax, 16			; 00000010H
  00089	5e		 pop	 esi
; Line 389
  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
_lua_tolstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_toboolean
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_toboolean PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 367
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 368
  00003	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _index2addr
  0000e	83 c4 08	 add	 esp, 8
; Line 369
  00011	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00014	85 c9		 test	 ecx, ecx
  00016	74 11		 je	 SHORT $LN4@lua_tobool
  00018	83 f9 01	 cmp	 ecx, 1
  0001b	75 05		 jne	 SHORT $LN3@lua_tobool
  0001d	83 38 00	 cmp	 DWORD PTR [eax], 0
  00020	74 07		 je	 SHORT $LN4@lua_tobool
$LN3@lua_tobool:
  00022	b8 01 00 00 00	 mov	 eax, 1
; Line 370
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN4@lua_tobool:
; Line 369
  00029	33 c0		 xor	 eax, eax
; Line 370
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
_lua_toboolean ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_tointegerx
_TEXT	SEGMENT
_res$ = -8						; size = 8
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_pisnum$ = 16						; size = 4
_lua_tointegerx PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 356
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
; Line 358
  00006	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00009	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000c	e8 00 00 00 00	 call	 _index2addr
  00011	8b c8		 mov	 ecx, eax
  00013	83 c4 08	 add	 esp, 8
; Line 359
  00016	83 79 08 13	 cmp	 DWORD PTR [ecx+8], 19	; 00000013H
  0001a	75 0f		 jne	 SHORT $LN5@lua_tointe
  0001c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001e	89 45 f8	 mov	 DWORD PTR _res$[ebp], eax
  00021	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00024	b9 01 00 00 00	 mov	 ecx, 1
  00029	eb 23		 jmp	 SHORT $LN2@lua_tointe
$LN5@lua_tointe:
  0002b	6a 00		 push	 0
  0002d	8d 45 f8	 lea	 eax, DWORD PTR _res$[ebp]
  00030	50		 push	 eax
  00031	51		 push	 ecx
  00032	e8 00 00 00 00	 call	 _luaV_tointeger
  00037	8b c8		 mov	 ecx, eax
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 360
  0003c	85 c9		 test	 ecx, ecx
  0003e	75 08		 jne	 SHORT $LN8@lua_tointe
; Line 361
  00040	0f 57 c0	 xorps	 xmm0, xmm0
  00043	66 0f 13 45 f8	 movlpd	 QWORD PTR _res$[ebp], xmm0
$LN8@lua_tointe:
  00048	8b 45 f8	 mov	 eax, DWORD PTR _res$[ebp]
  0004b	8b 55 fc	 mov	 edx, DWORD PTR _res$[ebp+4]
$LN2@lua_tointe:
; Line 362
  0004e	56		 push	 esi
  0004f	8b 75 10	 mov	 esi, DWORD PTR _pisnum$[ebp]
  00052	85 f6		 test	 esi, esi
  00054	74 02		 je	 SHORT $LN1@lua_tointe
  00056	89 0e		 mov	 DWORD PTR [esi], ecx
$LN1@lua_tointe:
  00058	5e		 pop	 esi
; Line 364
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
_lua_tointegerx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_tonumberx
_TEXT	SEGMENT
_n$ = -8						; size = 8
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_pisnum$ = 16						; size = 4
_lua_tonumberx PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 345
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
; Line 347
  00006	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00009	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000c	e8 00 00 00 00	 call	 _index2addr
  00011	83 c4 08	 add	 esp, 8
; Line 348
  00014	83 78 08 03	 cmp	 DWORD PTR [eax+8], 3
  00018	75 0b		 jne	 SHORT $LN5@lua_tonumb
  0001a	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  0001e	b8 01 00 00 00	 mov	 eax, 1
  00023	eb 14		 jmp	 SHORT $LN8@lua_tonumb
$LN5@lua_tonumb:
  00025	8d 4d f8	 lea	 ecx, DWORD PTR _n$[ebp]
  00028	51		 push	 ecx
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 _luaV_tonumber_
  0002f	83 c4 08	 add	 esp, 8
; Line 349
  00032	85 c0		 test	 eax, eax
  00034	75 08		 jne	 SHORT $LN2@lua_tonumb
  00036	0f 57 c0	 xorps	 xmm0, xmm0
$LN8@lua_tonumb:
; Line 350
  00039	f2 0f 11 45 f8	 movsd	 QWORD PTR _n$[ebp], xmm0
$LN2@lua_tonumb:
; Line 351
  0003e	8b 4d 10	 mov	 ecx, DWORD PTR _pisnum$[ebp]
; Line 352
  00041	dd 45 f8	 fld	 QWORD PTR _n$[ebp]
  00044	85 c9		 test	 ecx, ecx
  00046	74 02		 je	 SHORT $LN1@lua_tonumb
; Line 351
  00048	89 01		 mov	 DWORD PTR [ecx], eax
$LN1@lua_tonumb:
; Line 353
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
_lua_tonumberx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_typename
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
_lua_typename PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 257
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 260
  00003	8b 45 0c	 mov	 eax, DWORD PTR _t$[ebp]
  00006	8b 04 85 04 00
	00 00		 mov	 eax, DWORD PTR _luaT_typenames_[eax*4+4]
; Line 261
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
_lua_typename ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_type
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_type PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 251
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 252
  00003	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _index2addr
  0000e	83 c4 08	 add	 esp, 8
; Line 253
  00011	3d 00 00 00 00	 cmp	 eax, OFFSET _luaO_nilobject_
  00016	74 08		 je	 SHORT $LN3@lua_type
  00018	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001b	83 e0 0f	 and	 eax, 15			; 0000000fH
; Line 254
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
$LN3@lua_type:
; Line 253
  00020	83 c8 ff	 or	 eax, -1
; Line 254
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
_lua_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_isuserdata
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_isuserdata PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 289
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 290
  00003	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _index2addr
  0000e	83 c4 08	 add	 esp, 8
; Line 291
  00011	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00014	83 f8 47	 cmp	 eax, 71			; 00000047H
  00017	74 09		 je	 SHORT $LN3@lua_isuser
  00019	83 f8 02	 cmp	 eax, 2
  0001c	74 04		 je	 SHORT $LN3@lua_isuser
  0001e	33 c0		 xor	 eax, eax
; Line 292
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
$LN3@lua_isuser:
; Line 291
  00022	b8 01 00 00 00	 mov	 eax, 1
; Line 292
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
_lua_isuserdata ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_isinteger
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_isinteger PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 270
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 271
  00003	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _index2addr
; Line 272
  0000e	33 c9		 xor	 ecx, ecx
  00010	83 c4 08	 add	 esp, 8
  00013	83 78 08 13	 cmp	 DWORD PTR [eax+8], 19	; 00000013H
  00017	0f 94 c1	 sete	 cl
  0001a	8b c1		 mov	 eax, ecx
; Line 273
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
_lua_isinteger ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_iscfunction
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_iscfunction PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 264
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 265
  00003	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _index2addr
  0000e	83 c4 08	 add	 esp, 8
; Line 266
  00011	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00014	83 f8 16	 cmp	 eax, 22			; 00000016H
  00017	74 09		 je	 SHORT $LN3@lua_iscfun
  00019	83 f8 66	 cmp	 eax, 102		; 00000066H
  0001c	74 04		 je	 SHORT $LN3@lua_iscfun
  0001e	33 c0		 xor	 eax, eax
; Line 267
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
$LN3@lua_iscfun:
; Line 266
  00022	b8 01 00 00 00	 mov	 eax, 1
; Line 267
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
_lua_iscfunction ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_isstring
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_isstring PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 283
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 284
  00003	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00006	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00009	e8 00 00 00 00	 call	 _index2addr
  0000e	83 c4 08	 add	 esp, 8
; Line 285
  00011	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00014	83 e0 0f	 and	 eax, 15			; 0000000fH
  00017	83 f8 04	 cmp	 eax, 4
  0001a	74 09		 je	 SHORT $LN3@lua_isstri
  0001c	83 f8 03	 cmp	 eax, 3
  0001f	74 04		 je	 SHORT $LN3@lua_isstri
  00021	33 c0		 xor	 eax, eax
; Line 286
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
$LN3@lua_isstri:
; Line 285
  00025	b8 01 00 00 00	 mov	 eax, 1
; Line 286
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
_lua_isstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_isnumber
_TEXT	SEGMENT
_n$ = -8						; size = 8
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_isnumber PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 276
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
; Line 278
  00006	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00009	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000c	e8 00 00 00 00	 call	 _index2addr
  00011	83 c4 08	 add	 esp, 8
; Line 279
  00014	83 78 08 03	 cmp	 DWORD PTR [eax+8], 3
  00018	75 09		 jne	 SHORT $LN3@lua_isnumb
  0001a	b8 01 00 00 00	 mov	 eax, 1
; Line 280
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
$LN3@lua_isnumb:
; Line 279
  00023	8d 4d f8	 lea	 ecx, DWORD PTR _n$[ebp]
  00026	51		 push	 ecx
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _luaV_tonumber_
  0002d	83 c4 08	 add	 esp, 8
; Line 280
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
_lua_isnumber ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_xmove
_TEXT	SEGMENT
_from$ = 8						; size = 4
_to$ = 12						; size = 4
_n$ = 16						; size = 4
_lua_xmove PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 118
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 120
  00003	8b 55 0c	 mov	 edx, DWORD PTR _to$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _from$[ebp]
  0000a	3b da		 cmp	 ebx, edx
  0000c	74 31		 je	 SHORT $LN1@lua_xmove
; Line 125
  0000e	57		 push	 edi
  0000f	8b 7d 10	 mov	 edi, DWORD PTR _n$[ebp]
  00012	8b c7		 mov	 eax, edi
  00014	f7 d8		 neg	 eax
  00016	c1 e0 04	 shl	 eax, 4
  00019	01 43 0c	 add	 DWORD PTR [ebx+12], eax
; Line 126
  0001c	85 ff		 test	 edi, edi
  0001e	7e 1e		 jle	 SHORT $LN11@lua_xmove
; Line 125
  00020	56		 push	 esi
  00021	33 f6		 xor	 esi, esi
$LL3@lua_xmove:
; Line 126
  00023	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  00026	8d 76 10	 lea	 esi, DWORD PTR [esi+16]
; Line 127
  00029	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0002c	f3 0f 6f 44 31
	f0		 movdqu	 xmm0, XMMWORD PTR [ecx+esi-16]
  00032	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
; Line 128
  00036	83 42 0c 10	 add	 DWORD PTR [edx+12], 16	; 00000010H
  0003a	4f		 dec	 edi
  0003b	75 e6		 jne	 SHORT $LL3@lua_xmove
  0003d	5e		 pop	 esi
$LN11@lua_xmove:
  0003e	5f		 pop	 edi
$LN1@lua_xmove:
  0003f	5b		 pop	 ebx
; Line 131
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
_lua_xmove ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_checkstack
_TEXT	SEGMENT
_L$ = 8							; size = 4
_n$ = 12						; size = 4
_lua_checkstack PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 97
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 102
  00003	8b 55 0c	 mov	 edx, DWORD PTR _n$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	57		 push	 edi
  0000b	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  0000e	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00011	2b c1		 sub	 eax, ecx
  00013	8b 7e 14	 mov	 edi, DWORD PTR [esi+20]
  00016	c1 f8 04	 sar	 eax, 4
  00019	3b c2		 cmp	 eax, edx
  0001b	7e 07		 jle	 SHORT $LN5@lua_checks
; Line 103
  0001d	b8 01 00 00 00	 mov	 eax, 1
; Line 104
  00022	eb 36		 jmp	 SHORT $LN8@lua_checks
$LN5@lua_checks:
; Line 105
  00024	2b 4e 20	 sub	 ecx, DWORD PTR [esi+32]
; Line 106
  00027	b8 40 42 0f 00	 mov	 eax, 1000000		; 000f4240H
  0002c	c1 f9 04	 sar	 ecx, 4
  0002f	2b c2		 sub	 eax, edx
  00031	83 c1 05	 add	 ecx, 5
  00034	3b c8		 cmp	 ecx, eax
  00036	7e 06		 jle	 SHORT $LN3@lua_checks
; Line 114
  00038	5f		 pop	 edi
  00039	33 c0		 xor	 eax, eax
  0003b	5e		 pop	 esi
; Line 115
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
$LN3@lua_checks:
; Line 109
  0003e	8d 45 0c	 lea	 eax, DWORD PTR _n$[ebp]
  00041	50		 push	 eax
  00042	68 00 00 00 00	 push	 OFFSET _growstack
  00047	56		 push	 esi
  00048	e8 00 00 00 00	 call	 _luaD_rawrunprotected
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00050	f7 d8		 neg	 eax
  00052	1b c0		 sbb	 eax, eax
  00054	40		 inc	 eax
; Line 111
  00055	74 13		 je	 SHORT $LN1@lua_checks
  00057	8b 55 0c	 mov	 edx, DWORD PTR _n$[ebp]
$LN8@lua_checks:
  0005a	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0005d	c1 e2 04	 shl	 edx, 4
  00060	03 ca		 add	 ecx, edx
  00062	39 4f 04	 cmp	 DWORD PTR [edi+4], ecx
  00065	73 03		 jae	 SHORT $LN1@lua_checks
; Line 112
  00067	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
$LN1@lua_checks:
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
; Line 115
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
_lua_checkstack ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_copy
_TEXT	SEGMENT
_L$ = 8							; size = 4
_fromidx$ = 12						; size = 4
_toidx$ = 16						; size = 4
_lua_copy PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 222
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	57		 push	 edi
; Line 225
  00005	ff 75 0c	 push	 DWORD PTR _fromidx$[ebp]
  00008	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0000b	57		 push	 edi
  0000c	e8 00 00 00 00	 call	 _index2addr
; Line 226
  00011	ff 75 10	 push	 DWORD PTR _toidx$[ebp]
  00014	8b d8		 mov	 ebx, eax
  00016	57		 push	 edi
  00017	e8 00 00 00 00	 call	 _index2addr
; Line 228
  0001c	f3 0f 6f 03	 movdqu	 xmm0, XMMWORD PTR [ebx]
  00020	83 c4 10	 add	 esp, 16			; 00000010H
; Line 229
  00023	81 7d 10 d8 b9
	f0 ff		 cmp	 DWORD PTR _toidx$[ebp], -1001000 ; fff0b9d8H
  0002a	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
  0002e	7d 26		 jge	 SHORT $LN4@lua_copy
; Line 230
  00030	f6 43 08 40	 test	 BYTE PTR [ebx+8], 64	; 00000040H
  00034	74 20		 je	 SHORT $LN4@lua_copy
  00036	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	f6 41 05 04	 test	 BYTE PTR [ecx+5], 4
  00041	74 13		 je	 SHORT $LN4@lua_copy
  00043	8b 03		 mov	 eax, DWORD PTR [ebx]
  00045	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00049	74 0b		 je	 SHORT $LN4@lua_copy
  0004b	50		 push	 eax
  0004c	51		 push	 ecx
  0004d	57		 push	 edi
  0004e	e8 00 00 00 00	 call	 _luaC_barrier_
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@lua_copy:
  00056	5f		 pop	 edi
  00057	5b		 pop	 ebx
; Line 234
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
_lua_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_rotate
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_n$ = 16						; size = 4
_lua_rotate PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 207
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 210
  00003	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
; Line 211
  00008	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  0000b	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  0000e	50		 push	 eax
  0000f	83 ee 10	 sub	 esi, 16			; 00000010H
  00012	e8 00 00 00 00	 call	 _index2addr
  00017	8b c8		 mov	 ecx, eax
  00019	83 c4 08	 add	 esp, 8
; Line 214
  0001c	8b 45 10	 mov	 eax, DWORD PTR _n$[ebp]
  0001f	85 c0		 test	 eax, eax
  00021	78 04		 js	 SHORT $LN3@lua_rotate
  00023	8b fe		 mov	 edi, esi
  00025	eb 03		 jmp	 SHORT $LN32@lua_rotate
$LN3@lua_rotate:
  00027	40		 inc	 eax
  00028	8b f9		 mov	 edi, ecx
$LN32@lua_rotate:
  0002a	c1 e0 04	 shl	 eax, 4
; Line 215
  0002d	8b d1		 mov	 edx, ecx
  0002f	2b f8		 sub	 edi, eax
  00031	8b c7		 mov	 eax, edi
  00033	3b cf		 cmp	 ecx, edi
  00035	73 23		 jae	 SHORT $LN5@lua_rotate
  00037	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL7@lua_rotate:
  00040	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00044	f3 0f 6f 0a	 movdqu	 xmm1, XMMWORD PTR [edx]
  00048	f3 0f 7f 02	 movdqu	 XMMWORD PTR [edx], xmm0
  0004c	83 c2 10	 add	 edx, 16			; 00000010H
  0004f	f3 0f 7f 08	 movdqu	 XMMWORD PTR [eax], xmm1
  00053	83 e8 10	 sub	 eax, 16			; 00000010H
  00056	3b d0		 cmp	 edx, eax
  00058	72 e6		 jb	 SHORT $LL7@lua_rotate
$LN5@lua_rotate:
; Line 216
  0005a	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  0005d	8b d6		 mov	 edx, esi
  0005f	3b c6		 cmp	 eax, esi
  00061	73 1a		 jae	 SHORT $LN10@lua_rotate
$LL12@lua_rotate:
  00063	f3 0f 6f 02	 movdqu	 xmm0, XMMWORD PTR [edx]
  00067	f3 0f 6f 08	 movdqu	 xmm1, XMMWORD PTR [eax]
  0006b	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
  0006f	83 c0 10	 add	 eax, 16			; 00000010H
  00072	f3 0f 7f 0a	 movdqu	 XMMWORD PTR [edx], xmm1
  00076	83 ea 10	 sub	 edx, 16			; 00000010H
  00079	3b c2		 cmp	 eax, edx
  0007b	72 e6		 jb	 SHORT $LL12@lua_rotate
$LN10@lua_rotate:
; Line 217
  0007d	3b ce		 cmp	 ecx, esi
  0007f	73 1a		 jae	 SHORT $LN15@lua_rotate
$LL17@lua_rotate:
  00081	f3 0f 6f 06	 movdqu	 xmm0, XMMWORD PTR [esi]
  00085	f3 0f 6f 09	 movdqu	 xmm1, XMMWORD PTR [ecx]
  00089	f3 0f 7f 01	 movdqu	 XMMWORD PTR [ecx], xmm0
  0008d	83 c1 10	 add	 ecx, 16			; 00000010H
  00090	f3 0f 7f 0e	 movdqu	 XMMWORD PTR [esi], xmm1
  00094	83 ee 10	 sub	 esi, 16			; 00000010H
  00097	3b ce		 cmp	 ecx, esi
  00099	72 e6		 jb	 SHORT $LL17@lua_rotate
$LN15@lua_rotate:
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
; Line 219
  0009d	5d		 pop	 ebp
  0009e	c3		 ret	 0
_lua_rotate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_pushvalue
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_pushvalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 237
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 239
  00004	ff 75 0c	 push	 DWORD PTR _idx$[ebp]
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	56		 push	 esi
  0000b	e8 00 00 00 00	 call	 _index2addr
  00010	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00013	83 c4 08	 add	 esp, 8
  00016	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  0001a	f3 0f 7f 01	 movdqu	 XMMWORD PTR [ecx], xmm0
; Line 240
  0001e	83 46 0c 10	 add	 DWORD PTR [esi+12], 16	; 00000010H
  00022	5e		 pop	 esi
; Line 242
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
_lua_pushvalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_settop
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_settop PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 172
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 173
  00003	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00006	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00009	8b 11		 mov	 edx, DWORD PTR [ecx]
; Line 175
  0000b	8b 4d 0c	 mov	 ecx, DWORD PTR _idx$[ebp]
  0000e	85 c9		 test	 ecx, ecx
  00010	78 26		 js	 SHORT $LN4@lua_settop
; Line 177
  00012	41		 inc	 ecx
  00013	c1 e1 04	 shl	 ecx, 4
  00016	03 d1		 add	 edx, ecx
  00018	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  0001b	73 16		 jae	 SHORT $LN2@lua_settop
  0001d	8d 49 00	 npad	 3
$LL3@lua_settop:
; Line 178
  00020	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00023	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  0002a	83 40 0c 10	 add	 DWORD PTR [eax+12], 16	; 00000010H
  0002e	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00031	72 ed		 jb	 SHORT $LL3@lua_settop
$LN2@lua_settop:
; Line 179
  00033	89 50 0c	 mov	 DWORD PTR [eax+12], edx
; Line 186
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
$LN4@lua_settop:
; Line 183
  00038	c1 e1 04	 shl	 ecx, 4
  0003b	83 c1 10	 add	 ecx, 16			; 00000010H
  0003e	01 48 0c	 add	 DWORD PTR [eax+12], ecx
; Line 186
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
_lua_settop ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_gettop
_TEXT	SEGMENT
_L$ = 8							; size = 4
_lua_gettop PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 167
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 168
  00003	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00006	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00009	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000c	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000e	83 e8 10	 sub	 eax, 16			; 00000010H
  00011	c1 f8 04	 sar	 eax, 4
; Line 169
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
_lua_gettop ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_absindex
_TEXT	SEGMENT
_L$ = 8							; size = 4
_idx$ = 12						; size = 4
_lua_absindex PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 160
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 163
  00003	8b 55 0c	 mov	 edx, DWORD PTR _idx$[ebp]
  00006	8d 82 27 46 0f
	00		 lea	 eax, DWORD PTR [edx+1000999]
  0000c	3d 27 46 0f 00	 cmp	 eax, 1000999		; 000f4627H
  00011	77 12		 ja	 SHORT $LN3@lua_absind
  00013	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00016	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00019	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0001c	2b 01		 sub	 eax, DWORD PTR [ecx]
  0001e	c1 f8 04	 sar	 eax, 4
  00021	03 c2		 add	 eax, edx
; Line 164
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
$LN3@lua_absind:
; Line 163
  00025	8b c2		 mov	 eax, edx
; Line 164
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
_lua_absindex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_version
_TEXT	SEGMENT
_L$ = 8							; size = 4
_lua_version PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 144
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 146
  00003	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	75 07		 jne	 SHORT $LN2@lua_versio
  0000a	b8 00 00 00 00	 mov	 eax, OFFSET ?version@?1??lua_version@@9@9
; Line 148
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
$LN2@lua_versio:
; Line 147
  00011	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00014	8b 80 80 00 00
	00		 mov	 eax, DWORD PTR [eax+128]
; Line 148
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
_lua_version ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _lua_atpanic
_TEXT	SEGMENT
_L$ = 8							; size = 4
_panicf$ = 12						; size = 4
_lua_atpanic PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 134
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 137
  00003	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
; Line 138
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR _panicf$[ebp]
  00009	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0000c	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  0000f	89 4a 78	 mov	 DWORD PTR [edx+120], ecx
; Line 141
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
_lua_atpanic ENDP
_TEXT	ENDS
END
