; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_luaS_hash
PUBLIC	_luaS_hashlongstr
PUBLIC	_luaS_eqlngstr
PUBLIC	_luaS_resize
PUBLIC	_luaS_clearcache
PUBLIC	_luaS_init
PUBLIC	_luaS_remove
PUBLIC	_luaS_newudata
PUBLIC	_luaS_newlstr
PUBLIC	_luaS_new
PUBLIC	_luaS_createlngstrobj
PUBLIC	??_C@_0BC@ENOOLCNF@not?5enough?5memory?$AA@	; `string'
EXTRN	_luaM_toobig:PROC
EXTRN	_luaM_realloc_:PROC
EXTRN	_luaC_fix:PROC
EXTRN	_luaC_newobj:PROC
EXTRN	_memcpy:PROC
EXTRN	_luaO_nilobject_:BYTE
;	COMDAT ??_C@_0BC@ENOOLCNF@not?5enough?5memory?$AA@
CONST	SEGMENT
??_C@_0BC@ENOOLCNF@not?5enough?5memory?$AA@ DB 'not enough memory', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT _internshrstr
_TEXT	SEGMENT
tv335 = -12						; size = 4
_list$1$ = -8						; size = 4
_g$1$ = -4						; size = 4
_L$ = 8							; size = 4
_str$ = 12						; size = 4
_l$ = 16						; size = 4
_internshrstr PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 167
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
; Line 170
  00006	8b 45 10	 mov	 eax, DWORD PTR _l$[ebp]
  00009	8b d0		 mov	 edx, eax
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00011	8b f0		 mov	 esi, eax
  00013	c1 ee 05	 shr	 esi, 5
  00016	46		 inc	 esi
  00017	8b 7f 10	 mov	 edi, DWORD PTR [edi+16]
  0001a	89 7d fc	 mov	 DWORD PTR _g$1$[ebp], edi
  0001d	8b 5f 38	 mov	 ebx, DWORD PTR [edi+56]
  00020	33 d8		 xor	 ebx, eax
  00022	3b c6		 cmp	 eax, esi
  00024	72 28		 jb	 SHORT $LN9@internshrs
  00026	8b 7d 0c	 mov	 edi, DWORD PTR _str$[ebp]
  00029	8d a4 24 00 00
	00 00		 npad	 7
$LL11@internshrs:
  00030	0f b6 4c 17 ff	 movzx	 ecx, BYTE PTR [edi+edx-1]
  00035	8b c3		 mov	 eax, ebx
  00037	c1 e0 05	 shl	 eax, 5
  0003a	2b d6		 sub	 edx, esi
  0003c	03 c8		 add	 ecx, eax
  0003e	8b c3		 mov	 eax, ebx
  00040	c1 e8 02	 shr	 eax, 2
  00043	03 c8		 add	 ecx, eax
  00045	33 d9		 xor	 ebx, ecx
  00047	3b d6		 cmp	 edx, esi
  00049	73 e5		 jae	 SHORT $LL11@internshrs
  0004b	8b 7d fc	 mov	 edi, DWORD PTR _g$1$[ebp]
$LN9@internshrs:
; Line 171
  0004e	8b 57 20	 mov	 edx, DWORD PTR [edi+32]
  00051	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00054	89 55 f4	 mov	 DWORD PTR tv335[ebp], edx
  00057	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]
  0005a	23 cb		 and	 ecx, ebx
; Line 173
  0005c	8b 3c 88	 mov	 edi, DWORD PTR [eax+ecx*4]
  0005f	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00062	89 45 f8	 mov	 DWORD PTR _list$1$[ebp], eax
  00065	85 ff		 test	 edi, edi
  00067	74 7e		 je	 SHORT $LN25@internshrs
  00069	8b 75 10	 mov	 esi, DWORD PTR _l$[ebp]
  0006c	8d 64 24 00	 npad	 4
$LL6@internshrs:
; Line 175
  00070	0f b6 47 07	 movzx	 eax, BYTE PTR [edi+7]
  00074	3b f0		 cmp	 esi, eax
  00076	75 65		 jne	 SHORT $LN5@internshrs
  00078	8b 4d 0c	 mov	 ecx, DWORD PTR _str$[ebp]
  0007b	8d 57 10	 lea	 edx, DWORD PTR [edi+16]
  0007e	83 ee 04	 sub	 esi, 4
  00081	72 11		 jb	 SHORT $LN28@internshrs
$LL29@internshrs:
  00083	8b 01		 mov	 eax, DWORD PTR [ecx]
  00085	3b 02		 cmp	 eax, DWORD PTR [edx]
  00087	75 14		 jne	 SHORT $LN27@internshrs
  00089	83 c1 04	 add	 ecx, 4
  0008c	83 c2 04	 add	 edx, 4
  0008f	83 ee 04	 sub	 esi, 4
  00092	73 ef		 jae	 SHORT $LL29@internshrs
$LN28@internshrs:
  00094	83 fe fc	 cmp	 esi, -4			; fffffffcH
  00097	0f 84 c3 00 00
	00		 je	 $LN26@internshrs
$LN27@internshrs:
  0009d	8a 01		 mov	 al, BYTE PTR [ecx]
  0009f	3a 02		 cmp	 al, BYTE PTR [edx]
  000a1	75 37		 jne	 SHORT $LN34@internshrs
  000a3	83 fe fd	 cmp	 esi, -3			; fffffffdH
  000a6	0f 84 b4 00 00
	00		 je	 $LN26@internshrs
  000ac	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  000af	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  000b2	75 26		 jne	 SHORT $LN34@internshrs
  000b4	83 fe fe	 cmp	 esi, -2			; fffffffeH
  000b7	0f 84 a3 00 00
	00		 je	 $LN26@internshrs
  000bd	8a 41 02	 mov	 al, BYTE PTR [ecx+2]
  000c0	3a 42 02	 cmp	 al, BYTE PTR [edx+2]
  000c3	75 15		 jne	 SHORT $LN34@internshrs
  000c5	83 fe ff	 cmp	 esi, -1
  000c8	0f 84 92 00 00
	00		 je	 $LN26@internshrs
  000ce	8a 41 03	 mov	 al, BYTE PTR [ecx+3]
  000d1	3a 42 03	 cmp	 al, BYTE PTR [edx+3]
  000d4	0f 84 86 00 00
	00		 je	 $LN26@internshrs
$LN34@internshrs:
  000da	8b 75 10	 mov	 esi, DWORD PTR _l$[ebp]
$LN5@internshrs:
; Line 173
  000dd	8b 7f 0c	 mov	 edi, DWORD PTR [edi+12]
  000e0	85 ff		 test	 edi, edi
  000e2	75 8c		 jne	 SHORT $LL6@internshrs
  000e4	8b 55 f4	 mov	 edx, DWORD PTR tv335[ebp]
$LN25@internshrs:
; Line 182
  000e7	8b 7d fc	 mov	 edi, DWORD PTR _g$1$[ebp]
  000ea	39 57 1c	 cmp	 DWORD PTR [edi+28], edx
  000ed	7c 26		 jl	 SHORT $LN1@internshrs
  000ef	81 fa ff ff ff
	3f		 cmp	 edx, 1073741823		; 3fffffffH
  000f5	7f 1e		 jg	 SHORT $LN1@internshrs
; Line 183
  000f7	8d 04 12	 lea	 eax, DWORD PTR [edx+edx]
  000fa	50		 push	 eax
  000fb	ff 75 08	 push	 DWORD PTR _L$[ebp]
  000fe	e8 00 00 00 00	 call	 _luaS_resize
; Line 184
  00103	8b 4f 20	 mov	 ecx, DWORD PTR [edi+32]
  00106	83 c4 08	 add	 esp, 8
  00109	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  0010c	49		 dec	 ecx
  0010d	23 cb		 and	 ecx, ebx
  0010f	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00112	89 45 f8	 mov	 DWORD PTR _list$1$[ebp], eax
$LN1@internshrs:
; Line 186
  00115	8b 45 10	 mov	 eax, DWORD PTR _l$[ebp]
  00118	83 c0 11	 add	 eax, 17			; 00000011H
  0011b	50		 push	 eax
  0011c	6a 04		 push	 4
  0011e	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00121	e8 00 00 00 00	 call	 _luaC_newobj
  00126	8b f0		 mov	 esi, eax
  00128	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
; Line 187
  0012b	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  0012e	8b 5d 10	 mov	 ebx, DWORD PTR _l$[ebp]
  00131	53		 push	 ebx
  00132	ff 75 0c	 push	 DWORD PTR _str$[ebp]
  00135	c6 46 06 00	 mov	 BYTE PTR [esi+6], 0
  00139	51		 push	 ecx
  0013a	c6 44 1e 10 00	 mov	 BYTE PTR [esi+ebx+16], 0
  0013f	e8 00 00 00 00	 call	 _memcpy
; Line 189
  00144	8b 4d f8	 mov	 ecx, DWORD PTR _list$1$[ebp]
  00147	83 c4 18	 add	 esp, 24			; 00000018H
  0014a	88 5e 07	 mov	 BYTE PTR [esi+7], bl
  0014d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0014f	89 46 0c	 mov	 DWORD PTR [esi+12], eax
; Line 192
  00152	8b c6		 mov	 eax, esi
  00154	89 31		 mov	 DWORD PTR [ecx], esi
  00156	ff 47 1c	 inc	 DWORD PTR [edi+28]
  00159	5f		 pop	 edi
  0015a	5e		 pop	 esi
  0015b	5b		 pop	 ebx
; Line 193
  0015c	8b e5		 mov	 esp, ebp
  0015e	5d		 pop	 ebp
  0015f	c3		 ret	 0
$LN26@internshrs:
; Line 177
  00160	8b 4d fc	 mov	 ecx, DWORD PTR _g$1$[ebp]
  00163	8a 47 05	 mov	 al, BYTE PTR [edi+5]
  00166	34 03		 xor	 al, 3
  00168	8a 49 3c	 mov	 cl, BYTE PTR [ecx+60]
  0016b	80 f1 03	 xor	 cl, 3
  0016e	84 c8		 test	 cl, al
  00170	75 03		 jne	 SHORT $LN2@internshrs
; Line 178
  00172	88 47 05	 mov	 BYTE PTR [edi+5], al
$LN2@internshrs:
; Line 179
  00175	8b c7		 mov	 eax, edi
  00177	5f		 pop	 edi
  00178	5e		 pop	 esi
  00179	5b		 pop	 ebx
; Line 193
  0017a	8b e5		 mov	 esp, ebp
  0017c	5d		 pop	 ebp
  0017d	c3		 ret	 0
_internshrstr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _createstrobj
_TEXT	SEGMENT
_L$ = 8							; size = 4
_l$ = 12						; size = 4
_tag$ = 16						; size = 4
_h$ = 20						; size = 4
_createstrobj PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 133
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 137
  00004	8b 75 0c	 mov	 esi, DWORD PTR _l$[ebp]
  00007	8d 46 11	 lea	 eax, DWORD PTR [esi+17]
; Line 138
  0000a	50		 push	 eax
  0000b	ff 75 10	 push	 DWORD PTR _tag$[ebp]
  0000e	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00011	e8 00 00 00 00	 call	 _luaC_newobj
; Line 140
  00016	8b 4d 14	 mov	 ecx, DWORD PTR _h$[ebp]
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
; Line 141
  0001f	c6 40 06 00	 mov	 BYTE PTR [eax+6], 0
; Line 142
  00023	c6 44 30 10 00	 mov	 BYTE PTR [eax+esi+16], 0
  00028	5e		 pop	 esi
; Line 144
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_createstrobj ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaS_createlngstrobj
_TEXT	SEGMENT
_L$ = 8							; size = 4
_l$ = 12						; size = 4
_luaS_createlngstrobj PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 147
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 148
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR _l$[ebp]
  0000b	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0000e	8b 70 38	 mov	 esi, DWORD PTR [eax+56]
  00011	8d 47 11	 lea	 eax, DWORD PTR [edi+17]
  00014	50		 push	 eax
  00015	6a 14		 push	 20			; 00000014H
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 _luaC_newobj
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	89 70 08	 mov	 DWORD PTR [eax+8], esi
  00023	c6 40 06 00	 mov	 BYTE PTR [eax+6], 0
  00027	c6 44 38 10 00	 mov	 BYTE PTR [eax+edi+16], 0
; Line 149
  0002c	89 78 0c	 mov	 DWORD PTR [eax+12], edi
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
; Line 151
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
_luaS_createlngstrobj ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaS_new
_TEXT	SEGMENT
_p$1$ = -4						; size = 4
_L$ = 8							; size = 4
_str$ = 12						; size = 4
_luaS_new PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 219
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
; Line 220
  00007	8b 7d 0c	 mov	 edi, DWORD PTR _str$[ebp]
  0000a	b8 b3 cf 21 35	 mov	 eax, 891408307		; 3521cfb3H
  0000f	f7 e7		 mul	 edi
  00011	8b c7		 mov	 eax, edi
; Line 222
  00013	8b cf		 mov	 ecx, edi
  00015	2b c2		 sub	 eax, edx
  00017	d1 e8		 shr	 eax, 1
  00019	03 c2		 add	 eax, edx
  0001b	c1 e8 05	 shr	 eax, 5
  0001e	6b c0 35	 imul	 eax, eax, 53
  00021	2b c8		 sub	 ecx, eax
  00023	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00026	8b 58 10	 mov	 ebx, DWORD PTR [eax+16]
  00029	81 c3 0c 01 00
	00		 add	 ebx, 268		; 0000010cH
; Line 223
  0002f	33 f6		 xor	 esi, esi
  00031	8d 1c cb	 lea	 ebx, DWORD PTR [ebx+ecx*8]
  00034	89 5d fc	 mov	 DWORD PTR _p$1$[ebp], ebx
$LL7@luaS_new:
; Line 224
  00037	8b 04 b3	 mov	 eax, DWORD PTR [ebx+esi*4]
  0003a	8b cf		 mov	 ecx, edi
  0003c	83 c0 10	 add	 eax, 16			; 00000010H
  0003f	90		 npad	 1
$LL29@luaS_new:
  00040	8a 11		 mov	 dl, BYTE PTR [ecx]
  00042	3a 10		 cmp	 dl, BYTE PTR [eax]
  00044	75 1a		 jne	 SHORT $LN30@luaS_new
  00046	84 d2		 test	 dl, dl
  00048	74 12		 je	 SHORT $LN31@luaS_new
  0004a	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0004d	3a 50 01	 cmp	 dl, BYTE PTR [eax+1]
  00050	75 0e		 jne	 SHORT $LN30@luaS_new
  00052	83 c1 02	 add	 ecx, 2
  00055	83 c0 02	 add	 eax, 2
  00058	84 d2		 test	 dl, dl
  0005a	75 e4		 jne	 SHORT $LL29@luaS_new
$LN31@luaS_new:
  0005c	33 c0		 xor	 eax, eax
  0005e	eb 05		 jmp	 SHORT $LN32@luaS_new
$LN30@luaS_new:
  00060	1b c0		 sbb	 eax, eax
  00062	83 c8 01	 or	 eax, 1
$LN32@luaS_new:
  00065	85 c0		 test	 eax, eax
  00067	0f 84 8b 00 00
	00		 je	 $LN22@luaS_new
; Line 223
  0006d	46		 inc	 esi
  0006e	83 fe 02	 cmp	 esi, 2
  00071	7c c4		 jl	 SHORT $LL7@luaS_new
; Line 229
  00073	8b 03		 mov	 eax, DWORD PTR [ebx]
; Line 231
  00075	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
  00078	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  0007b	eb 03 8d 49 00	 npad	 5
$LL33@luaS_new:
  00080	8a 07		 mov	 al, BYTE PTR [edi]
  00082	47		 inc	 edi
  00083	84 c0		 test	 al, al
  00085	75 f9		 jne	 SHORT $LL33@luaS_new
  00087	2b f9		 sub	 edi, ecx
  00089	83 ff 28	 cmp	 edi, 40			; 00000028H
  0008c	77 20		 ja	 SHORT $LN12@luaS_new
  0008e	8b 45 0c	 mov	 eax, DWORD PTR _str$[ebp]
  00091	57		 push	 edi
  00092	50		 push	 eax
  00093	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00096	e8 00 00 00 00	 call	 _internshrstr
  0009b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009e	8b d8		 mov	 ebx, eax
  000a0	8b 45 fc	 mov	 eax, DWORD PTR _p$1$[ebp]
  000a3	5f		 pop	 edi
  000a4	89 18		 mov	 DWORD PTR [eax], ebx
; Line 232
  000a6	8b c3		 mov	 eax, ebx
  000a8	5e		 pop	 esi
  000a9	5b		 pop	 ebx
; Line 233
  000aa	8b e5		 mov	 esp, ebp
  000ac	5d		 pop	 ebp
  000ad	c3		 ret	 0
; Line 231
$LN12@luaS_new:
  000ae	83 ff ef	 cmp	 edi, -17		; ffffffefH
  000b1	73 4f		 jae	 SHORT $LN35@luaS_new
  000b3	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  000b6	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  000b9	8b 70 38	 mov	 esi, DWORD PTR [eax+56]
  000bc	8d 47 11	 lea	 eax, DWORD PTR [edi+17]
  000bf	50		 push	 eax
  000c0	6a 14		 push	 20			; 00000014H
  000c2	51		 push	 ecx
  000c3	e8 00 00 00 00	 call	 _luaC_newobj
  000c8	8b d8		 mov	 ebx, eax
  000ca	8b 45 0c	 mov	 eax, DWORD PTR _str$[ebp]
  000cd	57		 push	 edi
  000ce	50		 push	 eax
  000cf	8d 43 10	 lea	 eax, DWORD PTR [ebx+16]
  000d2	89 73 08	 mov	 DWORD PTR [ebx+8], esi
  000d5	c6 43 06 00	 mov	 BYTE PTR [ebx+6], 0
  000d9	c6 44 1f 10 00	 mov	 BYTE PTR [edi+ebx+16], 0
  000de	50		 push	 eax
  000df	89 7b 0c	 mov	 DWORD PTR [ebx+12], edi
  000e2	e8 00 00 00 00	 call	 _memcpy
  000e7	8b 45 fc	 mov	 eax, DWORD PTR _p$1$[ebp]
  000ea	83 c4 18	 add	 esp, 24			; 00000018H
  000ed	5f		 pop	 edi
  000ee	89 18		 mov	 DWORD PTR [eax], ebx
; Line 232
  000f0	8b c3		 mov	 eax, ebx
  000f2	5e		 pop	 esi
  000f3	5b		 pop	 ebx
; Line 233
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c3		 ret	 0
$LN22@luaS_new:
; Line 225
  000f8	8b 04 b3	 mov	 eax, DWORD PTR [ebx+esi*4]
  000fb	5f		 pop	 edi
  000fc	5e		 pop	 esi
  000fd	5b		 pop	 ebx
; Line 233
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c3		 ret	 0
$LN35@luaS_new:
; Line 231
  00102	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00105	e8 00 00 00 00	 call	 _luaM_toobig
$LN37@luaS_new:
$LN34@luaS_new:
  0010a	cc		 int	 3
_luaS_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaS_newlstr
_TEXT	SEGMENT
_L$ = 8							; size = 4
_str$ = 12						; size = 4
_l$ = 16						; size = 4
_luaS_newlstr PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 199
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 200
  00004	8b 5d 10	 mov	 ebx, DWORD PTR _l$[ebp]
  00007	83 fb 28	 cmp	 ebx, 40			; 00000028H
  0000a	77 12		 ja	 SHORT $LN3@luaS_newls
; Line 201
  0000c	53		 push	 ebx
  0000d	ff 75 0c	 push	 DWORD PTR _str$[ebp]
  00010	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00013	e8 00 00 00 00	 call	 _internshrstr
  00018	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001b	5b		 pop	 ebx
; Line 210
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
$LN3@luaS_newls:
; Line 204
  0001e	83 fb ef	 cmp	 ebx, -17		; ffffffefH
  00021	73 3f		 jae	 SHORT $LN11@luaS_newls
; Line 206
  00023	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00026	56		 push	 esi
  00027	57		 push	 edi
  00028	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0002b	8b 70 38	 mov	 esi, DWORD PTR [eax+56]
  0002e	8d 43 11	 lea	 eax, DWORD PTR [ebx+17]
  00031	50		 push	 eax
  00032	6a 14		 push	 20			; 00000014H
  00034	51		 push	 ecx
  00035	e8 00 00 00 00	 call	 _luaC_newobj
  0003a	8b f8		 mov	 edi, eax
; Line 207
  0003c	53		 push	 ebx
  0003d	ff 75 0c	 push	 DWORD PTR _str$[ebp]
  00040	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  00043	89 77 08	 mov	 DWORD PTR [edi+8], esi
  00046	c6 47 06 00	 mov	 BYTE PTR [edi+6], 0
  0004a	c6 44 1f 10 00	 mov	 BYTE PTR [edi+ebx+16], 0
  0004f	51		 push	 ecx
  00050	89 5f 0c	 mov	 DWORD PTR [edi+12], ebx
  00053	e8 00 00 00 00	 call	 _memcpy
  00058	83 c4 18	 add	 esp, 24			; 00000018H
; Line 208
  0005b	8b c7		 mov	 eax, edi
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
; Line 210
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
$LN11@luaS_newls:
; Line 205
  00062	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00065	e8 00 00 00 00	 call	 _luaM_toobig
$LN13@luaS_newls:
$LN10@luaS_newls:
  0006a	cc		 int	 3
_luaS_newlstr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaS_newudata
_TEXT	SEGMENT
_L$ = 8							; size = 4
_s$ = 12						; size = 4
_luaS_newudata PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 236
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 239
  00004	8b 75 0c	 mov	 esi, DWORD PTR _s$[ebp]
  00007	83 fe e7	 cmp	 esi, -25		; ffffffe7H
  0000a	77 39		 ja	 SHORT $LN5@luaS_newud
; Line 241
  0000c	8d 46 18	 lea	 eax, DWORD PTR [esi+24]
  0000f	50		 push	 eax
  00010	6a 07		 push	 7
  00012	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00015	e8 00 00 00 00	 call	 _luaC_newobj
  0001a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 243
  0001d	89 70 0c	 mov	 DWORD PTR [eax+12], esi
; Line 244
  00020	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; Line 245
  00027	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _luaO_nilobject_
  0002d	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00030	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR _luaO_nilobject_+4
  00036	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  00039	8a 0d 08 00 00
	00		 mov	 cl, BYTE PTR _luaO_nilobject_+8
  0003f	88 48 06	 mov	 BYTE PTR [eax+6], cl
  00042	5e		 pop	 esi
; Line 247
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
$LN5@luaS_newud:
; Line 240
  00045	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00048	e8 00 00 00 00	 call	 _luaM_toobig
$LN7@luaS_newud:
$LN4@luaS_newud:
  0004d	cc		 int	 3
_luaS_newudata ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaS_remove
_TEXT	SEGMENT
_L$ = 8							; size = 4
_ts$ = 12						; size = 4
_luaS_remove PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 154
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 155
  00003	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
; Line 156
  00006	8b 55 0c	 mov	 edx, DWORD PTR _ts$[ebp]
  00009	56		 push	 esi
  0000a	8b 70 10	 mov	 esi, DWORD PTR [eax+16]
  0000d	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00010	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00013	49		 dec	 ecx
  00014	23 4a 08	 and	 ecx, DWORD PTR [edx+8]
; Line 157
  00017	39 14 88	 cmp	 DWORD PTR [eax+ecx*4], edx
  0001a	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  0001d	74 0a		 je	 SHORT $LN1@luaS_remov
  0001f	90		 npad	 1
$LL2@luaS_remov:
; Line 158
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
  00022	83 c0 0c	 add	 eax, 12			; 0000000cH
  00025	39 10		 cmp	 DWORD PTR [eax], edx
  00027	75 f7		 jne	 SHORT $LL2@luaS_remov
$LN1@luaS_remov:
; Line 159
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx
; Line 160
  00030	ff 4e 1c	 dec	 DWORD PTR [esi+28]
  00033	5e		 pop	 esi
; Line 161
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
_luaS_remove ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaS_init
_TEXT	SEGMENT
_L$ = 8							; size = 4
_luaS_init PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 116
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 117
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
; Line 119
  00008	68 80 00 00 00	 push	 128			; 00000080H
  0000d	56		 push	 esi
  0000e	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  00011	e8 00 00 00 00	 call	 _luaS_resize
; Line 121
  00016	6a 11		 push	 17			; 00000011H
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@ENOOLCNF@not?5enough?5memory?$AA@
  0001d	56		 push	 esi
  0001e	e8 00 00 00 00	 call	 _internshrstr
; Line 122
  00023	50		 push	 eax
  00024	56		 push	 esi
  00025	89 87 84 00 00
	00		 mov	 DWORD PTR [edi+132], eax
  0002b	e8 00 00 00 00	 call	 _luaC_fix
  00030	83 c4 1c	 add	 esp, 28			; 0000001cH
  00033	8d 87 10 01 00
	00		 lea	 eax, DWORD PTR [edi+272]
  00039	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  0003e	8b ff		 npad	 2
$LL6@luaS_init:
; Line 125
  00040	8b 8f 84 00 00
	00		 mov	 ecx, DWORD PTR [edi+132]
  00046	8d 40 08	 lea	 eax, DWORD PTR [eax+8]
  00049	89 48 f4	 mov	 DWORD PTR [eax-12], ecx
  0004c	8b 8f 84 00 00
	00		 mov	 ecx, DWORD PTR [edi+132]
  00052	89 48 f8	 mov	 DWORD PTR [eax-8], ecx
  00055	4a		 dec	 edx
  00056	75 e8		 jne	 SHORT $LL6@luaS_init
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
; Line 126
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
_luaS_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaS_clearcache
_TEXT	SEGMENT
_g$ = 8							; size = 4
_luaS_clearcache PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 103
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 105
  00004	8b 75 08	 mov	 esi, DWORD PTR _g$[ebp]
  00007	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  0000c	8d 86 10 01 00
	00		 lea	 eax, DWORD PTR [esi+272]
$LL7@luaS_clear:
; Line 107
  00012	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  00015	f6 41 05 03	 test	 BYTE PTR [ecx+5], 3
  00019	74 09		 je	 SHORT $LN3@luaS_clear
; Line 108
  0001b	8b 8e 84 00 00
	00		 mov	 ecx, DWORD PTR [esi+132]
  00021	89 48 fc	 mov	 DWORD PTR [eax-4], ecx
$LN3@luaS_clear:
; Line 107
  00024	8b 08		 mov	 ecx, DWORD PTR [eax]
  00026	f6 41 05 03	 test	 BYTE PTR [ecx+5], 3
  0002a	74 08		 je	 SHORT $LN6@luaS_clear
; Line 108
  0002c	8b 8e 84 00 00
	00		 mov	 ecx, DWORD PTR [esi+132]
  00032	89 08		 mov	 DWORD PTR [eax], ecx
$LN6@luaS_clear:
; Line 105
  00034	83 c0 08	 add	 eax, 8
  00037	4a		 dec	 edx
  00038	75 d8		 jne	 SHORT $LL7@luaS_clear
  0003a	5e		 pop	 esi
; Line 110
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_luaS_clearcache ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaS_resize
_TEXT	SEGMENT
_i$2$ = -4						; size = 4
_L$ = 8							; size = 4
_newsize$ = 12						; size = 4
_luaS_resize PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 71
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; Line 74
  00004	8b 55 0c	 mov	 edx, DWORD PTR _newsize$[ebp]
  00007	53		 push	 ebx
  00008	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  0000b	56		 push	 esi
  0000c	57		 push	 edi
  0000d	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
  00010	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00013	3b d1		 cmp	 edx, ecx
  00015	7e 48		 jle	 SHORT $LN7@luaS_resiz
; Line 75
  00017	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  0001a	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  0001f	0f 87 d1 00 00
	00		 ja	 $LN30@luaS_resiz
  00025	8d 04 95 00 00
	00 00		 lea	 eax, DWORD PTR [edx*4]
  0002c	50		 push	 eax
  0002d	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  00034	50		 push	 eax
  00035	ff 76 18	 push	 DWORD PTR [esi+24]
  00038	53		 push	 ebx
  00039	e8 00 00 00 00	 call	 _luaM_realloc_
; Line 76
  0003e	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00041	83 c4 10	 add	 esp, 16			; 00000010H
  00044	8b 55 0c	 mov	 edx, DWORD PTR _newsize$[ebp]
  00047	89 46 18	 mov	 DWORD PTR [esi+24], eax
  0004a	3b ca		 cmp	 ecx, edx
  0004c	7d 11		 jge	 SHORT $LN7@luaS_resiz
  0004e	8b ff		 npad	 2
$LL9@luaS_resiz:
; Line 77
  00050	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00053	c7 04 88 00 00
	00 00		 mov	 DWORD PTR [eax+ecx*4], 0
  0005a	41		 inc	 ecx
  0005b	3b ca		 cmp	 ecx, edx
  0005d	7c f1		 jl	 SHORT $LL9@luaS_resiz
$LN7@luaS_resiz:
; Line 79
  0005f	33 db		 xor	 ebx, ebx
  00061	89 5d fc	 mov	 DWORD PTR _i$2$[ebp], ebx
  00064	39 5e 20	 cmp	 DWORD PTR [esi+32], ebx
  00067	7e 4e		 jle	 SHORT $LN4@luaS_resiz
  00069	8d a4 24 00 00
	00 00		 npad	 7
$LL6@luaS_resiz:
  00070	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
; Line 80
  00073	8b 3c 98	 mov	 edi, DWORD PTR [eax+ebx*4]
; Line 81
  00076	c7 04 98 00 00
	00 00		 mov	 DWORD PTR [eax+ebx*4], 0
; Line 82
  0007d	85 ff		 test	 edi, edi
  0007f	74 2a		 je	 SHORT $LN5@luaS_resiz
  00081	8d 5a ff	 lea	 ebx, DWORD PTR [edx-1]
$LL3@luaS_resiz:
; Line 84
  00084	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00087	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  0008a	23 c3		 and	 eax, ebx
; Line 85
  0008c	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  00093	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00096	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00099	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; Line 86
  0009c	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  0009f	89 3c 01	 mov	 DWORD PTR [ecx+eax], edi
; Line 87
  000a2	8b fa		 mov	 edi, edx
  000a4	85 d2		 test	 edx, edx
  000a6	75 dc		 jne	 SHORT $LL3@luaS_resiz
  000a8	8b 5d fc	 mov	 ebx, DWORD PTR _i$2$[ebp]
$LN5@luaS_resiz:
; Line 79
  000ab	8b 55 0c	 mov	 edx, DWORD PTR _newsize$[ebp]
  000ae	43		 inc	 ebx
  000af	89 5d fc	 mov	 DWORD PTR _i$2$[ebp], ebx
  000b2	3b 5e 20	 cmp	 ebx, DWORD PTR [esi+32]
  000b5	7c b9		 jl	 SHORT $LL6@luaS_resiz
$LN4@luaS_resiz:
; Line 90
  000b7	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  000ba	8b 7d 0c	 mov	 edi, DWORD PTR _newsize$[ebp]
  000bd	3b f9		 cmp	 edi, ecx
  000bf	7d 2b		 jge	 SHORT $LN1@luaS_resiz
; Line 93
  000c1	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  000c4	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  000c9	77 31		 ja	 SHORT $LN32@luaS_resiz
  000cb	8d 04 bd 00 00
	00 00		 lea	 eax, DWORD PTR [edi*4]
  000d2	50		 push	 eax
  000d3	8d 04 8d 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*4]
  000da	50		 push	 eax
  000db	ff 76 18	 push	 DWORD PTR [esi+24]
  000de	ff 75 08	 push	 DWORD PTR _L$[ebp]
  000e1	e8 00 00 00 00	 call	 _luaM_realloc_
  000e6	83 c4 10	 add	 esp, 16			; 00000010H
  000e9	89 46 18	 mov	 DWORD PTR [esi+24], eax
$LN1@luaS_resiz:
; Line 95
  000ec	89 7e 20	 mov	 DWORD PTR [esi+32], edi
  000ef	5f		 pop	 edi
  000f0	5e		 pop	 esi
  000f1	5b		 pop	 ebx
; Line 96
  000f2	8b e5		 mov	 esp, ebp
  000f4	5d		 pop	 ebp
  000f5	c3		 ret	 0
$LN30@luaS_resiz:
; Line 75
  000f6	53		 push	 ebx
  000f7	e8 00 00 00 00	 call	 _luaM_toobig
$LN33@luaS_resiz:
$LN32@luaS_resiz:
; Line 93
  000fc	ff 75 08	 push	 DWORD PTR _L$[ebp]
  000ff	e8 00 00 00 00	 call	 _luaM_toobig
$LN34@luaS_resiz:
$LN29@luaS_resiz:
  00104	cc		 int	 3
_luaS_resize ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaS_eqlngstr
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_luaS_eqlngstr PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 40
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 41
  00003	8b 55 08	 mov	 edx, DWORD PTR _a$[ebp]
  00006	56		 push	 esi
; Line 45
  00007	8b 75 0c	 mov	 esi, DWORD PTR _b$[ebp]
  0000a	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  0000d	3b d6		 cmp	 edx, esi
  0000f	74 58		 je	 SHORT $LN4@luaS_eqlng
  00011	3b 4e 0c	 cmp	 ecx, DWORD PTR [esi+12]
  00014	75 4e		 jne	 SHORT $LN10@luaS_eqlng
  00016	83 c6 10	 add	 esi, 16			; 00000010H
  00019	83 c2 10	 add	 edx, 16			; 00000010H
  0001c	83 e9 04	 sub	 ecx, 4
  0001f	72 11		 jb	 SHORT $LN8@luaS_eqlng
$LL9@luaS_eqlng:
  00021	8b 02		 mov	 eax, DWORD PTR [edx]
  00023	3b 06		 cmp	 eax, DWORD PTR [esi]
  00025	75 10		 jne	 SHORT $LN7@luaS_eqlng
  00027	83 c2 04	 add	 edx, 4
  0002a	83 c6 04	 add	 esi, 4
  0002d	83 e9 04	 sub	 ecx, 4
  00030	73 ef		 jae	 SHORT $LL9@luaS_eqlng
$LN8@luaS_eqlng:
  00032	83 f9 fc	 cmp	 ecx, -4			; fffffffcH
  00035	74 32		 je	 SHORT $LN4@luaS_eqlng
$LN7@luaS_eqlng:
  00037	8a 02		 mov	 al, BYTE PTR [edx]
  00039	3a 06		 cmp	 al, BYTE PTR [esi]
  0003b	75 27		 jne	 SHORT $LN10@luaS_eqlng
  0003d	83 f9 fd	 cmp	 ecx, -3			; fffffffdH
  00040	74 27		 je	 SHORT $LN4@luaS_eqlng
  00042	8a 42 01	 mov	 al, BYTE PTR [edx+1]
  00045	3a 46 01	 cmp	 al, BYTE PTR [esi+1]
  00048	75 1a		 jne	 SHORT $LN10@luaS_eqlng
  0004a	83 f9 fe	 cmp	 ecx, -2			; fffffffeH
  0004d	74 1a		 je	 SHORT $LN4@luaS_eqlng
  0004f	8a 42 02	 mov	 al, BYTE PTR [edx+2]
  00052	3a 46 02	 cmp	 al, BYTE PTR [esi+2]
  00055	75 0d		 jne	 SHORT $LN10@luaS_eqlng
  00057	83 f9 ff	 cmp	 ecx, -1
  0005a	74 0d		 je	 SHORT $LN4@luaS_eqlng
  0005c	8a 42 03	 mov	 al, BYTE PTR [edx+3]
  0005f	3a 46 03	 cmp	 al, BYTE PTR [esi+3]
  00062	74 05		 je	 SHORT $LN4@luaS_eqlng
$LN10@luaS_eqlng:
  00064	33 c0		 xor	 eax, eax
  00066	5e		 pop	 esi
; Line 46
  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
$LN4@luaS_eqlng:
; Line 45
  00069	b8 01 00 00 00	 mov	 eax, 1
  0006e	5e		 pop	 esi
; Line 46
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
_luaS_eqlngstr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaS_hashlongstr
_TEXT	SEGMENT
_ts$ = 8						; size = 4
_luaS_hashlongstr PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 58
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
; Line 60
  00004	8b 7d 08	 mov	 edi, DWORD PTR _ts$[ebp]
  00007	80 7f 06 00	 cmp	 BYTE PTR [edi+6], 0
  0000b	75 3d		 jne	 SHORT $LN13@luaS_hashl
; Line 61
  0000d	8b 57 08	 mov	 edx, DWORD PTR [edi+8]
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]
  00015	8b de		 mov	 ebx, esi
  00017	c1 eb 05	 shr	 ebx, 5
  0001a	33 d6		 xor	 edx, esi
  0001c	43		 inc	 ebx
  0001d	3b f3		 cmp	 esi, ebx
  0001f	72 1b		 jb	 SHORT $LN4@luaS_hashl
$LL6@luaS_hashl:
  00021	0f b6 4c 37 0f	 movzx	 ecx, BYTE PTR [edi+esi+15]
  00026	8b c2		 mov	 eax, edx
  00028	c1 e0 05	 shl	 eax, 5
  0002b	2b f3		 sub	 esi, ebx
  0002d	03 c8		 add	 ecx, eax
  0002f	8b c2		 mov	 eax, edx
  00031	c1 e8 02	 shr	 eax, 2
  00034	03 c8		 add	 ecx, eax
  00036	33 d1		 xor	 edx, ecx
  00038	3b f3		 cmp	 esi, ebx
  0003a	73 e5		 jae	 SHORT $LL6@luaS_hashl
$LN4@luaS_hashl:
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	89 57 08	 mov	 DWORD PTR [edi+8], edx
; Line 64
  00041	8b c2		 mov	 eax, edx
  00043	c6 47 06 01	 mov	 BYTE PTR [edi+6], 1
  00047	5f		 pop	 edi
; Line 65
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
$LN13@luaS_hashl:
; Line 64
  0004a	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0004d	5f		 pop	 edi
; Line 65
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
_luaS_hashlongstr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaS_hash
_TEXT	SEGMENT
_str$ = 8						; size = 4
_l$ = 12						; size = 4
_seed$ = 16						; size = 4
_luaS_hash PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 49
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 50
  00004	8b 75 0c	 mov	 esi, DWORD PTR _l$[ebp]
  00007	8b c6		 mov	 eax, esi
  00009	33 45 10	 xor	 eax, DWORD PTR _seed$[ebp]
  0000c	57		 push	 edi
; Line 51
  0000d	8b fe		 mov	 edi, esi
  0000f	c1 ef 05	 shr	 edi, 5
  00012	47		 inc	 edi
; Line 52
  00013	3b f7		 cmp	 esi, edi
  00015	72 25		 jb	 SHORT $LN1@luaS_hash
  00017	53		 push	 ebx
  00018	8b 5d 08	 mov	 ebx, DWORD PTR _str$[ebp]
  0001b	eb 03 8d 49 00	 npad	 5
$LL3@luaS_hash:
; Line 53
  00020	0f b6 54 33 ff	 movzx	 edx, BYTE PTR [ebx+esi-1]
  00025	8b c8		 mov	 ecx, eax
  00027	c1 e1 05	 shl	 ecx, 5
  0002a	2b f7		 sub	 esi, edi
  0002c	03 d1		 add	 edx, ecx
  0002e	8b c8		 mov	 ecx, eax
  00030	c1 e9 02	 shr	 ecx, 2
  00033	03 d1		 add	 edx, ecx
  00035	33 c2		 xor	 eax, edx
  00037	3b f7		 cmp	 esi, edi
  00039	73 e5		 jae	 SHORT $LL3@luaS_hash
  0003b	5b		 pop	 ebx
$LN1@luaS_hash:
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
; Line 55
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
_luaS_hash ENDP
_TEXT	ENDS
END
