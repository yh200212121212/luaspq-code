; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_luaC_fix
PUBLIC	_luaC_freeallobjects
PUBLIC	_luaC_step
PUBLIC	_luaC_runtilstate
PUBLIC	_luaC_fullgc
PUBLIC	_luaC_newobj
PUBLIC	_luaC_barrier_
PUBLIC	_luaC_barrierback_
PUBLIC	_luaC_upvalbarrier_
PUBLIC	_luaC_checkfinalizer
PUBLIC	_luaC_upvdeccount
PUBLIC	??_C@_0L@EDOLMPAK@no?5message?$AA@		; `string'
PUBLIC	??_C@_0BO@HIAKJHOM@error?5in?5__gc?5metamethod?5?$CI?$CFs?$CJ?$AA@ ; `string'
EXTRN	__imp__strchr:PROC
EXTRN	_luaO_pushfstring:PROC
EXTRN	_luaT_gettm:PROC
EXTRN	_luaT_gettmbyobj:PROC
EXTRN	_luaM_realloc_:PROC
EXTRN	_luaE_setdebt:PROC
EXTRN	_luaE_freethread:PROC
EXTRN	_luaD_callnoyield:PROC
EXTRN	_luaD_pcall:PROC
EXTRN	_luaD_shrinkstack:PROC
EXTRN	_luaD_throw:PROC
EXTRN	_luaF_freeproto:PROC
EXTRN	_luaS_resize:PROC
EXTRN	_luaS_clearcache:PROC
EXTRN	_luaS_remove:PROC
EXTRN	_luaH_free:PROC
;	COMDAT ??_C@_0BO@HIAKJHOM@error?5in?5__gc?5metamethod?5?$CI?$CFs?$CJ?$AA@
CONST	SEGMENT
??_C@_0BO@HIAKJHOM@error?5in?5__gc?5metamethod?5?$CI?$CFs?$CJ?$AA@ DB 'er'
	DB	'ror in __gc metamethod (%s)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EDOLMPAK@no?5message?$AA@
CONST	SEGMENT
??_C@_0L@EDOLMPAK@no?5message?$AA@ DB 'no message', 00H	; `string'
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT _getdebt
_TEXT	SEGMENT
_g$ = 8							; size = 4
_getdebt PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 1119
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1120
  00003	8b 45 08	 mov	 eax, DWORD PTR _g$[ebp]
  00006	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
; Line 1121
  00009	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
; Line 1122
  0000c	85 d2		 test	 edx, edx
  0000e	7f 04		 jg	 SHORT $LN2@getdebt
  00010	33 c0		 xor	 eax, eax
; Line 1128
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
$LN2@getdebt:
; Line 1124
  00014	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00019	f7 ea		 imul	 edx
  0001b	56		 push	 esi
  0001c	c1 fa 06	 sar	 edx, 6
; Line 1125
  0001f	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00024	8b f2		 mov	 esi, edx
  00026	42		 inc	 edx
  00027	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  0002a	03 f2		 add	 esi, edx
  0002c	99		 cdq
  0002d	f7 f9		 idiv	 ecx
  0002f	3b f0		 cmp	 esi, eax
  00031	7d 08		 jge	 SHORT $LN5@getdebt
  00033	0f af ce	 imul	 ecx, esi
  00036	5e		 pop	 esi
; Line 1126
  00037	8b c1		 mov	 eax, ecx
; Line 1128
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
$LN5@getdebt:
; Line 1125
  0003b	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
; Line 1126
  00040	8b c1		 mov	 eax, ecx
  00042	5e		 pop	 esi
; Line 1128
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
_getdebt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _singlestep
_TEXT	SEGMENT
_L$ = 8							; size = 4
_singlestep PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 1048
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 1049
  00004	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00007	57		 push	 edi
  00008	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
; Line 1050
  0000b	0f b6 47 3d	 movzx	 eax, BYTE PTR [edi+61]
  0000f	83 f8 07	 cmp	 eax, 7
  00012	0f 87 f3 00 00
	00		 ja	 $LN2@singlestep
  00018	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN18@singlestep[eax*4]
$LN12@singlestep:
; Line 1052
  0001f	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00022	c1 e0 02	 shl	 eax, 2
; Line 1053
  00025	57		 push	 edi
  00026	89 47 10	 mov	 DWORD PTR [edi+16], eax
  00029	e8 00 00 00 00	 call	 _restartcollection
; Line 1055
  0002e	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00031	83 c4 04	 add	 esp, 4
  00034	c6 47 3d 00	 mov	 BYTE PTR [edi+61], 0
  00038	5f		 pop	 edi
  00039	5b		 pop	 ebx
; Line 1101
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
$LN11@singlestep:
; Line 1060
  0003c	57		 push	 edi
  0003d	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  00044	e8 00 00 00 00	 call	 _propagatemark
  00049	83 c4 04	 add	 esp, 4
; Line 1061
  0004c	83 7f 4c 00	 cmp	 DWORD PTR [edi+76], 0
  00050	75 04		 jne	 SHORT $LN10@singlestep
; Line 1062
  00052	c6 47 3d 01	 mov	 BYTE PTR [edi+61], 1
$LN10@singlestep:
; Line 1063
  00056	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00059	5f		 pop	 edi
  0005a	5b		 pop	 ebx
; Line 1101
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
$LN9@singlestep:
  0005d	56		 push	 esi
; Line 1068
  0005e	57		 push	 edi
  0005f	e8 00 00 00 00	 call	 _propagateall
; Line 1069
  00064	53		 push	 ebx
  00065	e8 00 00 00 00	 call	 _atomic
; Line 1070
  0006a	53		 push	 ebx
  0006b	8b f0		 mov	 esi, eax
  0006d	e8 00 00 00 00	 call	 _entersweep
; Line 1071
  00072	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00075	83 c4 0c	 add	 esp, 12			; 0000000cH
  00078	03 4f 08	 add	 ecx, DWORD PTR [edi+8]
  0007b	8b d0		 mov	 edx, eax
  0007d	89 4f 14	 mov	 DWORD PTR [edi+20], ecx
; Line 1072
  00080	8d 04 96	 lea	 eax, DWORD PTR [esi+edx*4]
  00083	5e		 pop	 esi
  00084	5f		 pop	 edi
  00085	03 c2		 add	 eax, edx
  00087	5b		 pop	 ebx
; Line 1101
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
$LN8@singlestep:
; Line 1075
  0008a	8d 47 48	 lea	 eax, DWORD PTR [edi+72]
  0008d	50		 push	 eax
  0008e	6a 03		 push	 3
  00090	57		 push	 edi
  00091	53		 push	 ebx
  00092	e8 00 00 00 00	 call	 _sweepstep
  00097	83 c4 10	 add	 esp, 16			; 00000010H
  0009a	5f		 pop	 edi
  0009b	5b		 pop	 ebx
; Line 1101
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
$LN7@singlestep:
; Line 1078
  0009e	8d 47 60	 lea	 eax, DWORD PTR [edi+96]
  000a1	50		 push	 eax
  000a2	6a 04		 push	 4
  000a4	57		 push	 edi
  000a5	53		 push	 ebx
  000a6	e8 00 00 00 00	 call	 _sweepstep
  000ab	83 c4 10	 add	 esp, 16			; 00000010H
  000ae	5f		 pop	 edi
  000af	5b		 pop	 ebx
; Line 1101
  000b0	5d		 pop	 ebp
  000b1	c3		 ret	 0
$LN6@singlestep:
; Line 1081
  000b2	6a 00		 push	 0
  000b4	6a 05		 push	 5
  000b6	57		 push	 edi
  000b7	53		 push	 ebx
  000b8	e8 00 00 00 00	 call	 _sweepstep
  000bd	83 c4 10	 add	 esp, 16			; 00000010H
  000c0	5f		 pop	 edi
  000c1	5b		 pop	 ebx
; Line 1101
  000c2	5d		 pop	 ebp
  000c3	c3		 ret	 0
$LN5@singlestep:
; Line 1084
  000c4	8b 57 7c	 mov	 edx, DWORD PTR [edi+124]
  000c7	8a 4f 3c	 mov	 cl, BYTE PTR [edi+60]
  000ca	80 e1 03	 and	 cl, 3
; Line 1085
  000cd	57		 push	 edi
  000ce	8a 42 05	 mov	 al, BYTE PTR [edx+5]
  000d1	24 f8		 and	 al, 248			; 000000f8H
  000d3	0a c8		 or	 cl, al
  000d5	53		 push	 ebx
  000d6	88 4a 05	 mov	 BYTE PTR [edx+5], cl
  000d9	e8 00 00 00 00	 call	 _checkSizes
  000de	83 c4 08	 add	 esp, 8
; Line 1086
  000e1	c6 47 3d 06	 mov	 BYTE PTR [edi+61], 6
; Line 1099
  000e5	33 c0		 xor	 eax, eax
  000e7	5f		 pop	 edi
  000e8	5b		 pop	 ebx
; Line 1101
  000e9	5d		 pop	 ebp
  000ea	c3		 ret	 0
$LN4@singlestep:
; Line 1090
  000eb	83 7f 60 00	 cmp	 DWORD PTR [edi+96], 0
  000ef	74 16		 je	 SHORT $LN3@singlestep
  000f1	80 7f 3e 01	 cmp	 BYTE PTR [edi+62], 1
  000f5	74 10		 je	 SHORT $LN3@singlestep
; Line 1091
  000f7	53		 push	 ebx
  000f8	e8 00 00 00 00	 call	 _runafewfinalizers
  000fd	83 c4 04	 add	 esp, 4
; Line 1092
  00100	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00103	5f		 pop	 edi
  00104	5b		 pop	 ebx
; Line 1101
  00105	5d		 pop	 ebp
  00106	c3		 ret	 0
$LN3@singlestep:
; Line 1095
  00107	c6 47 3d 07	 mov	 BYTE PTR [edi+61], 7
$LN2@singlestep:
  0010b	5f		 pop	 edi
; Line 1099
  0010c	33 c0		 xor	 eax, eax
  0010e	5b		 pop	 ebx
; Line 1101
  0010f	5d		 pop	 ebp
  00110	c3		 ret	 0
  00111	8d 49 00	 npad	 3
$LN18@singlestep:
  00114	00 00 00 00	 DD	 $LN11@singlestep
  00118	00 00 00 00	 DD	 $LN9@singlestep
  0011c	00 00 00 00	 DD	 $LN8@singlestep
  00120	00 00 00 00	 DD	 $LN7@singlestep
  00124	00 00 00 00	 DD	 $LN6@singlestep
  00128	00 00 00 00	 DD	 $LN5@singlestep
  0012c	00 00 00 00	 DD	 $LN4@singlestep
  00130	00 00 00 00	 DD	 $LN12@singlestep
_singlestep ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _sweepstep
_TEXT	SEGMENT
_L$ = 8							; size = 4
_g$ = 12						; size = 4
_nextstate$ = 16					; size = 4
_nextlist$ = 20						; size = 4
_sweepstep PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 1033
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
; Line 1034
  00004	8b 7d 0c	 mov	 edi, DWORD PTR _g$[ebp]
  00007	8b 47 44	 mov	 eax, DWORD PTR [edi+68]
  0000a	85 c0		 test	 eax, eax
  0000c	74 2a		 je	 SHORT $LN1@sweepstep
; Line 1035
  0000e	56		 push	 esi
  0000f	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]
; Line 1036
  00012	6a 50		 push	 80			; 00000050H
  00014	50		 push	 eax
  00015	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00018	e8 00 00 00 00	 call	 _sweeplist
; Line 1037
  0001d	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
  00023	2b ce		 sub	 ecx, esi
  00025	89 47 44	 mov	 DWORD PTR [edi+68], eax
  00028	01 4f 14	 add	 DWORD PTR [edi+20], ecx
  0002b	5e		 pop	 esi
; Line 1038
  0002c	85 c0		 test	 eax, eax
  0002e	74 08		 je	 SHORT $LN1@sweepstep
; Line 1039
  00030	b8 90 01 00 00	 mov	 eax, 400		; 00000190H
  00035	5f		 pop	 edi
; Line 1045
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
$LN1@sweepstep:
; Line 1042
  00038	8a 45 10	 mov	 al, BYTE PTR _nextstate$[ebp]
  0003b	88 47 3d	 mov	 BYTE PTR [edi+61], al
; Line 1043
  0003e	8b 45 14	 mov	 eax, DWORD PTR _nextlist$[ebp]
  00041	89 47 44	 mov	 DWORD PTR [edi+68], eax
; Line 1044
  00044	33 c0		 xor	 eax, eax
  00046	5f		 pop	 edi
; Line 1045
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
_sweepstep ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _atomic
_TEXT	SEGMENT
_origall$1$ = -4					; size = 4
_origweak$1$ = 8					; size = 4
_L$ = 8							; size = 4
_atomic	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 985
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; Line 986
  00004	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b 70 10	 mov	 esi, DWORD PTR [eax+16]
; Line 989
  0000d	8b 7e 50	 mov	 edi, DWORD PTR [esi+80]
; Line 992
  00010	c6 46 3d 08	 mov	 BYTE PTR [esi+61], 8
; Line 993
  00014	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
; Line 994
  0001b	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0001f	74 0a		 je	 SHORT $LN2@atomic
  00021	50		 push	 eax
  00022	56		 push	 esi
  00023	e8 00 00 00 00	 call	 _reallymarkobject
  00028	83 c4 08	 add	 esp, 8
$LN2@atomic:
; Line 996
  0002b	f6 46 30 40	 test	 BYTE PTR [esi+48], 64	; 00000040H
  0002f	74 13		 je	 SHORT $LN1@atomic
  00031	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00034	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00038	74 0a		 je	 SHORT $LN1@atomic
  0003a	50		 push	 eax
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 _reallymarkobject
  00041	83 c4 08	 add	 esp, 8
$LN1@atomic:
; Line 997
  00044	56		 push	 esi
  00045	e8 00 00 00 00	 call	 _markmt
; Line 999
  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 _remarkupvals
; Line 1000
  00050	56		 push	 esi
  00051	e8 00 00 00 00	 call	 _propagateall
; Line 1001
  00056	8b 5e 10	 mov	 ebx, DWORD PTR [esi+16]
; Line 1003
  00059	56		 push	 esi
  0005a	89 7e 4c	 mov	 DWORD PTR [esi+76], edi
  0005d	e8 00 00 00 00	 call	 _propagateall
; Line 1005
  00062	56		 push	 esi
  00063	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0006a	e8 00 00 00 00	 call	 _convergeephemerons
; Line 1008
  0006f	6a 00		 push	 0
  00071	ff 76 54	 push	 DWORD PTR [esi+84]
  00074	56		 push	 esi
  00075	e8 00 00 00 00	 call	 _clearvalues
; Line 1009
  0007a	6a 00		 push	 0
  0007c	ff 76 5c	 push	 DWORD PTR [esi+92]
  0007f	56		 push	 esi
  00080	e8 00 00 00 00	 call	 _clearvalues
; Line 1010
  00085	8b 46 54	 mov	 eax, DWORD PTR [esi+84]
; Line 1012
  00088	8d 56 60	 lea	 edx, DWORD PTR [esi+96]
  0008b	03 5e 10	 add	 ebx, DWORD PTR [esi+16]
  0008e	8d 7e 48	 lea	 edi, DWORD PTR [esi+72]
  00091	89 45 08	 mov	 DWORD PTR _origweak$1$[ebp], eax
  00094	83 c4 2c	 add	 esp, 44			; 0000002cH
  00097	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0009a	89 45 fc	 mov	 DWORD PTR _origall$1$[ebp], eax
  0009d	8b 02		 mov	 eax, DWORD PTR [edx]
  0009f	85 c0		 test	 eax, eax
  000a1	74 08		 je	 SHORT $LN11@atomic
$LL12@atomic:
  000a3	8b d0		 mov	 edx, eax
  000a5	8b 02		 mov	 eax, DWORD PTR [edx]
  000a7	85 c0		 test	 eax, eax
  000a9	75 f8		 jne	 SHORT $LL12@atomic
$LN11@atomic:
  000ab	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000ad	85 c9		 test	 ecx, ecx
  000af	74 1c		 je	 SHORT $LN7@atomic
$LL8@atomic:
  000b1	f6 41 05 03	 test	 BYTE PTR [ecx+5], 3
  000b5	75 04		 jne	 SHORT $LN6@atomic
  000b7	8b f9		 mov	 edi, ecx
  000b9	eb 0c		 jmp	 SHORT $LN5@atomic
$LN6@atomic:
  000bb	8b 01		 mov	 eax, DWORD PTR [ecx]
  000bd	89 07		 mov	 DWORD PTR [edi], eax
  000bf	8b 02		 mov	 eax, DWORD PTR [edx]
  000c1	89 01		 mov	 DWORD PTR [ecx], eax
  000c3	89 0a		 mov	 DWORD PTR [edx], ecx
  000c5	8b d1		 mov	 edx, ecx
$LN5@atomic:
  000c7	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000c9	85 c9		 test	 ecx, ecx
  000cb	75 e4		 jne	 SHORT $LL8@atomic
$LN7@atomic:
; Line 1014
  000cd	56		 push	 esi
  000ce	c7 46 6c 01 00
	00 00		 mov	 DWORD PTR [esi+108], 1
  000d5	e8 00 00 00 00	 call	 _markbeingfnz
; Line 1015
  000da	56		 push	 esi
  000db	e8 00 00 00 00	 call	 _propagateall
; Line 1017
  000e0	56		 push	 esi
  000e1	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  000e8	e8 00 00 00 00	 call	 _convergeephemerons
; Line 1020
  000ed	6a 00		 push	 0
  000ef	ff 76 58	 push	 DWORD PTR [esi+88]
  000f2	56		 push	 esi
  000f3	e8 00 00 00 00	 call	 _clearkeys
; Line 1021
  000f8	6a 00		 push	 0
  000fa	ff 76 5c	 push	 DWORD PTR [esi+92]
  000fd	56		 push	 esi
  000fe	e8 00 00 00 00	 call	 _clearkeys
; Line 1023
  00103	ff 75 08	 push	 DWORD PTR _origweak$1$[ebp]
  00106	ff 76 54	 push	 DWORD PTR [esi+84]
  00109	56		 push	 esi
  0010a	e8 00 00 00 00	 call	 _clearvalues
; Line 1024
  0010f	ff 75 fc	 push	 DWORD PTR _origall$1$[ebp]
  00112	ff 76 5c	 push	 DWORD PTR [esi+92]
  00115	56		 push	 esi
  00116	e8 00 00 00 00	 call	 _clearvalues
; Line 1025
  0011b	56		 push	 esi
  0011c	e8 00 00 00 00	 call	 _luaS_clearcache
; Line 1026
  00121	80 76 3c 03	 xor	 BYTE PTR [esi+60], 3
  00125	83 c4 40	 add	 esp, 64			; 00000040H
; Line 1027
  00128	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0012b	03 c3		 add	 eax, ebx
  0012d	5f		 pop	 edi
  0012e	5e		 pop	 esi
  0012f	5b		 pop	 ebx
; Line 1029
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c3		 ret	 0
_atomic	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _entersweep
_TEXT	SEGMENT
_n$ = 8							; size = 4
_L$ = 8							; size = 4
_entersweep PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 960
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 961
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
; Line 965
  00006	8d 45 08	 lea	 eax, DWORD PTR _n$[ebp]
  00009	56		 push	 esi
  0000a	50		 push	 eax
  0000b	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _n$[ebp], 0
  00012	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
  00015	8d 46 40	 lea	 eax, DWORD PTR [esi+64]
  00018	c6 46 3d 02	 mov	 BYTE PTR [esi+61], 2
  0001c	50		 push	 eax
  0001d	51		 push	 ecx
  0001e	e8 00 00 00 00	 call	 _sweeptolive
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH
  00026	89 46 44	 mov	 DWORD PTR [esi+68], eax
; Line 966
  00029	8b 45 08	 mov	 eax, DWORD PTR _n$[ebp]
  0002c	5e		 pop	 esi
; Line 967
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
_entersweep ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _setpause
_TEXT	SEGMENT
_g$ = 8							; size = 4
_setpause PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 940
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 942
  00004	8b 75 08	 mov	 esi, DWORD PTR _g$[ebp]
  00007	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0000c	57		 push	 edi
  0000d	f7 66 14	 mul	 DWORD PTR [esi+20]
; Line 946
  00010	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00015	8b 4e 70	 mov	 ecx, DWORD PTR [esi+112]
  00018	8b fa		 mov	 edi, edx
  0001a	99		 cdq
  0001b	c1 ef 05	 shr	 edi, 5
  0001e	f7 ff		 idiv	 edi
  00020	3b c8		 cmp	 ecx, eax
  00022	7d 05		 jge	 SHORT $LN3@setpause
  00024	0f af cf	 imul	 ecx, edi
  00027	eb 05		 jmp	 SHORT $LN4@setpause
$LN3@setpause:
  00029	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
$LN4@setpause:
; Line 948
  0002e	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00031	03 46 08	 add	 eax, DWORD PTR [esi+8]
  00034	2b c1		 sub	 eax, ecx
  00036	50		 push	 eax
  00037	56		 push	 esi
  00038	e8 00 00 00 00	 call	 _luaE_setdebt
  0003d	83 c4 08	 add	 esp, 8
  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
; Line 949
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
_setpause ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _separatetobefnz
_TEXT	SEGMENT
_g$ = 8							; size = 4
_all$ = 12						; size = 4
_separatetobefnz PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 880
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 882
  00003	8b 45 08	 mov	 eax, DWORD PTR _g$[ebp]
  00006	56		 push	 esi
; Line 883
  00007	8d 50 60	 lea	 edx, DWORD PTR [eax+96]
  0000a	8d 70 48	 lea	 esi, DWORD PTR [eax+72]
  0000d	8b 02		 mov	 eax, DWORD PTR [edx]
  0000f	85 c0		 test	 eax, eax
  00011	74 08		 je	 SHORT $LN7@separateto
$LL8@separateto:
  00013	8b d0		 mov	 edx, eax
  00015	8b 02		 mov	 eax, DWORD PTR [edx]
  00017	85 c0		 test	 eax, eax
  00019	75 f8		 jne	 SHORT $LL8@separateto
$LN7@separateto:
; Line 884
  0001b	8b 06		 mov	 eax, DWORD PTR [esi]
  0001d	85 c0		 test	 eax, eax
  0001f	74 25		 je	 SHORT $LN3@separateto
  00021	57		 push	 edi
  00022	8b 7d 0c	 mov	 edi, DWORD PTR _all$[ebp]
$LL4@separateto:
; Line 886
  00025	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00029	75 08		 jne	 SHORT $LN2@separateto
  0002b	85 ff		 test	 edi, edi
  0002d	75 04		 jne	 SHORT $LN2@separateto
; Line 887
  0002f	8b f0		 mov	 esi, eax
; Line 888
  00031	eb 0c		 jmp	 SHORT $LN1@separateto
$LN2@separateto:
; Line 889
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 0e		 mov	 DWORD PTR [esi], ecx
; Line 890
  00037	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00039	89 08		 mov	 DWORD PTR [eax], ecx
; Line 891
  0003b	89 02		 mov	 DWORD PTR [edx], eax
; Line 892
  0003d	8b d0		 mov	 edx, eax
$LN1@separateto:
; Line 884
  0003f	8b 06		 mov	 eax, DWORD PTR [esi]
  00041	85 c0		 test	 eax, eax
  00043	75 e0		 jne	 SHORT $LL4@separateto
  00045	5f		 pop	 edi
$LN3@separateto:
  00046	5e		 pop	 esi
; Line 895
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
_separatetobefnz ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _findlast
_TEXT	SEGMENT
_p$ = 8							; size = 4
_findlast PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 869
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 870
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _p$[ebp]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	85 c0		 test	 eax, eax
  0000a	74 0c		 je	 SHORT $LN9@findlast
  0000c	8d 64 24 00	 npad	 4
$LL2@findlast:
; Line 871
  00010	8b c8		 mov	 ecx, eax
  00012	8b 01		 mov	 eax, DWORD PTR [ecx]
  00014	85 c0		 test	 eax, eax
  00016	75 f8		 jne	 SHORT $LL2@findlast
$LN9@findlast:
; Line 872
  00018	8b c1		 mov	 eax, ecx
; Line 873
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
_findlast ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _callallpendingfinalizers
_TEXT	SEGMENT
_v$1 = -20						; size = 16
_g$1$ = -4						; size = 4
_L$ = 8							; size = 4
_oldah$1$ = 11						; size = 1
_propagateerrors$ = 12					; size = 4
_callallpendingfinalizers PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 859
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	57		 push	 edi
; Line 860
  00007	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0000a	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0000d	89 45 fc	 mov	 DWORD PTR _g$1$[ebp], eax
; Line 861
  00010	83 78 60 00	 cmp	 DWORD PTR [eax+96], 0
  00014	0f 84 d4 00 00
	00		 je	 $LN20@callallpen
  0001a	53		 push	 ebx
  0001b	56		 push	 esi
  0001c	8d 64 24 00	 npad	 4
$LL2@callallpen:
; Line 862
  00020	8b 77 10	 mov	 esi, DWORD PTR [edi+16]
  00023	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	89 4e 60	 mov	 DWORD PTR [esi+96], ecx
  0002b	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx
  00030	89 46 40	 mov	 DWORD PTR [esi+64], eax
  00033	80 60 05 f7	 and	 BYTE PTR [eax+5], 247	; 000000f7H
  00037	8a 4e 3d	 mov	 cl, BYTE PTR [esi+61]
  0003a	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0003d	80 f9 02	 cmp	 cl, 2
  00040	72 13		 jb	 SHORT $LN12@callallpen
  00042	80 f9 05	 cmp	 cl, 5
  00045	77 0e		 ja	 SHORT $LN12@callallpen
  00047	8a 4e 3c	 mov	 cl, BYTE PTR [esi+60]
  0004a	80 e2 f8	 and	 dl, 248			; 000000f8H
  0004d	80 e1 03	 and	 cl, 3
  00050	0a ca		 or	 cl, dl
  00052	88 48 05	 mov	 BYTE PTR [eax+5], cl
$LN12@callallpen:
  00055	89 45 ec	 mov	 DWORD PTR _v$1[ebp], eax
  00058	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  0005c	83 c8 40	 or	 eax, 64			; 00000040H
  0005f	89 45 f4	 mov	 DWORD PTR _v$1[ebp+8], eax
  00062	8d 45 ec	 lea	 eax, DWORD PTR _v$1[ebp]
  00065	6a 02		 push	 2
  00067	50		 push	 eax
  00068	57		 push	 edi
  00069	e8 00 00 00 00	 call	 _luaT_gettmbyobj
  0006e	8b d0		 mov	 edx, eax
  00070	83 c4 0c	 add	 esp, 12			; 0000000cH
  00073	85 d2		 test	 edx, edx
  00075	74 68		 je	 SHORT $LN6@callallpen
  00077	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0007a	83 e1 0f	 and	 ecx, 15			; 0000000fH
  0007d	80 f9 06	 cmp	 cl, 6
  00080	75 5d		 jne	 SHORT $LN6@callallpen
  00082	8a 47 71	 mov	 al, BYTE PTR [edi+113]
  00085	0f b6 5e 3f	 movzx	 ebx, BYTE PTR [esi+63]
  00089	88 45 0b	 mov	 BYTE PTR _oldah$1$[ebp], al
  0008c	c6 47 71 00	 mov	 BYTE PTR [edi+113], 0
  00090	c6 46 3f 00	 mov	 BYTE PTR [esi+63], 0
  00094	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00097	f3 0f 6f 02	 movdqu	 xmm0, XMMWORD PTR [edx]
  0009b	6a 00		 push	 0
  0009d	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
  000a1	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  000a4	f3 0f 6f 45 ec	 movdqu	 xmm0, XMMWORD PTR _v$1[ebp]
  000a9	f3 0f 7f 40 10	 movdqu	 XMMWORD PTR [eax+16], xmm0
  000ae	83 47 0c 20	 add	 DWORD PTR [edi+12], 32	; 00000020H
  000b2	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  000b5	2b 47 20	 sub	 eax, DWORD PTR [edi+32]
  000b8	83 e8 20	 sub	 eax, 32			; 00000020H
  000bb	50		 push	 eax
  000bc	6a 00		 push	 0
  000be	68 00 00 00 00	 push	 OFFSET _dothecall
  000c3	57		 push	 edi
  000c4	e8 00 00 00 00	 call	 _luaD_pcall
  000c9	8a 4d 0b	 mov	 cl, BYTE PTR _oldah$1$[ebp]
  000cc	83 c4 14	 add	 esp, 20			; 00000014H
  000cf	88 4f 71	 mov	 BYTE PTR [edi+113], cl
  000d2	88 5e 3f	 mov	 BYTE PTR [esi+63], bl
  000d5	85 c0		 test	 eax, eax
  000d7	74 06		 je	 SHORT $LN6@callallpen
  000d9	83 7d 0c 00	 cmp	 DWORD PTR _propagateerrors$[ebp], 0
  000dd	75 14		 jne	 SHORT $LN17@callallpen
$LN6@callallpen:
; Line 861
  000df	8b 45 fc	 mov	 eax, DWORD PTR _g$1$[ebp]
  000e2	83 78 60 00	 cmp	 DWORD PTR [eax+96], 0
  000e6	0f 85 34 ff ff
	ff		 jne	 $LL2@callallpen
  000ec	5e		 pop	 esi
  000ed	5b		 pop	 ebx
$LN20@callallpen:
  000ee	5f		 pop	 edi
; Line 863
  000ef	8b e5		 mov	 esp, ebp
  000f1	5d		 pop	 ebp
  000f2	c3		 ret	 0
$LN17@callallpen:
; Line 862
  000f3	83 f8 02	 cmp	 eax, 2
  000f6	75 2d		 jne	 SHORT $LN5@callallpen
  000f8	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  000fb	8b 41 f8	 mov	 eax, DWORD PTR [ecx-8]
  000fe	24 0f		 and	 al, 15			; 0000000fH
  00100	3c 04		 cmp	 al, 4
  00102	75 08		 jne	 SHORT $LN24@callallpen
  00104	8b 41 f0	 mov	 eax, DWORD PTR [ecx-16]
  00107	83 c0 10	 add	 eax, 16			; 00000010H
  0010a	eb 05		 jmp	 SHORT $LN11@callallpen
$LN24@callallpen:
  0010c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0L@EDOLMPAK@no?5message?$AA@
$LN11@callallpen:
  00111	50		 push	 eax
  00112	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@HIAKJHOM@error?5in?5__gc?5metamethod?5?$CI?$CFs?$CJ?$AA@
  00117	57		 push	 edi
  00118	e8 00 00 00 00	 call	 _luaO_pushfstring
  0011d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00120	b8 05 00 00 00	 mov	 eax, 5
$LN5@callallpen:
  00125	50		 push	 eax
  00126	57		 push	 edi
  00127	e8 00 00 00 00	 call	 _luaD_throw
$LN25@callallpen:
$LN23@callallpen:
  0012c	cc		 int	 3
_callallpendingfinalizers ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _runafewfinalizers
_TEXT	SEGMENT
_v$1 = -24						; size = 16
_g$1$ = -8						; size = 4
_i$1$ = -4						; size = 4
_L$ = 8							; size = 4
_oldah$1$ = 11						; size = 1
_runafewfinalizers PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 844
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	57		 push	 edi
; Line 845
  00007	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
; Line 848
  0000a	33 c0		 xor	 eax, eax
  0000c	89 45 fc	 mov	 DWORD PTR _i$1$[ebp], eax
  0000f	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  00012	89 4d f8	 mov	 DWORD PTR _g$1$[ebp], ecx
  00015	39 41 60	 cmp	 DWORD PTR [ecx+96], eax
  00018	0f 84 db 00 00
	00		 je	 $LN24@runafewfin
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
$LL3@runafewfin:
  00020	3b 41 6c	 cmp	 eax, DWORD PTR [ecx+108]
  00023	0f 83 ce 00 00
	00		 jae	 $LN25@runafewfin
; Line 849
  00029	8b 77 10	 mov	 esi, DWORD PTR [edi+16]
  0002c	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	89 4e 60	 mov	 DWORD PTR [esi+96], ecx
  00034	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]
  00037	89 08		 mov	 DWORD PTR [eax], ecx
  00039	89 46 40	 mov	 DWORD PTR [esi+64], eax
  0003c	80 60 05 f7	 and	 BYTE PTR [eax+5], 247	; 000000f7H
  00040	8a 4e 3d	 mov	 cl, BYTE PTR [esi+61]
  00043	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00046	80 f9 02	 cmp	 cl, 2
  00049	72 13		 jb	 SHORT $LN15@runafewfin
  0004b	80 f9 05	 cmp	 cl, 5
  0004e	77 0e		 ja	 SHORT $LN15@runafewfin
  00050	8a 4e 3c	 mov	 cl, BYTE PTR [esi+60]
  00053	80 e2 f8	 and	 dl, 248			; 000000f8H
  00056	80 e1 03	 and	 cl, 3
  00059	0a ca		 or	 cl, dl
  0005b	88 48 05	 mov	 BYTE PTR [eax+5], cl
$LN15@runafewfin:
  0005e	89 45 e8	 mov	 DWORD PTR _v$1[ebp], eax
  00061	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  00065	83 c8 40	 or	 eax, 64			; 00000040H
  00068	89 45 f0	 mov	 DWORD PTR _v$1[ebp+8], eax
  0006b	8d 45 e8	 lea	 eax, DWORD PTR _v$1[ebp]
  0006e	6a 02		 push	 2
  00070	50		 push	 eax
  00071	57		 push	 edi
  00072	e8 00 00 00 00	 call	 _luaT_gettmbyobj
  00077	8b c8		 mov	 ecx, eax
  00079	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007c	85 c9		 test	 ecx, ecx
  0007e	74 63		 je	 SHORT $LN2@runafewfin
  00080	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00083	83 e0 0f	 and	 eax, 15			; 0000000fH
  00086	3c 06		 cmp	 al, 6
  00088	75 59		 jne	 SHORT $LN2@runafewfin
  0008a	8a 47 71	 mov	 al, BYTE PTR [edi+113]
  0008d	0f b6 5e 3f	 movzx	 ebx, BYTE PTR [esi+63]
  00091	88 45 0b	 mov	 BYTE PTR _oldah$1$[ebp], al
  00094	c6 47 71 00	 mov	 BYTE PTR [edi+113], 0
  00098	c6 46 3f 00	 mov	 BYTE PTR [esi+63], 0
  0009c	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0009f	f3 0f 6f 01	 movdqu	 xmm0, XMMWORD PTR [ecx]
  000a3	6a 00		 push	 0
  000a5	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
  000a9	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  000ac	f3 0f 6f 45 e8	 movdqu	 xmm0, XMMWORD PTR _v$1[ebp]
  000b1	f3 0f 7f 40 10	 movdqu	 XMMWORD PTR [eax+16], xmm0
  000b6	83 47 0c 20	 add	 DWORD PTR [edi+12], 32	; 00000020H
  000ba	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  000bd	2b 47 20	 sub	 eax, DWORD PTR [edi+32]
  000c0	83 e8 20	 sub	 eax, 32			; 00000020H
  000c3	50		 push	 eax
  000c4	6a 00		 push	 0
  000c6	68 00 00 00 00	 push	 OFFSET _dothecall
  000cb	57		 push	 edi
  000cc	e8 00 00 00 00	 call	 _luaD_pcall
  000d1	8b c8		 mov	 ecx, eax
  000d3	83 c4 14	 add	 esp, 20			; 00000014H
  000d6	8a 45 0b	 mov	 al, BYTE PTR _oldah$1$[ebp]
  000d9	88 47 71	 mov	 BYTE PTR [edi+113], al
  000dc	88 5e 3f	 mov	 BYTE PTR [esi+63], bl
  000df	85 c9		 test	 ecx, ecx
  000e1	75 26		 jne	 SHORT $LN20@runafewfin
$LN2@runafewfin:
; Line 848
  000e3	8b 4d f8	 mov	 ecx, DWORD PTR _g$1$[ebp]
  000e6	8b 45 fc	 mov	 eax, DWORD PTR _i$1$[ebp]
  000e9	40		 inc	 eax
  000ea	89 45 fc	 mov	 DWORD PTR _i$1$[ebp], eax
  000ed	83 79 60 00	 cmp	 DWORD PTR [ecx+96], 0
  000f1	0f 85 29 ff ff
	ff		 jne	 $LL3@runafewfin
$LN25@runafewfin:
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
$LN24@runafewfin:
; Line 851
  000f9	83 79 60 00	 cmp	 DWORD PTR [ecx+96], 0
  000fd	5f		 pop	 edi
  000fe	75 22		 jne	 SHORT $LN6@runafewfin
  00100	33 d2		 xor	 edx, edx
  00102	89 51 6c	 mov	 DWORD PTR [ecx+108], edx
; Line 853
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c3		 ret	 0
$LN20@runafewfin:
; Line 849
  00109	83 f9 02	 cmp	 ecx, 2
  0010c	75 39		 jne	 SHORT $LN8@runafewfin
  0010e	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  00111	8b 41 f8	 mov	 eax, DWORD PTR [ecx-8]
  00114	24 0f		 and	 al, 15			; 0000000fH
  00116	3c 04		 cmp	 al, 4
  00118	75 14		 jne	 SHORT $LN28@runafewfin
  0011a	8b 41 f0	 mov	 eax, DWORD PTR [ecx-16]
  0011d	83 c0 10	 add	 eax, 16			; 00000010H
  00120	eb 11		 jmp	 SHORT $LN14@runafewfin
$LN6@runafewfin:
; Line 851
  00122	8b 51 6c	 mov	 edx, DWORD PTR [ecx+108]
  00125	03 d2		 add	 edx, edx
  00127	89 51 6c	 mov	 DWORD PTR [ecx+108], edx
; Line 853
  0012a	8b e5		 mov	 esp, ebp
  0012c	5d		 pop	 ebp
  0012d	c3		 ret	 0
$LN28@runafewfin:
; Line 849
  0012e	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0L@EDOLMPAK@no?5message?$AA@
$LN14@runafewfin:
  00133	50		 push	 eax
  00134	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@HIAKJHOM@error?5in?5__gc?5metamethod?5?$CI?$CFs?$CJ?$AA@
  00139	57		 push	 edi
  0013a	e8 00 00 00 00	 call	 _luaO_pushfstring
  0013f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00142	b9 05 00 00 00	 mov	 ecx, 5
$LN8@runafewfin:
  00147	51		 push	 ecx
  00148	57		 push	 edi
  00149	e8 00 00 00 00	 call	 _luaD_throw
$LN29@runafewfin:
$LN27@runafewfin:
  0014e	cc		 int	 3
_runafewfinalizers ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _GCTM
_TEXT	SEGMENT
_v$ = -16						; size = 16
_L$ = 8							; size = 4
_oldah$1$ = 11						; size = 1
_propagateerrors$ = 12					; size = 4
_GCTM	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 809
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
; Line 810
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	57		 push	 edi
  0000b	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
; Line 813
  0000e	8b 4f 60	 mov	 ecx, DWORD PTR [edi+96]
  00011	8b 01		 mov	 eax, DWORD PTR [ecx]
  00013	89 47 60	 mov	 DWORD PTR [edi+96], eax
  00016	8b 47 40	 mov	 eax, DWORD PTR [edi+64]
  00019	89 01		 mov	 DWORD PTR [ecx], eax
  0001b	89 4f 40	 mov	 DWORD PTR [edi+64], ecx
  0001e	8a 51 05	 mov	 dl, BYTE PTR [ecx+5]
  00021	80 e2 f7	 and	 dl, 247			; 000000f7H
  00024	88 51 05	 mov	 BYTE PTR [ecx+5], dl
  00027	8a 47 3d	 mov	 al, BYTE PTR [edi+61]
  0002a	3c 02		 cmp	 al, 2
  0002c	72 11		 jb	 SHORT $LN8@GCTM
  0002e	3c 05		 cmp	 al, 5
  00030	77 0d		 ja	 SHORT $LN8@GCTM
  00032	8a 47 3c	 mov	 al, BYTE PTR [edi+60]
  00035	80 e2 f8	 and	 dl, 248			; 000000f8H
  00038	24 03		 and	 al, 3
  0003a	0a c2		 or	 al, dl
  0003c	88 41 05	 mov	 BYTE PTR [ecx+5], al
$LN8@GCTM:
  0003f	89 4d f0	 mov	 DWORD PTR _v$[ebp], ecx
  00042	0f b6 41 04	 movzx	 eax, BYTE PTR [ecx+4]
  00046	83 c8 40	 or	 eax, 64			; 00000040H
  00049	89 45 f8	 mov	 DWORD PTR _v$[ebp+8], eax
; Line 814
  0004c	8d 45 f0	 lea	 eax, DWORD PTR _v$[ebp]
  0004f	6a 02		 push	 2
  00051	50		 push	 eax
  00052	56		 push	 esi
  00053	e8 00 00 00 00	 call	 _luaT_gettmbyobj
  00058	8b d0		 mov	 edx, eax
  0005a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 815
  0005d	85 d2		 test	 edx, edx
  0005f	0f 84 83 00 00
	00		 je	 $LN2@GCTM
  00065	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00068	83 e1 0f	 and	 ecx, 15			; 0000000fH
  0006b	80 f9 06	 cmp	 cl, 6
  0006e	75 78		 jne	 SHORT $LN2@GCTM
; Line 817
  00070	8a 46 71	 mov	 al, BYTE PTR [esi+113]
  00073	53		 push	 ebx
; Line 818
  00074	0f b6 5f 3f	 movzx	 ebx, BYTE PTR [edi+63]
  00078	88 45 0b	 mov	 BYTE PTR _oldah$1$[ebp], al
; Line 819
  0007b	c6 46 71 00	 mov	 BYTE PTR [esi+113], 0
; Line 820
  0007f	c6 47 3f 00	 mov	 BYTE PTR [edi+63], 0
; Line 821
  00083	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00086	f3 0f 6f 02	 movdqu	 xmm0, XMMWORD PTR [edx]
; Line 824
  0008a	6a 00		 push	 0
  0008c	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
  00090	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00093	f3 0f 6f 45 f0	 movdqu	 xmm0, XMMWORD PTR _v$[ebp]
  00098	f3 0f 7f 40 10	 movdqu	 XMMWORD PTR [eax+16], xmm0
  0009d	83 46 0c 20	 add	 DWORD PTR [esi+12], 32	; 00000020H
  000a1	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  000a4	2b 46 20	 sub	 eax, DWORD PTR [esi+32]
  000a7	83 e8 20	 sub	 eax, 32			; 00000020H
  000aa	50		 push	 eax
  000ab	6a 00		 push	 0
  000ad	68 00 00 00 00	 push	 OFFSET _dothecall
  000b2	56		 push	 esi
  000b3	e8 00 00 00 00	 call	 _luaD_pcall
; Line 825
  000b8	8a 4d 0b	 mov	 cl, BYTE PTR _oldah$1$[ebp]
  000bb	83 c4 14	 add	 esp, 20			; 00000014H
  000be	88 4e 71	 mov	 BYTE PTR [esi+113], cl
; Line 826
  000c1	88 5f 3f	 mov	 BYTE PTR [edi+63], bl
  000c4	5b		 pop	 ebx
; Line 827
  000c5	85 c0		 test	 eax, eax
  000c7	74 1f		 je	 SHORT $LN2@GCTM
  000c9	83 7d 0c 00	 cmp	 DWORD PTR _propagateerrors$[ebp], 0
  000cd	74 19		 je	 SHORT $LN2@GCTM
; Line 828
  000cf	83 f8 02	 cmp	 eax, 2
  000d2	75 33		 jne	 SHORT $LN1@GCTM
; Line 831
  000d4	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000d7	8b 41 f8	 mov	 eax, DWORD PTR [ecx-8]
  000da	24 0f		 and	 al, 15			; 0000000fH
  000dc	3c 04		 cmp	 al, 4
  000de	75 0e		 jne	 SHORT $LN12@GCTM
  000e0	8b 41 f0	 mov	 eax, DWORD PTR [ecx-16]
  000e3	83 c0 10	 add	 eax, 16			; 00000010H
  000e6	eb 0b		 jmp	 SHORT $LN7@GCTM
$LN2@GCTM:
  000e8	5f		 pop	 edi
  000e9	5e		 pop	 esi
; Line 838
  000ea	8b e5		 mov	 esp, ebp
  000ec	5d		 pop	 ebp
  000ed	c3		 ret	 0
$LN12@GCTM:
; Line 831
  000ee	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0L@EDOLMPAK@no?5message?$AA@
$LN7@GCTM:
; Line 832
  000f3	50		 push	 eax
  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@HIAKJHOM@error?5in?5__gc?5metamethod?5?$CI?$CFs?$CJ?$AA@
  000f9	56		 push	 esi
  000fa	e8 00 00 00 00	 call	 _luaO_pushfstring
  000ff	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 833
  00102	b8 05 00 00 00	 mov	 eax, 5
$LN1@GCTM:
; Line 835
  00107	50		 push	 eax
  00108	56		 push	 esi
  00109	e8 00 00 00 00	 call	 _luaD_throw
$LN13@GCTM:
$LN11@GCTM:
  0010e	cc		 int	 3
_GCTM	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _dothecall
_TEXT	SEGMENT
_L$ = 8							; size = 4
_ud$ = 12						; size = 4
_dothecall PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 803
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 805
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00006	6a 00		 push	 0
  00008	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000b	83 e8 20	 sub	 eax, 32			; 00000020H
  0000e	50		 push	 eax
  0000f	51		 push	 ecx
  00010	e8 00 00 00 00	 call	 _luaD_callnoyield
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 806
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
_dothecall ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _udata2finalize
_TEXT	SEGMENT
_g$ = 8							; size = 4
_udata2finalize PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 790
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 791
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _g$[ebp]
  00006	53		 push	 ebx
  00007	8b 51 60	 mov	 edx, DWORD PTR [ecx+96]
; Line 793
  0000a	8b 02		 mov	 eax, DWORD PTR [edx]
  0000c	89 41 60	 mov	 DWORD PTR [ecx+96], eax
; Line 794
  0000f	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]
  00012	89 02		 mov	 DWORD PTR [edx], eax
; Line 795
  00014	89 51 40	 mov	 DWORD PTR [ecx+64], edx
; Line 796
  00017	80 62 05 f7	 and	 BYTE PTR [edx+5], 247	; 000000f7H
; Line 797
  0001b	8a 59 3d	 mov	 bl, BYTE PTR [ecx+61]
  0001e	8a 42 05	 mov	 al, BYTE PTR [edx+5]
  00021	80 fb 02	 cmp	 bl, 2
  00024	72 12		 jb	 SHORT $LN4@udata2fina
  00026	80 fb 05	 cmp	 bl, 5
  00029	77 0d		 ja	 SHORT $LN4@udata2fina
; Line 798
  0002b	8a 49 3c	 mov	 cl, BYTE PTR [ecx+60]
  0002e	24 f8		 and	 al, 248			; 000000f8H
  00030	80 e1 03	 and	 cl, 3
  00033	0a c8		 or	 cl, al
  00035	88 4a 05	 mov	 BYTE PTR [edx+5], cl
$LN4@udata2fina:
; Line 799
  00038	8b c2		 mov	 eax, edx
  0003a	5b		 pop	 ebx
; Line 800
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_udata2finalize ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _checkSizes
_TEXT	SEGMENT
_L$ = 8							; size = 4
_g$ = 12						; size = 4
_checkSizes PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 780
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 781
  00004	8b 75 0c	 mov	 esi, DWORD PTR _g$[ebp]
  00007	80 7e 3e 01	 cmp	 BYTE PTR [esi+62], 1
  0000b	74 33		 je	 SHORT $LN2@checkSizes
; Line 783
  0000d	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00010	8b c1		 mov	 eax, ecx
  00012	99		 cdq
  00013	83 e2 03	 and	 edx, 3
  00016	03 c2		 add	 eax, edx
  00018	c1 f8 02	 sar	 eax, 2
  0001b	57		 push	 edi
  0001c	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  0001f	39 46 1c	 cmp	 DWORD PTR [esi+28], eax
  00022	7d 13		 jge	 SHORT $LN1@checkSizes
; Line 784
  00024	8b c1		 mov	 eax, ecx
  00026	99		 cdq
  00027	2b c2		 sub	 eax, edx
  00029	d1 f8		 sar	 eax, 1
  0002b	50		 push	 eax
  0002c	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0002f	e8 00 00 00 00	 call	 _luaS_resize
  00034	83 c4 08	 add	 esp, 8
$LN1@checkSizes:
; Line 785
  00037	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0003a	2b c7		 sub	 eax, edi
  0003c	01 46 14	 add	 DWORD PTR [esi+20], eax
  0003f	5f		 pop	 edi
$LN2@checkSizes:
  00040	5e		 pop	 esi
; Line 787
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
_checkSizes ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _sweeptolive
_TEXT	SEGMENT
_old$1$ = -12						; size = 4
_white$1$ = -8						; size = 4
_ow$1$ = -4						; size = 4
_L$ = 8							; size = 4
_i$1$ = 12						; size = 4
_p$ = 12						; size = 4
_n$ = 16						; size = 4
_sweeptolive PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 757
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
; Line 758
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR _p$[ebp]
; Line 759
  00009	33 c0		 xor	 eax, eax
  0000b	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	89 4d f4	 mov	 DWORD PTR _old$1$[ebp], ecx
  00013	57		 push	 edi
$LL4@sweeptoliv:
; Line 761
  00014	40		 inc	 eax
; Line 762
  00015	bf 01 00 00 00	 mov	 edi, 1
  0001a	89 45 0c	 mov	 DWORD PTR _i$1$[ebp], eax
  0001d	8b f1		 mov	 esi, ecx
  0001f	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00022	0f b6 58 3c	 movzx	 ebx, BYTE PTR [eax+60]
  00026	8b c3		 mov	 eax, ebx
  00028	83 e3 03	 and	 ebx, 3
  0002b	83 f0 03	 xor	 eax, 3
  0002e	89 5d f8	 mov	 DWORD PTR _white$1$[ebp], ebx
  00031	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00034	89 45 fc	 mov	 DWORD PTR _ow$1$[ebp], eax
  00037	74 44		 je	 SHORT $LN9@sweeptoliv
  00039	8d a4 24 00 00
	00 00		 npad	 7
$LL10@sweeptoliv:
  00040	8b c7		 mov	 eax, edi
  00042	4f		 dec	 edi
  00043	85 c0		 test	 eax, eax
  00045	74 33		 je	 SHORT $LN20@sweeptoliv
  00047	8b 16		 mov	 edx, DWORD PTR [esi]
  00049	8b 5d f8	 mov	 ebx, DWORD PTR _white$1$[ebp]
  0004c	0f b6 42 05	 movzx	 eax, BYTE PTR [edx+5]
  00050	8b c8		 mov	 ecx, eax
  00052	83 f1 03	 xor	 ecx, 3
  00055	85 4d fc	 test	 ecx, DWORD PTR _ow$1$[ebp]
  00058	75 12		 jne	 SHORT $LN8@sweeptoliv
  0005a	8b 02		 mov	 eax, DWORD PTR [edx]
  0005c	52		 push	 edx
  0005d	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00060	89 06		 mov	 DWORD PTR [esi], eax
  00062	e8 00 00 00 00	 call	 _freeobj
  00067	83 c4 08	 add	 esp, 8
  0006a	eb 09		 jmp	 SHORT $LN7@sweeptoliv
$LN8@sweeptoliv:
  0006c	24 f8		 and	 al, 248			; 000000f8H
  0006e	8b f2		 mov	 esi, edx
  00070	0a c3		 or	 al, bl
  00072	88 42 05	 mov	 BYTE PTR [edx+5], al
$LN7@sweeptoliv:
  00075	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00078	75 c6		 jne	 SHORT $LL10@sweeptoliv
$LN20@sweeptoliv:
  0007a	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
$LN9@sweeptoliv:
  0007d	33 c0		 xor	 eax, eax
  0007f	8b ce		 mov	 ecx, esi
  00081	39 06		 cmp	 DWORD PTR [esi], eax
  00083	0f 44 c8	 cmove	 ecx, eax
; Line 763
  00086	8b 45 0c	 mov	 eax, DWORD PTR _i$1$[ebp]
  00089	3b 4d f4	 cmp	 ecx, DWORD PTR _old$1$[ebp]
  0008c	74 86		 je	 SHORT $LL4@sweeptoliv
; Line 764
  0008e	8b 45 10	 mov	 eax, DWORD PTR _n$[ebp]
  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	85 c0		 test	 eax, eax
  00096	74 05		 je	 SHORT $LN19@sweeptoliv
  00098	8b 55 0c	 mov	 edx, DWORD PTR _i$1$[ebp]
  0009b	01 10		 add	 DWORD PTR [eax], edx
$LN19@sweeptoliv:
; Line 765
  0009d	8b c1		 mov	 eax, ecx
; Line 766
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c3		 ret	 0
_sweeptolive ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _sweeplist
_TEXT	SEGMENT
_white$1$ = -8						; size = 4
_ow$1$ = -4						; size = 4
_L$ = 8							; size = 4
_p$ = 12						; size = 4
_count$ = 16						; size = 4
_sweeplist PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 734
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
; Line 735
  00006	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
  00009	57		 push	 edi
; Line 738
  0000a	8b 7d 0c	 mov	 edi, DWORD PTR _p$[ebp]
  0000d	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00010	0f b6 40 3c	 movzx	 eax, BYTE PTR [eax+60]
  00014	8b c8		 mov	 ecx, eax
  00016	83 e0 03	 and	 eax, 3
  00019	83 f1 03	 xor	 ecx, 3
  0001c	89 45 f8	 mov	 DWORD PTR _white$1$[ebp], eax
  0001f	83 3f 00	 cmp	 DWORD PTR [edi], 0
  00022	89 4d fc	 mov	 DWORD PTR _ow$1$[ebp], ecx
  00025	0f 84 f5 00 00
	00		 je	 $LN24@sweeplist
  0002b	53		 push	 ebx
  0002c	8b 5d 10	 mov	 ebx, DWORD PTR _count$[ebp]
  0002f	56		 push	 esi
$LL4@sweeplist:
  00030	8b c3		 mov	 eax, ebx
  00032	4b		 dec	 ebx
  00033	85 c0		 test	 eax, eax
  00035	0f 84 e3 00 00
	00		 je	 $LN26@sweeplist
; Line 739
  0003b	8b 37		 mov	 esi, DWORD PTR [edi]
; Line 741
  0003d	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
  00040	0f b6 4e 05	 movzx	 ecx, BYTE PTR [esi+5]
  00044	8b c1		 mov	 eax, ecx
  00046	83 f0 03	 xor	 eax, 3
  00049	85 45 fc	 test	 eax, DWORD PTR _ow$1$[ebp]
  0004c	0f 85 b8 00 00
	00		 jne	 $LN2@sweeplist
; Line 742
  00052	8b 06		 mov	 eax, DWORD PTR [esi]
  00054	89 07		 mov	 DWORD PTR [edi], eax
; Line 743
  00056	0f b6 46 04	 movzx	 eax, BYTE PTR [esi+4]
  0005a	83 c0 fc	 add	 eax, -4			; fffffffcH
  0005d	83 f8 22	 cmp	 eax, 34			; 00000022H
  00060	0f 87 af 00 00
	00		 ja	 $LN1@sweeplist
  00066	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN23@sweeplist[eax]
  0006d	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN28@sweeplist[eax*4]
$LN15@sweeplist:
  00074	56		 push	 esi
  00075	52		 push	 edx
  00076	e8 00 00 00 00	 call	 _luaF_freeproto
  0007b	83 c4 08	 add	 esp, 8
  0007e	e9 92 00 00 00	 jmp	 $LN1@sweeplist
$LN14@sweeplist:
  00083	56		 push	 esi
  00084	52		 push	 edx
  00085	e8 00 00 00 00	 call	 _freeLclosure
  0008a	83 c4 08	 add	 esp, 8
  0008d	e9 83 00 00 00	 jmp	 $LN1@sweeplist
$LN13@sweeplist:
  00092	0f b6 46 06	 movzx	 eax, BYTE PTR [esi+6]
  00096	40		 inc	 eax
  00097	6a 00		 push	 0
  00099	c1 e0 04	 shl	 eax, 4
  0009c	50		 push	 eax
  0009d	56		 push	 esi
  0009e	52		 push	 edx
  0009f	e8 00 00 00 00	 call	 _luaM_realloc_
  000a4	83 c4 10	 add	 esp, 16			; 00000010H
  000a7	eb 6c		 jmp	 SHORT $LN1@sweeplist
$LN12@sweeplist:
  000a9	56		 push	 esi
  000aa	52		 push	 edx
  000ab	e8 00 00 00 00	 call	 _luaH_free
  000b0	83 c4 08	 add	 esp, 8
  000b3	eb 60		 jmp	 SHORT $LN1@sweeplist
$LN11@sweeplist:
  000b5	56		 push	 esi
  000b6	52		 push	 edx
  000b7	e8 00 00 00 00	 call	 _luaE_freethread
  000bc	83 c4 08	 add	 esp, 8
  000bf	eb 54		 jmp	 SHORT $LN1@sweeplist
$LN10@sweeplist:
  000c1	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  000c4	6a 00		 push	 0
  000c6	83 c0 18	 add	 eax, 24			; 00000018H
  000c9	50		 push	 eax
  000ca	56		 push	 esi
  000cb	52		 push	 edx
  000cc	e8 00 00 00 00	 call	 _luaM_realloc_
  000d1	83 c4 10	 add	 esp, 16			; 00000010H
  000d4	eb 3f		 jmp	 SHORT $LN1@sweeplist
$LN9@sweeplist:
  000d6	56		 push	 esi
  000d7	52		 push	 edx
  000d8	e8 00 00 00 00	 call	 _luaS_remove
  000dd	0f b6 46 07	 movzx	 eax, BYTE PTR [esi+7]
  000e1	6a 00		 push	 0
  000e3	83 c0 11	 add	 eax, 17			; 00000011H
  000e6	50		 push	 eax
  000e7	56		 push	 esi
  000e8	ff 75 08	 push	 DWORD PTR _L$[ebp]
  000eb	e8 00 00 00 00	 call	 _luaM_realloc_
  000f0	83 c4 18	 add	 esp, 24			; 00000018H
  000f3	eb 20		 jmp	 SHORT $LN1@sweeplist
$LN8@sweeplist:
  000f5	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  000f8	6a 00		 push	 0
  000fa	83 c0 11	 add	 eax, 17			; 00000011H
  000fd	50		 push	 eax
  000fe	56		 push	 esi
  000ff	52		 push	 edx
  00100	e8 00 00 00 00	 call	 _luaM_realloc_
  00105	83 c4 10	 add	 esp, 16			; 00000010H
; Line 745
  00108	eb 0b		 jmp	 SHORT $LN1@sweeplist
$LN2@sweeplist:
; Line 746
  0010a	80 e1 f8	 and	 cl, 248			; 000000f8H
; Line 747
  0010d	8b fe		 mov	 edi, esi
  0010f	0a 4d f8	 or	 cl, BYTE PTR _white$1$[ebp]
  00112	88 4e 05	 mov	 BYTE PTR [esi+5], cl
$LN1@sweeplist:
; Line 738
  00115	83 3f 00	 cmp	 DWORD PTR [edi], 0
  00118	0f 85 12 ff ff
	ff		 jne	 $LL4@sweeplist
$LN26@sweeplist:
  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx
$LN24@sweeplist:
; Line 750
  00120	33 c0		 xor	 eax, eax
  00122	39 07		 cmp	 DWORD PTR [edi], eax
  00124	0f 44 f8	 cmove	 edi, eax
  00127	8b c7		 mov	 eax, edi
  00129	5f		 pop	 edi
; Line 751
  0012a	8b e5		 mov	 esp, ebp
  0012c	5d		 pop	 ebp
  0012d	c3		 ret	 0
  0012e	8b ff		 npad	 2
$LN28@sweeplist:
  00130	00 00 00 00	 DD	 $LN9@sweeplist
  00134	00 00 00 00	 DD	 $LN12@sweeplist
  00138	00 00 00 00	 DD	 $LN14@sweeplist
  0013c	00 00 00 00	 DD	 $LN10@sweeplist
  00140	00 00 00 00	 DD	 $LN11@sweeplist
  00144	00 00 00 00	 DD	 $LN15@sweeplist
  00148	00 00 00 00	 DD	 $LN8@sweeplist
  0014c	00 00 00 00	 DD	 $LN13@sweeplist
  00150	00 00 00 00	 DD	 $LN1@sweeplist
$LN23@sweeplist:
  00154	00		 DB	 0
  00155	01		 DB	 1
  00156	02		 DB	 2
  00157	03		 DB	 3
  00158	04		 DB	 4
  00159	05		 DB	 5
  0015a	08		 DB	 8
  0015b	08		 DB	 8
  0015c	08		 DB	 8
  0015d	08		 DB	 8
  0015e	08		 DB	 8
  0015f	08		 DB	 8
  00160	08		 DB	 8
  00161	08		 DB	 8
  00162	08		 DB	 8
  00163	08		 DB	 8
  00164	06		 DB	 6
  00165	08		 DB	 8
  00166	08		 DB	 8
  00167	08		 DB	 8
  00168	08		 DB	 8
  00169	08		 DB	 8
  0016a	08		 DB	 8
  0016b	08		 DB	 8
  0016c	08		 DB	 8
  0016d	08		 DB	 8
  0016e	08		 DB	 8
  0016f	08		 DB	 8
  00170	08		 DB	 8
  00171	08		 DB	 8
  00172	08		 DB	 8
  00173	08		 DB	 8
  00174	08		 DB	 8
  00175	08		 DB	 8
  00176	07		 DB	 7
_sweeplist ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _freeobj
_TEXT	SEGMENT
_L$ = 8							; size = 4
_o$ = 12						; size = 4
_freeobj PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 696
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi
; Line 697
  00004	8b 7d 0c	 mov	 edi, DWORD PTR _o$[ebp]
  00007	0f b6 47 04	 movzx	 eax, BYTE PTR [edi+4]
  0000b	83 c0 fc	 add	 eax, -4			; fffffffcH
  0000e	83 f8 22	 cmp	 eax, 34			; 00000022H
  00011	0f 87 b3 00 00
	00		 ja	 $LN1@freeobj
  00017	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN14@freeobj[eax]
  0001e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN17@freeobj[eax*4]
$LN9@freeobj:
; Line 698
  00025	57		 push	 edi
  00026	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00029	e8 00 00 00 00	 call	 _luaF_freeproto
  0002e	83 c4 08	 add	 esp, 8
  00031	5f		 pop	 edi
; Line 720
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
$LN8@freeobj:
; Line 700
  00034	57		 push	 edi
  00035	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00038	e8 00 00 00 00	 call	 _freeLclosure
  0003d	83 c4 08	 add	 esp, 8
  00040	5f		 pop	 edi
; Line 720
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
$LN7@freeobj:
; Line 704
  00043	0f b6 47 06	 movzx	 eax, BYTE PTR [edi+6]
  00047	40		 inc	 eax
; Line 715
  00048	6a 00		 push	 0
  0004a	c1 e0 04	 shl	 eax, 4
  0004d	50		 push	 eax
  0004e	57		 push	 edi
  0004f	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00052	e8 00 00 00 00	 call	 _luaM_realloc_
  00057	83 c4 10	 add	 esp, 16			; 00000010H
  0005a	5f		 pop	 edi
; Line 720
  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
$LN6@freeobj:
; Line 707
  0005d	57		 push	 edi
  0005e	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00061	e8 00 00 00 00	 call	 _luaH_free
  00066	83 c4 08	 add	 esp, 8
  00069	5f		 pop	 edi
; Line 720
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
$LN5@freeobj:
; Line 708
  0006c	57		 push	 edi
  0006d	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00070	e8 00 00 00 00	 call	 _luaE_freethread
  00075	83 c4 08	 add	 esp, 8
  00078	5f		 pop	 edi
; Line 720
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
$LN4@freeobj:
; Line 709
  0007b	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
; Line 715
  0007e	6a 00		 push	 0
  00080	83 c0 18	 add	 eax, 24			; 00000018H
  00083	50		 push	 eax
  00084	57		 push	 edi
  00085	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00088	e8 00 00 00 00	 call	 _luaM_realloc_
  0008d	83 c4 10	 add	 esp, 16			; 00000010H
  00090	5f		 pop	 edi
; Line 720
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
$LN3@freeobj:
; Line 711
  00093	57		 push	 edi
  00094	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00097	e8 00 00 00 00	 call	 _luaS_remove
; Line 712
  0009c	0f b6 47 07	 movzx	 eax, BYTE PTR [edi+7]
  000a0	6a 00		 push	 0
  000a2	83 c0 11	 add	 eax, 17			; 00000011H
  000a5	50		 push	 eax
  000a6	57		 push	 edi
  000a7	ff 75 08	 push	 DWORD PTR _L$[ebp]
  000aa	e8 00 00 00 00	 call	 _luaM_realloc_
  000af	83 c4 18	 add	 esp, 24			; 00000018H
  000b2	5f		 pop	 edi
; Line 720
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
$LN2@freeobj:
; Line 715
  000b5	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  000b8	6a 00		 push	 0
  000ba	83 c0 11	 add	 eax, 17			; 00000011H
  000bd	50		 push	 eax
  000be	57		 push	 edi
  000bf	ff 75 08	 push	 DWORD PTR _L$[ebp]
  000c2	e8 00 00 00 00	 call	 _luaM_realloc_
  000c7	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@freeobj:
  000ca	5f		 pop	 edi
; Line 720
  000cb	5d		 pop	 ebp
  000cc	c3		 ret	 0
  000cd	8d 49 00	 npad	 3
$LN17@freeobj:
  000d0	00 00 00 00	 DD	 $LN3@freeobj
  000d4	00 00 00 00	 DD	 $LN6@freeobj
  000d8	00 00 00 00	 DD	 $LN8@freeobj
  000dc	00 00 00 00	 DD	 $LN4@freeobj
  000e0	00 00 00 00	 DD	 $LN5@freeobj
  000e4	00 00 00 00	 DD	 $LN9@freeobj
  000e8	00 00 00 00	 DD	 $LN2@freeobj
  000ec	00 00 00 00	 DD	 $LN7@freeobj
  000f0	00 00 00 00	 DD	 $LN1@freeobj
$LN14@freeobj:
  000f4	00		 DB	 0
  000f5	01		 DB	 1
  000f6	02		 DB	 2
  000f7	03		 DB	 3
  000f8	04		 DB	 4
  000f9	05		 DB	 5
  000fa	08		 DB	 8
  000fb	08		 DB	 8
  000fc	08		 DB	 8
  000fd	08		 DB	 8
  000fe	08		 DB	 8
  000ff	08		 DB	 8
  00100	08		 DB	 8
  00101	08		 DB	 8
  00102	08		 DB	 8
  00103	08		 DB	 8
  00104	06		 DB	 6
  00105	08		 DB	 8
  00106	08		 DB	 8
  00107	08		 DB	 8
  00108	08		 DB	 8
  00109	08		 DB	 8
  0010a	08		 DB	 8
  0010b	08		 DB	 8
  0010c	08		 DB	 8
  0010d	08		 DB	 8
  0010e	08		 DB	 8
  0010f	08		 DB	 8
  00110	08		 DB	 8
  00111	08		 DB	 8
  00112	08		 DB	 8
  00113	08		 DB	 8
  00114	08		 DB	 8
  00115	08		 DB	 8
  00116	07		 DB	 7
_freeobj ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _freeLclosure
_TEXT	SEGMENT
_L$ = 8							; size = 4
_cl$ = 12						; size = 4
_freeLclosure PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 685
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 687
  00003	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 0c	 mov	 ebx, DWORD PTR _cl$[ebp]
  0000a	57		 push	 edi
  0000b	33 ff		 xor	 edi, edi
  0000d	80 7b 06 00	 cmp	 BYTE PTR [ebx+6], 0
  00011	76 34		 jbe	 SHORT $LN2@freeLclosu
  00013	56		 push	 esi
  00014	8d 73 10	 lea	 esi, DWORD PTR [ebx+16]
$LL4@freeLclosu:
; Line 688
  00017	8b 06		 mov	 eax, DWORD PTR [esi]
; Line 689
  00019	85 c0		 test	 eax, eax
  0001b	74 1d		 je	 SHORT $LN3@freeLclosu
; Line 690
  0001d	ff 48 04	 dec	 DWORD PTR [eax+4]
  00020	75 18		 jne	 SHORT $LN3@freeLclosu
  00022	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00025	39 08		 cmp	 DWORD PTR [eax], ecx
  00027	75 11		 jne	 SHORT $LN3@freeLclosu
  00029	6a 00		 push	 0
  0002b	6a 18		 push	 24			; 00000018H
  0002d	50		 push	 eax
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 _luaM_realloc_
  00034	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
  00037	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@freeLclosu:
; Line 687
  0003a	0f b6 43 06	 movzx	 eax, BYTE PTR [ebx+6]
  0003e	47		 inc	 edi
  0003f	83 c6 04	 add	 esi, 4
  00042	3b f8		 cmp	 edi, eax
  00044	7c d1		 jl	 SHORT $LL4@freeLclosu
  00046	5e		 pop	 esi
$LN2@freeLclosu:
; Line 692
  00047	0f b6 43 06	 movzx	 eax, BYTE PTR [ebx+6]
  0004b	6a 00		 push	 0
  0004d	8d 04 85 10 00
	00 00		 lea	 eax, DWORD PTR [eax*4+16]
  00054	50		 push	 eax
  00055	53		 push	 ebx
  00056	52		 push	 edx
  00057	e8 00 00 00 00	 call	 _luaM_realloc_
  0005c	83 c4 10	 add	 esp, 16			; 00000010H
  0005f	5f		 pop	 edi
  00060	5b		 pop	 ebx
; Line 693
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
_freeLclosure ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _clearvalues
_TEXT	SEGMENT
_g$ = 8							; size = 4
_l$ = 12						; size = 4
_f$ = 16						; size = 4
_clearvalues PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 657
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 658
  00003	8b 45 10	 mov	 eax, DWORD PTR _f$[ebp]
  00006	56		 push	 esi
  00007	8b 75 0c	 mov	 esi, DWORD PTR _l$[ebp]
  0000a	3b f0		 cmp	 esi, eax
  0000c	0f 84 e0 00 00
	00		 je	 $LN9@clearvalue
  00012	53		 push	 ebx
  00013	57		 push	 edi
  00014	8b 7d 08	 mov	 edi, DWORD PTR _g$[ebp]
  00017	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL11@clearvalue:
; Line 660
  00020	8a 4e 07	 mov	 cl, BYTE PTR [esi+7]
  00023	bb 01 00 00 00	 mov	 ebx, 1
  00028	d3 e3		 shl	 ebx, cl
; Line 662
  0002a	33 d2		 xor	 edx, edx
  0002c	c1 e3 05	 shl	 ebx, 5
  0002f	03 5e 10	 add	 ebx, DWORD PTR [esi+16]
  00032	39 56 08	 cmp	 DWORD PTR [esi+8], edx
  00035	76 50		 jbe	 SHORT $LN6@clearvalue
; Line 660
  00037	33 ff		 xor	 edi, edi
  00039	8d a4 24 00 00
	00 00		 npad	 7
$LL8@clearvalue:
; Line 662
  00040	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00043	03 cf		 add	 ecx, edi
; Line 664
  00045	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00048	a8 40		 test	 al, 64			; 00000040H
  0004a	74 2c		 je	 SHORT $LN7@clearvalue
  0004c	24 0f		 and	 al, 15			; 0000000fH
  0004e	3c 04		 cmp	 al, 4
  00050	8b 01		 mov	 eax, DWORD PTR [ecx]
  00052	75 14		 jne	 SHORT $LN16@clearvalue
  00054	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00058	74 1e		 je	 SHORT $LN7@clearvalue
  0005a	50		 push	 eax
  0005b	ff 75 08	 push	 DWORD PTR _g$[ebp]
  0005e	e8 00 00 00 00	 call	 _reallymarkobject
  00063	83 c4 08	 add	 esp, 8
  00066	eb 10		 jmp	 SHORT $LN7@clearvalue
$LN16@clearvalue:
  00068	0f b6 40 05	 movzx	 eax, BYTE PTR [eax+5]
  0006c	83 e0 03	 and	 eax, 3
  0006f	74 07		 je	 SHORT $LN7@clearvalue
; Line 665
  00071	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
$LN7@clearvalue:
; Line 662
  00078	42		 inc	 edx
  00079	83 c7 10	 add	 edi, 16			; 00000010H
  0007c	3b 56 08	 cmp	 edx, DWORD PTR [esi+8]
  0007f	72 bf		 jb	 SHORT $LL8@clearvalue
  00081	8b 7d 08	 mov	 edi, DWORD PTR _g$[ebp]
  00084	8b 45 10	 mov	 eax, DWORD PTR _f$[ebp]
$LN6@clearvalue:
; Line 667
  00087	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  0008a	3b d3		 cmp	 edx, ebx
  0008c	73 57		 jae	 SHORT $LN10@clearvalue
  0008e	8b ff		 npad	 2
$LL4@clearvalue:
; Line 668
  00090	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00093	85 c0		 test	 eax, eax
  00095	74 44		 je	 SHORT $LN3@clearvalue
  00097	a8 40		 test	 al, 64			; 00000040H
  00099	74 40		 je	 SHORT $LN3@clearvalue
  0009b	24 0f		 and	 al, 15			; 0000000fH
  0009d	3c 04		 cmp	 al, 4
  0009f	8b 02		 mov	 eax, DWORD PTR [edx]
  000a1	75 12		 jne	 SHORT $LN23@clearvalue
  000a3	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  000a7	74 32		 je	 SHORT $LN3@clearvalue
  000a9	50		 push	 eax
  000aa	57		 push	 edi
  000ab	e8 00 00 00 00	 call	 _reallymarkobject
  000b0	83 c4 08	 add	 esp, 8
  000b3	eb 26		 jmp	 SHORT $LN3@clearvalue
$LN23@clearvalue:
  000b5	0f b6 40 05	 movzx	 eax, BYTE PTR [eax+5]
  000b9	83 e0 03	 and	 eax, 3
  000bc	74 1d		 je	 SHORT $LN3@clearvalue
; Line 670
  000be	f6 42 18 40	 test	 BYTE PTR [edx+24], 64	; 00000040H
  000c2	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  000c9	74 10		 je	 SHORT $LN3@clearvalue
  000cb	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000ce	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  000d2	74 07		 je	 SHORT $LN3@clearvalue
  000d4	c7 42 18 0a 00
	00 00		 mov	 DWORD PTR [edx+24], 10	; 0000000aH
$LN3@clearvalue:
; Line 667
  000db	83 c2 20	 add	 edx, 32			; 00000020H
  000de	3b d3		 cmp	 edx, ebx
  000e0	72 ae		 jb	 SHORT $LL4@clearvalue
  000e2	8b 45 10	 mov	 eax, DWORD PTR _f$[ebp]
$LN10@clearvalue:
; Line 658
  000e5	8b 76 1c	 mov	 esi, DWORD PTR [esi+28]
  000e8	3b f0		 cmp	 esi, eax
  000ea	0f 85 30 ff ff
	ff		 jne	 $LL11@clearvalue
  000f0	5f		 pop	 edi
  000f1	5b		 pop	 ebx
$LN9@clearvalue:
  000f2	5e		 pop	 esi
; Line 674
  000f3	5d		 pop	 ebp
  000f4	c3		 ret	 0
_clearvalues ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _clearkeys
_TEXT	SEGMENT
_g$ = 8							; size = 4
_l$ = 12						; size = 4
_f$ = 16						; size = 4
_clearkeys PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 639
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 640
  00003	8b 45 10	 mov	 eax, DWORD PTR _f$[ebp]
  00006	57		 push	 edi
  00007	8b 7d 0c	 mov	 edi, DWORD PTR _l$[ebp]
  0000a	3b f8		 cmp	 edi, eax
  0000c	0f 84 85 00 00
	00		 je	 $LN5@clearkeys
  00012	53		 push	 ebx
  00013	8b 5d 08	 mov	 ebx, DWORD PTR _g$[ebp]
  00016	56		 push	 esi
  00017	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL7@clearkeys:
; Line 642
  00020	8a 4f 07	 mov	 cl, BYTE PTR [edi+7]
  00023	be 01 00 00 00	 mov	 esi, 1
  00028	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  0002b	d3 e6		 shl	 esi, cl
  0002d	c1 e6 05	 shl	 esi, 5
  00030	03 f2		 add	 esi, edx
; Line 643
  00032	3b d6		 cmp	 edx, esi
  00034	73 58		 jae	 SHORT $LN6@clearkeys
$LL4@clearkeys:
; Line 644
  00036	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0003a	74 48		 je	 SHORT $LN3@clearkeys
  0003c	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0003f	a8 40		 test	 al, 64			; 00000040H
  00041	74 41		 je	 SHORT $LN3@clearkeys
  00043	24 0f		 and	 al, 15			; 0000000fH
  00045	3c 04		 cmp	 al, 4
  00047	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0004a	75 12		 jne	 SHORT $LN12@clearkeys
  0004c	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00050	74 32		 je	 SHORT $LN3@clearkeys
  00052	50		 push	 eax
  00053	53		 push	 ebx
  00054	e8 00 00 00 00	 call	 _reallymarkobject
  00059	83 c4 08	 add	 esp, 8
  0005c	eb 26		 jmp	 SHORT $LN3@clearkeys
$LN12@clearkeys:
  0005e	0f b6 40 05	 movzx	 eax, BYTE PTR [eax+5]
  00062	83 e0 03	 and	 eax, 3
  00065	74 1d		 je	 SHORT $LN3@clearkeys
; Line 646
  00067	f6 42 18 40	 test	 BYTE PTR [edx+24], 64	; 00000040H
  0006b	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  00072	74 10		 je	 SHORT $LN3@clearkeys
  00074	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00077	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0007b	74 07		 je	 SHORT $LN3@clearkeys
  0007d	c7 42 18 0a 00
	00 00		 mov	 DWORD PTR [edx+24], 10	; 0000000aH
$LN3@clearkeys:
; Line 643
  00084	83 c2 20	 add	 edx, 32			; 00000020H
  00087	3b d6		 cmp	 edx, esi
  00089	72 ab		 jb	 SHORT $LL4@clearkeys
  0008b	8b 45 10	 mov	 eax, DWORD PTR _f$[ebp]
$LN6@clearkeys:
; Line 640
  0008e	8b 7f 1c	 mov	 edi, DWORD PTR [edi+28]
  00091	3b f8		 cmp	 edi, eax
  00093	75 8b		 jne	 SHORT $LL7@clearkeys
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
$LN5@clearkeys:
  00097	5f		 pop	 edi
; Line 650
  00098	5d		 pop	 ebp
  00099	c3		 ret	 0
_clearkeys ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _convergeephemerons
_TEXT	SEGMENT
_g$ = 8							; size = 4
_convergeephemerons PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 608
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b 7d 08	 mov	 edi, DWORD PTR _g$[ebp]
  00009	8d a4 24 00 00
	00 00		 npad	 7
$LL6@convergeep:
; Line 612
  00010	8b 77 58	 mov	 esi, DWORD PTR [edi+88]
; Line 614
  00013	33 db		 xor	 ebx, ebx
  00015	c7 47 58 00 00
	00 00		 mov	 DWORD PTR [edi+88], 0
; Line 615
  0001c	8b c6		 mov	 eax, esi
  0001e	85 f6		 test	 esi, esi
  00020	74 29		 je	 SHORT $LN15@convergeep
$LL3@convergeep:
; Line 616
  00022	8b 76 1c	 mov	 esi, DWORD PTR [esi+28]
; Line 617
  00025	50		 push	 eax
  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 _traverseephemeron
  0002c	83 c4 08	 add	 esp, 8
  0002f	85 c0		 test	 eax, eax
  00031	74 0e		 je	 SHORT $LN1@convergeep
; Line 618
  00033	57		 push	 edi
  00034	e8 00 00 00 00	 call	 _propagateall
  00039	83 c4 04	 add	 esp, 4
; Line 619
  0003c	bb 01 00 00 00	 mov	 ebx, 1
$LN1@convergeep:
; Line 615
  00041	8b c6		 mov	 eax, esi
  00043	85 f6		 test	 esi, esi
  00045	75 db		 jne	 SHORT $LL3@convergeep
; Line 622
  00047	85 db		 test	 ebx, ebx
  00049	75 c5		 jne	 SHORT $LL6@convergeep
$LN15@convergeep:
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
; Line 623
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
_convergeephemerons ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _propagateall
_TEXT	SEGMENT
_g$ = 8							; size = 4
_propagateall PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 603
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 604
  00004	8b 75 08	 mov	 esi, DWORD PTR _g$[ebp]
  00007	83 7e 4c 00	 cmp	 DWORD PTR [esi+76], 0
  0000b	0f 84 87 00 00
	00		 je	 $LN1@propagatea
$LL2@propagatea:
  00011	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  00014	0f b6 48 04	 movzx	 ecx, BYTE PTR [eax+4]
  00018	80 48 05 04	 or	 BYTE PTR [eax+5], 4
  0001c	83 c1 fb	 add	 ecx, -5			; fffffffbH
  0001f	83 f9 21	 cmp	 ecx, 33			; 00000021H
  00022	77 6a		 ja	 SHORT $LN5@propagatea
  00024	0f b6 89 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN18@propagatea[ecx]
  0002b	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN21@propagatea[ecx*4]
$LN10@propagatea:
  00032	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00035	50		 push	 eax
  00036	56		 push	 esi
  00037	89 4e 4c	 mov	 DWORD PTR [esi+76], ecx
  0003a	e8 00 00 00 00	 call	 _traversetable
  0003f	eb 47		 jmp	 SHORT $LN19@propagatea
$LN9@propagatea:
  00041	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00044	50		 push	 eax
  00045	56		 push	 esi
  00046	89 4e 4c	 mov	 DWORD PTR [esi+76], ecx
  00049	e8 00 00 00 00	 call	 _traverseLclosure
  0004e	eb 38		 jmp	 SHORT $LN19@propagatea
$LN8@propagatea:
  00050	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00053	50		 push	 eax
  00054	56		 push	 esi
  00055	89 4e 4c	 mov	 DWORD PTR [esi+76], ecx
  00058	e8 00 00 00 00	 call	 _traverseCclosure
  0005d	eb 29		 jmp	 SHORT $LN19@propagatea
$LN7@propagatea:
  0005f	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00062	89 4e 4c	 mov	 DWORD PTR [esi+76], ecx
  00065	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
  00068	89 48 28	 mov	 DWORD PTR [eax+40], ecx
  0006b	50		 push	 eax
  0006c	89 46 50	 mov	 DWORD PTR [esi+80], eax
  0006f	80 60 05 fb	 and	 BYTE PTR [eax+5], 251	; 000000fbH
  00073	56		 push	 esi
  00074	e8 00 00 00 00	 call	 _traversethread
  00079	eb 0d		 jmp	 SHORT $LN19@propagatea
$LN6@propagatea:
  0007b	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0007e	50		 push	 eax
  0007f	56		 push	 esi
  00080	89 4e 4c	 mov	 DWORD PTR [esi+76], ecx
  00083	e8 00 00 00 00	 call	 _traverseproto
$LN19@propagatea:
  00088	83 c4 08	 add	 esp, 8
  0008b	01 46 10	 add	 DWORD PTR [esi+16], eax
$LN5@propagatea:
  0008e	83 7e 4c 00	 cmp	 DWORD PTR [esi+76], 0
  00092	0f 85 79 ff ff
	ff		 jne	 $LL2@propagatea
$LN1@propagatea:
  00098	5e		 pop	 esi
; Line 605
  00099	5d		 pop	 ebp
  0009a	c3		 ret	 0
  0009b	90		 npad	 1
$LN21@propagatea:
  0009c	00 00 00 00	 DD	 $LN10@propagatea
  000a0	00 00 00 00	 DD	 $LN9@propagatea
  000a4	00 00 00 00	 DD	 $LN7@propagatea
  000a8	00 00 00 00	 DD	 $LN6@propagatea
  000ac	00 00 00 00	 DD	 $LN8@propagatea
  000b0	00 00 00 00	 DD	 $LN5@propagatea
$LN18@propagatea:
  000b4	00		 DB	 0
  000b5	01		 DB	 1
  000b6	05		 DB	 5
  000b7	02		 DB	 2
  000b8	03		 DB	 3
  000b9	05		 DB	 5
  000ba	05		 DB	 5
  000bb	05		 DB	 5
  000bc	05		 DB	 5
  000bd	05		 DB	 5
  000be	05		 DB	 5
  000bf	05		 DB	 5
  000c0	05		 DB	 5
  000c1	05		 DB	 5
  000c2	05		 DB	 5
  000c3	05		 DB	 5
  000c4	05		 DB	 5
  000c5	05		 DB	 5
  000c6	05		 DB	 5
  000c7	05		 DB	 5
  000c8	05		 DB	 5
  000c9	05		 DB	 5
  000ca	05		 DB	 5
  000cb	05		 DB	 5
  000cc	05		 DB	 5
  000cd	05		 DB	 5
  000ce	05		 DB	 5
  000cf	05		 DB	 5
  000d0	05		 DB	 5
  000d1	05		 DB	 5
  000d2	05		 DB	 5
  000d3	05		 DB	 5
  000d4	05		 DB	 5
  000d5	04		 DB	 4
_propagateall ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _propagatemark
_TEXT	SEGMENT
_g$ = 8							; size = 4
_propagatemark PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 559
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 561
  00004	8b 75 08	 mov	 esi, DWORD PTR _g$[ebp]
  00007	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
; Line 564
  0000a	0f b6 41 04	 movzx	 eax, BYTE PTR [ecx+4]
  0000e	80 49 05 04	 or	 BYTE PTR [ecx+5], 4
  00012	83 c0 fb	 add	 eax, -5			; fffffffbH
  00015	83 f8 21	 cmp	 eax, 33			; 00000021H
  00018	0f 87 86 00 00
	00		 ja	 $LN1@propagatem
  0001e	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN11@propagatem[eax]
  00025	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN14@propagatem[eax*4]
$LN6@propagatem:
; Line 567
  0002c	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
; Line 568
  0002f	51		 push	 ecx
  00030	56		 push	 esi
  00031	89 46 4c	 mov	 DWORD PTR [esi+76], eax
  00034	e8 00 00 00 00	 call	 _traversetable
; Line 594
  00039	83 c4 08	 add	 esp, 8
; Line 599
  0003c	01 46 10	 add	 DWORD PTR [esi+16], eax
  0003f	5e		 pop	 esi
; Line 600
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
$LN5@propagatem:
; Line 573
  00042	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
; Line 574
  00045	51		 push	 ecx
  00046	56		 push	 esi
  00047	89 46 4c	 mov	 DWORD PTR [esi+76], eax
  0004a	e8 00 00 00 00	 call	 _traverseLclosure
; Line 594
  0004f	83 c4 08	 add	 esp, 8
; Line 599
  00052	01 46 10	 add	 DWORD PTR [esi+16], eax
  00055	5e		 pop	 esi
; Line 600
  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN4@propagatem:
; Line 579
  00058	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
; Line 580
  0005b	51		 push	 ecx
  0005c	56		 push	 esi
  0005d	89 46 4c	 mov	 DWORD PTR [esi+76], eax
  00060	e8 00 00 00 00	 call	 _traverseCclosure
; Line 594
  00065	83 c4 08	 add	 esp, 8
; Line 599
  00068	01 46 10	 add	 DWORD PTR [esi+16], eax
  0006b	5e		 pop	 esi
; Line 600
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
$LN3@propagatem:
; Line 585
  0006e	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00071	89 46 4c	 mov	 DWORD PTR [esi+76], eax
; Line 586
  00074	8b 46 50	 mov	 eax, DWORD PTR [esi+80]
  00077	89 41 28	 mov	 DWORD PTR [ecx+40], eax
; Line 588
  0007a	51		 push	 ecx
  0007b	89 4e 50	 mov	 DWORD PTR [esi+80], ecx
  0007e	80 61 05 fb	 and	 BYTE PTR [ecx+5], 251	; 000000fbH
  00082	56		 push	 esi
  00083	e8 00 00 00 00	 call	 _traversethread
; Line 594
  00088	83 c4 08	 add	 esp, 8
; Line 599
  0008b	01 46 10	 add	 DWORD PTR [esi+16], eax
  0008e	5e		 pop	 esi
; Line 600
  0008f	5d		 pop	 ebp
  00090	c3		 ret	 0
$LN2@propagatem:
; Line 593
  00091	8b 41 4c	 mov	 eax, DWORD PTR [ecx+76]
; Line 594
  00094	51		 push	 ecx
  00095	56		 push	 esi
  00096	89 46 4c	 mov	 DWORD PTR [esi+76], eax
  00099	e8 00 00 00 00	 call	 _traverseproto
  0009e	83 c4 08	 add	 esp, 8
; Line 599
  000a1	01 46 10	 add	 DWORD PTR [esi+16], eax
$LN1@propagatem:
  000a4	5e		 pop	 esi
; Line 600
  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
  000a7	90		 npad	 1
$LN14@propagatem:
  000a8	00 00 00 00	 DD	 $LN6@propagatem
  000ac	00 00 00 00	 DD	 $LN5@propagatem
  000b0	00 00 00 00	 DD	 $LN3@propagatem
  000b4	00 00 00 00	 DD	 $LN2@propagatem
  000b8	00 00 00 00	 DD	 $LN4@propagatem
  000bc	00 00 00 00	 DD	 $LN1@propagatem
$LN11@propagatem:
  000c0	00		 DB	 0
  000c1	01		 DB	 1
  000c2	05		 DB	 5
  000c3	02		 DB	 2
  000c4	03		 DB	 3
  000c5	05		 DB	 5
  000c6	05		 DB	 5
  000c7	05		 DB	 5
  000c8	05		 DB	 5
  000c9	05		 DB	 5
  000ca	05		 DB	 5
  000cb	05		 DB	 5
  000cc	05		 DB	 5
  000cd	05		 DB	 5
  000ce	05		 DB	 5
  000cf	05		 DB	 5
  000d0	05		 DB	 5
  000d1	05		 DB	 5
  000d2	05		 DB	 5
  000d3	05		 DB	 5
  000d4	05		 DB	 5
  000d5	05		 DB	 5
  000d6	05		 DB	 5
  000d7	05		 DB	 5
  000d8	05		 DB	 5
  000d9	05		 DB	 5
  000da	05		 DB	 5
  000db	05		 DB	 5
  000dc	05		 DB	 5
  000dd	05		 DB	 5
  000de	05		 DB	 5
  000df	05		 DB	 5
  000e0	05		 DB	 5
  000e1	04		 DB	 4
_propagatemark ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _traversethread
_TEXT	SEGMENT
_g$ = 8							; size = 4
_th$ = 12						; size = 4
_traversethread PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 530
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 531
  00004	8b 75 0c	 mov	 esi, DWORD PTR _th$[ebp]
  00007	8b 56 20	 mov	 edx, DWORD PTR [esi+32]
; Line 532
  0000a	85 d2		 test	 edx, edx
  0000c	75 06		 jne	 SHORT $LN12@traverseth
; Line 533
  0000e	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  00011	5e		 pop	 esi
; Line 552
  00012	5d		 pop	 ebp
  00013	c3		 ret	 0
$LN12@traverseth:
  00014	57		 push	 edi
; Line 536
  00015	8b 7d 08	 mov	 edi, DWORD PTR _g$[ebp]
  00018	3b 56 0c	 cmp	 edx, DWORD PTR [esi+12]
  0001b	73 23		 jae	 SHORT $LN9@traverseth
  0001d	8d 49 00	 npad	 3
$LL11@traverseth:
; Line 537
  00020	f6 42 08 40	 test	 BYTE PTR [edx+8], 64	; 00000040H
  00024	74 12		 je	 SHORT $LN10@traverseth
  00026	8b 02		 mov	 eax, DWORD PTR [edx]
  00028	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0002c	74 0a		 je	 SHORT $LN10@traverseth
  0002e	50		 push	 eax
  0002f	57		 push	 edi
  00030	e8 00 00 00 00	 call	 _reallymarkobject
  00035	83 c4 08	 add	 esp, 8
$LN10@traverseth:
; Line 536
  00038	83 c2 10	 add	 edx, 16			; 00000010H
  0003b	3b 56 0c	 cmp	 edx, DWORD PTR [esi+12]
  0003e	72 e0		 jb	 SHORT $LL11@traverseth
$LN9@traverseth:
; Line 538
  00040	80 7f 3d 08	 cmp	 BYTE PTR [edi+61], 8
  00044	75 31		 jne	 SHORT $LN7@traverseth
; Line 539
  00046	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  00049	c1 e0 04	 shl	 eax, 4
  0004c	03 46 20	 add	 eax, DWORD PTR [esi+32]
; Line 540
  0004f	3b d0		 cmp	 edx, eax
  00051	73 0e		 jae	 SHORT $LN4@traverseth
$LL6@traverseth:
; Line 541
  00053	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0
  0005a	83 c2 10	 add	 edx, 16			; 00000010H
  0005d	3b d0		 cmp	 edx, eax
  0005f	72 f2		 jb	 SHORT $LL6@traverseth
$LN4@traverseth:
; Line 543
  00061	39 76 2c	 cmp	 DWORD PTR [esi+44], esi
  00064	75 20		 jne	 SHORT $LN1@traverseth
  00066	83 7e 24 00	 cmp	 DWORD PTR [esi+36], 0
  0006a	74 1a		 je	 SHORT $LN1@traverseth
; Line 544
  0006c	8b 47 68	 mov	 eax, DWORD PTR [edi+104]
  0006f	89 46 2c	 mov	 DWORD PTR [esi+44], eax
; Line 545
  00072	89 77 68	 mov	 DWORD PTR [edi+104], esi
; Line 546
  00075	eb 0f		 jmp	 SHORT $LN1@traverseth
$LN7@traverseth:
; Line 548
  00077	80 7f 3e 01	 cmp	 BYTE PTR [edi+62], 1
  0007b	74 09		 je	 SHORT $LN1@traverseth
; Line 549
  0007d	56		 push	 esi
  0007e	e8 00 00 00 00	 call	 _luaD_shrinkstack
  00083	83 c4 04	 add	 esp, 4
$LN1@traverseth:
; Line 551
  00086	0f b7 46 06	 movzx	 eax, WORD PTR [esi+6]
  0008a	5f		 pop	 edi
  0008b	8d 0c c0	 lea	 ecx, DWORD PTR [eax+eax*8]
  0008e	8b 46 60	 mov	 eax, DWORD PTR [esi+96]
  00091	c1 e0 04	 shl	 eax, 4
  00094	5e		 pop	 esi
  00095	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00098	83 c0 74	 add	 eax, 116		; 00000074H
; Line 552
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
_traversethread ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _traverseLclosure
_TEXT	SEGMENT
_g$ = 8							; size = 4
_cl$ = 12						; size = 4
_traverseLclosure PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 514
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 516
  00004	8b 5d 08	 mov	 ebx, DWORD PTR _g$[ebp]
  00007	56		 push	 esi
  00008	8b 75 0c	 mov	 esi, DWORD PTR _cl$[ebp]
  0000b	57		 push	 edi
  0000c	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0000f	85 c0		 test	 eax, eax
  00011	74 10		 je	 SHORT $LN8@traverseLc
  00013	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00017	74 0a		 je	 SHORT $LN8@traverseLc
  00019	50		 push	 eax
  0001a	53		 push	 ebx
  0001b	e8 00 00 00 00	 call	 _reallymarkobject
  00020	83 c4 08	 add	 esp, 8
$LN8@traverseLc:
; Line 517
  00023	33 ff		 xor	 edi, edi
  00025	80 7e 06 00	 cmp	 BYTE PTR [esi+6], 0
  00029	76 4d		 jbe	 SHORT $LN5@traverseLc
  0002b	83 c6 10	 add	 esi, 16			; 00000010H
  0002e	8b ff		 npad	 2
$LL7@traverseLc:
; Line 518
  00030	8b 0e		 mov	 ecx, DWORD PTR [esi]
; Line 519
  00032	85 c9		 test	 ecx, ecx
  00034	74 30		 je	 SHORT $LN6@traverseLc
; Line 520
  00036	8b 11		 mov	 edx, DWORD PTR [ecx]
  00038	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  0003b	3b d0		 cmp	 edx, eax
  0003d	74 0f		 je	 SHORT $LN3@traverseLc
  0003f	80 7b 3d 08	 cmp	 BYTE PTR [ebx+61], 8
  00043	74 09		 je	 SHORT $LN3@traverseLc
; Line 521
  00045	c7 41 0c 01 00
	00 00		 mov	 DWORD PTR [ecx+12], 1
; Line 522
  0004c	eb 18		 jmp	 SHORT $LN6@traverseLc
$LN3@traverseLc:
; Line 523
  0004e	f6 42 08 40	 test	 BYTE PTR [edx+8], 64	; 00000040H
  00052	74 12		 je	 SHORT $LN6@traverseLc
  00054	8b 02		 mov	 eax, DWORD PTR [edx]
  00056	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0005a	74 0a		 je	 SHORT $LN6@traverseLc
  0005c	50		 push	 eax
  0005d	53		 push	 ebx
  0005e	e8 00 00 00 00	 call	 _reallymarkobject
  00063	83 c4 08	 add	 esp, 8
$LN6@traverseLc:
; Line 517
  00066	8b 45 0c	 mov	 eax, DWORD PTR _cl$[ebp]
  00069	47		 inc	 edi
  0006a	83 c6 04	 add	 esi, 4
  0006d	0f b6 40 06	 movzx	 eax, BYTE PTR [eax+6]
  00071	3b f8		 cmp	 edi, eax
  00073	7c bb		 jl	 SHORT $LL7@traverseLc
  00075	8b 75 0c	 mov	 esi, DWORD PTR _cl$[ebp]
$LN5@traverseLc:
; Line 526
  00078	0f b6 46 06	 movzx	 eax, BYTE PTR [esi+6]
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8d 04 85 10 00
	00 00		 lea	 eax, DWORD PTR [eax*4+16]
; Line 527
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
_traverseLclosure ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _traverseCclosure
_TEXT	SEGMENT
_uvalue$1 = -16						; size = 16
_g$ = 8							; size = 4
_cl$ = 12						; size = 4
_traverseCclosure PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 501
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
; Line 503
  00008	8b 75 0c	 mov	 esi, DWORD PTR _cl$[ebp]
  0000b	33 db		 xor	 ebx, ebx
  0000d	38 5e 06	 cmp	 BYTE PTR [esi+6], bl
  00010	0f 86 f0 00 00
	00		 jbe	 $LN2@traverseCc
  00016	57		 push	 edi
  00017	8d 7e 10	 lea	 edi, DWORD PTR [esi+16]
  0001a	8b 75 08	 mov	 esi, DWORD PTR _g$[ebp]
  0001d	8d 49 00	 npad	 3
$LL4@traverseCc:
; Line 504
  00020	f6 47 08 40	 test	 BYTE PTR [edi+8], 64	; 00000040H
  00024	0f 84 c5 00 00
	00		 je	 $LN3@traverseCc
  0002a	8b 17		 mov	 edx, DWORD PTR [edi]
  0002c	f6 42 05 03	 test	 BYTE PTR [edx+5], 3
  00030	0f 84 b9 00 00
	00		 je	 $LN3@traverseCc
  00036	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  0003a	80 62 05 fc	 and	 BYTE PTR [edx+5], 252	; 000000fcH
  0003e	83 e8 04	 sub	 eax, 4
  00041	83 f8 22	 cmp	 eax, 34			; 00000022H
  00044	0f 87 a5 00 00
	00		 ja	 $LN3@traverseCc
  0004a	8d 9b 00 00 00
	00		 npad	 6
$reentry$35:
  00050	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN31@traverseCc[eax]
  00057	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN34@traverseCc[eax*4]
$LN16@traverseCc:
  0005e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00061	85 c0		 test	 eax, eax
  00063	74 10		 je	 SHORT $LN14@traverseCc
  00065	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00069	74 0a		 je	 SHORT $LN14@traverseCc
  0006b	50		 push	 eax
  0006c	56		 push	 esi
  0006d	e8 00 00 00 00	 call	 _reallymarkobject
  00072	83 c4 08	 add	 esp, 8
$LN14@traverseCc:
  00075	80 4a 05 04	 or	 BYTE PTR [edx+5], 4
  00079	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007c	83 c0 18	 add	 eax, 24			; 00000018H
  0007f	01 46 10	 add	 DWORD PTR [esi+16], eax
  00082	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00085	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  00088	89 45 f4	 mov	 DWORD PTR _uvalue$1[ebp+4], eax
  0008b	0f b6 42 06	 movzx	 eax, BYTE PTR [edx+6]
  0008f	a8 40		 test	 al, 64			; 00000040H
  00091	74 5c		 je	 SHORT $LN3@traverseCc
  00093	8a 41 05	 mov	 al, BYTE PTR [ecx+5]
  00096	a8 03		 test	 al, 3
  00098	74 55		 je	 SHORT $LN3@traverseCc
  0009a	24 fc		 and	 al, 252			; 000000fcH
  0009c	8b d1		 mov	 edx, ecx
  0009e	88 41 05	 mov	 BYTE PTR [ecx+5], al
  000a1	0f b6 41 04	 movzx	 eax, BYTE PTR [ecx+4]
  000a5	83 e8 04	 sub	 eax, 4
  000a8	83 f8 22	 cmp	 eax, 34			; 00000022H
  000ab	76 a3		 jbe	 SHORT $reentry$35
; Line 503
  000ad	eb 40		 jmp	 SHORT $LN3@traverseCc
; Line 504
$LN18@traverseCc:
  000af	0f b6 42 07	 movzx	 eax, BYTE PTR [edx+7]
  000b3	80 4a 05 04	 or	 BYTE PTR [edx+5], 4
  000b7	83 c0 11	 add	 eax, 17			; 00000011H
  000ba	01 46 10	 add	 DWORD PTR [esi+16], eax
  000bd	eb 30		 jmp	 SHORT $LN3@traverseCc
$LN17@traverseCc:
  000bf	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000c2	80 4a 05 04	 or	 BYTE PTR [edx+5], 4
  000c6	83 c0 11	 add	 eax, 17			; 00000011H
  000c9	01 46 10	 add	 DWORD PTR [esi+16], eax
  000cc	eb 21		 jmp	 SHORT $LN3@traverseCc
$LN12@traverseCc:
  000ce	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  000d1	89 42 08	 mov	 DWORD PTR [edx+8], eax
  000d4	eb 16		 jmp	 SHORT $LN32@traverseCc
$LN10@traverseCc:
  000d6	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  000d9	89 42 1c	 mov	 DWORD PTR [edx+28], eax
  000dc	eb 0e		 jmp	 SHORT $LN32@traverseCc
$LN9@traverseCc:
  000de	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  000e1	89 42 28	 mov	 DWORD PTR [edx+40], eax
  000e4	eb 06		 jmp	 SHORT $LN32@traverseCc
$LN8@traverseCc:
  000e6	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  000e9	89 42 4c	 mov	 DWORD PTR [edx+76], eax
$LN32@traverseCc:
  000ec	89 56 4c	 mov	 DWORD PTR [esi+76], edx
$LN3@traverseCc:
; Line 503
  000ef	8b 45 0c	 mov	 eax, DWORD PTR _cl$[ebp]
  000f2	43		 inc	 ebx
  000f3	83 c7 10	 add	 edi, 16			; 00000010H
  000f6	0f b6 40 06	 movzx	 eax, BYTE PTR [eax+6]
  000fa	3b d8		 cmp	 ebx, eax
  000fc	0f 8c 1e ff ff
	ff		 jl	 $LL4@traverseCc
  00102	8b 75 0c	 mov	 esi, DWORD PTR _cl$[ebp]
  00105	5f		 pop	 edi
$LN2@traverseCc:
; Line 505
  00106	0f b6 46 06	 movzx	 eax, BYTE PTR [esi+6]
  0010a	40		 inc	 eax
  0010b	5e		 pop	 esi
  0010c	c1 e0 04	 shl	 eax, 4
  0010f	5b		 pop	 ebx
; Line 506
  00110	8b e5		 mov	 esp, ebp
  00112	5d		 pop	 ebp
  00113	c3		 ret	 0
$LN34@traverseCc:
  00114	00 00 00 00	 DD	 $LN18@traverseCc
  00118	00 00 00 00	 DD	 $LN10@traverseCc
  0011c	00 00 00 00	 DD	 $LN12@traverseCc
  00120	00 00 00 00	 DD	 $LN16@traverseCc
  00124	00 00 00 00	 DD	 $LN9@traverseCc
  00128	00 00 00 00	 DD	 $LN8@traverseCc
  0012c	00 00 00 00	 DD	 $LN17@traverseCc
  00130	00 00 00 00	 DD	 $LN3@traverseCc
$LN31@traverseCc:
  00134	00		 DB	 0
  00135	01		 DB	 1
  00136	02		 DB	 2
  00137	03		 DB	 3
  00138	04		 DB	 4
  00139	05		 DB	 5
  0013a	07		 DB	 7
  0013b	07		 DB	 7
  0013c	07		 DB	 7
  0013d	07		 DB	 7
  0013e	07		 DB	 7
  0013f	07		 DB	 7
  00140	07		 DB	 7
  00141	07		 DB	 7
  00142	07		 DB	 7
  00143	07		 DB	 7
  00144	06		 DB	 6
  00145	07		 DB	 7
  00146	07		 DB	 7
  00147	07		 DB	 7
  00148	07		 DB	 7
  00149	07		 DB	 7
  0014a	07		 DB	 7
  0014b	07		 DB	 7
  0014c	07		 DB	 7
  0014d	07		 DB	 7
  0014e	07		 DB	 7
  0014f	07		 DB	 7
  00150	07		 DB	 7
  00151	07		 DB	 7
  00152	07		 DB	 7
  00153	07		 DB	 7
  00154	07		 DB	 7
  00155	07		 DB	 7
  00156	02		 DB	 2
_traverseCclosure ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _traverseproto
_TEXT	SEGMENT
_g$ = 8							; size = 4
_f$ = 12						; size = 4
_traverseproto PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 479
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 481
  00003	8b 55 0c	 mov	 edx, DWORD PTR _f$[ebp]
  00006	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  00009	85 c0		 test	 eax, eax
  0000b	74 0d		 je	 SHORT $LN22@traversepr
  0000d	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00011	74 07		 je	 SHORT $LN22@traversepr
; Line 482
  00013	c7 42 44 00 00
	00 00		 mov	 DWORD PTR [edx+68], 0
$LN22@traversepr:
; Line 483
  0001a	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  0001d	53		 push	 ebx
  0001e	8b 5d 08	 mov	 ebx, DWORD PTR _g$[ebp]
  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	85 c0		 test	 eax, eax
  00025	74 10		 je	 SHORT $LN20@traversepr
  00027	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0002b	74 0a		 je	 SHORT $LN20@traversepr
  0002d	50		 push	 eax
  0002e	53		 push	 ebx
  0002f	e8 00 00 00 00	 call	 _reallymarkobject
  00034	83 c4 08	 add	 esp, 8
$LN20@traversepr:
; Line 484
  00037	33 f6		 xor	 esi, esi
  00039	39 72 10	 cmp	 DWORD PTR [edx+16], esi
  0003c	7e 28		 jle	 SHORT $LN17@traversepr
  0003e	33 ff		 xor	 edi, edi
$LL19@traversepr:
; Line 485
  00040	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00043	f6 44 38 08 40	 test	 BYTE PTR [eax+edi+8], 64 ; 00000040H
  00048	74 13		 je	 SHORT $LN18@traversepr
  0004a	8b 04 38	 mov	 eax, DWORD PTR [eax+edi]
  0004d	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00051	74 0a		 je	 SHORT $LN18@traversepr
  00053	50		 push	 eax
  00054	53		 push	 ebx
  00055	e8 00 00 00 00	 call	 _reallymarkobject
  0005a	83 c4 08	 add	 esp, 8
$LN18@traversepr:
; Line 484
  0005d	46		 inc	 esi
  0005e	83 c7 10	 add	 edi, 16			; 00000010H
  00061	3b 72 10	 cmp	 esi, DWORD PTR [edx+16]
  00064	7c da		 jl	 SHORT $LL19@traversepr
$LN17@traversepr:
; Line 486
  00066	33 f6		 xor	 esi, esi
  00068	39 72 0c	 cmp	 DWORD PTR [edx+12], esi
  0006b	7e 23		 jle	 SHORT $LN13@traversepr
  0006d	8d 49 00	 npad	 3
$LL15@traversepr:
; Line 487
  00070	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00073	8b 04 f0	 mov	 eax, DWORD PTR [eax+esi*8]
  00076	85 c0		 test	 eax, eax
  00078	74 10		 je	 SHORT $LN14@traversepr
  0007a	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0007e	74 0a		 je	 SHORT $LN14@traversepr
  00080	50		 push	 eax
  00081	53		 push	 ebx
  00082	e8 00 00 00 00	 call	 _reallymarkobject
  00087	83 c4 08	 add	 esp, 8
$LN14@traversepr:
; Line 486
  0008a	46		 inc	 esi
  0008b	3b 72 0c	 cmp	 esi, DWORD PTR [edx+12]
  0008e	7c e0		 jl	 SHORT $LL15@traversepr
$LN13@traversepr:
; Line 488
  00090	33 f6		 xor	 esi, esi
  00092	39 72 1c	 cmp	 DWORD PTR [edx+28], esi
  00095	7e 20		 jle	 SHORT $LN8@traversepr
$LL10@traversepr:
; Line 489
  00097	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  0009a	8b 04 b0	 mov	 eax, DWORD PTR [eax+esi*4]
  0009d	85 c0		 test	 eax, eax
  0009f	74 10		 je	 SHORT $LN9@traversepr
  000a1	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  000a5	74 0a		 je	 SHORT $LN9@traversepr
  000a7	50		 push	 eax
  000a8	53		 push	 ebx
  000a9	e8 00 00 00 00	 call	 _reallymarkobject
  000ae	83 c4 08	 add	 esp, 8
$LN9@traversepr:
; Line 488
  000b1	46		 inc	 esi
  000b2	3b 72 1c	 cmp	 esi, DWORD PTR [edx+28]
  000b5	7c e0		 jl	 SHORT $LL10@traversepr
$LN8@traversepr:
; Line 490
  000b7	33 f6		 xor	 esi, esi
  000b9	39 72 20	 cmp	 DWORD PTR [edx+32], esi
  000bc	7e 25		 jle	 SHORT $LN3@traversepr
  000be	33 ff		 xor	 edi, edi
$LL5@traversepr:
; Line 491
  000c0	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  000c3	8b 04 07	 mov	 eax, DWORD PTR [edi+eax]
  000c6	85 c0		 test	 eax, eax
  000c8	74 10		 je	 SHORT $LN4@traversepr
  000ca	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  000ce	74 0a		 je	 SHORT $LN4@traversepr
  000d0	50		 push	 eax
  000d1	53		 push	 ebx
  000d2	e8 00 00 00 00	 call	 _reallymarkobject
  000d7	83 c4 08	 add	 esp, 8
$LN4@traversepr:
; Line 490
  000da	46		 inc	 esi
  000db	83 c7 0c	 add	 edi, 12			; 0000000cH
  000de	3b 72 20	 cmp	 esi, DWORD PTR [edx+32]
  000e1	7c dd		 jl	 SHORT $LL5@traversepr
$LN3@traversepr:
; Line 497
  000e3	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000e6	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  000e9	83 c0 0a	 add	 eax, 10			; 0000000aH
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	8d 0c 48	 lea	 ecx, DWORD PTR [eax+ecx*2]
  000f2	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  000f5	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000f8	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  000fb	03 42 18	 add	 eax, DWORD PTR [edx+24]
  000fe	03 42 14	 add	 eax, DWORD PTR [edx+20]
  00101	03 42 1c	 add	 eax, DWORD PTR [edx+28]
  00104	c1 e0 02	 shl	 eax, 2
; Line 498
  00107	5d		 pop	 ebp
  00108	c3		 ret	 0
_traverseproto ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _traversetable
_TEXT	SEGMENT
_weakkey$1$ = -4					; size = 4
_g$ = 8							; size = 4
_mode$1$ = 12						; size = 4
_h$ = 12						; size = 4
_traversetable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 451
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; Line 453
  00005	8b 5d 08	 mov	 ebx, DWORD PTR _g$[ebp]
  00008	57		 push	 edi
  00009	8b 7d 0c	 mov	 edi, DWORD PTR _h$[ebp]
  0000c	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  0000f	85 c0		 test	 eax, eax
  00011	75 07		 jne	 SHORT $LN13@traverseta
  00013	33 d2		 xor	 edx, edx
  00015	89 55 0c	 mov	 DWORD PTR _mode$1$[ebp], edx
  00018	eb 23		 jmp	 SHORT $LN12@traverseta
$LN13@traverseta:
  0001a	f6 40 06 08	 test	 BYTE PTR [eax+6], 8
  0001e	74 07		 je	 SHORT $LN11@traverseta
  00020	33 d2		 xor	 edx, edx
  00022	89 55 0c	 mov	 DWORD PTR _mode$1$[ebp], edx
  00025	eb 16		 jmp	 SHORT $LN12@traverseta
$LN11@traverseta:
  00027	ff b3 94 00 00
	00		 push	 DWORD PTR [ebx+148]
  0002d	6a 03		 push	 3
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 _luaT_gettm
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	89 45 0c	 mov	 DWORD PTR _mode$1$[ebp], eax
  0003b	8b d0		 mov	 edx, eax
$LN12@traverseta:
; Line 454
  0003d	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00040	85 c0		 test	 eax, eax
  00042	74 10		 je	 SHORT $LN7@traverseta
  00044	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00048	74 0a		 je	 SHORT $LN7@traverseta
  0004a	50		 push	 eax
  0004b	53		 push	 ebx
  0004c	e8 00 00 00 00	 call	 _reallymarkobject
  00051	83 c4 08	 add	 esp, 8
$LN7@traverseta:
; Line 458
  00054	85 d2		 test	 edx, edx
  00056	74 62		 je	 SHORT $LN6@traverseta
  00058	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0005b	24 0f		 and	 al, 15			; 0000000fH
  0005d	3c 04		 cmp	 al, 4
  0005f	75 59		 jne	 SHORT $LN6@traverseta
  00061	8b 02		 mov	 eax, DWORD PTR [edx]
  00063	83 c0 10	 add	 eax, 16			; 00000010H
  00066	6a 6b		 push	 107			; 0000006bH
  00068	50		 push	 eax
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  0006f	8b 4d 0c	 mov	 ecx, DWORD PTR _mode$1$[ebp]
  00072	6a 76		 push	 118			; 00000076H
  00074	89 45 fc	 mov	 DWORD PTR _weakkey$1$[ebp], eax
  00077	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00079	83 c1 10	 add	 ecx, 16			; 00000010H
  0007c	51		 push	 ecx
  0007d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strchr
  00083	8b 4d fc	 mov	 ecx, DWORD PTR _weakkey$1$[ebp]
  00086	83 c4 10	 add	 esp, 16			; 00000010H
  00089	85 c9		 test	 ecx, ecx
  0008b	75 04		 jne	 SHORT $LN15@traverseta
  0008d	85 c0		 test	 eax, eax
  0008f	74 29		 je	 SHORT $LN6@traverseta
$LN15@traverseta:
; Line 459
  00091	80 67 05 fb	 and	 BYTE PTR [edi+5], 251	; 000000fbH
; Line 460
  00095	85 c9		 test	 ecx, ecx
  00097	75 09		 jne	 SHORT $LN5@traverseta
; Line 461
  00099	57		 push	 edi
  0009a	53		 push	 ebx
  0009b	e8 00 00 00 00	 call	 _traverseweakvalue
  000a0	eb 1f		 jmp	 SHORT $LN18@traverseta
$LN5@traverseta:
; Line 462
  000a2	85 c0		 test	 eax, eax
  000a4	75 09		 jne	 SHORT $LN3@traverseta
; Line 463
  000a6	57		 push	 edi
  000a7	53		 push	 ebx
  000a8	e8 00 00 00 00	 call	 _traverseephemeron
; Line 464
  000ad	eb 12		 jmp	 SHORT $LN18@traverseta
$LN3@traverseta:
; Line 465
  000af	8b 43 5c	 mov	 eax, DWORD PTR [ebx+92]
  000b2	89 47 1c	 mov	 DWORD PTR [edi+28], eax
  000b5	89 7b 5c	 mov	 DWORD PTR [ebx+92], edi
; Line 467
  000b8	eb 0a		 jmp	 SHORT $LN1@traverseta
$LN6@traverseta:
; Line 468
  000ba	57		 push	 edi
  000bb	53		 push	 ebx
  000bc	e8 00 00 00 00	 call	 _traversestrongtable
$LN18@traverseta:
  000c1	83 c4 08	 add	 esp, 8
$LN1@traverseta:
; Line 470
  000c4	8a 4f 07	 mov	 cl, BYTE PTR [edi+7]
  000c7	ba 01 00 00 00	 mov	 edx, 1
  000cc	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000cf	d3 e2		 shl	 edx, cl
  000d1	5f		 pop	 edi
  000d2	5b		 pop	 ebx
  000d3	8d 04 50	 lea	 eax, DWORD PTR [eax+edx*2]
  000d6	83 c0 02	 add	 eax, 2
  000d9	c1 e0 04	 shl	 eax, 4
; Line 471
  000dc	8b e5		 mov	 esp, ebp
  000de	5d		 pop	 ebp
  000df	c3		 ret	 0
_traversetable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _traversestrongtable
_TEXT	SEGMENT
_g$ = 8							; size = 4
_limit$1$ = 12						; size = 4
_h$ = 12						; size = 4
_traversestrongtable PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 433
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 434
  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _h$[ebp]
; Line 436
  00007	33 d2		 xor	 edx, edx
  00009	56		 push	 esi
  0000a	be 01 00 00 00	 mov	 esi, 1
  0000f	57		 push	 edi
  00010	8a 4b 07	 mov	 cl, BYTE PTR [ebx+7]
  00013	8b 7d 08	 mov	 edi, DWORD PTR _g$[ebp]
  00016	d3 e6		 shl	 esi, cl
  00018	c1 e6 05	 shl	 esi, 5
  0001b	03 73 10	 add	 esi, DWORD PTR [ebx+16]
  0001e	89 75 0c	 mov	 DWORD PTR _limit$1$[ebp], esi
  00021	39 53 08	 cmp	 DWORD PTR [ebx+8], edx
  00024	76 33		 jbe	 SHORT $LN9@traversest
; Line 434
  00026	33 f6		 xor	 esi, esi
  00028	eb 06 8d 9b 00
	00 00 00	 npad	 8
$LL11@traversest:
; Line 437
  00030	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  00033	f6 44 30 08 40	 test	 BYTE PTR [eax+esi+8], 64 ; 00000040H
  00038	74 13		 je	 SHORT $LN10@traversest
  0003a	8b 04 30	 mov	 eax, DWORD PTR [eax+esi]
  0003d	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00041	74 0a		 je	 SHORT $LN10@traversest
  00043	50		 push	 eax
  00044	57		 push	 edi
  00045	e8 00 00 00 00	 call	 _reallymarkobject
  0004a	83 c4 08	 add	 esp, 8
$LN10@traversest:
; Line 436
  0004d	42		 inc	 edx
  0004e	83 c6 10	 add	 esi, 16			; 00000010H
  00051	3b 53 08	 cmp	 edx, DWORD PTR [ebx+8]
  00054	72 da		 jb	 SHORT $LL11@traversest
  00056	8b 75 0c	 mov	 esi, DWORD PTR _limit$1$[ebp]
$LN9@traversest:
; Line 438
  00059	8b 53 10	 mov	 edx, DWORD PTR [ebx+16]
  0005c	3b d6		 cmp	 edx, esi
  0005e	73 56		 jae	 SHORT $LN5@traversest
$LL7@traversest:
; Line 440
  00060	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00064	75 18		 jne	 SHORT $LN4@traversest
; Line 441
  00066	f6 42 18 40	 test	 BYTE PTR [edx+24], 64	; 00000040H
  0006a	74 43		 je	 SHORT $LN6@traversest
  0006c	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0006f	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00073	74 3a		 je	 SHORT $LN6@traversest
  00075	c7 42 18 0a 00
	00 00		 mov	 DWORD PTR [edx+24], 10	; 0000000aH
; Line 442
  0007c	eb 31		 jmp	 SHORT $LN6@traversest
$LN4@traversest:
; Line 444
  0007e	f6 42 18 40	 test	 BYTE PTR [edx+24], 64	; 00000040H
  00082	74 13		 je	 SHORT $LN2@traversest
  00084	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00087	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0008b	74 0a		 je	 SHORT $LN2@traversest
  0008d	50		 push	 eax
  0008e	57		 push	 edi
  0008f	e8 00 00 00 00	 call	 _reallymarkobject
  00094	83 c4 08	 add	 esp, 8
$LN2@traversest:
; Line 445
  00097	f6 42 08 40	 test	 BYTE PTR [edx+8], 64	; 00000040H
  0009b	74 12		 je	 SHORT $LN6@traversest
  0009d	8b 02		 mov	 eax, DWORD PTR [edx]
  0009f	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  000a3	74 0a		 je	 SHORT $LN6@traversest
  000a5	50		 push	 eax
  000a6	57		 push	 edi
  000a7	e8 00 00 00 00	 call	 _reallymarkobject
  000ac	83 c4 08	 add	 esp, 8
$LN6@traversest:
; Line 438
  000af	83 c2 20	 add	 edx, 32			; 00000020H
  000b2	3b d6		 cmp	 edx, esi
  000b4	72 aa		 jb	 SHORT $LL7@traversest
$LN5@traversest:
  000b6	5f		 pop	 edi
  000b7	5e		 pop	 esi
  000b8	5b		 pop	 ebx
; Line 448
  000b9	5d		 pop	 ebp
  000ba	c3		 ret	 0
_traversestrongtable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _traverseephemeron
_TEXT	SEGMENT
_hasclears$1$ = -16					; size = 4
_limit$1$ = -12						; size = 4
_marked$1$ = -8						; size = 4
_hasww$1$ = -4						; size = 4
_g$ = 8							; size = 4
_h$ = 12						; size = 4
_traverseephemeron PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 394
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
; Line 398
  00007	8b 5d 0c	 mov	 ebx, DWORD PTR _h$[ebp]
  0000a	ba 01 00 00 00	 mov	 edx, 1
  0000f	56		 push	 esi
; Line 401
  00010	8b 75 08	 mov	 esi, DWORD PTR _g$[ebp]
  00013	33 c0		 xor	 eax, eax
  00015	57		 push	 edi
  00016	8a 4b 07	 mov	 cl, BYTE PTR [ebx+7]
  00019	33 ff		 xor	 edi, edi
  0001b	d3 e2		 shl	 edx, cl
  0001d	c1 e2 05	 shl	 edx, 5
  00020	03 53 10	 add	 edx, DWORD PTR [ebx+16]
  00023	89 55 f4	 mov	 DWORD PTR _limit$1$[ebp], edx
  00026	33 d2		 xor	 edx, edx
  00028	89 7d f8	 mov	 DWORD PTR _marked$1$[ebp], edi
  0002b	89 7d f0	 mov	 DWORD PTR _hasclears$1$[ebp], edi
  0002e	89 45 fc	 mov	 DWORD PTR _hasww$1$[ebp], eax
  00031	39 43 08	 cmp	 DWORD PTR [ebx+8], eax
  00034	76 32		 jbe	 SHORT $LN16@traverseep
$LL18@traverseep:
; Line 402
  00036	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  00039	f6 44 38 08 40	 test	 BYTE PTR [eax+edi+8], 64 ; 00000040H
  0003e	74 1a		 je	 SHORT $LN17@traverseep
  00040	8b 04 38	 mov	 eax, DWORD PTR [eax+edi]
  00043	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00047	74 11		 je	 SHORT $LN17@traverseep
; Line 404
  00049	50		 push	 eax
  0004a	56		 push	 esi
  0004b	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _marked$1$[ebp], 1
  00052	e8 00 00 00 00	 call	 _reallymarkobject
  00057	83 c4 08	 add	 esp, 8
$LN17@traverseep:
; Line 401
  0005a	42		 inc	 edx
  0005b	83 c7 10	 add	 edi, 16			; 00000010H
  0005e	3b 53 08	 cmp	 edx, DWORD PTR [ebx+8]
  00061	72 d3		 jb	 SHORT $LL18@traverseep
  00063	8b 7d f8	 mov	 edi, DWORD PTR _marked$1$[ebp]
  00066	33 c0		 xor	 eax, eax
$LN16@traverseep:
; Line 408
  00068	8b 53 10	 mov	 edx, DWORD PTR [ebx+16]
  0006b	3b 55 f4	 cmp	 edx, DWORD PTR _limit$1$[ebp]
  0006e	73 6f		 jae	 SHORT $LN12@traverseep
  00070	8b 5d f4	 mov	 ebx, DWORD PTR _limit$1$[ebp]
$LL14@traverseep:
; Line 410
  00073	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00076	85 c9		 test	 ecx, ecx
  00078	75 1b		 jne	 SHORT $LN11@traverseep
; Line 411
  0007a	f6 42 18 40	 test	 BYTE PTR [edx+24], 64	; 00000040H
  0007e	74 52		 je	 SHORT $LN45@traverseep
  00080	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00083	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00087	8b 45 fc	 mov	 eax, DWORD PTR _hasww$1$[ebp]
  0008a	74 49		 je	 SHORT $LN13@traverseep
  0008c	c7 42 18 0a 00
	00 00		 mov	 DWORD PTR [edx+24], 10	; 0000000aH
  00093	eb 40		 jmp	 SHORT $LN13@traverseep
$LN11@traverseep:
; Line 412
  00095	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00098	a8 40		 test	 al, 64			; 00000040H
  0009a	74 19		 je	 SHORT $LN9@traverseep
  0009c	24 0f		 and	 al, 15			; 0000000fH
  0009e	3c 04		 cmp	 al, 4
  000a0	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000a3	75 52		 jne	 SHORT $LN26@traverseep
  000a5	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  000a9	74 0a		 je	 SHORT $LN9@traverseep
  000ab	50		 push	 eax
  000ac	56		 push	 esi
  000ad	e8 00 00 00 00	 call	 _reallymarkobject
  000b2	83 c4 08	 add	 esp, 8
$LN9@traverseep:
; Line 417
  000b5	f6 42 08 40	 test	 BYTE PTR [edx+8], 64	; 00000040H
  000b9	74 17		 je	 SHORT $LN45@traverseep
  000bb	8b 02		 mov	 eax, DWORD PTR [edx]
  000bd	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  000c1	74 0f		 je	 SHORT $LN45@traverseep
; Line 419
  000c3	50		 push	 eax
  000c4	56		 push	 esi
  000c5	bf 01 00 00 00	 mov	 edi, 1
  000ca	e8 00 00 00 00	 call	 _reallymarkobject
  000cf	83 c4 08	 add	 esp, 8
$LN45@traverseep:
  000d2	8b 45 fc	 mov	 eax, DWORD PTR _hasww$1$[ebp]
$LN13@traverseep:
; Line 408
  000d5	83 c2 20	 add	 edx, 32			; 00000020H
  000d8	3b d3		 cmp	 edx, ebx
  000da	72 97		 jb	 SHORT $LL14@traverseep
  000dc	8b 5d 0c	 mov	 ebx, DWORD PTR _h$[ebp]
$LN12@traverseep:
; Line 423
  000df	80 7e 3d 00	 cmp	 BYTE PTR [esi+61], 0
  000e3	75 39		 jne	 SHORT $LN5@traverseep
; Line 424
  000e5	8b 4e 50	 mov	 ecx, DWORD PTR [esi+80]
; Line 429
  000e8	8b c7		 mov	 eax, edi
  000ea	89 4b 1c	 mov	 DWORD PTR [ebx+28], ecx
  000ed	5f		 pop	 edi
  000ee	89 5e 50	 mov	 DWORD PTR [esi+80], ebx
  000f1	5e		 pop	 esi
  000f2	5b		 pop	 ebx
; Line 430
  000f3	8b e5		 mov	 esp, ebp
  000f5	5d		 pop	 ebp
  000f6	c3		 ret	 0
; Line 412
$LN26@traverseep:
  000f7	0f b6 40 05	 movzx	 eax, BYTE PTR [eax+5]
  000fb	83 e0 03	 and	 eax, 3
  000fe	74 b5		 je	 SHORT $LN9@traverseep
; Line 413
  00100	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _hasclears$1$[ebp], 1
; Line 414
  00107	f6 c1 40	 test	 cl, 64			; 00000040H
  0010a	74 c6		 je	 SHORT $LN45@traverseep
  0010c	8b 02		 mov	 eax, DWORD PTR [edx]
  0010e	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00112	74 be		 je	 SHORT $LN45@traverseep
; Line 415
  00114	b8 01 00 00 00	 mov	 eax, 1
  00119	89 45 fc	 mov	 DWORD PTR _hasww$1$[ebp], eax
; Line 417
  0011c	eb b7		 jmp	 SHORT $LN13@traverseep
$LN5@traverseep:
; Line 425
  0011e	85 c0		 test	 eax, eax
  00120	74 12		 je	 SHORT $LN3@traverseep
; Line 426
  00122	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  00125	89 43 1c	 mov	 DWORD PTR [ebx+28], eax
; Line 429
  00128	8b c7		 mov	 eax, edi
  0012a	5f		 pop	 edi
  0012b	89 5e 58	 mov	 DWORD PTR [esi+88], ebx
  0012e	5e		 pop	 esi
  0012f	5b		 pop	 ebx
; Line 430
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c3		 ret	 0
$LN3@traverseep:
; Line 427
  00134	83 7d f0 00	 cmp	 DWORD PTR _hasclears$1$[ebp], 0
  00138	74 09		 je	 SHORT $LN39@traverseep
; Line 428
  0013a	8b 46 5c	 mov	 eax, DWORD PTR [esi+92]
  0013d	89 43 1c	 mov	 DWORD PTR [ebx+28], eax
  00140	89 5e 5c	 mov	 DWORD PTR [esi+92], ebx
$LN39@traverseep:
; Line 429
  00143	8b c7		 mov	 eax, edi
  00145	5f		 pop	 edi
  00146	5e		 pop	 esi
  00147	5b		 pop	 ebx
; Line 430
  00148	8b e5		 mov	 esp, ebp
  0014a	5d		 pop	 ebp
  0014b	c3		 ret	 0
_traverseephemeron ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _traverseweakvalue
_TEXT	SEGMENT
_g$ = 8							; size = 4
_h$ = 12						; size = 4
_traverseweakvalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 361
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 362
  00003	8b 45 0c	 mov	 eax, DWORD PTR _h$[ebp]
  00006	53		 push	 ebx
  00007	bb 01 00 00 00	 mov	 ebx, 1
  0000c	56		 push	 esi
  0000d	8a 48 07	 mov	 cl, BYTE PTR [eax+7]
  00010	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
; Line 365
  00013	33 c0		 xor	 eax, eax
  00015	d3 e3		 shl	 ebx, cl
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _h$[ebp]
  0001a	c1 e3 05	 shl	 ebx, 5
  0001d	03 da		 add	 ebx, edx
  0001f	57		 push	 edi
  00020	3b 41 08	 cmp	 eax, DWORD PTR [ecx+8]
; Line 366
  00023	8b 7d 08	 mov	 edi, DWORD PTR _g$[ebp]
  00026	1b f6		 sbb	 esi, esi
  00028	f7 de		 neg	 esi
  0002a	3b d3		 cmp	 edx, ebx
  0002c	73 77		 jae	 SHORT $LN8@traversewe
  0002e	8b ff		 npad	 2
$LL10@traversewe:
; Line 368
  00030	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00034	75 18		 jne	 SHORT $LN7@traversewe
; Line 369
  00036	f6 42 18 40	 test	 BYTE PTR [edx+24], 64	; 00000040H
  0003a	74 5f		 je	 SHORT $LN9@traversewe
  0003c	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0003f	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00043	74 56		 je	 SHORT $LN9@traversewe
  00045	c7 42 18 0a 00
	00 00		 mov	 DWORD PTR [edx+24], 10	; 0000000aH
; Line 370
  0004c	eb 4d		 jmp	 SHORT $LN9@traversewe
$LN7@traversewe:
; Line 372
  0004e	f6 42 18 40	 test	 BYTE PTR [edx+24], 64	; 00000040H
  00052	74 13		 je	 SHORT $LN5@traversewe
  00054	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00057	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0005b	74 0a		 je	 SHORT $LN5@traversewe
  0005d	50		 push	 eax
  0005e	57		 push	 edi
  0005f	e8 00 00 00 00	 call	 _reallymarkobject
  00064	83 c4 08	 add	 esp, 8
$LN5@traversewe:
; Line 373
  00067	85 f6		 test	 esi, esi
  00069	75 30		 jne	 SHORT $LN9@traversewe
  0006b	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0006e	a8 40		 test	 al, 64			; 00000040H
  00070	74 29		 je	 SHORT $LN9@traversewe
  00072	24 0f		 and	 al, 15			; 0000000fH
  00074	3c 04		 cmp	 al, 4
  00076	8b 02		 mov	 eax, DWORD PTR [edx]
  00078	75 12		 jne	 SHORT $LN18@traversewe
  0007a	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0007e	74 1b		 je	 SHORT $LN9@traversewe
  00080	50		 push	 eax
  00081	57		 push	 edi
  00082	e8 00 00 00 00	 call	 _reallymarkobject
  00087	83 c4 08	 add	 esp, 8
  0008a	eb 0f		 jmp	 SHORT $LN9@traversewe
$LN18@traversewe:
  0008c	0f b6 40 05	 movzx	 eax, BYTE PTR [eax+5]
  00090	83 e0 03	 and	 eax, 3
  00093	b8 01 00 00 00	 mov	 eax, 1
  00098	0f 45 f0	 cmovne	 esi, eax
$LN9@traversewe:
; Line 366
  0009b	83 c2 20	 add	 edx, 32			; 00000020H
  0009e	3b d3		 cmp	 edx, ebx
  000a0	72 8e		 jb	 SHORT $LL10@traversewe
  000a2	8b 4d 0c	 mov	 ecx, DWORD PTR _h$[ebp]
$LN8@traversewe:
; Line 377
  000a5	80 7f 3d 00	 cmp	 BYTE PTR [edi+61], 0
  000a9	75 0e		 jne	 SHORT $LN3@traversewe
; Line 378
  000ab	8b 47 50	 mov	 eax, DWORD PTR [edi+80]
  000ae	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  000b1	89 4f 50	 mov	 DWORD PTR [edi+80], ecx
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5b		 pop	 ebx
; Line 381
  000b7	5d		 pop	 ebp
  000b8	c3		 ret	 0
$LN3@traversewe:
; Line 379
  000b9	85 f6		 test	 esi, esi
  000bb	74 09		 je	 SHORT $LN1@traversewe
; Line 380
  000bd	8b 47 54	 mov	 eax, DWORD PTR [edi+84]
  000c0	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  000c3	89 4f 54	 mov	 DWORD PTR [edi+84], ecx
$LN1@traversewe:
  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
; Line 381
  000c9	5d		 pop	 ebp
  000ca	c3		 ret	 0
_traverseweakvalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _restartcollection
_TEXT	SEGMENT
_g$ = 8							; size = 4
_restartcollection PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 337
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 338
  00004	8b 75 08	 mov	 esi, DWORD PTR _g$[ebp]
; Line 340
  00007	8b 46 7c	 mov	 eax, DWORD PTR [esi+124]
  0000a	c7 46 50 00 00
	00 00		 mov	 DWORD PTR [esi+80], 0
  00011	c7 46 4c 00 00
	00 00		 mov	 DWORD PTR [esi+76], 0
  00018	c7 46 58 00 00
	00 00		 mov	 DWORD PTR [esi+88], 0
  0001f	c7 46 5c 00 00
	00 00		 mov	 DWORD PTR [esi+92], 0
  00026	c7 46 54 00 00
	00 00		 mov	 DWORD PTR [esi+84], 0
  0002d	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00031	74 0a		 je	 SHORT $LN2@restartcol
  00033	50		 push	 eax
  00034	56		 push	 esi
  00035	e8 00 00 00 00	 call	 _reallymarkobject
  0003a	83 c4 08	 add	 esp, 8
$LN2@restartcol:
; Line 341
  0003d	f6 46 30 40	 test	 BYTE PTR [esi+48], 64	; 00000040H
  00041	74 13		 je	 SHORT $LN1@restartcol
  00043	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00046	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0004a	74 0a		 je	 SHORT $LN1@restartcol
  0004c	50		 push	 eax
  0004d	56		 push	 esi
  0004e	e8 00 00 00 00	 call	 _reallymarkobject
  00053	83 c4 08	 add	 esp, 8
$LN1@restartcol:
; Line 342
  00056	56		 push	 esi
  00057	e8 00 00 00 00	 call	 _markmt
; Line 343
  0005c	56		 push	 esi
  0005d	e8 00 00 00 00	 call	 _markbeingfnz
  00062	83 c4 08	 add	 esp, 8
  00065	5e		 pop	 esi
; Line 344
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
_restartcollection ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _remarkupvals
_TEXT	SEGMENT
_uvalue$1 = -16						; size = 16
_g$ = 8							; size = 4
_remarkupvals PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 312
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	57		 push	 edi
; Line 314
  00008	8b 7d 08	 mov	 edi, DWORD PTR _g$[ebp]
; Line 315
  0000b	8b 4f 68	 mov	 ecx, DWORD PTR [edi+104]
  0000e	8d 5f 68	 lea	 ebx, DWORD PTR [edi+104]
  00011	85 c9		 test	 ecx, ecx
  00013	0f 84 33 01 00
	00		 je	 $LN8@remarkupva
  00019	56		 push	 esi
  0001a	8d 9b 00 00 00
	00		 npad	 6
$LL9@remarkupva:
; Line 317
  00020	f6 41 05 07	 test	 BYTE PTR [ecx+5], 7
  00024	75 0e		 jne	 SHORT $LN7@remarkupva
  00026	83 79 24 00	 cmp	 DWORD PTR [ecx+36], 0
  0002a	74 08		 je	 SHORT $LN7@remarkupva
; Line 318
  0002c	8d 59 2c	 lea	 ebx, DWORD PTR [ecx+44]
; Line 319
  0002f	e9 0d 01 00 00	 jmp	 $LN3@remarkupva
$LN7@remarkupva:
; Line 321
  00034	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  00037	89 03		 mov	 DWORD PTR [ebx], eax
; Line 323
  00039	8b 71 24	 mov	 esi, DWORD PTR [ecx+36]
  0003c	89 49 2c	 mov	 DWORD PTR [ecx+44], ecx
  0003f	85 f6		 test	 esi, esi
  00041	0f 84 fa 00 00
	00		 je	 $LN3@remarkupva
  00047	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL5@remarkupva:
; Line 324
  00050	83 7e 0c 00	 cmp	 DWORD PTR [esi+12], 0
  00054	0f 84 dc 00 00
	00		 je	 $LN4@remarkupva
; Line 325
  0005a	8b 16		 mov	 edx, DWORD PTR [esi]
  0005c	f6 42 08 40	 test	 BYTE PTR [edx+8], 64	; 00000040H
  00060	0f 84 c9 00 00
	00		 je	 $LN12@remarkupva
  00066	8b 12		 mov	 edx, DWORD PTR [edx]
  00068	f6 42 05 03	 test	 BYTE PTR [edx+5], 3
  0006c	0f 84 bd 00 00
	00		 je	 $LN12@remarkupva
  00072	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00076	80 62 05 fc	 and	 BYTE PTR [edx+5], 252	; 000000fcH
  0007a	83 e8 04	 sub	 eax, 4
  0007d	83 f8 22	 cmp	 eax, 34			; 00000022H
  00080	0f 87 a9 00 00
	00		 ja	 $LN12@remarkupva
  00086	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$reentry$43:
  00090	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN39@remarkupva[eax]
  00097	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN42@remarkupva[eax*4]
$LN21@remarkupva:
  0009e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000a1	85 c0		 test	 eax, eax
  000a3	74 10		 je	 SHORT $LN19@remarkupva
  000a5	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  000a9	74 0a		 je	 SHORT $LN19@remarkupva
  000ab	50		 push	 eax
  000ac	57		 push	 edi
  000ad	e8 00 00 00 00	 call	 _reallymarkobject
  000b2	83 c4 08	 add	 esp, 8
$LN19@remarkupva:
  000b5	80 4a 05 04	 or	 BYTE PTR [edx+5], 4
  000b9	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000bc	83 c0 18	 add	 eax, 24			; 00000018H
  000bf	01 47 10	 add	 DWORD PTR [edi+16], eax
  000c2	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000c5	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  000c8	89 45 f4	 mov	 DWORD PTR _uvalue$1[ebp+4], eax
  000cb	0f b6 42 06	 movzx	 eax, BYTE PTR [edx+6]
  000cf	a8 40		 test	 al, 64			; 00000040H
  000d1	74 5c		 je	 SHORT $LN12@remarkupva
  000d3	8a 41 05	 mov	 al, BYTE PTR [ecx+5]
  000d6	a8 03		 test	 al, 3
  000d8	74 55		 je	 SHORT $LN12@remarkupva
  000da	24 fc		 and	 al, 252			; 000000fcH
  000dc	8b d1		 mov	 edx, ecx
  000de	88 41 05	 mov	 BYTE PTR [ecx+5], al
  000e1	0f b6 41 04	 movzx	 eax, BYTE PTR [ecx+4]
  000e5	83 e8 04	 sub	 eax, 4
  000e8	83 f8 22	 cmp	 eax, 34			; 00000022H
  000eb	76 a3		 jbe	 SHORT $reentry$43
; Line 323
  000ed	eb 40		 jmp	 SHORT $LN12@remarkupva
; Line 325
$LN23@remarkupva:
  000ef	0f b6 42 07	 movzx	 eax, BYTE PTR [edx+7]
  000f3	80 4a 05 04	 or	 BYTE PTR [edx+5], 4
  000f7	83 c0 11	 add	 eax, 17			; 00000011H
  000fa	01 47 10	 add	 DWORD PTR [edi+16], eax
  000fd	eb 30		 jmp	 SHORT $LN12@remarkupva
$LN22@remarkupva:
  000ff	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00102	80 4a 05 04	 or	 BYTE PTR [edx+5], 4
  00106	83 c0 11	 add	 eax, 17			; 00000011H
  00109	01 47 10	 add	 DWORD PTR [edi+16], eax
  0010c	eb 21		 jmp	 SHORT $LN12@remarkupva
$LN17@remarkupva:
  0010e	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
  00111	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00114	eb 16		 jmp	 SHORT $LN40@remarkupva
$LN15@remarkupva:
  00116	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
  00119	89 42 1c	 mov	 DWORD PTR [edx+28], eax
  0011c	eb 0e		 jmp	 SHORT $LN40@remarkupva
$LN14@remarkupva:
  0011e	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
  00121	89 42 28	 mov	 DWORD PTR [edx+40], eax
  00124	eb 06		 jmp	 SHORT $LN40@remarkupva
$LN13@remarkupva:
  00126	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
  00129	89 42 4c	 mov	 DWORD PTR [edx+76], eax
$LN40@remarkupva:
  0012c	89 57 4c	 mov	 DWORD PTR [edi+76], edx
$LN12@remarkupva:
; Line 326
  0012f	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN4@remarkupva:
; Line 323
  00136	8b 76 08	 mov	 esi, DWORD PTR [esi+8]
  00139	85 f6		 test	 esi, esi
  0013b	0f 85 0f ff ff
	ff		 jne	 $LL5@remarkupva
$LN3@remarkupva:
; Line 315
  00141	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00143	85 c9		 test	 ecx, ecx
  00145	0f 85 d5 fe ff
	ff		 jne	 $LL9@remarkupva
  0014b	5e		 pop	 esi
$LN8@remarkupva:
  0014c	5f		 pop	 edi
  0014d	5b		 pop	 ebx
; Line 331
  0014e	8b e5		 mov	 esp, ebp
  00150	5d		 pop	 ebp
  00151	c3		 ret	 0
  00152	8b ff		 npad	 2
$LN42@remarkupva:
  00154	00 00 00 00	 DD	 $LN23@remarkupva
  00158	00 00 00 00	 DD	 $LN15@remarkupva
  0015c	00 00 00 00	 DD	 $LN17@remarkupva
  00160	00 00 00 00	 DD	 $LN21@remarkupva
  00164	00 00 00 00	 DD	 $LN14@remarkupva
  00168	00 00 00 00	 DD	 $LN13@remarkupva
  0016c	00 00 00 00	 DD	 $LN22@remarkupva
  00170	00 00 00 00	 DD	 $LN12@remarkupva
$LN39@remarkupva:
  00174	00		 DB	 0
  00175	01		 DB	 1
  00176	02		 DB	 2
  00177	03		 DB	 3
  00178	04		 DB	 4
  00179	05		 DB	 5
  0017a	07		 DB	 7
  0017b	07		 DB	 7
  0017c	07		 DB	 7
  0017d	07		 DB	 7
  0017e	07		 DB	 7
  0017f	07		 DB	 7
  00180	07		 DB	 7
  00181	07		 DB	 7
  00182	07		 DB	 7
  00183	07		 DB	 7
  00184	06		 DB	 6
  00185	07		 DB	 7
  00186	07		 DB	 7
  00187	07		 DB	 7
  00188	07		 DB	 7
  00189	07		 DB	 7
  0018a	07		 DB	 7
  0018b	07		 DB	 7
  0018c	07		 DB	 7
  0018d	07		 DB	 7
  0018e	07		 DB	 7
  0018f	07		 DB	 7
  00190	07		 DB	 7
  00191	07		 DB	 7
  00192	07		 DB	 7
  00193	07		 DB	 7
  00194	07		 DB	 7
  00195	07		 DB	 7
  00196	02		 DB	 2
_remarkupvals ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _markbeingfnz
_TEXT	SEGMENT
_uvalue$1 = -16						; size = 16
_g$ = 8							; size = 4
_markbeingfnz PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 299
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi
; Line 301
  00008	8b 7d 08	 mov	 edi, DWORD PTR _g$[ebp]
  0000b	8b 77 60	 mov	 esi, DWORD PTR [edi+96]
  0000e	85 f6		 test	 esi, esi
  00010	0f 84 d5 00 00
	00		 je	 $LN2@markbeingf
  00016	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$LL4@markbeingf:
; Line 302
  00020	8a 46 05	 mov	 al, BYTE PTR [esi+5]
  00023	a8 03		 test	 al, 3
  00025	0f 84 b6 00 00
	00		 je	 $LN3@markbeingf
  0002b	24 fc		 and	 al, 252			; 000000fcH
  0002d	8b d6		 mov	 edx, esi
  0002f	88 46 05	 mov	 BYTE PTR [esi+5], al
  00032	0f b6 46 04	 movzx	 eax, BYTE PTR [esi+4]
  00036	83 e8 04	 sub	 eax, 4
  00039	83 f8 22	 cmp	 eax, 34			; 00000022H
  0003c	0f 87 9f 00 00
	00		 ja	 $LN3@markbeingf
$reentry$35:
  00042	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN31@markbeingf[eax]
  00049	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN34@markbeingf[eax*4]
$LN16@markbeingf:
  00050	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00053	85 c0		 test	 eax, eax
  00055	74 10		 je	 SHORT $LN14@markbeingf
  00057	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0005b	74 0a		 je	 SHORT $LN14@markbeingf
  0005d	50		 push	 eax
  0005e	57		 push	 edi
  0005f	e8 00 00 00 00	 call	 _reallymarkobject
  00064	83 c4 08	 add	 esp, 8
$LN14@markbeingf:
  00067	80 4a 05 04	 or	 BYTE PTR [edx+5], 4
  0006b	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0006e	83 c0 18	 add	 eax, 24			; 00000018H
  00071	01 47 10	 add	 DWORD PTR [edi+16], eax
  00074	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00077	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  0007a	89 45 f4	 mov	 DWORD PTR _uvalue$1[ebp+4], eax
  0007d	0f b6 42 06	 movzx	 eax, BYTE PTR [edx+6]
  00081	a8 40		 test	 al, 64			; 00000040H
  00083	74 5c		 je	 SHORT $LN3@markbeingf
  00085	8a 41 05	 mov	 al, BYTE PTR [ecx+5]
  00088	a8 03		 test	 al, 3
  0008a	74 55		 je	 SHORT $LN3@markbeingf
  0008c	24 fc		 and	 al, 252			; 000000fcH
  0008e	8b d1		 mov	 edx, ecx
  00090	88 41 05	 mov	 BYTE PTR [ecx+5], al
  00093	0f b6 41 04	 movzx	 eax, BYTE PTR [ecx+4]
  00097	83 e8 04	 sub	 eax, 4
  0009a	83 f8 22	 cmp	 eax, 34			; 00000022H
  0009d	76 a3		 jbe	 SHORT $reentry$35
; Line 301
  0009f	eb 40		 jmp	 SHORT $LN3@markbeingf
; Line 302
$LN18@markbeingf:
  000a1	0f b6 42 07	 movzx	 eax, BYTE PTR [edx+7]
  000a5	80 4a 05 04	 or	 BYTE PTR [edx+5], 4
  000a9	83 c0 11	 add	 eax, 17			; 00000011H
  000ac	01 47 10	 add	 DWORD PTR [edi+16], eax
  000af	eb 30		 jmp	 SHORT $LN3@markbeingf
$LN17@markbeingf:
  000b1	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000b4	80 4a 05 04	 or	 BYTE PTR [edx+5], 4
  000b8	83 c0 11	 add	 eax, 17			; 00000011H
  000bb	01 47 10	 add	 DWORD PTR [edi+16], eax
  000be	eb 21		 jmp	 SHORT $LN3@markbeingf
$LN12@markbeingf:
  000c0	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
  000c3	89 42 08	 mov	 DWORD PTR [edx+8], eax
  000c6	eb 16		 jmp	 SHORT $LN32@markbeingf
$LN10@markbeingf:
  000c8	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
  000cb	89 42 1c	 mov	 DWORD PTR [edx+28], eax
  000ce	eb 0e		 jmp	 SHORT $LN32@markbeingf
$LN9@markbeingf:
  000d0	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
  000d3	89 42 28	 mov	 DWORD PTR [edx+40], eax
  000d6	eb 06		 jmp	 SHORT $LN32@markbeingf
$LN8@markbeingf:
  000d8	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
  000db	89 42 4c	 mov	 DWORD PTR [edx+76], eax
$LN32@markbeingf:
  000de	89 57 4c	 mov	 DWORD PTR [edi+76], edx
$LN3@markbeingf:
; Line 301
  000e1	8b 36		 mov	 esi, DWORD PTR [esi]
  000e3	85 f6		 test	 esi, esi
  000e5	0f 85 35 ff ff
	ff		 jne	 $LL4@markbeingf
$LN2@markbeingf:
  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
; Line 303
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c3		 ret	 0
  000f1	8d 49 00	 npad	 3
$LN34@markbeingf:
  000f4	00 00 00 00	 DD	 $LN18@markbeingf
  000f8	00 00 00 00	 DD	 $LN10@markbeingf
  000fc	00 00 00 00	 DD	 $LN12@markbeingf
  00100	00 00 00 00	 DD	 $LN16@markbeingf
  00104	00 00 00 00	 DD	 $LN9@markbeingf
  00108	00 00 00 00	 DD	 $LN8@markbeingf
  0010c	00 00 00 00	 DD	 $LN17@markbeingf
  00110	00 00 00 00	 DD	 $LN3@markbeingf
$LN31@markbeingf:
  00114	00		 DB	 0
  00115	01		 DB	 1
  00116	02		 DB	 2
  00117	03		 DB	 3
  00118	04		 DB	 4
  00119	05		 DB	 5
  0011a	07		 DB	 7
  0011b	07		 DB	 7
  0011c	07		 DB	 7
  0011d	07		 DB	 7
  0011e	07		 DB	 7
  0011f	07		 DB	 7
  00120	07		 DB	 7
  00121	07		 DB	 7
  00122	07		 DB	 7
  00123	07		 DB	 7
  00124	06		 DB	 6
  00125	07		 DB	 7
  00126	07		 DB	 7
  00127	07		 DB	 7
  00128	07		 DB	 7
  00129	07		 DB	 7
  0012a	07		 DB	 7
  0012b	07		 DB	 7
  0012c	07		 DB	 7
  0012d	07		 DB	 7
  0012e	07		 DB	 7
  0012f	07		 DB	 7
  00130	07		 DB	 7
  00131	07		 DB	 7
  00132	07		 DB	 7
  00133	07		 DB	 7
  00134	07		 DB	 7
  00135	07		 DB	 7
  00136	02		 DB	 2
_markbeingfnz ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _markmt
_TEXT	SEGMENT
_uvalue$1 = -16						; size = 16
_g$ = 8							; size = 4
_markmt	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 289
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
; Line 291
  00008	8b 75 08	 mov	 esi, DWORD PTR _g$[ebp]
  0000b	bb 09 00 00 00	 mov	 ebx, 9
  00010	57		 push	 edi
  00011	8d be e8 00 00
	00		 lea	 edi, DWORD PTR [esi+232]
  00017	eb 07 8d a4 24
	00 00 00 00	 npad	 9
$LL5@markmt:
; Line 292
  00020	8b 17		 mov	 edx, DWORD PTR [edi]
  00022	85 d2		 test	 edx, edx
  00024	0f 84 c5 00 00
	00		 je	 $LN4@markmt
  0002a	f6 42 05 03	 test	 BYTE PTR [edx+5], 3
  0002e	0f 84 bb 00 00
	00		 je	 $LN4@markmt
  00034	0f b6 42 04	 movzx	 eax, BYTE PTR [edx+4]
  00038	80 62 05 fc	 and	 BYTE PTR [edx+5], 252	; 000000fcH
  0003c	83 e8 04	 sub	 eax, 4
  0003f	83 f8 22	 cmp	 eax, 34			; 00000022H
  00042	0f 87 a7 00 00
	00		 ja	 $LN4@markmt
  00048	eb 06 8d 9b 00
	00 00 00	 npad	 8
$reentry$36:
  00050	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN32@markmt[eax]
  00057	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN35@markmt[eax*4]
$LN17@markmt:
  0005e	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00061	85 c0		 test	 eax, eax
  00063	74 10		 je	 SHORT $LN15@markmt
  00065	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00069	74 0a		 je	 SHORT $LN15@markmt
  0006b	50		 push	 eax
  0006c	56		 push	 esi
  0006d	e8 00 00 00 00	 call	 _reallymarkobject
  00072	83 c4 08	 add	 esp, 8
$LN15@markmt:
  00075	80 4a 05 04	 or	 BYTE PTR [edx+5], 4
  00079	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007c	83 c0 18	 add	 eax, 24			; 00000018H
  0007f	01 46 10	 add	 DWORD PTR [esi+16], eax
  00082	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00085	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  00088	89 45 f4	 mov	 DWORD PTR _uvalue$1[ebp+4], eax
  0008b	0f b6 42 06	 movzx	 eax, BYTE PTR [edx+6]
  0008f	a8 40		 test	 al, 64			; 00000040H
  00091	74 5c		 je	 SHORT $LN4@markmt
  00093	8a 41 05	 mov	 al, BYTE PTR [ecx+5]
  00096	a8 03		 test	 al, 3
  00098	74 55		 je	 SHORT $LN4@markmt
  0009a	24 fc		 and	 al, 252			; 000000fcH
  0009c	8b d1		 mov	 edx, ecx
  0009e	88 41 05	 mov	 BYTE PTR [ecx+5], al
  000a1	0f b6 41 04	 movzx	 eax, BYTE PTR [ecx+4]
  000a5	83 e8 04	 sub	 eax, 4
  000a8	83 f8 22	 cmp	 eax, 34			; 00000022H
  000ab	76 a3		 jbe	 SHORT $reentry$36
; Line 291
  000ad	eb 40		 jmp	 SHORT $LN4@markmt
; Line 292
$LN19@markmt:
  000af	0f b6 42 07	 movzx	 eax, BYTE PTR [edx+7]
  000b3	80 4a 05 04	 or	 BYTE PTR [edx+5], 4
  000b7	83 c0 11	 add	 eax, 17			; 00000011H
  000ba	01 46 10	 add	 DWORD PTR [esi+16], eax
  000bd	eb 30		 jmp	 SHORT $LN4@markmt
$LN18@markmt:
  000bf	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  000c2	80 4a 05 04	 or	 BYTE PTR [edx+5], 4
  000c6	83 c0 11	 add	 eax, 17			; 00000011H
  000c9	01 46 10	 add	 DWORD PTR [esi+16], eax
  000cc	eb 21		 jmp	 SHORT $LN4@markmt
$LN13@markmt:
  000ce	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  000d1	89 42 08	 mov	 DWORD PTR [edx+8], eax
  000d4	eb 16		 jmp	 SHORT $LN33@markmt
$LN11@markmt:
  000d6	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  000d9	89 42 1c	 mov	 DWORD PTR [edx+28], eax
  000dc	eb 0e		 jmp	 SHORT $LN33@markmt
$LN10@markmt:
  000de	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  000e1	89 42 28	 mov	 DWORD PTR [edx+40], eax
  000e4	eb 06		 jmp	 SHORT $LN33@markmt
$LN9@markmt:
  000e6	8b 46 4c	 mov	 eax, DWORD PTR [esi+76]
  000e9	89 42 4c	 mov	 DWORD PTR [edx+76], eax
$LN33@markmt:
  000ec	89 56 4c	 mov	 DWORD PTR [esi+76], edx
$LN4@markmt:
; Line 291
  000ef	83 c7 04	 add	 edi, 4
  000f2	4b		 dec	 ebx
  000f3	0f 85 27 ff ff
	ff		 jne	 $LL5@markmt
  000f9	5f		 pop	 edi
  000fa	5e		 pop	 esi
  000fb	5b		 pop	 ebx
; Line 293
  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c3		 ret	 0
$LN35@markmt:
  00100	00 00 00 00	 DD	 $LN19@markmt
  00104	00 00 00 00	 DD	 $LN11@markmt
  00108	00 00 00 00	 DD	 $LN13@markmt
  0010c	00 00 00 00	 DD	 $LN17@markmt
  00110	00 00 00 00	 DD	 $LN10@markmt
  00114	00 00 00 00	 DD	 $LN9@markmt
  00118	00 00 00 00	 DD	 $LN18@markmt
  0011c	00 00 00 00	 DD	 $LN4@markmt
$LN32@markmt:
  00120	00		 DB	 0
  00121	01		 DB	 1
  00122	02		 DB	 2
  00123	03		 DB	 3
  00124	04		 DB	 4
  00125	05		 DB	 5
  00126	07		 DB	 7
  00127	07		 DB	 7
  00128	07		 DB	 7
  00129	07		 DB	 7
  0012a	07		 DB	 7
  0012b	07		 DB	 7
  0012c	07		 DB	 7
  0012d	07		 DB	 7
  0012e	07		 DB	 7
  0012f	07		 DB	 7
  00130	06		 DB	 6
  00131	07		 DB	 7
  00132	07		 DB	 7
  00133	07		 DB	 7
  00134	07		 DB	 7
  00135	07		 DB	 7
  00136	07		 DB	 7
  00137	07		 DB	 7
  00138	07		 DB	 7
  00139	07		 DB	 7
  0013a	07		 DB	 7
  0013b	07		 DB	 7
  0013c	07		 DB	 7
  0013d	07		 DB	 7
  0013e	07		 DB	 7
  0013f	07		 DB	 7
  00140	07		 DB	 7
  00141	07		 DB	 7
  00142	02		 DB	 2
_markmt	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _iscleared
_TEXT	SEGMENT
_g$ = 8							; size = 4
_o$ = 12						; size = 4
_iscleared PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 139
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 140
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _o$[ebp]
  00006	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00009	a8 40		 test	 al, 64			; 00000040H
  0000b	74 1a		 je	 SHORT $LN2@iscleared
; Line 141
  0000d	24 0f		 and	 al, 15			; 0000000fH
  0000f	3c 04		 cmp	 al, 4
; Line 142
  00011	8b 01		 mov	 eax, DWORD PTR [ecx]
  00013	75 16		 jne	 SHORT $LN3@iscleared
  00015	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00019	74 0c		 je	 SHORT $LN2@iscleared
  0001b	50		 push	 eax
  0001c	ff 75 08	 push	 DWORD PTR _g$[ebp]
  0001f	e8 00 00 00 00	 call	 _reallymarkobject
  00024	83 c4 08	 add	 esp, 8
$LN2@iscleared:
; Line 143
  00027	33 c0		 xor	 eax, eax
; Line 146
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN3@iscleared:
; Line 145
  0002b	0f b6 40 05	 movzx	 eax, BYTE PTR [eax+5]
  0002f	83 e0 03	 and	 eax, 3
; Line 146
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
_iscleared ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _removeentry
_TEXT	SEGMENT
_n$ = 8							; size = 4
_removeentry PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 125
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 127
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _n$[ebp]
  00006	f6 41 18 40	 test	 BYTE PTR [ecx+24], 64	; 00000040H
  0000a	74 10		 je	 SHORT $LN1@removeentr
  0000c	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0000f	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00013	74 07		 je	 SHORT $LN1@removeentr
; Line 128
  00015	c7 41 18 0a 00
	00 00		 mov	 DWORD PTR [ecx+24], 10	; 0000000aH
$LN1@removeentr:
; Line 129
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
_removeentry ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _reallymarkobject
_TEXT	SEGMENT
_uvalue$1 = -16						; size = 16
_g$ = 8							; size = 4
_o$ = 12						; size = 4
_reallymarkobject PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 235
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
; Line 237
  00007	8b 75 0c	 mov	 esi, DWORD PTR _o$[ebp]
; Line 238
  0000a	0f b6 46 04	 movzx	 eax, BYTE PTR [esi+4]
  0000e	80 66 05 fc	 and	 BYTE PTR [esi+5], 252	; 000000fcH
  00012	83 e8 04	 sub	 eax, 4
  00015	83 f8 22	 cmp	 eax, 34			; 00000022H
  00018	0f 87 c5 00 00
	00		 ja	 $LN1@reallymark
  0001e	57		 push	 edi
  0001f	8b 7d 08	 mov	 edi, DWORD PTR _g$[ebp]
$reentry$26:
  00022	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN21@reallymark[eax]
  00029	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN25@reallymark[eax*4]
$LN10@reallymark:
; Line 251
  00030	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00033	85 c0		 test	 eax, eax
  00035	74 10		 je	 SHORT $LN8@reallymark
  00037	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0003b	74 0a		 je	 SHORT $LN8@reallymark
  0003d	50		 push	 eax
  0003e	57		 push	 edi
  0003f	e8 00 00 00 00	 call	 _reallymarkobject
  00044	83 c4 08	 add	 esp, 8
$LN8@reallymark:
; Line 252
  00047	80 4e 05 04	 or	 BYTE PTR [esi+5], 4
; Line 253
  0004b	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0004e	83 c0 18	 add	 eax, 24			; 00000018H
  00051	01 47 10	 add	 DWORD PTR [edi+16], eax
; Line 254
  00054	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00057	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0005a	89 45 f4	 mov	 DWORD PTR _uvalue$1[ebp+4], eax
  0005d	0f b6 46 06	 movzx	 eax, BYTE PTR [esi+6]
; Line 255
  00061	a8 40		 test	 al, 64			; 00000040H
  00063	74 7d		 je	 SHORT $LN22@reallymark
  00065	8a 41 05	 mov	 al, BYTE PTR [ecx+5]
  00068	a8 03		 test	 al, 3
  0006a	74 76		 je	 SHORT $LN22@reallymark
; Line 256
  0006c	24 fc		 and	 al, 252			; 000000fcH
  0006e	8b f1		 mov	 esi, ecx
  00070	88 41 05	 mov	 BYTE PTR [ecx+5], al
  00073	0f b6 41 04	 movzx	 eax, BYTE PTR [ecx+4]
  00077	83 e8 04	 sub	 eax, 4
  0007a	83 f8 22	 cmp	 eax, 34			; 00000022H
  0007d	76 a3		 jbe	 SHORT $reentry$26
  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
; Line 283
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c3		 ret	 0
$LN12@reallymark:
; Line 241
  00085	0f b6 46 07	 movzx	 eax, BYTE PTR [esi+7]
  00089	80 4e 05 04	 or	 BYTE PTR [esi+5], 4
  0008d	83 c0 11	 add	 eax, 17			; 00000011H
  00090	01 47 10	 add	 DWORD PTR [edi+16], eax
  00093	5f		 pop	 edi
  00094	5e		 pop	 esi
; Line 283
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c3		 ret	 0
$LN11@reallymark:
; Line 246
  00099	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0009c	80 4e 05 04	 or	 BYTE PTR [esi+5], 4
  000a0	83 c0 11	 add	 eax, 17			; 00000011H
  000a3	01 47 10	 add	 DWORD PTR [edi+16], eax
  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
; Line 283
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c3		 ret	 0
$LN6@reallymark:
; Line 262
  000ac	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
  000af	89 46 08	 mov	 DWORD PTR [esi+8], eax
; Line 278
  000b2	89 77 4c	 mov	 DWORD PTR [edi+76], esi
  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
; Line 283
  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c3		 ret	 0
$LN4@reallymark:
; Line 270
  000bb	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
  000be	89 46 1c	 mov	 DWORD PTR [esi+28], eax
; Line 278
  000c1	89 77 4c	 mov	 DWORD PTR [edi+76], esi
  000c4	5f		 pop	 edi
  000c5	5e		 pop	 esi
; Line 283
  000c6	8b e5		 mov	 esp, ebp
  000c8	5d		 pop	 ebp
  000c9	c3		 ret	 0
$LN3@reallymark:
; Line 274
  000ca	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
  000cd	89 46 28	 mov	 DWORD PTR [esi+40], eax
; Line 278
  000d0	89 77 4c	 mov	 DWORD PTR [edi+76], esi
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
; Line 283
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c3		 ret	 0
$LN2@reallymark:
; Line 278
  000d9	8b 47 4c	 mov	 eax, DWORD PTR [edi+76]
  000dc	89 46 4c	 mov	 DWORD PTR [esi+76], eax
  000df	89 77 4c	 mov	 DWORD PTR [edi+76], esi
$LN22@reallymark:
  000e2	5f		 pop	 edi
$LN1@reallymark:
  000e3	5e		 pop	 esi
; Line 283
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c3		 ret	 0
$LN25@reallymark:
  000e8	00 00 00 00	 DD	 $LN12@reallymark
  000ec	00 00 00 00	 DD	 $LN4@reallymark
  000f0	00 00 00 00	 DD	 $LN6@reallymark
  000f4	00 00 00 00	 DD	 $LN10@reallymark
  000f8	00 00 00 00	 DD	 $LN3@reallymark
  000fc	00 00 00 00	 DD	 $LN2@reallymark
  00100	00 00 00 00	 DD	 $LN11@reallymark
  00104	00 00 00 00	 DD	 $LN22@reallymark
$LN21@reallymark:
  00108	00		 DB	 0
  00109	01		 DB	 1
  0010a	02		 DB	 2
  0010b	03		 DB	 3
  0010c	04		 DB	 4
  0010d	05		 DB	 5
  0010e	07		 DB	 7
  0010f	07		 DB	 7
  00110	07		 DB	 7
  00111	07		 DB	 7
  00112	07		 DB	 7
  00113	07		 DB	 7
  00114	07		 DB	 7
  00115	07		 DB	 7
  00116	07		 DB	 7
  00117	07		 DB	 7
  00118	06		 DB	 6
  00119	07		 DB	 7
  0011a	07		 DB	 7
  0011b	07		 DB	 7
  0011c	07		 DB	 7
  0011d	07		 DB	 7
  0011e	07		 DB	 7
  0011f	07		 DB	 7
  00120	07		 DB	 7
  00121	07		 DB	 7
  00122	07		 DB	 7
  00123	07		 DB	 7
  00124	07		 DB	 7
  00125	07		 DB	 7
  00126	07		 DB	 7
  00127	07		 DB	 7
  00128	07		 DB	 7
  00129	07		 DB	 7
  0012a	02		 DB	 2
_reallymarkobject ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaC_upvdeccount
_TEXT	SEGMENT
_L$ = 8							; size = 4
_uv$ = 12						; size = 4
_luaC_upvdeccount PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 677
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 679
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _uv$[ebp]
  00006	ff 49 04	 dec	 DWORD PTR [ecx+4]
; Line 680
  00009	75 17		 jne	 SHORT $LN1@luaC_upvde
  0000b	8d 41 08	 lea	 eax, DWORD PTR [ecx+8]
  0000e	39 01		 cmp	 DWORD PTR [ecx], eax
  00010	75 10		 jne	 SHORT $LN1@luaC_upvde
; Line 681
  00012	6a 00		 push	 0
  00014	6a 18		 push	 24			; 00000018H
  00016	51		 push	 ecx
  00017	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001a	e8 00 00 00 00	 call	 _luaM_realloc_
  0001f	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@luaC_upvde:
; Line 682
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
_luaC_upvdeccount ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaC_checkfinalizer
_TEXT	SEGMENT
_L$ = 8							; size = 4
_o$ = 12						; size = 4
_mt$ = 16						; size = 4
_luaC_checkfinalizer PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 902
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 903
  00004	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00007	56		 push	 esi
; Line 905
  00008	8b 75 0c	 mov	 esi, DWORD PTR _o$[ebp]
  0000b	57		 push	 edi
  0000c	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
  0000f	f6 46 05 08	 test	 BYTE PTR [esi+5], 8
  00013	75 75		 jne	 SHORT $LN7@luaC_check
  00015	8b 45 10	 mov	 eax, DWORD PTR _mt$[ebp]
  00018	85 c0		 test	 eax, eax
  0001a	74 6e		 je	 SHORT $LN7@luaC_check
  0001c	f6 40 06 04	 test	 BYTE PTR [eax+6], 4
  00020	75 68		 jne	 SHORT $LN7@luaC_check
  00022	ff b7 90 00 00
	00		 push	 DWORD PTR [edi+144]
  00028	6a 02		 push	 2
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 _luaT_gettm
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH
  00033	85 c0		 test	 eax, eax
  00035	74 53		 je	 SHORT $LN7@luaC_check
; Line 909
  00037	8a 47 3d	 mov	 al, BYTE PTR [edi+61]
  0003a	3c 02		 cmp	 al, 2
  0003c	72 2a		 jb	 SHORT $LN4@luaC_check
  0003e	3c 05		 cmp	 al, 5
  00040	77 26		 ja	 SHORT $LN4@luaC_check
; Line 910
  00042	8a 46 05	 mov	 al, BYTE PTR [esi+5]
  00045	8a 4f 3c	 mov	 cl, BYTE PTR [edi+60]
  00048	24 f8		 and	 al, 248			; 000000f8H
  0004a	80 e1 03	 and	 cl, 3
  0004d	0a c8		 or	 cl, al
  0004f	88 4e 05	 mov	 BYTE PTR [esi+5], cl
; Line 911
  00052	8b 47 44	 mov	 eax, DWORD PTR [edi+68]
  00055	3b c6		 cmp	 eax, esi
  00057	75 0f		 jne	 SHORT $LN4@luaC_check
; Line 912
  00059	6a 00		 push	 0
  0005b	50		 push	 eax
  0005c	53		 push	 ebx
  0005d	e8 00 00 00 00	 call	 _sweeptolive
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH
  00065	89 47 44	 mov	 DWORD PTR [edi+68], eax
$LN4@luaC_check:
; Line 915
  00068	8b 47 40	 mov	 eax, DWORD PTR [edi+64]
  0006b	8d 4f 40	 lea	 ecx, DWORD PTR [edi+64]
  0006e	3b c6		 cmp	 eax, esi
  00070	74 08		 je	 SHORT $LN1@luaC_check
$LL3@luaC_check:
  00072	8b c8		 mov	 ecx, eax
  00074	8b 01		 mov	 eax, DWORD PTR [ecx]
  00076	3b c6		 cmp	 eax, esi
  00078	75 f8		 jne	 SHORT $LL3@luaC_check
$LN1@luaC_check:
; Line 916
  0007a	8b 06		 mov	 eax, DWORD PTR [esi]
  0007c	89 01		 mov	 DWORD PTR [ecx], eax
; Line 917
  0007e	8b 47 48	 mov	 eax, DWORD PTR [edi+72]
  00081	89 06		 mov	 DWORD PTR [esi], eax
; Line 918
  00083	89 77 48	 mov	 DWORD PTR [edi+72], esi
; Line 919
  00086	80 4e 05 08	 or	 BYTE PTR [esi+5], 8
$LN7@luaC_check:
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx
; Line 921
  0008d	5d		 pop	 ebp
  0008e	c3		 ret	 0
_luaC_checkfinalizer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaC_upvalbarrier_
_TEXT	SEGMENT
_L$ = 8							; size = 4
_uv$ = 12						; size = 4
_luaC_upvalbarrier_ PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 185
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 186
  00003	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00006	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
; Line 187
  00009	8b 45 0c	 mov	 eax, DWORD PTR _uv$[ebp]
; Line 189
  0000c	80 79 3d 01	 cmp	 BYTE PTR [ecx+61], 1
  00010	8b 00		 mov	 eax, DWORD PTR [eax]
  00012	8b 00		 mov	 eax, DWORD PTR [eax]
  00014	77 12		 ja	 SHORT $LN1@luaC_upval
; Line 190
  00016	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0001a	74 0c		 je	 SHORT $LN1@luaC_upval
  0001c	89 45 0c	 mov	 DWORD PTR _uv$[ebp], eax
  0001f	89 4d 08	 mov	 DWORD PTR _L$[ebp], ecx
; Line 191
  00022	5d		 pop	 ebp
; Line 190
  00023	e9 00 00 00 00	 jmp	 _reallymarkobject
$LN1@luaC_upval:
; Line 191
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
_luaC_upvalbarrier_ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaC_barrierback_
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
_luaC_barrierback_ PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 171
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 172
  00003	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
; Line 174
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR _t$[ebp]
  00009	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0000c	80 61 05 fb	 and	 BYTE PTR [ecx+5], 251	; 000000fbH
; Line 175
  00010	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  00013	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  00016	89 4a 50	 mov	 DWORD PTR [edx+80], ecx
; Line 176
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
_luaC_barrierback_ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaC_barrier_
_TEXT	SEGMENT
_L$ = 8							; size = 4
_o$ = 12						; size = 4
_v$ = 16						; size = 4
_luaC_barrier_ PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 155
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 156
  00003	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00006	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
; Line 158
  00009	80 78 3d 01	 cmp	 BYTE PTR [eax+61], 1
  0000d	77 0e		 ja	 SHORT $LN2@luaC_barri
; Line 159
  0000f	ff 75 10	 push	 DWORD PTR _v$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _reallymarkobject
  00018	83 c4 08	 add	 esp, 8
; Line 164
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
$LN2@luaC_barri:
; Line 162
  0001d	8b 55 0c	 mov	 edx, DWORD PTR _o$[ebp]
  00020	8a 48 3c	 mov	 cl, BYTE PTR [eax+60]
  00023	80 e1 03	 and	 cl, 3
  00026	8a 42 05	 mov	 al, BYTE PTR [edx+5]
  00029	24 f8		 and	 al, 248			; 000000f8H
  0002b	0a c8		 or	 cl, al
  0002d	88 4a 05	 mov	 BYTE PTR [edx+5], cl
; Line 164
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
_luaC_barrier_ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaC_newobj
_TEXT	SEGMENT
_L$ = 8							; size = 4
_tt$ = 12						; size = 4
_sz$ = 16						; size = 4
_luaC_newobj PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 208
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 209
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00006	53		 push	 ebx
; Line 210
  00007	8b 5d 0c	 mov	 ebx, DWORD PTR _tt$[ebp]
  0000a	8b c3		 mov	 eax, ebx
  0000c	56		 push	 esi
  0000d	ff 75 10	 push	 DWORD PTR _sz$[ebp]
  00010	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
  00013	83 e0 0f	 and	 eax, 15			; 0000000fH
  00016	50		 push	 eax
  00017	6a 00		 push	 0
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 _luaM_realloc_
; Line 211
  0001f	8a 4e 3c	 mov	 cl, BYTE PTR [esi+60]
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	80 e1 03	 and	 cl, 3
; Line 212
  00028	88 58 04	 mov	 BYTE PTR [eax+4], bl
  0002b	88 48 05	 mov	 BYTE PTR [eax+5], cl
; Line 213
  0002e	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]
  00031	89 08		 mov	 DWORD PTR [eax], ecx
; Line 214
  00033	89 46 40	 mov	 DWORD PTR [esi+64], eax
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
; Line 216
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
_luaC_newobj ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaC_fullgc
_TEXT	SEGMENT
_n$1 = 8						; size = 4
_L$ = 8							; size = 4
_isemergency$ = 12					; size = 4
_luaC_fullgc PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 1163
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1166
  00003	83 7d 0c 00	 cmp	 DWORD PTR _isemergency$[ebp], 0
  00007	53		 push	 ebx
  00008	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  0000b	56		 push	 esi
  0000c	57		 push	 edi
  0000d	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
  00010	74 04		 je	 SHORT $LN2@luaC_fullg
  00012	c6 47 3e 01	 mov	 BYTE PTR [edi+62], 1
$LN2@luaC_fullg:
; Line 1167
  00016	80 7f 3d 01	 cmp	 BYTE PTR [edi+61], 1
  0001a	77 22		 ja	 SHORT $LN5@luaC_fullg
; Line 1168
  0001c	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
  0001f	8d 45 08	 lea	 eax, DWORD PTR _n$1[ebp]
  00022	50		 push	 eax
  00023	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _n$1[ebp], 0
  0002a	8d 46 40	 lea	 eax, DWORD PTR [esi+64]
  0002d	c6 46 3d 02	 mov	 BYTE PTR [esi+61], 2
  00031	50		 push	 eax
  00032	53		 push	 ebx
  00033	e8 00 00 00 00	 call	 _sweeptolive
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003b	89 46 44	 mov	 DWORD PTR [esi+68], eax
$LN5@luaC_fullg:
; Line 1171
  0003e	68 80 00 00 00	 push	 128			; 00000080H
  00043	53		 push	 ebx
  00044	e8 00 00 00 00	 call	 _luaC_runtilstate
; Line 1172
  00049	68 7f ff ff ff	 push	 -129			; ffffff7fH
  0004e	53		 push	 ebx
  0004f	e8 00 00 00 00	 call	 _luaC_runtilstate
; Line 1173
  00054	6a 40		 push	 64			; 00000040H
  00056	53		 push	 ebx
  00057	e8 00 00 00 00	 call	 _luaC_runtilstate
; Line 1176
  0005c	68 80 00 00 00	 push	 128			; 00000080H
  00061	53		 push	 ebx
  00062	e8 00 00 00 00	 call	 _luaC_runtilstate
; Line 1178
  00067	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0006c	8b 4f 70	 mov	 ecx, DWORD PTR [edi+112]
  0006f	f7 67 14	 mul	 DWORD PTR [edi+20]
  00072	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00077	c6 47 3e 00	 mov	 BYTE PTR [edi+62], 0
  0007b	8b f2		 mov	 esi, edx
  0007d	83 c4 20	 add	 esp, 32			; 00000020H
  00080	c1 ee 05	 shr	 esi, 5
  00083	99		 cdq
  00084	f7 fe		 idiv	 esi
  00086	3b c8		 cmp	 ecx, eax
  00088	7d 05		 jge	 SHORT $LN9@luaC_fullg
  0008a	0f af ce	 imul	 ecx, esi
  0008d	eb 05		 jmp	 SHORT $LN10@luaC_fullg
$LN9@luaC_fullg:
  0008f	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
$LN10@luaC_fullg:
  00094	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00097	03 47 08	 add	 eax, DWORD PTR [edi+8]
  0009a	2b c1		 sub	 eax, ecx
  0009c	50		 push	 eax
  0009d	57		 push	 edi
  0009e	e8 00 00 00 00	 call	 _luaE_setdebt
  000a3	83 c4 08	 add	 esp, 8
  000a6	5f		 pop	 edi
  000a7	5e		 pop	 esi
  000a8	5b		 pop	 ebx
; Line 1179
  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
_luaC_fullgc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaC_runtilstate
_TEXT	SEGMENT
_g$1$ = -4						; size = 4
_n$1 = 8						; size = 4
_L$ = 8							; size = 4
_statesmask$ = 12					; size = 4
_luaC_runtilstate PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 1108
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; Line 1109
  00005	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
; Line 1110
  00008	b8 01 00 00 00	 mov	 eax, 1
  0000d	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00010	89 4d fc	 mov	 DWORD PTR _g$1$[ebp], ecx
  00013	8a 49 3d	 mov	 cl, BYTE PTR [ecx+61]
  00016	d3 e0		 shl	 eax, cl
  00018	85 45 0c	 test	 eax, DWORD PTR _statesmask$[ebp]
  0001b	0f 85 b6 01 00
	00		 jne	 $LN1@luaC_runti
  00021	56		 push	 esi
  00022	57		 push	 edi
$LL2@luaC_runti:
; Line 1111
  00023	8b 73 10	 mov	 esi, DWORD PTR [ebx+16]
  00026	0f b6 46 3d	 movzx	 eax, BYTE PTR [esi+61]
  0002a	83 f8 07	 cmp	 eax, 7
  0002d	0f 87 8c 01 00
	00		 ja	 $LN6@luaC_runti
  00033	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN43@luaC_runti[eax*4]
$LN16@luaC_runti:
  0003a	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  0003d	c1 e0 02	 shl	 eax, 2
  00040	56		 push	 esi
  00041	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00044	e8 00 00 00 00	 call	 _restartcollection
  00049	83 c4 04	 add	 esp, 4
  0004c	c6 46 3d 00	 mov	 BYTE PTR [esi+61], 0
  00050	e9 6a 01 00 00	 jmp	 $LN6@luaC_runti
$LN15@luaC_runti:
  00055	56		 push	 esi
  00056	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0005d	e8 00 00 00 00	 call	 _propagatemark
  00062	83 c4 04	 add	 esp, 4
  00065	83 7e 4c 00	 cmp	 DWORD PTR [esi+76], 0
  00069	0f 85 50 01 00
	00		 jne	 $LN6@luaC_runti
  0006f	c6 46 3d 01	 mov	 BYTE PTR [esi+61], 1
  00073	e9 47 01 00 00	 jmp	 $LN6@luaC_runti
$LN13@luaC_runti:
  00078	56		 push	 esi
  00079	e8 00 00 00 00	 call	 _propagateall
  0007e	53		 push	 ebx
  0007f	e8 00 00 00 00	 call	 _atomic
  00084	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
  00087	8d 45 08	 lea	 eax, DWORD PTR _n$1[ebp]
  0008a	50		 push	 eax
  0008b	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _n$1[ebp], 0
  00092	8d 47 40	 lea	 eax, DWORD PTR [edi+64]
  00095	c6 47 3d 02	 mov	 BYTE PTR [edi+61], 2
  00099	50		 push	 eax
  0009a	53		 push	 ebx
  0009b	e8 00 00 00 00	 call	 _sweeptolive
  000a0	89 47 44	 mov	 DWORD PTR [edi+68], eax
  000a3	83 c4 14	 add	 esp, 20			; 00000014H
  000a6	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  000a9	03 46 08	 add	 eax, DWORD PTR [esi+8]
  000ac	89 46 14	 mov	 DWORD PTR [esi+20], eax
  000af	e9 0b 01 00 00	 jmp	 $LN6@luaC_runti
$LN12@luaC_runti:
  000b4	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  000b7	85 c0		 test	 eax, eax
  000b9	74 22		 je	 SHORT $LN23@luaC_runti
  000bb	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  000be	6a 50		 push	 80			; 00000050H
  000c0	50		 push	 eax
  000c1	53		 push	 ebx
  000c2	e8 00 00 00 00	 call	 _sweeplist
  000c7	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000ca	83 c4 0c	 add	 esp, 12			; 0000000cH
  000cd	2b cf		 sub	 ecx, edi
  000cf	89 46 44	 mov	 DWORD PTR [esi+68], eax
  000d2	01 4e 14	 add	 DWORD PTR [esi+20], ecx
  000d5	85 c0		 test	 eax, eax
  000d7	0f 85 e2 00 00
	00		 jne	 $LN6@luaC_runti
$LN23@luaC_runti:
  000dd	8d 46 48	 lea	 eax, DWORD PTR [esi+72]
  000e0	c6 46 3d 03	 mov	 BYTE PTR [esi+61], 3
  000e4	89 46 44	 mov	 DWORD PTR [esi+68], eax
  000e7	e9 d3 00 00 00	 jmp	 $LN6@luaC_runti
$LN11@luaC_runti:
  000ec	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  000ef	85 c0		 test	 eax, eax
  000f1	74 22		 je	 SHORT $LN27@luaC_runti
  000f3	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  000f6	6a 50		 push	 80			; 00000050H
  000f8	50		 push	 eax
  000f9	53		 push	 ebx
  000fa	e8 00 00 00 00	 call	 _sweeplist
  000ff	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00102	83 c4 0c	 add	 esp, 12			; 0000000cH
  00105	2b cf		 sub	 ecx, edi
  00107	89 46 44	 mov	 DWORD PTR [esi+68], eax
  0010a	01 4e 14	 add	 DWORD PTR [esi+20], ecx
  0010d	85 c0		 test	 eax, eax
  0010f	0f 85 aa 00 00
	00		 jne	 $LN6@luaC_runti
$LN27@luaC_runti:
  00115	8d 46 60	 lea	 eax, DWORD PTR [esi+96]
  00118	c6 46 3d 04	 mov	 BYTE PTR [esi+61], 4
  0011c	89 46 44	 mov	 DWORD PTR [esi+68], eax
  0011f	e9 9b 00 00 00	 jmp	 $LN6@luaC_runti
$LN10@luaC_runti:
  00124	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00127	85 c0		 test	 eax, eax
  00129	74 1e		 je	 SHORT $LN31@luaC_runti
  0012b	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  0012e	6a 50		 push	 80			; 00000050H
  00130	50		 push	 eax
  00131	53		 push	 ebx
  00132	e8 00 00 00 00	 call	 _sweeplist
  00137	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0013a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0013d	2b cf		 sub	 ecx, edi
  0013f	89 46 44	 mov	 DWORD PTR [esi+68], eax
  00142	01 4e 14	 add	 DWORD PTR [esi+20], ecx
  00145	85 c0		 test	 eax, eax
  00147	75 76		 jne	 SHORT $LN6@luaC_runti
$LN31@luaC_runti:
  00149	c6 46 3d 05	 mov	 BYTE PTR [esi+61], 5
  0014d	c7 46 44 00 00
	00 00		 mov	 DWORD PTR [esi+68], 0
  00154	eb 69		 jmp	 SHORT $LN6@luaC_runti
$LN9@luaC_runti:
  00156	8b 56 7c	 mov	 edx, DWORD PTR [esi+124]
  00159	8a 4e 3c	 mov	 cl, BYTE PTR [esi+60]
  0015c	80 e1 03	 and	 cl, 3
  0015f	8a 42 05	 mov	 al, BYTE PTR [edx+5]
  00162	24 f8		 and	 al, 248			; 000000f8H
  00164	0a c8		 or	 cl, al
  00166	88 4a 05	 mov	 BYTE PTR [edx+5], cl
  00169	80 7e 3e 01	 cmp	 BYTE PTR [esi+62], 1
  0016d	74 2f		 je	 SHORT $LN36@luaC_runti
  0016f	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  00172	8b c1		 mov	 eax, ecx
  00174	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  00177	99		 cdq
  00178	83 e2 03	 and	 edx, 3
  0017b	03 c2		 add	 eax, edx
  0017d	c1 f8 02	 sar	 eax, 2
  00180	39 46 1c	 cmp	 DWORD PTR [esi+28], eax
  00183	7d 11		 jge	 SHORT $LN35@luaC_runti
  00185	8b c1		 mov	 eax, ecx
  00187	99		 cdq
  00188	2b c2		 sub	 eax, edx
  0018a	d1 f8		 sar	 eax, 1
  0018c	50		 push	 eax
  0018d	53		 push	 ebx
  0018e	e8 00 00 00 00	 call	 _luaS_resize
  00193	83 c4 08	 add	 esp, 8
$LN35@luaC_runti:
  00196	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00199	2b c7		 sub	 eax, edi
  0019b	01 46 14	 add	 DWORD PTR [esi+20], eax
$LN36@luaC_runti:
  0019e	c6 46 3d 06	 mov	 BYTE PTR [esi+61], 6
  001a2	eb 1b		 jmp	 SHORT $LN6@luaC_runti
$LN8@luaC_runti:
  001a4	83 7e 60 00	 cmp	 DWORD PTR [esi+96], 0
  001a8	74 11		 je	 SHORT $LN7@luaC_runti
  001aa	80 7e 3e 01	 cmp	 BYTE PTR [esi+62], 1
  001ae	74 0b		 je	 SHORT $LN7@luaC_runti
  001b0	53		 push	 ebx
  001b1	e8 00 00 00 00	 call	 _runafewfinalizers
  001b6	83 c4 04	 add	 esp, 4
  001b9	eb 04		 jmp	 SHORT $LN6@luaC_runti
$LN7@luaC_runti:
  001bb	c6 46 3d 07	 mov	 BYTE PTR [esi+61], 7
$LN6@luaC_runti:
; Line 1110
  001bf	8b 4d fc	 mov	 ecx, DWORD PTR _g$1$[ebp]
  001c2	b8 01 00 00 00	 mov	 eax, 1
  001c7	8a 49 3d	 mov	 cl, BYTE PTR [ecx+61]
  001ca	d3 e0		 shl	 eax, cl
  001cc	85 45 0c	 test	 eax, DWORD PTR _statesmask$[ebp]
  001cf	0f 84 4e fe ff
	ff		 je	 $LL2@luaC_runti
  001d5	5f		 pop	 edi
  001d6	5e		 pop	 esi
$LN1@luaC_runti:
  001d7	5b		 pop	 ebx
; Line 1112
  001d8	8b e5		 mov	 esp, ebp
  001da	5d		 pop	 ebp
  001db	c3		 ret	 0
$LN43@luaC_runti:
  001dc	00 00 00 00	 DD	 $LN15@luaC_runti
  001e0	00 00 00 00	 DD	 $LN13@luaC_runti
  001e4	00 00 00 00	 DD	 $LN12@luaC_runti
  001e8	00 00 00 00	 DD	 $LN11@luaC_runti
  001ec	00 00 00 00	 DD	 $LN10@luaC_runti
  001f0	00 00 00 00	 DD	 $LN9@luaC_runti
  001f4	00 00 00 00	 DD	 $LN8@luaC_runti
  001f8	00 00 00 00	 DD	 $LN16@luaC_runti
_luaC_runtilstate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaC_step
_TEXT	SEGMENT
_L$ = 8							; size = 4
_luaC_step PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 1133
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 1134
  00004	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
; Line 1135
  0000c	8b 4f 0c	 mov	 ecx, DWORD PTR [edi+12]
  0000f	8b 77 74	 mov	 esi, DWORD PTR [edi+116]
  00012	85 c9		 test	 ecx, ecx
  00014	7f 04		 jg	 SHORT $LN11@luaC_step
  00016	33 f6		 xor	 esi, esi
  00018	eb 28		 jmp	 SHORT $LN15@luaC_step
$LN11@luaC_step:
  0001a	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0001f	f7 e9		 imul	 ecx
  00021	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  00026	c1 fa 06	 sar	 edx, 6
  00029	8b ca		 mov	 ecx, edx
  0002b	42		 inc	 edx
  0002c	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0002f	03 ca		 add	 ecx, edx
  00031	99		 cdq
  00032	f7 fe		 idiv	 esi
  00034	3b c8		 cmp	 ecx, eax
  00036	7d 05		 jge	 SHORT $LN14@luaC_step
  00038	0f af f1	 imul	 esi, ecx
  0003b	eb 05		 jmp	 SHORT $LN15@luaC_step
$LN14@luaC_step:
  0003d	be ff ff ff 7f	 mov	 esi, 2147483647		; 7fffffffH
$LN15@luaC_step:
; Line 1136
  00042	80 7f 3f 00	 cmp	 BYTE PTR [edi+63], 0
  00046	75 18		 jne	 SHORT $LL6@luaC_step
; Line 1137
  00048	68 80 c1 ff ff	 push	 -16000			; ffffc180H
  0004d	57		 push	 edi
  0004e	e8 00 00 00 00	 call	 _luaE_setdebt
  00053	83 c4 08	 add	 esp, 8
  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
; Line 1151
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
  0005b	eb 03 8d 49 00	 npad	 5
$LL6@luaC_step:
; Line 1141
  00060	53		 push	 ebx
  00061	e8 00 00 00 00	 call	 _singlestep
; Line 1142
  00066	2b f0		 sub	 esi, eax
  00068	83 c4 04	 add	 esp, 4
; Line 1143
  0006b	81 fe c0 f9 ff
	ff		 cmp	 esi, -1600		; fffff9c0H
  00071	7e 06		 jle	 SHORT $LN3@luaC_step
  00073	80 7f 3d 07	 cmp	 BYTE PTR [edi+61], 7
  00077	75 e7		 jne	 SHORT $LL6@luaC_step
$LN3@luaC_step:
; Line 1144
  00079	80 7f 3d 07	 cmp	 BYTE PTR [edi+61], 7
  0007d	75 3d		 jne	 SHORT $LN2@luaC_step
; Line 1145
  0007f	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00084	8b 4f 70	 mov	 ecx, DWORD PTR [edi+112]
  00087	f7 67 14	 mul	 DWORD PTR [edi+20]
  0008a	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0008f	8b f2		 mov	 esi, edx
  00091	99		 cdq
  00092	c1 ee 05	 shr	 esi, 5
  00095	f7 fe		 idiv	 esi
  00097	3b c8		 cmp	 ecx, eax
  00099	7d 05		 jge	 SHORT $LN18@luaC_step
  0009b	0f af ce	 imul	 ecx, esi
  0009e	eb 05		 jmp	 SHORT $LN19@luaC_step
$LN18@luaC_step:
  000a0	b9 ff ff ff 7f	 mov	 ecx, 2147483647		; 7fffffffH
$LN19@luaC_step:
  000a5	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000a8	2b c1		 sub	 eax, ecx
  000aa	03 47 0c	 add	 eax, DWORD PTR [edi+12]
  000ad	50		 push	 eax
  000ae	57		 push	 edi
  000af	e8 00 00 00 00	 call	 _luaE_setdebt
  000b4	83 c4 08	 add	 esp, 8
  000b7	5f		 pop	 edi
  000b8	5e		 pop	 esi
  000b9	5b		 pop	 ebx
; Line 1151
  000ba	5d		 pop	 ebp
  000bb	c3		 ret	 0
$LN2@luaC_step:
; Line 1147
  000bc	8b c6		 mov	 eax, esi
  000be	99		 cdq
  000bf	f7 7f 74	 idiv	 DWORD PTR [edi+116]
  000c2	69 c0 c8 00 00
	00		 imul	 eax, eax, 200
; Line 1148
  000c8	50		 push	 eax
  000c9	57		 push	 edi
  000ca	e8 00 00 00 00	 call	 _luaE_setdebt
; Line 1149
  000cf	53		 push	 ebx
  000d0	e8 00 00 00 00	 call	 _runafewfinalizers
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi
  000da	5b		 pop	 ebx
; Line 1151
  000db	5d		 pop	 ebp
  000dc	c3		 ret	 0
_luaC_step ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaC_freeallobjects
_TEXT	SEGMENT
_L$ = 8							; size = 4
_luaC_freeallobjects PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 970
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 971
  00004	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 7b 10	 mov	 edi, DWORD PTR [ebx+16]
; Line 972
  0000c	8b 47 60	 mov	 eax, DWORD PTR [edi+96]
  0000f	8d 4f 60	 lea	 ecx, DWORD PTR [edi+96]
  00012	8d 77 48	 lea	 esi, DWORD PTR [edi+72]
  00015	85 c0		 test	 eax, eax
  00017	74 0f		 je	 SHORT $LN9@luaC_freea
  00019	8d a4 24 00 00
	00 00		 npad	 7
$LL10@luaC_freea:
  00020	8b c8		 mov	 ecx, eax
  00022	8b 01		 mov	 eax, DWORD PTR [ecx]
  00024	85 c0		 test	 eax, eax
  00026	75 f8		 jne	 SHORT $LL10@luaC_freea
$LN9@luaC_freea:
  00028	8b 16		 mov	 edx, DWORD PTR [esi]
  0002a	85 d2		 test	 edx, edx
  0002c	74 14		 je	 SHORT $LN5@luaC_freea
  0002e	8b ff		 npad	 2
$LL6@luaC_freea:
  00030	8b 02		 mov	 eax, DWORD PTR [edx]
  00032	89 06		 mov	 DWORD PTR [esi], eax
  00034	8b 01		 mov	 eax, DWORD PTR [ecx]
  00036	89 02		 mov	 DWORD PTR [edx], eax
  00038	89 11		 mov	 DWORD PTR [ecx], edx
  0003a	8b ca		 mov	 ecx, edx
  0003c	8b 16		 mov	 edx, DWORD PTR [esi]
  0003e	85 d2		 test	 edx, edx
  00040	75 ee		 jne	 SHORT $LL6@luaC_freea
$LN5@luaC_freea:
; Line 974
  00042	6a 00		 push	 0
  00044	53		 push	 ebx
  00045	e8 00 00 00 00	 call	 _callallpendingfinalizers
; Line 978
  0004a	6a ff		 push	 -1
  0004c	56		 push	 esi
  0004d	53		 push	 ebx
  0004e	c6 47 3c 03	 mov	 BYTE PTR [edi+60], 3
  00052	c6 47 3e 00	 mov	 BYTE PTR [edi+62], 0
  00056	e8 00 00 00 00	 call	 _sweeplist
; Line 979
  0005b	6a ff		 push	 -1
  0005d	8d 47 40	 lea	 eax, DWORD PTR [edi+64]
  00060	50		 push	 eax
  00061	53		 push	 ebx
  00062	e8 00 00 00 00	 call	 _sweeplist
; Line 980
  00067	6a ff		 push	 -1
  00069	8d 47 64	 lea	 eax, DWORD PTR [edi+100]
  0006c	50		 push	 eax
  0006d	53		 push	 ebx
  0006e	e8 00 00 00 00	 call	 _sweeplist
  00073	83 c4 2c	 add	 esp, 44			; 0000002cH
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
; Line 982
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
_luaC_freeallobjects ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaC_fix
_TEXT	SEGMENT
_L$ = 8							; size = 4
_o$ = 12						; size = 4
_luaC_fix PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lgc.c
; Line 194
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 195
  00003	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
; Line 197
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR _o$[ebp]
  00009	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
; Line 198
  0000c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000e	80 61 05 fc	 and	 BYTE PTR [ecx+5], 252	; 000000fcH
  00012	89 42 40	 mov	 DWORD PTR [edx+64], eax
; Line 199
  00015	8b 42 64	 mov	 eax, DWORD PTR [edx+100]
  00018	89 01		 mov	 DWORD PTR [ecx], eax
; Line 200
  0001a	89 4a 64	 mov	 DWORD PTR [edx+100], ecx
; Line 201
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
_luaC_fix ENDP
_TEXT	ENDS
END
