; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_luaV_equalobj
PUBLIC	_luaV_lessthan
PUBLIC	_luaV_lessequal
PUBLIC	_luaV_tonumber_
PUBLIC	_luaV_tointeger
PUBLIC	_luaV_finishget
PUBLIC	_luaV_finishset
PUBLIC	_luaV_finishOp
PUBLIC	_luaV_execute
PUBLIC	_luaV_concat
PUBLIC	_luaV_div
PUBLIC	_luaV_mod
PUBLIC	_luaV_shiftl
PUBLIC	_luaV_objlen
PUBLIC	??_C@_05FKHKFDID@index?$AA@			; `string'
PUBLIC	??_C@_0CH@DDLIFGFP@gettable?5chain?5too?5long?$DL?5possibl@ ; `string'
PUBLIC	??_C@_0CH@OBFLNBKM@settable?5chain?5too?5long?$DL?5possibl@ ; `string'
PUBLIC	??_C@_0BH@ONIKNOCM@string?5length?5overflow?$AA@ ; `string'
PUBLIC	??_C@_0O@MKOIIDGO@get?5length?5of?$AA@		; `string'
PUBLIC	??_C@_0BK@KPCDLNKD@attempt?5to?5divide?5by?5zero?$AA@ ; `string'
PUBLIC	??_C@_0BK@HHICHKCC@attempt?5to?5perform?5?8n?$CF?$CF0?8?$AA@ ; `string'
PUBLIC	??_C@_0BN@GHPMJMPH@?8for?8?5limit?5must?5be?5a?5number?$AA@ ; `string'
PUBLIC	??_C@_0BM@EGCFKNIJ@?8for?8?5step?5must?5be?5a?5number?$AA@ ; `string'
PUBLIC	??_C@_0CF@JJFDEONC@?8for?8?5initial?5value?5must?5be?5a?5nu@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@43e0000000000000
PUBLIC	__real@c3e0000000000000
PUBLIC	__xmm@80000000000000008000000000000000
EXTRN	__imp__strcoll:PROC
EXTRN	_luaO_fb2int:PROC
EXTRN	_luaO_str2num:PROC
EXTRN	_luaO_tostring:PROC
EXTRN	_luaT_gettm:PROC
EXTRN	_luaT_gettmbyobj:PROC
EXTRN	_luaT_callTM:PROC
EXTRN	_luaT_trybinTM:PROC
EXTRN	_luaT_callorderTM:PROC
EXTRN	_luaG_typeerror:PROC
EXTRN	_luaG_ordererror:PROC
EXTRN	_luaG_runerror:PROC
EXTRN	_luaG_traceexec:PROC
EXTRN	_luaD_precall:PROC
EXTRN	_luaD_call:PROC
EXTRN	_luaD_poscall:PROC
EXTRN	_luaD_growstack:PROC
EXTRN	_luaF_newLclosure:PROC
EXTRN	_luaF_findupval:PROC
EXTRN	_luaF_close:PROC
EXTRN	_luaC_step:PROC
EXTRN	_luaC_barrierback_:PROC
EXTRN	_luaC_upvalbarrier_:PROC
EXTRN	_luaS_eqlngstr:PROC
EXTRN	_luaS_newlstr:PROC
EXTRN	_luaS_createlngstrobj:PROC
EXTRN	_luaH_setint:PROC
EXTRN	_luaH_getstr:PROC
EXTRN	_luaH_get:PROC
EXTRN	_luaH_newkey:PROC
EXTRN	_luaH_new:PROC
EXTRN	_luaH_resize:PROC
EXTRN	_luaH_resizearray:PROC
EXTRN	_luaH_getn:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CIfmod:PROC
EXTRN	__alldvrm:PROC
EXTRN	__allmul:PROC
EXTRN	__allrem:PROC
EXTRN	__allshl:PROC
EXTRN	__aullshr:PROC
EXTRN	__dtol3:PROC
EXTRN	__libm_sse2_pow_precise:PROC
EXTRN	__ltod3:PROC
EXTRN	_floor:PROC
EXTRN	_memcpy:PROC
EXTRN	_luaO_nilobject_:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c3e0000000000000
CONST	SEGMENT
__real@c3e0000000000000 DQ 0c3e0000000000000r	; -9.22337e+018
CONST	ENDS
;	COMDAT __real@43e0000000000000
CONST	SEGMENT
__real@43e0000000000000 DQ 043e0000000000000r	; 9.22337e+018
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_0CF@JJFDEONC@?8for?8?5initial?5value?5must?5be?5a?5nu@
CONST	SEGMENT
??_C@_0CF@JJFDEONC@?8for?8?5initial?5value?5must?5be?5a?5nu@ DB '''for'' '
	DB	'initial value must be a number', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EGCFKNIJ@?8for?8?5step?5must?5be?5a?5number?$AA@
CONST	SEGMENT
??_C@_0BM@EGCFKNIJ@?8for?8?5step?5must?5be?5a?5number?$AA@ DB '''for'' st'
	DB	'ep must be a number', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GHPMJMPH@?8for?8?5limit?5must?5be?5a?5number?$AA@
CONST	SEGMENT
??_C@_0BN@GHPMJMPH@?8for?8?5limit?5must?5be?5a?5number?$AA@ DB '''for'' l'
	DB	'imit must be a number', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HHICHKCC@attempt?5to?5perform?5?8n?$CF?$CF0?8?$AA@
CONST	SEGMENT
??_C@_0BK@HHICHKCC@attempt?5to?5perform?5?8n?$CF?$CF0?8?$AA@ DB 'attempt '
	DB	'to perform ''n%%0''', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KPCDLNKD@attempt?5to?5divide?5by?5zero?$AA@
CONST	SEGMENT
??_C@_0BK@KPCDLNKD@attempt?5to?5divide?5by?5zero?$AA@ DB 'attempt to divi'
	DB	'de by zero', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MKOIIDGO@get?5length?5of?$AA@
CONST	SEGMENT
??_C@_0O@MKOIIDGO@get?5length?5of?$AA@ DB 'get length of', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@ONIKNOCM@string?5length?5overflow?$AA@
CONST	SEGMENT
??_C@_0BH@ONIKNOCM@string?5length?5overflow?$AA@ DB 'string length overfl'
	DB	'ow', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OBFLNBKM@settable?5chain?5too?5long?$DL?5possibl@
CONST	SEGMENT
??_C@_0CH@OBFLNBKM@settable?5chain?5too?5long?$DL?5possibl@ DB 'settable '
	DB	'chain too long; possible loop', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@DDLIFGFP@gettable?5chain?5too?5long?$DL?5possibl@
CONST	SEGMENT
??_C@_0CH@DDLIFGFP@gettable?5chain?5too?5long?$DL?5possibl@ DB 'gettable '
	DB	'chain too long; possible loop', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FKHKFDID@index?$AA@
CONST	SEGMENT
??_C@_05FKHKFDID@index?$AA@ DB 'index', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT _pushclosure
_TEXT	SEGMENT
_ncl$1$ = -8						; size = 4
_uv$1$ = -4						; size = 4
_L$ = 8							; size = 4
_p$ = 12						; size = 4
_encup$ = 16						; size = 4
_base$ = 20						; size = 4
_ra$ = 24						; size = 4
_pushclosure PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 619
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
; Line 620
  00008	8b 75 0c	 mov	 esi, DWORD PTR _p$[ebp]
  0000b	8b 5e 0c	 mov	 ebx, DWORD PTR [esi+12]
; Line 621
  0000e	8b 46 40	 mov	 eax, DWORD PTR [esi+64]
; Line 623
  00011	53		 push	 ebx
  00012	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00015	89 45 fc	 mov	 DWORD PTR _uv$1$[ebp], eax
  00018	e8 00 00 00 00	 call	 _luaF_newLclosure
; Line 625
  0001d	8b 4d 18	 mov	 ecx, DWORD PTR _ra$[ebp]
  00020	83 c4 08	 add	 esp, 8
  00023	89 45 f8	 mov	 DWORD PTR _ncl$1$[ebp], eax
  00026	89 70 0c	 mov	 DWORD PTR [eax+12], esi
  00029	89 01		 mov	 DWORD PTR [ecx], eax
  0002b	c7 41 08 46 00
	00 00		 mov	 DWORD PTR [ecx+8], 70	; 00000046H
; Line 626
  00032	85 db		 test	 ebx, ebx
  00034	7e 42		 jle	 SHORT $LN4@pushclosur
; Line 620
  00036	8b 75 fc	 mov	 esi, DWORD PTR _uv$1$[ebp]
  00039	57		 push	 edi
  0003a	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  0003d	83 c6 05	 add	 esi, 5
$LL6@pushclosur:
; Line 627
  00040	80 7e ff 00	 cmp	 BYTE PTR [esi-1], 0
; Line 628
  00044	0f b6 06	 movzx	 eax, BYTE PTR [esi]
  00047	74 14		 je	 SHORT $LN3@pushclosur
  00049	c1 e0 04	 shl	 eax, 4
  0004c	03 45 14	 add	 eax, DWORD PTR _base$[ebp]
  0004f	50		 push	 eax
  00050	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00053	e8 00 00 00 00	 call	 _luaF_findupval
  00058	83 c4 08	 add	 esp, 8
; Line 629
  0005b	eb 06		 jmp	 SHORT $LN13@pushclosur
$LN3@pushclosur:
; Line 630
  0005d	8b 4d 10	 mov	 ecx, DWORD PTR _encup$[ebp]
  00060	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
$LN13@pushclosur:
  00063	89 07		 mov	 DWORD PTR [edi], eax
  00065	83 c6 08	 add	 esi, 8
; Line 631
  00068	ff 40 04	 inc	 DWORD PTR [eax+4]
  0006b	83 c7 04	 add	 edi, 4
  0006e	4b		 dec	 ebx
  0006f	75 cf		 jne	 SHORT $LL6@pushclosur
  00071	8b 75 0c	 mov	 esi, DWORD PTR _p$[ebp]
  00074	8b 45 f8	 mov	 eax, DWORD PTR _ncl$1$[ebp]
  00077	5f		 pop	 edi
$LN4@pushclosur:
; Line 634
  00078	f6 46 05 04	 test	 BYTE PTR [esi+5], 4
  0007c	75 03		 jne	 SHORT $LN1@pushclosur
; Line 635
  0007e	89 46 44	 mov	 DWORD PTR [esi+68], eax
$LN1@pushclosur:
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
; Line 636
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c3		 ret	 0
_pushclosure ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _getcached
_TEXT	SEGMENT
_c$1$ = 8						; size = 4
_p$ = 8							; size = 4
_encup$ = 12						; size = 4
_base$ = 16						; size = 4
_getcached PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 596
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 597
  00003	8b 45 08	 mov	 eax, DWORD PTR _p$[ebp]
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
  00009	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0000c	89 4d 08	 mov	 DWORD PTR _c$1$[ebp], ecx
; Line 598
  0000f	85 c9		 test	 ecx, ecx
  00011	74 3f		 je	 SHORT $LN2@getcached
; Line 599
  00013	8b 58 0c	 mov	 ebx, DWORD PTR [eax+12]
; Line 602
  00016	33 f6		 xor	 esi, esi
  00018	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  0001b	85 db		 test	 ebx, ebx
  0001d	7e 33		 jle	 SHORT $LN2@getcached
; Line 599
  0001f	8d 79 10	 lea	 edi, DWORD PTR [ecx+16]
  00022	83 c2 05	 add	 edx, 5
$LL4@getcached:
; Line 603
  00025	80 7a ff 00	 cmp	 BYTE PTR [edx-1], 0
  00029	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  0002c	74 08		 je	 SHORT $LN8@getcached
  0002e	c1 e0 04	 shl	 eax, 4
  00031	03 45 10	 add	 eax, DWORD PTR _base$[ebp]
  00034	eb 08		 jmp	 SHORT $LN9@getcached
$LN8@getcached:
  00036	8b 4d 0c	 mov	 ecx, DWORD PTR _encup$[ebp]
  00039	8b 04 81	 mov	 eax, DWORD PTR [ecx+eax*4]
  0003c	8b 00		 mov	 eax, DWORD PTR [eax]
$LN9@getcached:
; Line 604
  0003e	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00040	39 01		 cmp	 DWORD PTR [ecx], eax
  00042	75 15		 jne	 SHORT $LN11@getcached
; Line 602
  00044	46		 inc	 esi
  00045	83 c7 04	 add	 edi, 4
  00048	83 c2 08	 add	 edx, 8
  0004b	3b f3		 cmp	 esi, ebx
  0004d	7c d6		 jl	 SHORT $LL4@getcached
; Line 604
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR _c$1$[ebp]
$LN2@getcached:
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
; Line 608
  00054	8b c1		 mov	 eax, ecx
  00056	5b		 pop	 ebx
; Line 609
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
$LN11@getcached:
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
; Line 605
  0005b	33 c0		 xor	 eax, eax
  0005d	5b		 pop	 ebx
; Line 609
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_getcached ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _copy2buff
_TEXT	SEGMENT
_tl$1$ = -4						; size = 4
_top$ = 8						; size = 4
_n$ = 12						; size = 4
_buff$ = 16						; size = 4
_copy2buff PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 446
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; Line 447
  00005	8b 5d 0c	 mov	 ebx, DWORD PTR _n$[ebp]
  00008	33 c9		 xor	 ecx, ecx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b 7d 08	 mov	 edi, DWORD PTR _top$[ebp]
  0000f	8b c3		 mov	 eax, ebx
  00011	c1 e0 04	 shl	 eax, 4
  00014	89 4d fc	 mov	 DWORD PTR _tl$1$[ebp], ecx
  00017	2b f8		 sub	 edi, eax
  00019	8d a4 24 00 00
	00 00		 npad	 7
$LL3@copy2buff:
; Line 449
  00020	8b 07		 mov	 eax, DWORD PTR [edi]
  00022	80 78 04 04	 cmp	 BYTE PTR [eax+4], 4
  00026	75 06		 jne	 SHORT $LN6@copy2buff
  00028	0f b6 70 07	 movzx	 esi, BYTE PTR [eax+7]
  0002c	eb 03		 jmp	 SHORT $LN7@copy2buff
$LN6@copy2buff:
  0002e	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
$LN7@copy2buff:
; Line 450
  00031	83 c0 10	 add	 eax, 16			; 00000010H
  00034	56		 push	 esi
  00035	50		 push	 eax
  00036	8b 45 10	 mov	 eax, DWORD PTR _buff$[ebp]
  00039	03 c1		 add	 eax, ecx
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 _memcpy
; Line 451
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _tl$1$[ebp]
; Line 452
  00044	4b		 dec	 ebx
  00045	03 ce		 add	 ecx, esi
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004a	83 c7 10	 add	 edi, 16			; 00000010H
  0004d	89 4d fc	 mov	 DWORD PTR _tl$1$[ebp], ecx
  00050	85 db		 test	 ebx, ebx
  00052	7f cc		 jg	 SHORT $LL3@copy2buff
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
; Line 453
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
_copy2buff ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _LEnum
_TEXT	SEGMENT
_l$ = 8							; size = 4
_r$ = 12						; size = 4
_LEnum	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 327
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 328
  00003	8b 45 08	 mov	 eax, DWORD PTR _l$[ebp]
  00006	83 78 08 13	 cmp	 DWORD PTR [eax+8], 19	; 00000013H
  0000a	75 3c		 jne	 SHORT $LN8@LEnum
; Line 329
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
; Line 330
  00011	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  00014	83 78 08 13	 cmp	 DWORD PTR [eax+8], 19	; 00000013H
  00018	75 16		 jne	 SHORT $LN7@LEnum
; Line 331
  0001a	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  0001d	7f 0d		 jg	 SHORT $LN11@LEnum
  0001f	7c 04		 jl	 SHORT $LN13@LEnum
  00021	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00023	77 07		 ja	 SHORT $LN11@LEnum
$LN13@LEnum:
  00025	b8 01 00 00 00	 mov	 eax, 1
; Line 344
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
$LN11@LEnum:
; Line 331
  0002c	33 c0		 xor	 eax, eax
; Line 344
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
$LN7@LEnum:
; Line 333
  00030	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00034	83 ec 08	 sub	 esp, 8
  00037	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0003c	52		 push	 edx
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 _LEintfloat
  00043	83 c4 10	 add	 esp, 16			; 00000010H
; Line 344
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
$LN8@LEnum:
; Line 337
  00048	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0004b	f2 0f 10 08	 movsd	 xmm1, QWORD PTR [eax]
  0004f	83 79 08 03	 cmp	 DWORD PTR [ecx+8], 3
  00053	75 0f		 jne	 SHORT $LN4@LEnum
; Line 338
  00055	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  00059	33 c0		 xor	 eax, eax
  0005b	66 0f 2f c1	 comisd	 xmm0, xmm1
  0005f	0f 93 c0	 setae	 al
; Line 344
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
$LN4@LEnum:
; Line 339
  00064	66 0f 2e c9	 ucomisd xmm1, xmm1
  00068	9f		 lahf
  00069	f6 c4 44	 test	 ah, 68			; 00000044H
  0006c	7a be		 jp	 SHORT $LN11@LEnum
; Line 342
  0006e	83 ec 08	 sub	 esp, 8
  00071	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  00076	ff 71 04	 push	 DWORD PTR [ecx+4]
  00079	ff 31		 push	 DWORD PTR [ecx]
  0007b	e8 00 00 00 00	 call	 _LTintfloat
  00080	83 c4 10	 add	 esp, 16			; 00000010H
  00083	f7 d8		 neg	 eax
  00085	1b c0		 sbb	 eax, eax
  00087	40		 inc	 eax
; Line 344
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
_LEnum	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _LTnum
_TEXT	SEGMENT
_l$ = 8							; size = 4
_r$ = 12						; size = 4
_LTnum	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 304
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 305
  00003	8b 45 08	 mov	 eax, DWORD PTR _l$[ebp]
  00006	83 78 08 13	 cmp	 DWORD PTR [eax+8], 19	; 00000013H
  0000a	75 3c		 jne	 SHORT $LN8@LTnum
; Line 306
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
; Line 307
  00011	8b 45 0c	 mov	 eax, DWORD PTR _r$[ebp]
  00014	83 78 08 13	 cmp	 DWORD PTR [eax+8], 19	; 00000013H
  00018	75 16		 jne	 SHORT $LN7@LTnum
; Line 308
  0001a	3b 50 04	 cmp	 edx, DWORD PTR [eax+4]
  0001d	7f 0d		 jg	 SHORT $LN11@LTnum
  0001f	7c 04		 jl	 SHORT $LN13@LTnum
  00021	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00023	73 07		 jae	 SHORT $LN11@LTnum
$LN13@LTnum:
  00025	b8 01 00 00 00	 mov	 eax, 1
; Line 321
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
$LN11@LTnum:
; Line 308
  0002c	33 c0		 xor	 eax, eax
; Line 321
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
$LN7@LTnum:
; Line 310
  00030	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00034	83 ec 08	 sub	 esp, 8
  00037	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0003c	52		 push	 edx
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 _LTintfloat
  00043	83 c4 10	 add	 esp, 16			; 00000010H
; Line 321
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
$LN8@LTnum:
; Line 314
  00048	8b 4d 0c	 mov	 ecx, DWORD PTR _r$[ebp]
  0004b	f2 0f 10 08	 movsd	 xmm1, QWORD PTR [eax]
  0004f	83 79 08 03	 cmp	 DWORD PTR [ecx+8], 3
  00053	75 0f		 jne	 SHORT $LN4@LTnum
; Line 315
  00055	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  00059	33 c0		 xor	 eax, eax
  0005b	66 0f 2f c1	 comisd	 xmm0, xmm1
  0005f	0f 97 c0	 seta	 al
; Line 321
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
$LN4@LTnum:
; Line 316
  00064	66 0f 2e c9	 ucomisd xmm1, xmm1
  00068	9f		 lahf
  00069	f6 c4 44	 test	 ah, 68			; 00000044H
  0006c	7a be		 jp	 SHORT $LN11@LTnum
; Line 319
  0006e	83 ec 08	 sub	 esp, 8
  00071	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  00076	ff 71 04	 push	 DWORD PTR [ecx+4]
  00079	ff 31		 push	 DWORD PTR [ecx]
  0007b	e8 00 00 00 00	 call	 _LEintfloat
  00080	83 c4 10	 add	 esp, 16			; 00000010H
  00083	f7 d8		 neg	 eax
  00085	1b c0		 sbb	 eax, eax
  00087	40		 inc	 eax
; Line 321
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
_LTnum	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _LEintfloat
_TEXT	SEGMENT
_i$ = 8							; size = 8
_f$ = 16						; size = 8
_LEintfloat PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 286
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 288
  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _i$[ebp+4]
  00007	8b c3		 mov	 eax, ebx
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b 7d 08	 mov	 edi, DWORD PTR _i$[ebp]
  0000e	8b f7		 mov	 esi, edi
  00010	83 c6 00	 add	 esi, 0
  00013	15 00 00 20 00	 adc	 eax, 2097152		; 00200000H
  00018	3d 00 00 40 00	 cmp	 eax, 4194304		; 00400000H
  0001d	77 22		 ja	 SHORT $LN5@LEintfloat
  0001f	72 04		 jb	 SHORT $LN11@LEintfloat
  00021	85 f6		 test	 esi, esi
  00023	75 1c		 jne	 SHORT $LN5@LEintfloat
$LN11@LEintfloat:
; Line 297
  00025	8b d3		 mov	 edx, ebx
  00027	8b cf		 mov	 ecx, edi
  00029	e8 00 00 00 00	 call	 __ltod3
  0002e	f2 0f 10 4d 10	 movsd	 xmm1, QWORD PTR _f$[ebp]
  00033	33 c0		 xor	 eax, eax
  00035	66 0f 2f c8	 comisd	 xmm1, xmm0
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	0f 93 c0	 setae	 al
; Line 298
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
$LN5@LEintfloat:
; Line 289
  00041	f2 0f 10 45 10	 movsd	 xmm0, QWORD PTR _f$[ebp]
  00046	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@43e0000000000000
  0004e	72 0a		 jb	 SHORT $LN4@LEintfloat
$LN12@LEintfloat:
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
; Line 290
  00052	b8 01 00 00 00	 mov	 eax, 1
  00057	5b		 pop	 ebx
; Line 298
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN4@LEintfloat:
; Line 291
  0005a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@c3e0000000000000
  00062	72 0f		 jb	 SHORT $LN2@LEintfloat
; Line 292
  00064	e8 00 00 00 00	 call	 __dtol3
  00069	3b da		 cmp	 ebx, edx
  0006b	7f 06		 jg	 SHORT $LN2@LEintfloat
  0006d	7c e1		 jl	 SHORT $LN12@LEintfloat
  0006f	3b f8		 cmp	 edi, eax
  00071	76 dd		 jbe	 SHORT $LN12@LEintfloat
$LN2@LEintfloat:
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi
; Line 294
  00075	33 c0		 xor	 eax, eax
  00077	5b		 pop	 ebx
; Line 298
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
_LEintfloat ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _LTintfloat
_TEXT	SEGMENT
_i$ = 8							; size = 8
_f$ = 16						; size = 8
_LTintfloat PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 267
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
; Line 269
  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _i$[ebp+4]
  00007	8b c3		 mov	 eax, ebx
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b 7d 08	 mov	 edi, DWORD PTR _i$[ebp]
  0000e	8b f7		 mov	 esi, edi
  00010	83 c6 00	 add	 esi, 0
  00013	15 00 00 20 00	 adc	 eax, 2097152		; 00200000H
  00018	3d 00 00 40 00	 cmp	 eax, 4194304		; 00400000H
  0001d	77 22		 ja	 SHORT $LN5@LTintfloat
  0001f	72 04		 jb	 SHORT $LN11@LTintfloat
  00021	85 f6		 test	 esi, esi
  00023	75 1c		 jne	 SHORT $LN5@LTintfloat
$LN11@LTintfloat:
; Line 278
  00025	8b d3		 mov	 edx, ebx
  00027	8b cf		 mov	 ecx, edi
  00029	e8 00 00 00 00	 call	 __ltod3
  0002e	f2 0f 10 4d 10	 movsd	 xmm1, QWORD PTR _f$[ebp]
  00033	33 c0		 xor	 eax, eax
  00035	66 0f 2f c8	 comisd	 xmm1, xmm0
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	0f 97 c0	 seta	 al
; Line 279
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
$LN5@LTintfloat:
; Line 270
  00041	f2 0f 10 45 10	 movsd	 xmm0, QWORD PTR _f$[ebp]
  00046	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@43e0000000000000
  0004e	72 0a		 jb	 SHORT $LN4@LTintfloat
$LN12@LTintfloat:
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
; Line 271
  00052	b8 01 00 00 00	 mov	 eax, 1
  00057	5b		 pop	 ebx
; Line 279
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN4@LTintfloat:
; Line 272
  0005a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@c3e0000000000000
  00062	76 0f		 jbe	 SHORT $LN2@LTintfloat
; Line 273
  00064	e8 00 00 00 00	 call	 __dtol3
  00069	3b da		 cmp	 ebx, edx
  0006b	7f 06		 jg	 SHORT $LN2@LTintfloat
  0006d	7c e1		 jl	 SHORT $LN12@LTintfloat
  0006f	3b f8		 cmp	 edi, eax
  00071	72 dd		 jb	 SHORT $LN12@LTintfloat
$LN2@LTintfloat:
  00073	5f		 pop	 edi
  00074	5e		 pop	 esi
; Line 275
  00075	33 c0		 xor	 eax, eax
  00077	5b		 pop	 ebx
; Line 279
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
_LTintfloat ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _l_strcmp
_TEXT	SEGMENT
_r$1$ = 8						; size = 4
_ls$ = 8						; size = 4
_rs$ = 12						; size = 4
_l_strcmp PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 234
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
; Line 235
  00006	8b 7d 08	 mov	 edi, DWORD PTR _ls$[ebp]
; Line 236
  00009	80 7f 04 04	 cmp	 BYTE PTR [edi+4], 4
  0000d	8d 77 10	 lea	 esi, DWORD PTR [edi+16]
  00010	75 06		 jne	 SHORT $LN10@l_strcmp
  00012	0f b6 7f 07	 movzx	 edi, BYTE PTR [edi+7]
  00016	eb 03		 jmp	 SHORT $LN11@l_strcmp
$LN10@l_strcmp:
  00018	8b 7f 0c	 mov	 edi, DWORD PTR [edi+12]
$LN11@l_strcmp:
; Line 237
  0001b	8b 5d 0c	 mov	 ebx, DWORD PTR _rs$[ebp]
; Line 238
  0001e	80 7b 04 04	 cmp	 BYTE PTR [ebx+4], 4
  00022	8d 43 10	 lea	 eax, DWORD PTR [ebx+16]
  00025	89 45 08	 mov	 DWORD PTR _r$1$[ebp], eax
  00028	75 06		 jne	 SHORT $LN12@l_strcmp
  0002a	0f b6 5b 07	 movzx	 ebx, BYTE PTR [ebx+7]
  0002e	eb 03		 jmp	 SHORT $LN13@l_strcmp
$LN12@l_strcmp:
  00030	8b 5b 0c	 mov	 ebx, DWORD PTR [ebx+12]
$LN13@l_strcmp:
; Line 240
  00033	50		 push	 eax
  00034	56		 push	 esi
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strcoll
  0003b	83 c4 08	 add	 esp, 8
; Line 241
  0003e	85 c0		 test	 eax, eax
  00040	75 4a		 jne	 SHORT $LN6@l_strcmp
$LL7@l_strcmp:
; Line 244
  00042	8b c6		 mov	 eax, esi
  00044	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL21@l_strcmp:
  00047	8a 08		 mov	 cl, BYTE PTR [eax]
  00049	40		 inc	 eax
  0004a	84 c9		 test	 cl, cl
  0004c	75 f9		 jne	 SHORT $LL21@l_strcmp
  0004e	2b c2		 sub	 eax, edx
; Line 245
  00050	3b c3		 cmp	 eax, ebx
  00052	74 2f		 je	 SHORT $LN17@l_strcmp
; Line 247
  00054	3b c7		 cmp	 eax, edi
  00056	74 23		 je	 SHORT $LN18@l_strcmp
; Line 251
  00058	8b 4d 08	 mov	 ecx, DWORD PTR _r$1$[ebp]
  0005b	40		 inc	 eax
  0005c	03 c8		 add	 ecx, eax
  0005e	03 f0		 add	 esi, eax
  00060	51		 push	 ecx
  00061	56		 push	 esi
  00062	2b f8		 sub	 edi, eax
  00064	89 4d 08	 mov	 DWORD PTR _r$1$[ebp], ecx
  00067	2b d8		 sub	 ebx, eax
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strcoll
  0006f	83 c4 08	 add	 esp, 8
  00072	85 c0		 test	 eax, eax
  00074	74 cc		 je	 SHORT $LL7@l_strcmp
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
; Line 254
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
$LN18@l_strcmp:
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
; Line 248
  0007d	83 c8 ff	 or	 eax, -1
  00080	5b		 pop	 ebx
; Line 254
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
$LN17@l_strcmp:
; Line 246
  00083	33 c9		 xor	 ecx, ecx
  00085	3b c7		 cmp	 eax, edi
  00087	0f 95 c1	 setne	 cl
  0008a	8b c1		 mov	 eax, ecx
$LN6@l_strcmp:
  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
; Line 254
  0008f	5d		 pop	 ebp
  00090	c3		 ret	 0
_l_strcmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _forlimit
_TEXT	SEGMENT
_n$1 = -8						; size = 8
_obj$ = 8						; size = 4
_p$ = 12						; size = 4
_step$ = 16						; size = 8
_stopnow$ = 24						; size = 4
_forlimit PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 136
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
; Line 138
  00006	83 7d 14 00	 cmp	 DWORD PTR _step$[ebp+4], 0
  0000a	53		 push	 ebx
  0000b	8b 5d 10	 mov	 ebx, DWORD PTR _step$[ebp]
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	8b 7d 18	 mov	 edi, DWORD PTR _stopnow$[ebp]
  00013	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  00019	7f 0d		 jg	 SHORT $LN9@forlimit
  0001b	7c 04		 jl	 SHORT $LN13@forlimit
  0001d	85 db		 test	 ebx, ebx
  0001f	73 07		 jae	 SHORT $LN9@forlimit
$LN13@forlimit:
  00021	b8 02 00 00 00	 mov	 eax, 2
  00026	eb 05		 jmp	 SHORT $LN10@forlimit
$LN9@forlimit:
  00028	b8 01 00 00 00	 mov	 eax, 1
$LN10@forlimit:
  0002d	8b 75 0c	 mov	 esi, DWORD PTR _p$[ebp]
  00030	50		 push	 eax
  00031	56		 push	 esi
  00032	ff 75 08	 push	 DWORD PTR _obj$[ebp]
  00035	e8 00 00 00 00	 call	 _luaV_tointeger
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003d	85 c0		 test	 eax, eax
  0003f	75 7f		 jne	 SHORT $LN1@forlimit
; Line 140
  00041	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00044	83 78 08 03	 cmp	 DWORD PTR [eax+8], 3
  00048	75 06		 jne	 SHORT $LN11@forlimit
  0004a	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  0004e	eb 1d		 jmp	 SHORT $LN5@forlimit
$LN11@forlimit:
  00050	8d 4d f8	 lea	 ecx, DWORD PTR _n$1[ebp]
  00053	51		 push	 ecx
  00054	50		 push	 eax
  00055	e8 00 00 00 00	 call	 _luaV_tonumber_
  0005a	83 c4 08	 add	 esp, 8
  0005d	85 c0		 test	 eax, eax
  0005f	75 07		 jne	 SHORT $LN16@forlimit
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	5b		 pop	 ebx
; Line 152
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
$LN16@forlimit:
; Line 141
  00068	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _n$1[ebp]
$LN5@forlimit:
; Line 142
  0006d	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
; Line 144
  00075	8b 45 14	 mov	 eax, DWORD PTR _step$[ebp+4]
  00078	76 29		 jbe	 SHORT $LN4@forlimit
; Line 143
  0007a	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1
  00080	c7 46 04 ff ff
	ff 7f		 mov	 DWORD PTR [esi+4], 2147483647 ; 7fffffffH
; Line 144
  00087	85 c0		 test	 eax, eax
  00089	7f 35		 jg	 SHORT $LN1@forlimit
  0008b	7c 2d		 jl	 SHORT $LN15@forlimit
  0008d	85 db		 test	 ebx, ebx
  0008f	73 2f		 jae	 SHORT $LN1@forlimit
; Line 148
  00091	c7 07 01 00 00
	00		 mov	 DWORD PTR [edi], 1
; Line 151
  00097	b8 01 00 00 00	 mov	 eax, 1
  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx
; Line 152
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c3		 ret	 0
$LN4@forlimit:
; Line 147
  000a3	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  000a9	c7 46 04 00 00
	00 80		 mov	 DWORD PTR [esi+4], -2147483648 ; 80000000H
; Line 148
  000b0	85 c0		 test	 eax, eax
  000b2	7c 0c		 jl	 SHORT $LN1@forlimit
  000b4	7f 04		 jg	 SHORT $LN15@forlimit
  000b6	85 db		 test	 ebx, ebx
  000b8	72 06		 jb	 SHORT $LN1@forlimit
$LN15@forlimit:
  000ba	c7 07 01 00 00
	00		 mov	 DWORD PTR [edi], 1
$LN1@forlimit:
  000c0	5f		 pop	 edi
  000c1	5e		 pop	 esi
; Line 151
  000c2	b8 01 00 00 00	 mov	 eax, 1
  000c7	5b		 pop	 ebx
; Line 152
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c3		 ret	 0
_forlimit ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaV_objlen
_TEXT	SEGMENT
_L$ = 8							; size = 4
_ra$ = 12						; size = 4
_rb$ = 16						; size = 4
_luaV_objlen PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 503
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 505
  00004	8b 75 10	 mov	 esi, DWORD PTR _rb$[ebp]
  00007	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0000a	83 e0 3f	 and	 eax, 63			; 0000003fH
  0000d	83 e8 04	 sub	 eax, 4
  00010	0f 84 9f 00 00
	00		 je	 $LN4@luaV_objle
  00016	53		 push	 ebx
  00017	57		 push	 edi
  00018	48		 dec	 eax
  00019	74 3c		 je	 SHORT $LN6@luaV_objle
  0001b	83 e8 0f	 sub	 eax, 15			; 0000000fH
  0001e	74 1a		 je	 SHORT $LN3@luaV_objle
; Line 522
  00020	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00023	6a 04		 push	 4
  00025	56		 push	 esi
  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 _luaT_gettmbyobj
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 523
  0002f	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00033	75 4c		 jne	 SHORT $LN7@luaV_objle
  00035	e9 94 00 00 00	 jmp	 $LN19@luaV_objle
$LN3@luaV_objle:
; Line 518
  0003a	8b 06		 mov	 eax, DWORD PTR [esi]
  0003c	8b 4d 0c	 mov	 ecx, DWORD PTR _ra$[ebp]
  0003f	5f		 pop	 edi
  00040	5b		 pop	 ebx
  00041	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00044	89 01		 mov	 DWORD PTR [ecx], eax
  00046	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  0004d	c7 41 08 13 00
	00 00		 mov	 DWORD PTR [ecx+8], 19	; 00000013H
  00054	5e		 pop	 esi
; Line 529
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
$LN6@luaV_objle:
; Line 507
  00057	8b 1e		 mov	 ebx, DWORD PTR [esi]
; Line 508
  00059	8b 4b 18	 mov	 ecx, DWORD PTR [ebx+24]
  0005c	85 c9		 test	 ecx, ecx
  0005e	74 37		 je	 SHORT $LN5@luaV_objle
  00060	f6 41 06 10	 test	 BYTE PTR [ecx+6], 16	; 00000010H
  00064	75 31		 jne	 SHORT $LN5@luaV_objle
  00066	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00069	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0006c	ff b0 98 00 00
	00		 push	 DWORD PTR [eax+152]
  00072	6a 04		 push	 4
  00074	51		 push	 ecx
  00075	e8 00 00 00 00	 call	 _luaT_gettm
  0007a	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 509
  0007d	85 c0		 test	 eax, eax
  0007f	74 16		 je	 SHORT $LN5@luaV_objle
$LN7@luaV_objle:
; Line 528
  00081	6a 01		 push	 1
  00083	ff 75 0c	 push	 DWORD PTR _ra$[ebp]
  00086	56		 push	 esi
  00087	56		 push	 esi
  00088	50		 push	 eax
  00089	57		 push	 edi
  0008a	e8 00 00 00 00	 call	 _luaT_callTM
  0008f	83 c4 18	 add	 esp, 24			; 00000018H
  00092	5f		 pop	 edi
  00093	5b		 pop	 ebx
  00094	5e		 pop	 esi
; Line 529
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
$LN5@luaV_objle:
; Line 510
  00097	53		 push	 ebx
  00098	e8 00 00 00 00	 call	 _luaH_getn
  0009d	8b 4d 0c	 mov	 ecx, DWORD PTR _ra$[ebp]
  000a0	83 c4 04	 add	 esp, 4
  000a3	99		 cdq
  000a4	5f		 pop	 edi
  000a5	5b		 pop	 ebx
  000a6	89 01		 mov	 DWORD PTR [ecx], eax
  000a8	89 51 04	 mov	 DWORD PTR [ecx+4], edx
; Line 518
  000ab	c7 41 08 13 00
	00 00		 mov	 DWORD PTR [ecx+8], 19	; 00000013H
  000b2	5e		 pop	 esi
; Line 529
  000b3	5d		 pop	 ebp
  000b4	c3		 ret	 0
$LN4@luaV_objle:
; Line 514
  000b5	8b 06		 mov	 eax, DWORD PTR [esi]
  000b7	8b 4d 0c	 mov	 ecx, DWORD PTR _ra$[ebp]
  000ba	5e		 pop	 esi
  000bb	0f b6 40 07	 movzx	 eax, BYTE PTR [eax+7]
  000bf	99		 cdq
  000c0	89 01		 mov	 DWORD PTR [ecx], eax
  000c2	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  000c5	c7 41 08 13 00
	00 00		 mov	 DWORD PTR [ecx+8], 19	; 00000013H
; Line 529
  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
$LN19@luaV_objle:
; Line 524
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MKOIIDGO@get?5length?5of?$AA@
  000d3	56		 push	 esi
  000d4	57		 push	 edi
  000d5	e8 00 00 00 00	 call	 _luaG_typeerror
$LN21@luaV_objle:
$LN17@luaV_objle:
  000da	cc		 int	 3
_luaV_objlen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaV_shiftl
_TEXT	SEGMENT
_x$ = 8							; size = 8
_y$ = 16						; size = 8
_luaV_shiftl PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 579
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 580
  00003	8b 45 14	 mov	 eax, DWORD PTR _y$[ebp+4]
  00006	8b 4d 10	 mov	 ecx, DWORD PTR _y$[ebp]
  00009	85 c0		 test	 eax, eax
  0000b	7f 12		 jg	 SHORT $LN10@luaV_shift
  0000d	7c 04		 jl	 SHORT $LN9@luaV_shift
  0000f	85 c9		 test	 ecx, ecx
  00011	73 20		 jae	 SHORT $LN6@luaV_shift
$LN9@luaV_shift:
; Line 581
  00013	83 f8 ff	 cmp	 eax, -1
  00016	7f 0d		 jg	 SHORT $LN5@luaV_shift
  00018	7c 05		 jl	 SHORT $LN10@luaV_shift
  0001a	83 f9 c0	 cmp	 ecx, -64		; ffffffc0H
  0001d	77 06		 ja	 SHORT $LN5@luaV_shift
$LN10@luaV_shift:
  0001f	33 c0		 xor	 eax, eax
  00021	33 d2		 xor	 edx, edx
; Line 588
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
$LN5@luaV_shift:
; Line 582
  00025	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00028	f7 d9		 neg	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp+4]
; Line 588
  0002d	5d		 pop	 ebp
; Line 582
  0002e	e9 00 00 00 00	 jmp	 __aullshr
$LN6@luaV_shift:
; Line 585
  00033	85 c0		 test	 eax, eax
  00035	7c 07		 jl	 SHORT $LN2@luaV_shift
  00037	7f e6		 jg	 SHORT $LN10@luaV_shift
  00039	83 f9 40	 cmp	 ecx, 64			; 00000040H
  0003c	73 e1		 jae	 SHORT $LN10@luaV_shift
$LN2@luaV_shift:
; Line 586
  0003e	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00041	8b 55 0c	 mov	 edx, DWORD PTR _x$[ebp+4]
; Line 588
  00044	5d		 pop	 ebp
; Line 586
  00045	e9 00 00 00 00	 jmp	 __allshl
_luaV_shiftl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaV_mod
_TEXT	SEGMENT
_L$ = 8							; size = 4
_m$ = 12						; size = 8
tv95 = 20						; size = 8
_n$ = 20						; size = 8
_luaV_mod PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 558
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 559
  00004	8b 75 14	 mov	 esi, DWORD PTR _n$[ebp]
  00007	8b ce		 mov	 ecx, esi
  00009	57		 push	 edi
  0000a	8b 7d 18	 mov	 edi, DWORD PTR _n$[ebp+4]
  0000d	83 c1 01	 add	 ecx, 1
  00010	8b c7		 mov	 eax, edi
  00012	83 d0 00	 adc	 eax, 0
  00015	85 c0		 test	 eax, eax
  00017	77 13		 ja	 SHORT $LN4@luaV_mod
  00019	72 05		 jb	 SHORT $LN7@luaV_mod
  0001b	83 f9 01	 cmp	 ecx, 1
  0001e	77 0c		 ja	 SHORT $LN4@luaV_mod
$LN7@luaV_mod:
; Line 560
  00020	0b f7		 or	 esi, edi
  00022	74 38		 je	 SHORT $LN10@luaV_mod
; Line 562
  00024	5f		 pop	 edi
  00025	33 c0		 xor	 eax, eax
  00027	33 d2		 xor	 edx, edx
  00029	5e		 pop	 esi
; Line 570
  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
$LN4@luaV_mod:
  0002c	53		 push	 ebx
; Line 565
  0002d	8b 5d 0c	 mov	 ebx, DWORD PTR _m$[ebp]
  00030	57		 push	 edi
  00031	56		 push	 esi
  00032	ff 75 10	 push	 DWORD PTR _m$[ebp+4]
  00035	53		 push	 ebx
  00036	e8 00 00 00 00	 call	 __allrem
; Line 566
  0003b	8b c8		 mov	 ecx, eax
  0003d	0b ca		 or	 ecx, edx
  0003f	74 16		 je	 SHORT $LN1@luaV_mod
  00041	8b 4d 10	 mov	 ecx, DWORD PTR _m$[ebp+4]
  00044	33 de		 xor	 ebx, esi
  00046	33 cf		 xor	 ecx, edi
  00048	89 4d 18	 mov	 DWORD PTR tv95[ebp+4], ecx
  0004b	7f 0a		 jg	 SHORT $LN1@luaV_mod
  0004d	7c 04		 jl	 SHORT $LN8@luaV_mod
  0004f	85 db		 test	 ebx, ebx
  00051	73 04		 jae	 SHORT $LN1@luaV_mod
$LN8@luaV_mod:
; Line 567
  00053	03 c6		 add	 eax, esi
  00055	13 d7		 adc	 edx, edi
$LN1@luaV_mod:
  00057	5b		 pop	 ebx
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
; Line 570
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN10@luaV_mod:
; Line 561
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HHICHKCC@attempt?5to?5perform?5?8n?$CF?$CF0?8?$AA@
  00061	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00064	e8 00 00 00 00	 call	 _luaG_runerror
$LN12@luaV_mod:
$LN9@luaV_mod:
  00069	cc		 int	 3
_luaV_mod ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaV_div
_TEXT	SEGMENT
tv192 = -4						; size = 4
_L$ = 8							; size = 4
_m$ = 12						; size = 8
tv177 = 20						; size = 8
_n$ = 20						; size = 8
_luaV_div PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 538
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; Line 539
  00004	8b 55 18	 mov	 edx, DWORD PTR _n$[ebp+4]
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	8b 7d 14	 mov	 edi, DWORD PTR _n$[ebp]
  0000d	8b cf		 mov	 ecx, edi
  0000f	83 c1 01	 add	 ecx, 1
  00012	83 d0 00	 adc	 eax, 0
  00015	85 c0		 test	 eax, eax
  00017	77 1d		 ja	 SHORT $LN4@luaV_div
  00019	72 05		 jb	 SHORT $LN7@luaV_div
  0001b	83 f9 01	 cmp	 ecx, 1
  0001e	77 16		 ja	 SHORT $LN4@luaV_div
$LN7@luaV_div:
; Line 540
  00020	0b fa		 or	 edi, edx
  00022	74 4a		 je	 SHORT $LN10@luaV_div
; Line 542
  00024	8b 45 0c	 mov	 eax, DWORD PTR _m$[ebp]
  00027	8b 55 10	 mov	 edx, DWORD PTR _m$[ebp+4]
  0002a	f7 d8		 neg	 eax
  0002c	5f		 pop	 edi
  0002d	83 d2 00	 adc	 edx, 0
  00030	f7 da		 neg	 edx
; Line 550
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
$LN4@luaV_div:
  00036	53		 push	 ebx
  00037	56		 push	 esi
; Line 545
  00038	8b 75 10	 mov	 esi, DWORD PTR _m$[ebp+4]
  0003b	52		 push	 edx
  0003c	57		 push	 edi
  0003d	56		 push	 esi
  0003e	ff 75 0c	 push	 DWORD PTR _m$[ebp]
  00041	e8 00 00 00 00	 call	 __alldvrm
  00046	89 5d fc	 mov	 DWORD PTR tv192[ebp], ebx
; Line 546
  00049	8b 5d 0c	 mov	 ebx, DWORD PTR _m$[ebp]
  0004c	33 df		 xor	 ebx, edi
  0004e	33 75 18	 xor	 esi, DWORD PTR _n$[ebp+4]
  00051	89 75 18	 mov	 DWORD PTR tv177[ebp+4], esi
  00054	7f 11		 jg	 SHORT $LN1@luaV_div
  00056	7c 04		 jl	 SHORT $LN8@luaV_div
  00058	85 db		 test	 ebx, ebx
  0005a	73 0b		 jae	 SHORT $LN1@luaV_div
$LN8@luaV_div:
  0005c	0b 4d fc	 or	 ecx, DWORD PTR tv192[ebp]
  0005f	74 06		 je	 SHORT $LN1@luaV_div
; Line 547
  00061	83 c0 ff	 add	 eax, -1
  00064	83 d2 ff	 adc	 edx, -1
$LN1@luaV_div:
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	5f		 pop	 edi
; Line 550
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
$LN10@luaV_div:
; Line 541
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@KPCDLNKD@attempt?5to?5divide?5by?5zero?$AA@
  00073	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00076	e8 00 00 00 00	 call	 _luaG_runerror
$LN12@luaV_div:
$LN9@luaV_div:
  0007b	cc		 int	 3
_luaV_div ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaV_concat
_TEXT	SEGMENT
_tl$1$ = -52						; size = 4
_L$GSCopy$1$ = -48					; size = 4
_buff$1 = -44						; size = 40
__$ArrayPad$ = -4					; size = 4
_L$ = 8							; size = 4
_total$ = 12						; size = 4
_luaV_concat PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 460
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	89 4d d0	 mov	 DWORD PTR _L$GSCopy$1$[ebp], ecx
  00018	57		 push	 edi
  00019	8d a4 24 00 00
	00 00		 npad	 7
$LL19@luaV_conca:
; Line 463
  00020	8b 79 0c	 mov	 edi, DWORD PTR [ecx+12]
; Line 464
  00023	bb 02 00 00 00	 mov	 ebx, 2
; Line 465
  00028	8b 47 e8	 mov	 eax, DWORD PTR [edi-24]
  0002b	83 e0 0f	 and	 eax, 15			; 0000000fH
  0002e	83 f8 04	 cmp	 eax, 4
  00031	74 05		 je	 SHORT $LN14@luaV_conca
  00033	83 f8 03	 cmp	 eax, 3
  00036	75 59		 jne	 SHORT $LN13@luaV_conca
$LN14@luaV_conca:
  00038	8b 47 f8	 mov	 eax, DWORD PTR [edi-8]
  0003b	83 e0 0f	 and	 eax, 15			; 0000000fH
  0003e	83 f8 04	 cmp	 eax, 4
  00041	74 15		 je	 SHORT $LN16@luaV_conca
  00043	83 f8 03	 cmp	 eax, 3
  00046	75 49		 jne	 SHORT $LN13@luaV_conca
  00048	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0004b	50		 push	 eax
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 _luaO_tostring
  00052	8b 4d d0	 mov	 ecx, DWORD PTR _L$GSCopy$1$[ebp]
  00055	83 c4 08	 add	 esp, 8
$LN16@luaV_conca:
; Line 467
  00058	83 7f f8 44	 cmp	 DWORD PTR [edi-8], 68	; 00000044H
  0005c	75 4e		 jne	 SHORT $LN11@luaV_conca
  0005e	8b 47 f0	 mov	 eax, DWORD PTR [edi-16]
  00061	80 78 07 00	 cmp	 BYTE PTR [eax+7], 0
  00065	75 45		 jne	 SHORT $LN11@luaV_conca
; Line 468
  00067	8b 47 e8	 mov	 eax, DWORD PTR [edi-24]
  0006a	83 e0 0f	 and	 eax, 15			; 0000000fH
  0006d	83 f8 04	 cmp	 eax, 4
  00070	0f 84 1b 01 00
	00		 je	 $LN8@luaV_conca
  00076	83 f8 03	 cmp	 eax, 3
  00079	0f 85 12 01 00
	00		 jne	 $LN8@luaV_conca
  0007f	8d 47 e0	 lea	 eax, DWORD PTR [edi-32]
  00082	50		 push	 eax
  00083	51		 push	 ecx
  00084	e8 00 00 00 00	 call	 _luaO_tostring
  00089	83 c4 08	 add	 esp, 8
; Line 469
  0008c	e9 fd 00 00 00	 jmp	 $LN37@luaV_conca
$LN13@luaV_conca:
; Line 466
  00091	6a 16		 push	 22			; 00000016H
  00093	8d 4f e0	 lea	 ecx, DWORD PTR [edi-32]
  00096	51		 push	 ecx
  00097	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009a	50		 push	 eax
  0009b	51		 push	 ecx
  0009c	ff 75 d0	 push	 DWORD PTR _L$GSCopy$1$[ebp]
  0009f	e8 00 00 00 00	 call	 _luaT_trybinTM
  000a4	83 c4 14	 add	 esp, 20			; 00000014H
  000a7	e9 e2 00 00 00	 jmp	 $LN37@luaV_conca
$LN11@luaV_conca:
; Line 469
  000ac	83 7f e8 44	 cmp	 DWORD PTR [edi-24], 68	; 00000044H
  000b0	75 18		 jne	 SHORT $LN9@luaV_conca
  000b2	8b 47 e0	 mov	 eax, DWORD PTR [edi-32]
  000b5	80 78 07 00	 cmp	 BYTE PTR [eax+7], 0
  000b9	75 0f		 jne	 SHORT $LN9@luaV_conca
; Line 470
  000bb	f3 0f 6f 47 f0	 movdqu	 xmm0, XMMWORD PTR [edi-16]
  000c0	f3 0f 7f 47 e0	 movdqu	 XMMWORD PTR [edi-32], xmm0
; Line 472
  000c5	e9 c7 00 00 00	 jmp	 $LN8@luaV_conca
$LN9@luaV_conca:
; Line 474
  000ca	8b 57 f0	 mov	 edx, DWORD PTR [edi-16]
  000cd	80 7a 04 04	 cmp	 BYTE PTR [edx+4], 4
  000d1	75 06		 jne	 SHORT $LN24@luaV_conca
  000d3	0f b6 52 07	 movzx	 edx, BYTE PTR [edx+7]
  000d7	eb 03		 jmp	 SHORT $LN38@luaV_conca
$LN24@luaV_conca:
  000d9	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
$LN38@luaV_conca:
; Line 477
  000dc	bb 01 00 00 00	 mov	 ebx, 1
  000e1	89 55 cc	 mov	 DWORD PTR _tl$1$[ebp], edx
  000e4	39 5d 0c	 cmp	 DWORD PTR _total$[ebp], ebx
  000e7	7e 53		 jle	 SHORT $LN5@luaV_conca
  000e9	8d 77 e0	 lea	 esi, DWORD PTR [edi-32]
  000ec	8d 64 24 00	 npad	 4
$LL7@luaV_conca:
  000f0	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000f3	83 e0 0f	 and	 eax, 15			; 0000000fH
  000f6	83 f8 04	 cmp	 eax, 4
  000f9	74 0f		 je	 SHORT $LN4@luaV_conca
  000fb	83 f8 03	 cmp	 eax, 3
  000fe	75 3c		 jne	 SHORT $LN5@luaV_conca
  00100	56		 push	 esi
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 _luaO_tostring
  00107	83 c4 08	 add	 esp, 8
$LN4@luaV_conca:
; Line 478
  0010a	8b 06		 mov	 eax, DWORD PTR [esi]
  0010c	80 78 04 04	 cmp	 BYTE PTR [eax+4], 4
  00110	75 06		 jne	 SHORT $LN26@luaV_conca
  00112	0f b6 48 07	 movzx	 ecx, BYTE PTR [eax+7]
  00116	eb 03		 jmp	 SHORT $LN27@luaV_conca
$LN26@luaV_conca:
  00118	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
$LN27@luaV_conca:
; Line 479
  0011b	8b 55 cc	 mov	 edx, DWORD PTR _tl$1$[ebp]
  0011e	83 c8 ff	 or	 eax, -1
  00121	2b c2		 sub	 eax, edx
  00123	3b c8		 cmp	 ecx, eax
  00125	0f 83 9c 00 00
	00		 jae	 $LN39@luaV_conca
; Line 481
  0012b	03 d1		 add	 edx, ecx
  0012d	43		 inc	 ebx
  0012e	8b 4d d0	 mov	 ecx, DWORD PTR _L$GSCopy$1$[ebp]
  00131	83 ee 10	 sub	 esi, 16			; 00000010H
  00134	89 55 cc	 mov	 DWORD PTR _tl$1$[ebp], edx
  00137	3b 5d 0c	 cmp	 ebx, DWORD PTR _total$[ebp]
  0013a	7c b4		 jl	 SHORT $LL7@luaV_conca
$LN5@luaV_conca:
; Line 483
  0013c	83 fa 28	 cmp	 edx, 40			; 00000028H
  0013f	77 21		 ja	 SHORT $LN2@luaV_conca
; Line 485
  00141	8d 45 d4	 lea	 eax, DWORD PTR _buff$1[ebp]
  00144	50		 push	 eax
  00145	53		 push	 ebx
  00146	57		 push	 edi
  00147	e8 00 00 00 00	 call	 _copy2buff
; Line 486
  0014c	ff 75 cc	 push	 DWORD PTR _tl$1$[ebp]
  0014f	8d 45 d4	 lea	 eax, DWORD PTR _buff$1[ebp]
  00152	50		 push	 eax
  00153	ff 75 d0	 push	 DWORD PTR _L$GSCopy$1$[ebp]
  00156	e8 00 00 00 00	 call	 _luaS_newlstr
  0015b	83 c4 18	 add	 esp, 24			; 00000018H
  0015e	8b f0		 mov	 esi, eax
; Line 488
  00160	eb 19		 jmp	 SHORT $LN1@luaV_conca
$LN2@luaV_conca:
; Line 489
  00162	52		 push	 edx
  00163	ff 75 d0	 push	 DWORD PTR _L$GSCopy$1$[ebp]
  00166	e8 00 00 00 00	 call	 _luaS_createlngstrobj
  0016b	8b f0		 mov	 esi, eax
; Line 490
  0016d	8d 46 10	 lea	 eax, DWORD PTR [esi+16]
  00170	50		 push	 eax
  00171	53		 push	 ebx
  00172	57		 push	 edi
  00173	e8 00 00 00 00	 call	 _copy2buff
  00178	83 c4 14	 add	 esp, 20			; 00000014H
$LN1@luaV_conca:
; Line 492
  0017b	8b c3		 mov	 eax, ebx
  0017d	c1 e0 04	 shl	 eax, 4
  00180	2b f8		 sub	 edi, eax
  00182	89 37		 mov	 DWORD PTR [edi], esi
  00184	0f b6 46 04	 movzx	 eax, BYTE PTR [esi+4]
  00188	83 c8 40	 or	 eax, 64			; 00000040H
  0018b	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN37@luaV_conca:
  0018e	8b 4d d0	 mov	 ecx, DWORD PTR _L$GSCopy$1$[ebp]
$LN8@luaV_conca:
; Line 494
  00191	8b 55 0c	 mov	 edx, DWORD PTR _total$[ebp]
  00194	b8 01 00 00 00	 mov	 eax, 1
  00199	2b c3		 sub	 eax, ebx
; Line 495
  0019b	c1 e3 04	 shl	 ebx, 4
  0019e	03 d0		 add	 edx, eax
  001a0	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  001a5	2b c3		 sub	 eax, ebx
  001a7	89 55 0c	 mov	 DWORD PTR _total$[ebp], edx
  001aa	01 41 0c	 add	 DWORD PTR [ecx+12], eax
; Line 496
  001ad	83 fa 01	 cmp	 edx, 1
  001b0	0f 8f 6a fe ff
	ff		 jg	 $LL19@luaV_conca
; Line 497
  001b6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b9	5f		 pop	 edi
  001ba	5e		 pop	 esi
  001bb	33 cd		 xor	 ecx, ebp
  001bd	5b		 pop	 ebx
  001be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c3	8b e5		 mov	 esp, ebp
  001c5	5d		 pop	 ebp
  001c6	c3		 ret	 0
$LN39@luaV_conca:
; Line 480
  001c7	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@ONIKNOCM@string?5length?5overflow?$AA@
  001cc	ff 75 d0	 push	 DWORD PTR _L$GSCopy$1$[ebp]
  001cf	e8 00 00 00 00	 call	 _luaG_runerror
$LN40@luaV_conca:
$LN36@luaV_conca:
  001d4	cc		 int	 3
_luaV_concat ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaV_execute
_TEXT	SEGMENT
tv4154 = -300						; size = 8
_nb$1 = -292						; size = 8
_ninit$2 = -284						; size = 8
_nb$3 = -276						; size = 8
_nstep$4 = -268						; size = 8
_nb$5 = -260						; size = 8
_nlimit$6 = -252					; size = 8
_nb$7 = -244						; size = 8
_ilimit$8 = -236					; size = 8
_nb$9 = -228						; size = 8
_initv$10 = -220					; size = 8
_nc$11 = -212						; size = 8
_nb$12 = -204						; size = 8
_nc$13 = -196						; size = 8
_nc$14 = -188						; size = 8
_nc$15 = -180						; size = 8
_nb$16 = -172						; size = 8
_nc$17 = -164						; size = 8
_nc$18 = -156						; size = 8
_nb$19 = -148						; size = 8
_stopnow$20 = -140					; size = 4
_nc$21 = -136						; size = 8
_ib$22 = -128						; size = 8
_ib$23 = -120						; size = 8
_ic$24 = -112						; size = 8
_ic$25 = -104						; size = 8
_ib$26 = -96						; size = 8
_ib$27 = -88						; size = 8
_ic$28 = -80						; size = 8
_ib$29 = -72						; size = 8
_ib$30 = -64						; size = 8
_ic$31 = -56						; size = 8
_ic$32 = -48						; size = 8
_cl$1$ = -40						; size = 4
_nstep$1$ = -36						; size = 8
_nc$1$ = -36						; size = 8
_nb$1$ = -36						; size = 8
_nb$1$ = -36						; size = 8
_nb$1$ = -36						; size = 8
_nb$1$ = -36						; size = 8
_ib$2$ = -32						; size = 4
_ib$2$ = -32						; size = 4
_ib$1$ = -32						; size = 4
_ib$1$ = -32						; size = 4
_p$1$ = -32						; size = 4
_lim$1$ = -32						; size = 4
_rb$1$ = -32						; size = 4
_rb$1$ = -32						; size = 4
_rb$1$ = -32						; size = 4
_rb$1$ = -32						; size = 4
_t$1$ = -32						; size = 4
_slot$1$ = -32						; size = 4
tv3922 = -32						; size = 4
tv3837 = -32						; size = 4
_nb$1$ = -28						; size = 8
_nb$1$ = -28						; size = 8
_m$33 = -28						; size = 8
_idx$1$ = -24						; size = 4
_ib$1$ = -24						; size = 4
_ib$1$ = -24						; size = 4
_ib$2$ = -24						; size = 4
_ib$2$ = -24						; size = 4
_ib$1$ = -24						; size = 4
_h$1$ = -24						; size = 4
_nfunc$1$ = -24						; size = 4
_rb$1$ = -24						; size = 4
_rb$1$ = -24						; size = 4
_rb$1$ = -24						; size = 4
_rb$1$ = -24						; size = 4
_rb$1$ = -24						; size = 4
_b$1$ = -24						; size = 4
_slot$1$ = -24						; size = 4
_rb$1$ = -24						; size = 4
_rb$1$ = -24						; size = 4
_upval$1$ = -24						; size = 4
tv3921 = -24						; size = 4
tv3836 = -24						; size = 4
tv3808 = -24						; size = 4
_base$1$ = -20						; size = 4
_nci$1$ = -16						; size = 4
_k$1$ = -16						; size = 4
_idx$2$ = -12						; size = 4
_ib$2$ = -12						; size = 4
_n$2$ = -12						; size = 4
_n$1$ = -12						; size = 4
_ofunc$1$ = -12						; size = 4
_a$1$ = -12						; size = 4
_rb$1$ = -12						; size = 4
_rb$1$ = -12						; size = 4
_rb$1$ = -12						; size = 4
_rb$1$ = -12						; size = 4
_rb$1$ = -12						; size = 4
_rb$1$ = -12						; size = 4
_upval$1$ = -12						; size = 4
_ci$1$ = -8						; size = 4
_last$1$ = -4						; size = 4
_b$1$ = -4						; size = 4
_rb$1$ = -4						; size = 4
_L$ = 8							; size = 4
_luaV_execute PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 762
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 2c 01 00
	00		 sub	 esp, 300		; 0000012cH
  00009	56		 push	 esi
; Line 763
  0000a	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000d	57		 push	 edi
  0000e	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
; Line 767
  00011	80 49 22 08	 or	 BYTE PTR [ecx+34], 8
$LN534@luaV_execu:
; Line 763
  00015	89 4d f8	 mov	 DWORD PTR _ci$1$[ebp], ecx
$newframe$541:
; Line 770
  00018	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001a	8b 00		 mov	 eax, DWORD PTR [eax]
  0001c	89 45 d8	 mov	 DWORD PTR _cl$1$[ebp], eax
; Line 771
  0001f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00022	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  00025	89 45 f0	 mov	 DWORD PTR _k$1$[ebp], eax
; Line 820
  00028	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0002b	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
; Line 821
  0002e	eb 07		 jmp	 SHORT $LL169@luaV_execu
$LN535@luaV_execu:
; Line 820
  00030	f3 0f 7f 07	 movdqu	 XMMWORD PTR [edi], xmm0
$LN462@luaV_execu:
  00034	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
$LL169@luaV_execu:
; Line 775
  00037	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
; Line 777
  0003a	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0003d	8b 10		 mov	 edx, DWORD PTR [eax]
  0003f	83 c0 04	 add	 eax, 4
  00042	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00045	f6 46 70 0c	 test	 BYTE PTR [esi+112], 12	; 0000000cH
  00049	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  0004c	74 17		 je	 SHORT $LN464@luaV_execu
; Line 778
  0004e	56		 push	 esi
  0004f	e8 00 00 00 00	 call	 _luaG_traceexec
  00054	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  00057	83 c4 04	 add	 esp, 4
  0005a	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
  0005d	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00060	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
  00063	eb 03		 jmp	 SHORT $LN167@luaV_execu
$LN464@luaV_execu:
  00065	8b 45 ec	 mov	 eax, DWORD PTR _base$1$[ebp]
$LN167@luaV_execu:
; Line 780
  00068	8b fa		 mov	 edi, edx
  0006a	c1 ef 06	 shr	 edi, 6
  0006d	81 e7 ff 00 00
	00		 and	 edi, 255		; 000000ffH
  00073	8b f7		 mov	 esi, edi
  00075	89 7d f4	 mov	 DWORD PTR _a$1$[ebp], edi
  00078	c1 e6 04	 shl	 esi, 4
  0007b	89 75 e0	 mov	 DWORD PTR tv3922[ebp], esi
  0007e	8d 3c 06	 lea	 edi, DWORD PTR [esi+eax]
; Line 783
  00081	8b f2		 mov	 esi, edx
  00083	83 e6 3f	 and	 esi, 63			; 0000003fH
  00086	89 75 e8	 mov	 DWORD PTR tv3921[ebp], esi
  00089	83 fe 2d	 cmp	 esi, 45			; 0000002dH
  0008c	77 a9		 ja	 SHORT $LL169@luaV_execu
  0008e	ff 24 b5 00 00
	00 00		 jmp	 DWORD PTR $LN537@luaV_execu[esi*4]
$LN164@luaV_execu:
; Line 785
  00095	c1 ea 17	 shr	 edx, 23			; 00000017H
  00098	03 d2		 add	 edx, edx
  0009a	f3 0f 6f 04 d0	 movdqu	 xmm0, XMMWORD PTR [eax+edx*8]
  0009f	f3 0f 7f 07	 movdqu	 XMMWORD PTR [edi], xmm0
; Line 786
  000a3	eb 92		 jmp	 SHORT $LL169@luaV_execu
$LN163@luaV_execu:
; Line 789
  000a5	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  000a8	c1 e2 04	 shl	 edx, 4
  000ab	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
; Line 790
  000ae	f3 0f 6f 02	 movdqu	 xmm0, XMMWORD PTR [edx]
  000b2	f3 0f 7f 07	 movdqu	 XMMWORD PTR [edi], xmm0
; Line 791
  000b6	e9 7c ff ff ff	 jmp	 $LL169@luaV_execu
$LN162@luaV_execu:
; Line 796
  000bb	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  000be	8b 55 f8	 mov	 edx, DWORD PTR _ci$1$[ebp]
  000c1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c3	c1 e9 06	 shr	 ecx, 6
  000c6	c1 e1 04	 shl	 ecx, 4
  000c9	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  000cc	83 c0 04	 add	 eax, 4
  000cf	89 42 14	 mov	 DWORD PTR [edx+20], eax
; Line 797
  000d2	f3 0f 6f 01	 movdqu	 xmm0, XMMWORD PTR [ecx]
; Line 798
  000d6	e9 55 ff ff ff	 jmp	 $LN535@luaV_execu
$LN161@luaV_execu:
; Line 801
  000db	8b c2		 mov	 eax, edx
  000dd	c7 47 08 01 00
	00 00		 mov	 DWORD PTR [edi+8], 1
  000e4	c1 e8 17	 shr	 eax, 23			; 00000017H
  000e7	89 07		 mov	 DWORD PTR [edi], eax
; Line 802
  000e9	f7 c2 00 c0 7f
	00		 test	 edx, 8372224		; 007fc000H
  000ef	0f 84 42 ff ff
	ff		 je	 $LL169@luaV_execu
  000f5	83 41 14 04	 add	 DWORD PTR [ecx+20], 4
; Line 803
  000f9	e9 39 ff ff ff	 jmp	 $LL169@luaV_execu
$LN159@luaV_execu:
; Line 806
  000fe	c1 ea 17	 shr	 edx, 23			; 00000017H
  00101	83 c7 08	 add	 edi, 8
$LL158@luaV_execu:
; Line 809
  00104	8b c2		 mov	 eax, edx
  00106	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
  0010c	4a		 dec	 edx
  0010d	8d 7f 10	 lea	 edi, DWORD PTR [edi+16]
  00110	85 c0		 test	 eax, eax
  00112	75 f0		 jne	 SHORT $LL158@luaV_execu
; Line 810
  00114	e9 1e ff ff ff	 jmp	 $LL169@luaV_execu
$LN155@luaV_execu:
; Line 814
  00119	8b 45 d8	 mov	 eax, DWORD PTR _cl$1$[ebp]
  0011c	c1 ea 17	 shr	 edx, 23			; 00000017H
  0011f	8b 44 90 10	 mov	 eax, DWORD PTR [eax+edx*4+16]
  00123	8b 00		 mov	 eax, DWORD PTR [eax]
  00125	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00129	f3 0f 7f 07	 movdqu	 XMMWORD PTR [edi], xmm0
; Line 815
  0012d	e9 05 ff ff ff	 jmp	 $LL169@luaV_execu
$LN154@luaV_execu:
; Line 818
  00132	8b 4d d8	 mov	 ecx, DWORD PTR _cl$1$[ebp]
  00135	8b c2		 mov	 eax, edx
; Line 819
  00137	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0013a	c1 e8 17	 shr	 eax, 23			; 00000017H
  0013d	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  00140	8b 44 81 10	 mov	 eax, DWORD PTR [ecx+eax*4+16]
  00144	8b 00		 mov	 eax, DWORD PTR [eax]
  00146	89 45 e8	 mov	 DWORD PTR _upval$1$[ebp], eax
  00149	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  0014f	74 0b		 je	 SHORT $LN172@luaV_execu
  00151	0f b6 d2	 movzx	 edx, dl
  00154	c1 e2 04	 shl	 edx, 4
  00157	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  0015a	eb 0c		 jmp	 SHORT $LN482@luaV_execu
$LN172@luaV_execu:
  0015c	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  00162	c1 e2 04	 shl	 edx, 4
  00165	03 55 ec	 add	 edx, DWORD PTR _base$1$[ebp]
$LN482@luaV_execu:
; Line 820
  00168	83 78 08 45	 cmp	 DWORD PTR [eax+8], 69	; 00000045H
  0016c	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  0016f	74 04		 je	 SHORT $LN182@luaV_execu
  00171	33 c9		 xor	 ecx, ecx
  00173	eb 43		 jmp	 SHORT $LN153@luaV_execu
$LN182@luaV_execu:
  00175	52		 push	 edx
  00176	ff 30		 push	 DWORD PTR [eax]
  00178	e8 00 00 00 00	 call	 _luaH_get
  0017d	83 c4 08	 add	 esp, 8
  00180	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00184	75 52		 jne	 SHORT $LN416@luaV_execu
  00186	8b 45 e8	 mov	 eax, DWORD PTR _upval$1$[ebp]
  00189	8b 00		 mov	 eax, DWORD PTR [eax]
  0018b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0018e	85 c9		 test	 ecx, ecx
  00190	74 41		 je	 SHORT $LN178@luaV_execu
  00192	f6 41 06 01	 test	 BYTE PTR [ecx+6], 1
  00196	75 3b		 jne	 SHORT $LN178@luaV_execu
  00198	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0019b	ff b0 88 00 00
	00		 push	 DWORD PTR [eax+136]
  001a1	6a 00		 push	 0
  001a3	51		 push	 ecx
  001a4	e8 00 00 00 00	 call	 _luaT_gettm
  001a9	8b c8		 mov	 ecx, eax
  001ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  001ae	85 c9		 test	 ecx, ecx
  001b0	74 21		 je	 SHORT $LN178@luaV_execu
  001b2	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
  001b5	8b 45 e8	 mov	 eax, DWORD PTR _upval$1$[ebp]
$LN153@luaV_execu:
  001b8	51		 push	 ecx
  001b9	57		 push	 edi
  001ba	52		 push	 edx
  001bb	50		 push	 eax
$LN474@luaV_execu:
  001bc	56		 push	 esi
  001bd	e8 00 00 00 00	 call	 _luaV_finishget
  001c2	83 c4 14	 add	 esp, 20			; 00000014H
$LN477@luaV_execu:
  001c5	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  001c8	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  001cb	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
; Line 821
  001ce	e9 64 fe ff ff	 jmp	 $LL169@luaV_execu
$LN178@luaV_execu:
; Line 820
  001d3	b8 00 00 00 00	 mov	 eax, OFFSET _luaO_nilobject_
$LN416@luaV_execu:
  001d8	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  001dc	e9 4f fe ff ff	 jmp	 $LN535@luaV_execu
$LN151@luaV_execu:
; Line 825
  001e1	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  001e4	8b ca		 mov	 ecx, edx
  001e6	c1 e9 17	 shr	 ecx, 23			; 00000017H
  001e9	c1 e1 04	 shl	 ecx, 4
  001ec	03 c8		 add	 ecx, eax
  001ee	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  001f1	89 4d e8	 mov	 DWORD PTR _rb$1$[ebp], ecx
  001f4	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  001fa	74 0b		 je	 SHORT $LN184@luaV_execu
  001fc	0f b6 d2	 movzx	 edx, dl
  001ff	c1 e2 04	 shl	 edx, 4
  00202	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  00205	eb 0b		 jmp	 SHORT $LN489@luaV_execu
$LN184@luaV_execu:
  00207	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  0020d	c1 e2 04	 shl	 edx, 4
  00210	03 d0		 add	 edx, eax
$LN489@luaV_execu:
; Line 826
  00212	83 79 08 45	 cmp	 DWORD PTR [ecx+8], 69	; 00000045H
  00216	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  00219	74 08		 je	 SHORT $LN194@luaV_execu
  0021b	33 c0		 xor	 eax, eax
  0021d	50		 push	 eax
  0021e	57		 push	 edi
  0021f	52		 push	 edx
  00220	51		 push	 ecx
; Line 827
  00221	eb 99		 jmp	 SHORT $LN474@luaV_execu
$LN194@luaV_execu:
; Line 826
  00223	52		 push	 edx
  00224	ff 31		 push	 DWORD PTR [ecx]
  00226	e8 00 00 00 00	 call	 _luaH_get
$LN483@luaV_execu:
  0022b	83 c4 08	 add	 esp, 8
  0022e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00232	75 a4		 jne	 SHORT $LN416@luaV_execu
  00234	8b 45 e8	 mov	 eax, DWORD PTR _rb$1$[ebp]
  00237	8b 00		 mov	 eax, DWORD PTR [eax]
  00239	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0023c	85 c9		 test	 ecx, ecx
  0023e	74 93		 je	 SHORT $LN178@luaV_execu
  00240	f6 41 06 01	 test	 BYTE PTR [ecx+6], 1
  00244	75 8d		 jne	 SHORT $LN178@luaV_execu
  00246	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00249	ff b0 88 00 00
	00		 push	 DWORD PTR [eax+136]
  0024f	6a 00		 push	 0
  00251	51		 push	 ecx
  00252	e8 00 00 00 00	 call	 _luaT_gettm
  00257	83 c4 0c	 add	 esp, 12			; 0000000cH
  0025a	85 c0		 test	 eax, eax
  0025c	0f 84 71 ff ff
	ff		 je	 $LN178@luaV_execu
  00262	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
  00265	8b 4d e8	 mov	 ecx, DWORD PTR _rb$1$[ebp]
  00268	50		 push	 eax
  00269	57		 push	 edi
  0026a	52		 push	 edx
  0026b	51		 push	 ecx
; Line 827
  0026c	e9 4b ff ff ff	 jmp	 $LN474@luaV_execu
$LN148@luaV_execu:
; Line 830
  00271	8b 7d f4	 mov	 edi, DWORD PTR _a$1$[ebp]
; Line 831
  00274	8b ca		 mov	 ecx, edx
  00276	8b 45 d8	 mov	 eax, DWORD PTR _cl$1$[ebp]
  00279	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0027c	c1 e9 17	 shr	 ecx, 23			; 00000017H
  0027f	8b 44 b8 10	 mov	 eax, DWORD PTR [eax+edi*4+16]
  00283	8b 38		 mov	 edi, DWORD PTR [eax]
  00285	8b 45 ec	 mov	 eax, DWORD PTR _base$1$[ebp]
  00288	89 7d f4	 mov	 DWORD PTR _upval$1$[ebp], edi
  0028b	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  00291	74 0b		 je	 SHORT $LN196@luaV_execu
  00293	0f b6 c9	 movzx	 ecx, cl
  00296	c1 e1 04	 shl	 ecx, 4
  00299	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  0029c	eb 05		 jmp	 SHORT $LN490@luaV_execu
$LN196@luaV_execu:
  0029e	c1 e1 04	 shl	 ecx, 4
  002a1	03 c8		 add	 ecx, eax
$LN490@luaV_execu:
; Line 832
  002a3	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  002a6	89 4d e8	 mov	 DWORD PTR _rb$1$[ebp], ecx
  002a9	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  002af	74 0b		 je	 SHORT $LN198@luaV_execu
  002b1	0f b6 d2	 movzx	 edx, dl
  002b4	c1 e2 04	 shl	 edx, 4
  002b7	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  002ba	eb 0b		 jmp	 SHORT $LN491@luaV_execu
$LN198@luaV_execu:
  002bc	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  002c2	c1 e2 04	 shl	 edx, 4
  002c5	03 d0		 add	 edx, eax
$LN491@luaV_execu:
; Line 833
  002c7	83 7f 08 45	 cmp	 DWORD PTR [edi+8], 69	; 00000045H
  002cb	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  002ce	74 20		 je	 SHORT $LN204@luaV_execu
  002d0	8b 45 f4	 mov	 eax, DWORD PTR _upval$1$[ebp]
  002d3	33 ff		 xor	 edi, edi
  002d5	57		 push	 edi
  002d6	52		 push	 edx
  002d7	51		 push	 ecx
  002d8	50		 push	 eax
  002d9	56		 push	 esi
  002da	e8 00 00 00 00	 call	 _luaV_finishset
  002df	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  002e2	83 c4 14	 add	 esp, 20			; 00000014H
  002e5	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  002e8	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
  002eb	e9 47 fd ff ff	 jmp	 $LL169@luaV_execu
$LN204@luaV_execu:
  002f0	51		 push	 ecx
  002f1	ff 37		 push	 DWORD PTR [edi]
  002f3	e8 00 00 00 00	 call	 _luaH_get
  002f8	8b f8		 mov	 edi, eax
  002fa	83 c4 08	 add	 esp, 8
  002fd	89 7d e0	 mov	 DWORD PTR _slot$1$[ebp], edi
  00300	83 7f 08 00	 cmp	 DWORD PTR [edi+8], 0
  00304	74 35		 je	 SHORT $LN458@luaV_execu
  00306	8b 75 fc	 mov	 esi, DWORD PTR _b$1$[ebp]
  00309	f6 46 08 40	 test	 BYTE PTR [esi+8], 64	; 00000040H
  0030d	74 23		 je	 SHORT $LN200@luaV_execu
  0030f	8b 45 f4	 mov	 eax, DWORD PTR _upval$1$[ebp]
  00312	8b 08		 mov	 ecx, DWORD PTR [eax]
  00314	f6 41 05 04	 test	 BYTE PTR [ecx+5], 4
  00318	74 18		 je	 SHORT $LN200@luaV_execu
  0031a	8b 06		 mov	 eax, DWORD PTR [esi]
  0031c	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00320	74 10		 je	 SHORT $LN200@luaV_execu
  00322	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00325	51		 push	 ecx
  00326	57		 push	 edi
  00327	e8 00 00 00 00	 call	 _luaC_barrierback_
  0032c	8b 7d e0	 mov	 edi, DWORD PTR _slot$1$[ebp]
  0032f	83 c4 08	 add	 esp, 8
$LN200@luaV_execu:
  00332	f3 0f 6f 06	 movdqu	 xmm0, XMMWORD PTR [esi]
  00336	e9 f5 fc ff ff	 jmp	 $LN535@luaV_execu
$LN458@luaV_execu:
  0033b	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
  0033e	8b 4d e8	 mov	 ecx, DWORD PTR _rb$1$[ebp]
  00341	8b 45 f4	 mov	 eax, DWORD PTR _upval$1$[ebp]
  00344	57		 push	 edi
  00345	52		 push	 edx
  00346	51		 push	 ecx
  00347	50		 push	 eax
  00348	56		 push	 esi
  00349	e8 00 00 00 00	 call	 _luaV_finishset
  0034e	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  00351	83 c4 14	 add	 esp, 20			; 00000014H
  00354	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00357	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
  0035a	e9 d8 fc ff ff	 jmp	 $LL169@luaV_execu
$LN146@luaV_execu:
; Line 837
  0035f	8b 45 d8	 mov	 eax, DWORD PTR _cl$1$[ebp]
; Line 838
  00362	f3 0f 6f 07	 movdqu	 xmm0, XMMWORD PTR [edi]
; Line 839
  00366	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00369	c1 ea 17	 shr	 edx, 23			; 00000017H
  0036c	8b 54 90 10	 mov	 edx, DWORD PTR [eax+edx*4+16]
  00370	8b 02		 mov	 eax, DWORD PTR [edx]
  00372	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
  00376	8b 3a		 mov	 edi, DWORD PTR [edx]
  00378	f6 47 08 40	 test	 BYTE PTR [edi+8], 64	; 00000040H
  0037c	0f 84 b5 fc ff
	ff		 je	 $LL169@luaV_execu
  00382	8d 42 08	 lea	 eax, DWORD PTR [edx+8]
  00385	3b f8		 cmp	 edi, eax
  00387	0f 85 aa fc ff
	ff		 jne	 $LL169@luaV_execu
  0038d	52		 push	 edx
  0038e	56		 push	 esi
  0038f	e8 00 00 00 00	 call	 _luaC_upvalbarrier_
  00394	83 c4 08	 add	 esp, 8
; Line 840
  00397	e9 98 fc ff ff	 jmp	 $LN462@luaV_execu
$LN145@luaV_execu:
; Line 843
  0039c	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0039f	8b ca		 mov	 ecx, edx
  003a1	c1 e9 17	 shr	 ecx, 23			; 00000017H
  003a4	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  003aa	74 0b		 je	 SHORT $LN208@luaV_execu
  003ac	0f b6 c9	 movzx	 ecx, cl
  003af	c1 e1 04	 shl	 ecx, 4
  003b2	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  003b5	eb 05		 jmp	 SHORT $LN492@luaV_execu
$LN208@luaV_execu:
  003b7	c1 e1 04	 shl	 ecx, 4
  003ba	03 c8		 add	 ecx, eax
$LN492@luaV_execu:
; Line 844
  003bc	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  003bf	89 4d f4	 mov	 DWORD PTR _rb$1$[ebp], ecx
  003c2	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  003c8	74 0b		 je	 SHORT $LN210@luaV_execu
  003ca	0f b6 d2	 movzx	 edx, dl
  003cd	c1 e2 04	 shl	 edx, 4
  003d0	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  003d3	eb 0b		 jmp	 SHORT $LN493@luaV_execu
$LN210@luaV_execu:
  003d5	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  003db	c1 e2 04	 shl	 edx, 4
  003de	03 d0		 add	 edx, eax
$LN493@luaV_execu:
; Line 845
  003e0	83 7f 08 45	 cmp	 DWORD PTR [edi+8], 69	; 00000045H
  003e4	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  003e7	74 1d		 je	 SHORT $LN216@luaV_execu
  003e9	33 c0		 xor	 eax, eax
  003eb	50		 push	 eax
  003ec	52		 push	 edx
  003ed	51		 push	 ecx
  003ee	57		 push	 edi
  003ef	56		 push	 esi
  003f0	e8 00 00 00 00	 call	 _luaV_finishset
  003f5	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  003f8	83 c4 14	 add	 esp, 20			; 00000014H
  003fb	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  003fe	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
  00401	e9 31 fc ff ff	 jmp	 $LL169@luaV_execu
$LN216@luaV_execu:
  00406	51		 push	 ecx
  00407	ff 37		 push	 DWORD PTR [edi]
  00409	e8 00 00 00 00	 call	 _luaH_get
  0040e	83 c4 08	 add	 esp, 8
  00411	89 45 e8	 mov	 DWORD PTR _slot$1$[ebp], eax
  00414	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00418	74 36		 je	 SHORT $LN457@luaV_execu
  0041a	8b 75 fc	 mov	 esi, DWORD PTR _b$1$[ebp]
  0041d	f6 46 08 40	 test	 BYTE PTR [esi+8], 64	; 00000040H
  00421	74 20		 je	 SHORT $LN212@luaV_execu
  00423	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00425	f6 41 05 04	 test	 BYTE PTR [ecx+5], 4
  00429	74 18		 je	 SHORT $LN212@luaV_execu
  0042b	8b 06		 mov	 eax, DWORD PTR [esi]
  0042d	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  00431	74 0d		 je	 SHORT $LN466@luaV_execu
  00433	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00436	51		 push	 ecx
  00437	57		 push	 edi
  00438	e8 00 00 00 00	 call	 _luaC_barrierback_
  0043d	83 c4 08	 add	 esp, 8
$LN466@luaV_execu:
  00440	8b 45 e8	 mov	 eax, DWORD PTR _slot$1$[ebp]
$LN212@luaV_execu:
  00443	f3 0f 6f 06	 movdqu	 xmm0, XMMWORD PTR [esi]
  00447	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
  0044b	e9 e4 fb ff ff	 jmp	 $LN462@luaV_execu
$LN457@luaV_execu:
  00450	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
  00453	8b 4d f4	 mov	 ecx, DWORD PTR _rb$1$[ebp]
  00456	50		 push	 eax
  00457	52		 push	 edx
  00458	51		 push	 ecx
  00459	57		 push	 edi
  0045a	56		 push	 esi
  0045b	e8 00 00 00 00	 call	 _luaV_finishset
  00460	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  00463	83 c4 14	 add	 esp, 20			; 00000014H
  00466	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00469	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
  0046c	e9 c6 fb ff ff	 jmp	 $LL169@luaV_execu
$LN143@luaV_execu:
; Line 851
  00471	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00474	8b c2		 mov	 eax, edx
  00476	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  00479	c1 e8 17	 shr	 eax, 23			; 00000017H
  0047c	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  00482	56		 push	 esi
  00483	89 45 e8	 mov	 DWORD PTR _b$1$[ebp], eax
  00486	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  00489	e8 00 00 00 00	 call	 _luaH_new
; Line 853
  0048e	8b 75 fc	 mov	 esi, DWORD PTR _b$1$[ebp]
  00491	83 c4 04	 add	 esp, 4
  00494	83 7d e8 00	 cmp	 DWORD PTR _b$1$[ebp], 0
  00498	89 45 e0	 mov	 DWORD PTR _t$1$[ebp], eax
  0049b	89 07		 mov	 DWORD PTR [edi], eax
  0049d	c7 47 08 45 00
	00 00		 mov	 DWORD PTR [edi+8], 69	; 00000045H
  004a4	75 04		 jne	 SHORT $LN141@luaV_execu
  004a6	85 f6		 test	 esi, esi
  004a8	74 27		 je	 SHORT $LN460@luaV_execu
$LN141@luaV_execu:
; Line 854
  004aa	56		 push	 esi
  004ab	e8 00 00 00 00	 call	 _luaO_fb2int
  004b0	83 c4 04	 add	 esp, 4
  004b3	50		 push	 eax
  004b4	ff 75 e8	 push	 DWORD PTR _b$1$[ebp]
  004b7	e8 00 00 00 00	 call	 _luaO_fb2int
  004bc	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  004bf	83 c4 04	 add	 esp, 4
  004c2	50		 push	 eax
  004c3	ff 75 e0	 push	 DWORD PTR _t$1$[ebp]
  004c6	56		 push	 esi
  004c7	e8 00 00 00 00	 call	 _luaH_resize
  004cc	83 c4 10	 add	 esp, 16			; 00000010H
  004cf	eb 03		 jmp	 SHORT $LN142@luaV_execu
$LN460@luaV_execu:
  004d1	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
$LN142@luaV_execu:
; Line 855
  004d4	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  004d7	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  004da	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  004de	0f 8e 53 fb ff
	ff		 jle	 $LL169@luaV_execu
  004e4	8d 47 10	 lea	 eax, DWORD PTR [edi+16]
  004e7	56		 push	 esi
  004e8	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  004eb	e8 00 00 00 00	 call	 _luaC_step
  004f0	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  004f3	83 c4 04	 add	 esp, 4
  004f6	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  004f9	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  004fc	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  004ff	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
  00502	e9 30 fb ff ff	 jmp	 $LL169@luaV_execu
$LN139@luaV_execu:
; Line 861
  00507	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0050a	8b ca		 mov	 ecx, edx
  0050c	c1 e9 17	 shr	 ecx, 23			; 00000017H
  0050f	c1 e1 04	 shl	 ecx, 4
  00512	03 c8		 add	 ecx, eax
  00514	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  00517	89 4d e8	 mov	 DWORD PTR _rb$1$[ebp], ecx
  0051a	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  00520	74 0b		 je	 SHORT $LN218@luaV_execu
  00522	0f b6 d2	 movzx	 edx, dl
  00525	c1 e2 04	 shl	 edx, 4
  00528	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  0052b	eb 0b		 jmp	 SHORT $LN494@luaV_execu
$LN218@luaV_execu:
  0052d	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  00533	c1 e2 04	 shl	 edx, 4
  00536	03 d0		 add	 edx, eax
$LN494@luaV_execu:
; Line 863
  00538	f3 0f 6f 01	 movdqu	 xmm0, XMMWORD PTR [ecx]
  0053c	8b 02		 mov	 eax, DWORD PTR [edx]
  0053e	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  00541	f3 0f 7f 47 10	 movdqu	 XMMWORD PTR [edi+16], xmm0
; Line 864
  00546	83 79 08 45	 cmp	 DWORD PTR [ecx+8], 69	; 00000045H
  0054a	74 0b		 je	 SHORT $LN228@luaV_execu
  0054c	33 c0		 xor	 eax, eax
  0054e	50		 push	 eax
  0054f	57		 push	 edi
  00550	52		 push	 edx
  00551	51		 push	 ecx
  00552	e9 65 fc ff ff	 jmp	 $LN474@luaV_execu
$LN228@luaV_execu:
  00557	50		 push	 eax
  00558	ff 31		 push	 DWORD PTR [ecx]
  0055a	e8 00 00 00 00	 call	 _luaH_getstr
; Line 868
  0055f	e9 c7 fc ff ff	 jmp	 $LN483@luaV_execu
$LN136@luaV_execu:
; Line 871
  00564	8b ca		 mov	 ecx, edx
  00566	c1 e9 17	 shr	 ecx, 23			; 00000017H
  00569	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  0056f	74 0b		 je	 SHORT $LN230@luaV_execu
  00571	0f b6 c9	 movzx	 ecx, cl
  00574	c1 e1 04	 shl	 ecx, 4
  00577	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  0057a	eb 05		 jmp	 SHORT $LN495@luaV_execu
$LN230@luaV_execu:
  0057c	c1 e1 04	 shl	 ecx, 4
  0057f	03 c8		 add	 ecx, eax
$LN495@luaV_execu:
; Line 872
  00581	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  00584	89 4d f4	 mov	 DWORD PTR _rb$1$[ebp], ecx
  00587	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  0058d	74 0b		 je	 SHORT $LN232@luaV_execu
  0058f	0f b6 d2	 movzx	 edx, dl
  00592	c1 e2 04	 shl	 edx, 4
  00595	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  00598	eb 0b		 jmp	 SHORT $LN496@luaV_execu
$LN232@luaV_execu:
  0059a	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  005a0	c1 e2 04	 shl	 edx, 4
  005a3	03 d0		 add	 edx, eax
$LN496@luaV_execu:
; Line 874
  005a5	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  005a8	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  005ab	83 f8 13	 cmp	 eax, 19			; 00000013H
  005ae	75 26		 jne	 SHORT $LN135@luaV_execu
  005b0	39 42 08	 cmp	 DWORD PTR [edx+8], eax
  005b3	75 21		 jne	 SHORT $LN135@luaV_execu
; Line 876
  005b5	8b 0a		 mov	 ecx, DWORD PTR [edx]
  005b7	8b 45 f4	 mov	 eax, DWORD PTR _rb$1$[ebp]
  005ba	03 08		 add	 ecx, DWORD PTR [eax]
  005bc	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  005bf	8b 55 f4	 mov	 edx, DWORD PTR _rb$1$[ebp]
  005c2	13 42 04	 adc	 eax, DWORD PTR [edx+4]
  005c5	89 0f		 mov	 DWORD PTR [edi], ecx
  005c7	89 47 04	 mov	 DWORD PTR [edi+4], eax
  005ca	c7 47 08 13 00
	00 00		 mov	 DWORD PTR [edi+8], 19	; 00000013H
  005d1	e9 5e fa ff ff	 jmp	 $LN462@luaV_execu
$LN135@luaV_execu:
; Line 878
  005d6	83 f8 03	 cmp	 eax, 3
  005d9	75 0e		 jne	 SHORT $LN234@luaV_execu
  005db	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  005df	f2 0f 11 85 1c
	ff ff ff	 movsd	 QWORD PTR _nb$9[ebp], xmm0
  005e7	eb 1f		 jmp	 SHORT $LN497@luaV_execu
$LN234@luaV_execu:
  005e9	8d 85 1c ff ff
	ff		 lea	 eax, DWORD PTR _nb$9[ebp]
  005ef	50		 push	 eax
  005f0	51		 push	 ecx
  005f1	e8 00 00 00 00	 call	 _luaV_tonumber_
  005f6	83 c4 08	 add	 esp, 8
  005f9	85 c0		 test	 eax, eax
  005fb	74 55		 je	 SHORT $LN133@luaV_execu
  005fd	f2 0f 10 85 1c
	ff ff ff	 movsd	 xmm0, QWORD PTR _nb$9[ebp]
  00605	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
$LN497@luaV_execu:
  00608	83 7a 08 03	 cmp	 DWORD PTR [edx+8], 3
  0060c	f2 0f 11 45 dc	 movsd	 QWORD PTR _nb$1$[ebp], xmm0
  00611	75 0e		 jne	 SHORT $LN236@luaV_execu
  00613	f2 0f 10 02	 movsd	 xmm0, QWORD PTR [edx]
  00617	f2 0f 11 85 5c
	ff ff ff	 movsd	 QWORD PTR _nc$17[ebp], xmm0
  0061f	eb 1c		 jmp	 SHORT $LN422@luaV_execu
$LN236@luaV_execu:
  00621	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR _nc$17[ebp]
  00627	50		 push	 eax
  00628	52		 push	 edx
  00629	e8 00 00 00 00	 call	 _luaV_tonumber_
  0062e	83 c4 08	 add	 esp, 8
  00631	85 c0		 test	 eax, eax
  00633	74 1d		 je	 SHORT $LN133@luaV_execu
  00635	f2 0f 10 85 5c
	ff ff ff	 movsd	 xmm0, QWORD PTR _nc$17[ebp]
$LN422@luaV_execu:
; Line 879
  0063d	f2 0f 58 45 dc	 addsd	 xmm0, QWORD PTR _nb$1$[ebp]
  00642	c7 47 08 03 00
	00 00		 mov	 DWORD PTR [edi+8], 3
  00649	f2 0f 11 07	 movsd	 QWORD PTR [edi], xmm0
  0064d	e9 e2 f9 ff ff	 jmp	 $LN462@luaV_execu
$LN133@luaV_execu:
; Line 881
  00652	6a 06		 push	 6
$LN484@luaV_execu:
  00654	8b 75 fc	 mov	 esi, DWORD PTR _b$1$[ebp]
  00657	57		 push	 edi
  00658	56		 push	 esi
  00659	ff 75 f4	 push	 DWORD PTR _rb$1$[ebp]
$LN485@luaV_execu:
  0065c	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0065f	56		 push	 esi
  00660	e8 00 00 00 00	 call	 _luaT_trybinTM
  00665	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  00668	83 c4 14	 add	 esp, 20			; 00000014H
  0066b	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0066e	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
  00671	e9 c1 f9 ff ff	 jmp	 $LL169@luaV_execu
$LN131@luaV_execu:
; Line 885
  00676	8b ca		 mov	 ecx, edx
  00678	c1 e9 17	 shr	 ecx, 23			; 00000017H
  0067b	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  00681	74 0b		 je	 SHORT $LN238@luaV_execu
  00683	0f b6 c9	 movzx	 ecx, cl
  00686	c1 e1 04	 shl	 ecx, 4
  00689	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  0068c	eb 05		 jmp	 SHORT $LN498@luaV_execu
$LN238@luaV_execu:
  0068e	c1 e1 04	 shl	 ecx, 4
  00691	03 c8		 add	 ecx, eax
$LN498@luaV_execu:
; Line 886
  00693	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  00696	89 4d e8	 mov	 DWORD PTR _rb$1$[ebp], ecx
  00699	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  0069f	74 0b		 je	 SHORT $LN240@luaV_execu
  006a1	0f b6 d2	 movzx	 edx, dl
  006a4	c1 e2 04	 shl	 edx, 4
  006a7	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  006aa	eb 0b		 jmp	 SHORT $LN499@luaV_execu
$LN240@luaV_execu:
  006ac	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  006b2	c1 e2 04	 shl	 edx, 4
  006b5	03 d0		 add	 edx, eax
$LN499@luaV_execu:
; Line 888
  006b7	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  006ba	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  006bd	83 f8 13	 cmp	 eax, 19			; 00000013H
  006c0	75 23		 jne	 SHORT $LN130@luaV_execu
  006c2	39 42 08	 cmp	 DWORD PTR [edx+8], eax
  006c5	75 1e		 jne	 SHORT $LN130@luaV_execu
; Line 890
  006c7	8b 09		 mov	 ecx, DWORD PTR [ecx]
  006c9	8b 45 e8	 mov	 eax, DWORD PTR _rb$1$[ebp]
  006cc	2b 0a		 sub	 ecx, DWORD PTR [edx]
  006ce	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  006d1	1b 42 04	 sbb	 eax, DWORD PTR [edx+4]
  006d4	89 0f		 mov	 DWORD PTR [edi], ecx
  006d6	89 47 04	 mov	 DWORD PTR [edi+4], eax
  006d9	c7 47 08 13 00
	00 00		 mov	 DWORD PTR [edi+8], 19	; 00000013H
  006e0	e9 4f f9 ff ff	 jmp	 $LN462@luaV_execu
$LN130@luaV_execu:
; Line 892
  006e5	83 f8 03	 cmp	 eax, 3
  006e8	75 0e		 jne	 SHORT $LN242@luaV_execu
  006ea	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  006ee	f2 0f 11 85 dc
	fe ff ff	 movsd	 QWORD PTR _nb$1[ebp], xmm0
  006f6	eb 1f		 jmp	 SHORT $LN500@luaV_execu
$LN242@luaV_execu:
  006f8	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _nb$1[ebp]
  006fe	50		 push	 eax
  006ff	51		 push	 ecx
  00700	e8 00 00 00 00	 call	 _luaV_tonumber_
  00705	83 c4 08	 add	 esp, 8
  00708	85 c0		 test	 eax, eax
  0070a	74 59		 je	 SHORT $LN128@luaV_execu
  0070c	f2 0f 10 85 dc
	fe ff ff	 movsd	 xmm0, QWORD PTR _nb$1[ebp]
  00714	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
$LN500@luaV_execu:
  00717	83 7a 08 03	 cmp	 DWORD PTR [edx+8], 3
  0071b	f2 0f 11 45 dc	 movsd	 QWORD PTR _nb$1$[ebp], xmm0
  00720	75 0e		 jne	 SHORT $LN244@luaV_execu
  00722	f2 0f 10 0a	 movsd	 xmm1, QWORD PTR [edx]
  00726	f2 0f 11 8d 4c
	ff ff ff	 movsd	 QWORD PTR _nc$15[ebp], xmm1
  0072e	eb 1c		 jmp	 SHORT $LN424@luaV_execu
$LN244@luaV_execu:
  00730	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _nc$15[ebp]
  00736	50		 push	 eax
  00737	52		 push	 edx
  00738	e8 00 00 00 00	 call	 _luaV_tonumber_
  0073d	83 c4 08	 add	 esp, 8
  00740	85 c0		 test	 eax, eax
  00742	74 21		 je	 SHORT $LN128@luaV_execu
  00744	f2 0f 10 8d 4c
	ff ff ff	 movsd	 xmm1, QWORD PTR _nc$15[ebp]
$LN424@luaV_execu:
; Line 893
  0074c	f2 0f 10 45 dc	 movsd	 xmm0, QWORD PTR _nb$1$[ebp]
  00751	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00755	c7 47 08 03 00
	00 00		 mov	 DWORD PTR [edi+8], 3
  0075c	f2 0f 11 07	 movsd	 QWORD PTR [edi], xmm0
  00760	e9 cf f8 ff ff	 jmp	 $LN462@luaV_execu
$LN128@luaV_execu:
; Line 895
  00765	8b 75 fc	 mov	 esi, DWORD PTR _b$1$[ebp]
  00768	8b 45 e8	 mov	 eax, DWORD PTR _rb$1$[ebp]
  0076b	6a 07		 push	 7
  0076d	57		 push	 edi
  0076e	56		 push	 esi
  0076f	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00772	50		 push	 eax
  00773	56		 push	 esi
  00774	e8 00 00 00 00	 call	 _luaT_trybinTM
  00779	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  0077c	83 c4 14	 add	 esp, 20			; 00000014H
  0077f	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00782	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
  00785	e9 ad f8 ff ff	 jmp	 $LL169@luaV_execu
$LN126@luaV_execu:
; Line 899
  0078a	8b ca		 mov	 ecx, edx
  0078c	c1 e9 17	 shr	 ecx, 23			; 00000017H
  0078f	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  00795	74 0b		 je	 SHORT $LN246@luaV_execu
  00797	0f b6 c9	 movzx	 ecx, cl
  0079a	c1 e1 04	 shl	 ecx, 4
  0079d	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  007a0	eb 05		 jmp	 SHORT $LN501@luaV_execu
$LN246@luaV_execu:
  007a2	c1 e1 04	 shl	 ecx, 4
  007a5	03 c8		 add	 ecx, eax
$LN501@luaV_execu:
; Line 900
  007a7	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  007aa	89 4d e8	 mov	 DWORD PTR _rb$1$[ebp], ecx
  007ad	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  007b3	74 0b		 je	 SHORT $LN248@luaV_execu
  007b5	0f b6 d2	 movzx	 edx, dl
  007b8	c1 e2 04	 shl	 edx, 4
  007bb	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  007be	eb 0b		 jmp	 SHORT $LN502@luaV_execu
$LN248@luaV_execu:
  007c0	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  007c6	c1 e2 04	 shl	 edx, 4
  007c9	03 d0		 add	 edx, eax
$LN502@luaV_execu:
; Line 902
  007cb	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  007ce	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  007d1	83 f8 13	 cmp	 eax, 19			; 00000013H
  007d4	75 25		 jne	 SHORT $LN125@luaV_execu
  007d6	39 42 08	 cmp	 DWORD PTR [edx+8], eax
  007d9	75 20		 jne	 SHORT $LN125@luaV_execu
; Line 904
  007db	ff 71 04	 push	 DWORD PTR [ecx+4]
  007de	ff 31		 push	 DWORD PTR [ecx]
  007e0	ff 72 04	 push	 DWORD PTR [edx+4]
  007e3	ff 32		 push	 DWORD PTR [edx]
  007e5	e8 00 00 00 00	 call	 __allmul
  007ea	89 07		 mov	 DWORD PTR [edi], eax
  007ec	89 57 04	 mov	 DWORD PTR [edi+4], edx
  007ef	c7 47 08 13 00
	00 00		 mov	 DWORD PTR [edi+8], 19	; 00000013H
  007f6	e9 39 f8 ff ff	 jmp	 $LN462@luaV_execu
$LN125@luaV_execu:
; Line 906
  007fb	83 f8 03	 cmp	 eax, 3
  007fe	75 0e		 jne	 SHORT $LN250@luaV_execu
  00800	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  00804	f2 0f 11 85 0c
	ff ff ff	 movsd	 QWORD PTR _nb$7[ebp], xmm0
  0080c	eb 1f		 jmp	 SHORT $LN503@luaV_execu
$LN250@luaV_execu:
  0080e	8d 85 0c ff ff
	ff		 lea	 eax, DWORD PTR _nb$7[ebp]
  00814	50		 push	 eax
  00815	51		 push	 ecx
  00816	e8 00 00 00 00	 call	 _luaV_tonumber_
  0081b	83 c4 08	 add	 esp, 8
  0081e	85 c0		 test	 eax, eax
  00820	74 55		 je	 SHORT $LN123@luaV_execu
  00822	f2 0f 10 85 0c
	ff ff ff	 movsd	 xmm0, QWORD PTR _nb$7[ebp]
  0082a	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
$LN503@luaV_execu:
  0082d	83 7a 08 03	 cmp	 DWORD PTR [edx+8], 3
  00831	f2 0f 11 45 dc	 movsd	 QWORD PTR _nb$1$[ebp], xmm0
  00836	75 0e		 jne	 SHORT $LN252@luaV_execu
  00838	f2 0f 10 02	 movsd	 xmm0, QWORD PTR [edx]
  0083c	f2 0f 11 85 3c
	ff ff ff	 movsd	 QWORD PTR _nc$13[ebp], xmm0
  00844	eb 1c		 jmp	 SHORT $LN426@luaV_execu
$LN252@luaV_execu:
  00846	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _nc$13[ebp]
  0084c	50		 push	 eax
  0084d	52		 push	 edx
  0084e	e8 00 00 00 00	 call	 _luaV_tonumber_
  00853	83 c4 08	 add	 esp, 8
  00856	85 c0		 test	 eax, eax
  00858	74 1d		 je	 SHORT $LN123@luaV_execu
  0085a	f2 0f 10 85 3c
	ff ff ff	 movsd	 xmm0, QWORD PTR _nc$13[ebp]
$LN426@luaV_execu:
; Line 907
  00862	f2 0f 59 45 dc	 mulsd	 xmm0, QWORD PTR _nb$1$[ebp]
  00867	c7 47 08 03 00
	00 00		 mov	 DWORD PTR [edi+8], 3
  0086e	f2 0f 11 07	 movsd	 QWORD PTR [edi], xmm0
  00872	e9 bd f7 ff ff	 jmp	 $LN462@luaV_execu
$LN123@luaV_execu:
; Line 909
  00877	6a 08		 push	 8
$LN486@luaV_execu:
  00879	8b 75 fc	 mov	 esi, DWORD PTR _b$1$[ebp]
  0087c	57		 push	 edi
  0087d	56		 push	 esi
  0087e	ff 75 e8	 push	 DWORD PTR _rb$1$[ebp]
$LN487@luaV_execu:
  00881	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00884	56		 push	 esi
  00885	e8 00 00 00 00	 call	 _luaT_trybinTM
  0088a	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  0088d	83 c4 14	 add	 esp, 20			; 00000014H
  00890	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00893	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
  00896	e9 9c f7 ff ff	 jmp	 $LL169@luaV_execu
$LN121@luaV_execu:
; Line 913
  0089b	8b ca		 mov	 ecx, edx
  0089d	c1 e9 17	 shr	 ecx, 23			; 00000017H
  008a0	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  008a6	74 0b		 je	 SHORT $LN254@luaV_execu
  008a8	0f b6 c9	 movzx	 ecx, cl
  008ab	c1 e1 04	 shl	 ecx, 4
  008ae	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  008b1	eb 05		 jmp	 SHORT $LN504@luaV_execu
$LN254@luaV_execu:
  008b3	c1 e1 04	 shl	 ecx, 4
  008b6	03 c8		 add	 ecx, eax
$LN504@luaV_execu:
; Line 914
  008b8	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  008bb	89 4d e8	 mov	 DWORD PTR _rb$1$[ebp], ecx
  008be	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  008c4	74 0b		 je	 SHORT $LN256@luaV_execu
  008c6	0f b6 d2	 movzx	 edx, dl
  008c9	c1 e2 04	 shl	 edx, 4
  008cc	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  008cf	eb 0b		 jmp	 SHORT $LN505@luaV_execu
$LN256@luaV_execu:
  008d1	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  008d7	c1 e2 04	 shl	 edx, 4
  008da	03 d0		 add	 edx, eax
$LN505@luaV_execu:
; Line 916
  008dc	83 79 08 03	 cmp	 DWORD PTR [ecx+8], 3
  008e0	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  008e3	75 0e		 jne	 SHORT $LN258@luaV_execu
  008e5	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  008e9	f2 0f 11 85 ec
	fe ff ff	 movsd	 QWORD PTR _nb$3[ebp], xmm0
  008f1	eb 1f		 jmp	 SHORT $LN506@luaV_execu
$LN258@luaV_execu:
  008f3	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _nb$3[ebp]
  008f9	50		 push	 eax
  008fa	51		 push	 ecx
  008fb	e8 00 00 00 00	 call	 _luaV_tonumber_
  00900	83 c4 08	 add	 esp, 8
  00903	85 c0		 test	 eax, eax
  00905	74 59		 je	 SHORT $LN120@luaV_execu
  00907	f2 0f 10 85 ec
	fe ff ff	 movsd	 xmm0, QWORD PTR _nb$3[ebp]
  0090f	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
$LN506@luaV_execu:
  00912	83 7a 08 03	 cmp	 DWORD PTR [edx+8], 3
  00916	f2 0f 11 45 dc	 movsd	 QWORD PTR _nb$1$[ebp], xmm0
  0091b	75 0e		 jne	 SHORT $LN260@luaV_execu
  0091d	f2 0f 10 0a	 movsd	 xmm1, QWORD PTR [edx]
  00921	f2 0f 11 8d 2c
	ff ff ff	 movsd	 QWORD PTR _nc$11[ebp], xmm1
  00929	eb 1c		 jmp	 SHORT $LN428@luaV_execu
$LN260@luaV_execu:
  0092b	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _nc$11[ebp]
  00931	50		 push	 eax
  00932	52		 push	 edx
  00933	e8 00 00 00 00	 call	 _luaV_tonumber_
  00938	83 c4 08	 add	 esp, 8
  0093b	85 c0		 test	 eax, eax
  0093d	74 21		 je	 SHORT $LN120@luaV_execu
  0093f	f2 0f 10 8d 2c
	ff ff ff	 movsd	 xmm1, QWORD PTR _nc$11[ebp]
$LN428@luaV_execu:
; Line 917
  00947	f2 0f 10 45 dc	 movsd	 xmm0, QWORD PTR _nb$1$[ebp]
  0094c	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00950	c7 47 08 03 00
	00 00		 mov	 DWORD PTR [edi+8], 3
  00957	f2 0f 11 07	 movsd	 QWORD PTR [edi], xmm0
  0095b	e9 d4 f6 ff ff	 jmp	 $LN462@luaV_execu
$LN120@luaV_execu:
; Line 919
  00960	6a 0b		 push	 11			; 0000000bH
; Line 920
  00962	e9 12 ff ff ff	 jmp	 $LN486@luaV_execu
$LN118@luaV_execu:
; Line 923
  00967	8b ca		 mov	 ecx, edx
  00969	c1 e9 17	 shr	 ecx, 23			; 00000017H
  0096c	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  00972	74 0b		 je	 SHORT $LN262@luaV_execu
  00974	0f b6 c9	 movzx	 ecx, cl
  00977	c1 e1 04	 shl	 ecx, 4
  0097a	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  0097d	eb 05		 jmp	 SHORT $LN507@luaV_execu
$LN262@luaV_execu:
  0097f	c1 e1 04	 shl	 ecx, 4
  00982	03 c8		 add	 ecx, eax
$LN507@luaV_execu:
; Line 924
  00984	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  00987	89 4d e0	 mov	 DWORD PTR _rb$1$[ebp], ecx
  0098a	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  00990	74 0b		 je	 SHORT $LN264@luaV_execu
  00992	0f b6 d2	 movzx	 edx, dl
  00995	c1 e2 04	 shl	 edx, 4
  00998	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  0099b	eb 0b		 jmp	 SHORT $LN508@luaV_execu
$LN264@luaV_execu:
  0099d	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  009a3	c1 e2 04	 shl	 edx, 4
  009a6	03 d0		 add	 edx, eax
$LN508@luaV_execu:
; Line 926
  009a8	83 79 08 13	 cmp	 DWORD PTR [ecx+8], 19	; 00000013H
  009ac	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  009af	75 10		 jne	 SHORT $LN266@luaV_execu
  009b1	8b 01		 mov	 eax, DWORD PTR [ecx]
  009b3	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  009b6	89 45 88	 mov	 DWORD PTR _ib$23[ebp], eax
  009b9	89 4d f4	 mov	 DWORD PTR _ib$2$[ebp], ecx
  009bc	89 4d 8c	 mov	 DWORD PTR _ib$23[ebp+4], ecx
  009bf	eb 1f		 jmp	 SHORT $LN509@luaV_execu
$LN266@luaV_execu:
  009c1	6a 00		 push	 0
  009c3	8d 45 88	 lea	 eax, DWORD PTR _ib$23[ebp]
  009c6	50		 push	 eax
  009c7	51		 push	 ecx
  009c8	e8 00 00 00 00	 call	 _luaV_tointeger
  009cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  009d0	85 c0		 test	 eax, eax
  009d2	74 52		 je	 SHORT $LN117@luaV_execu
  009d4	8b 45 8c	 mov	 eax, DWORD PTR _ib$23[ebp+4]
  009d7	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
  009da	89 45 f4	 mov	 DWORD PTR _ib$2$[ebp], eax
  009dd	8b 45 88	 mov	 eax, DWORD PTR _ib$23[ebp]
$LN509@luaV_execu:
  009e0	83 7a 08 13	 cmp	 DWORD PTR [edx+8], 19	; 00000013H
  009e4	89 45 e8	 mov	 DWORD PTR _ib$1$[ebp], eax
  009e7	75 0d		 jne	 SHORT $LN268@luaV_execu
  009e9	8b 02		 mov	 eax, DWORD PTR [edx]
  009eb	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  009ee	89 45 d0	 mov	 DWORD PTR _ic$32[ebp], eax
  009f1	89 4d d4	 mov	 DWORD PTR _ic$32[ebp+4], ecx
  009f4	eb 19		 jmp	 SHORT $LN430@luaV_execu
$LN268@luaV_execu:
  009f6	6a 00		 push	 0
  009f8	8d 45 d0	 lea	 eax, DWORD PTR _ic$32[ebp]
  009fb	50		 push	 eax
  009fc	52		 push	 edx
  009fd	e8 00 00 00 00	 call	 _luaV_tointeger
  00a02	83 c4 0c	 add	 esp, 12			; 0000000cH
  00a05	85 c0		 test	 eax, eax
  00a07	74 1d		 je	 SHORT $LN117@luaV_execu
  00a09	8b 4d d4	 mov	 ecx, DWORD PTR _ic$32[ebp+4]
  00a0c	8b 45 d0	 mov	 eax, DWORD PTR _ic$32[ebp]
$LN430@luaV_execu:
; Line 927
  00a0f	23 45 e8	 and	 eax, DWORD PTR _ib$1$[ebp]
  00a12	23 4d f4	 and	 ecx, DWORD PTR _ib$2$[ebp]
  00a15	89 07		 mov	 DWORD PTR [edi], eax
  00a17	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
  00a1a	c7 47 08 13 00
	00 00		 mov	 DWORD PTR [edi+8], 19	; 00000013H
  00a21	e9 0e f6 ff ff	 jmp	 $LN462@luaV_execu
$LN117@luaV_execu:
; Line 929
  00a26	8b 75 fc	 mov	 esi, DWORD PTR _b$1$[ebp]
  00a29	6a 0d		 push	 13			; 0000000dH
  00a2b	57		 push	 edi
  00a2c	56		 push	 esi
  00a2d	ff 75 e0	 push	 DWORD PTR _rb$1$[ebp]
; Line 930
  00a30	e9 4c fe ff ff	 jmp	 $LN487@luaV_execu
$LN115@luaV_execu:
; Line 933
  00a35	8b ca		 mov	 ecx, edx
  00a37	c1 e9 17	 shr	 ecx, 23			; 00000017H
  00a3a	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  00a40	74 0b		 je	 SHORT $LN270@luaV_execu
  00a42	0f b6 c9	 movzx	 ecx, cl
  00a45	c1 e1 04	 shl	 ecx, 4
  00a48	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  00a4b	eb 05		 jmp	 SHORT $LN510@luaV_execu
$LN270@luaV_execu:
  00a4d	c1 e1 04	 shl	 ecx, 4
  00a50	03 c8		 add	 ecx, eax
$LN510@luaV_execu:
; Line 934
  00a52	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  00a55	89 4d f4	 mov	 DWORD PTR _rb$1$[ebp], ecx
  00a58	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  00a5e	74 0b		 je	 SHORT $LN272@luaV_execu
  00a60	0f b6 d2	 movzx	 edx, dl
  00a63	c1 e2 04	 shl	 edx, 4
  00a66	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  00a69	eb 0b		 jmp	 SHORT $LN511@luaV_execu
$LN272@luaV_execu:
  00a6b	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  00a71	c1 e2 04	 shl	 edx, 4
  00a74	03 d0		 add	 edx, eax
$LN511@luaV_execu:
; Line 936
  00a76	83 79 08 13	 cmp	 DWORD PTR [ecx+8], 19	; 00000013H
  00a7a	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  00a7d	75 10		 jne	 SHORT $LN274@luaV_execu
  00a7f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00a81	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00a84	89 45 b8	 mov	 DWORD PTR _ib$29[ebp], eax
  00a87	89 4d e8	 mov	 DWORD PTR _ib$2$[ebp], ecx
  00a8a	89 4d bc	 mov	 DWORD PTR _ib$29[ebp+4], ecx
  00a8d	eb 1f		 jmp	 SHORT $LN512@luaV_execu
$LN274@luaV_execu:
  00a8f	6a 00		 push	 0
  00a91	8d 45 b8	 lea	 eax, DWORD PTR _ib$29[ebp]
  00a94	50		 push	 eax
  00a95	51		 push	 ecx
  00a96	e8 00 00 00 00	 call	 _luaV_tointeger
  00a9b	83 c4 0c	 add	 esp, 12			; 0000000cH
  00a9e	85 c0		 test	 eax, eax
  00aa0	74 52		 je	 SHORT $LN114@luaV_execu
  00aa2	8b 45 bc	 mov	 eax, DWORD PTR _ib$29[ebp+4]
  00aa5	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
  00aa8	89 45 e8	 mov	 DWORD PTR _ib$2$[ebp], eax
  00aab	8b 45 b8	 mov	 eax, DWORD PTR _ib$29[ebp]
$LN512@luaV_execu:
  00aae	83 7a 08 13	 cmp	 DWORD PTR [edx+8], 19	; 00000013H
  00ab2	89 45 e0	 mov	 DWORD PTR _ib$1$[ebp], eax
  00ab5	75 0d		 jne	 SHORT $LN276@luaV_execu
  00ab7	8b 02		 mov	 eax, DWORD PTR [edx]
  00ab9	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00abc	89 45 98	 mov	 DWORD PTR _ic$25[ebp], eax
  00abf	89 4d 9c	 mov	 DWORD PTR _ic$25[ebp+4], ecx
  00ac2	eb 19		 jmp	 SHORT $LN432@luaV_execu
$LN276@luaV_execu:
  00ac4	6a 00		 push	 0
  00ac6	8d 45 98	 lea	 eax, DWORD PTR _ic$25[ebp]
  00ac9	50		 push	 eax
  00aca	52		 push	 edx
  00acb	e8 00 00 00 00	 call	 _luaV_tointeger
  00ad0	83 c4 0c	 add	 esp, 12			; 0000000cH
  00ad3	85 c0		 test	 eax, eax
  00ad5	74 1d		 je	 SHORT $LN114@luaV_execu
  00ad7	8b 4d 9c	 mov	 ecx, DWORD PTR _ic$25[ebp+4]
  00ada	8b 45 98	 mov	 eax, DWORD PTR _ic$25[ebp]
$LN432@luaV_execu:
; Line 937
  00add	0b 45 e0	 or	 eax, DWORD PTR _ib$1$[ebp]
  00ae0	0b 4d e8	 or	 ecx, DWORD PTR _ib$2$[ebp]
  00ae3	89 07		 mov	 DWORD PTR [edi], eax
  00ae5	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
  00ae8	c7 47 08 13 00
	00 00		 mov	 DWORD PTR [edi+8], 19	; 00000013H
  00aef	e9 40 f5 ff ff	 jmp	 $LN462@luaV_execu
$LN114@luaV_execu:
; Line 939
  00af4	6a 0e		 push	 14			; 0000000eH
; Line 940
  00af6	e9 59 fb ff ff	 jmp	 $LN484@luaV_execu
$LN112@luaV_execu:
; Line 943
  00afb	8b ca		 mov	 ecx, edx
  00afd	c1 e9 17	 shr	 ecx, 23			; 00000017H
  00b00	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  00b06	74 0b		 je	 SHORT $LN278@luaV_execu
  00b08	0f b6 c9	 movzx	 ecx, cl
  00b0b	c1 e1 04	 shl	 ecx, 4
  00b0e	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  00b11	eb 05		 jmp	 SHORT $LN513@luaV_execu
$LN278@luaV_execu:
  00b13	c1 e1 04	 shl	 ecx, 4
  00b16	03 c8		 add	 ecx, eax
$LN513@luaV_execu:
; Line 944
  00b18	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  00b1b	89 4d f4	 mov	 DWORD PTR _rb$1$[ebp], ecx
  00b1e	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  00b24	74 0b		 je	 SHORT $LN280@luaV_execu
  00b26	0f b6 d2	 movzx	 edx, dl
  00b29	c1 e2 04	 shl	 edx, 4
  00b2c	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  00b2f	eb 0b		 jmp	 SHORT $LN514@luaV_execu
$LN280@luaV_execu:
  00b31	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  00b37	c1 e2 04	 shl	 edx, 4
  00b3a	03 d0		 add	 edx, eax
$LN514@luaV_execu:
; Line 946
  00b3c	83 79 08 13	 cmp	 DWORD PTR [ecx+8], 19	; 00000013H
  00b40	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  00b43	75 10		 jne	 SHORT $LN282@luaV_execu
  00b45	8b 01		 mov	 eax, DWORD PTR [ecx]
  00b47	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00b4a	89 45 a8	 mov	 DWORD PTR _ib$27[ebp], eax
  00b4d	89 4d e8	 mov	 DWORD PTR _ib$2$[ebp], ecx
  00b50	89 4d ac	 mov	 DWORD PTR _ib$27[ebp+4], ecx
  00b53	eb 1f		 jmp	 SHORT $LN515@luaV_execu
$LN282@luaV_execu:
  00b55	6a 00		 push	 0
  00b57	8d 45 a8	 lea	 eax, DWORD PTR _ib$27[ebp]
  00b5a	50		 push	 eax
  00b5b	51		 push	 ecx
  00b5c	e8 00 00 00 00	 call	 _luaV_tointeger
  00b61	83 c4 0c	 add	 esp, 12			; 0000000cH
  00b64	85 c0		 test	 eax, eax
  00b66	74 52		 je	 SHORT $LN111@luaV_execu
  00b68	8b 45 ac	 mov	 eax, DWORD PTR _ib$27[ebp+4]
  00b6b	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
  00b6e	89 45 e8	 mov	 DWORD PTR _ib$2$[ebp], eax
  00b71	8b 45 a8	 mov	 eax, DWORD PTR _ib$27[ebp]
$LN515@luaV_execu:
  00b74	83 7a 08 13	 cmp	 DWORD PTR [edx+8], 19	; 00000013H
  00b78	89 45 e0	 mov	 DWORD PTR _ib$1$[ebp], eax
  00b7b	75 0d		 jne	 SHORT $LN284@luaV_execu
  00b7d	8b 02		 mov	 eax, DWORD PTR [edx]
  00b7f	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00b82	89 45 c8	 mov	 DWORD PTR _ic$31[ebp], eax
  00b85	89 4d cc	 mov	 DWORD PTR _ic$31[ebp+4], ecx
  00b88	eb 19		 jmp	 SHORT $LN434@luaV_execu
$LN284@luaV_execu:
  00b8a	6a 00		 push	 0
  00b8c	8d 45 c8	 lea	 eax, DWORD PTR _ic$31[ebp]
  00b8f	50		 push	 eax
  00b90	52		 push	 edx
  00b91	e8 00 00 00 00	 call	 _luaV_tointeger
  00b96	83 c4 0c	 add	 esp, 12			; 0000000cH
  00b99	85 c0		 test	 eax, eax
  00b9b	74 1d		 je	 SHORT $LN111@luaV_execu
  00b9d	8b 4d cc	 mov	 ecx, DWORD PTR _ic$31[ebp+4]
  00ba0	8b 45 c8	 mov	 eax, DWORD PTR _ic$31[ebp]
$LN434@luaV_execu:
; Line 947
  00ba3	33 45 e0	 xor	 eax, DWORD PTR _ib$1$[ebp]
  00ba6	33 4d e8	 xor	 ecx, DWORD PTR _ib$2$[ebp]
  00ba9	89 07		 mov	 DWORD PTR [edi], eax
  00bab	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
  00bae	c7 47 08 13 00
	00 00		 mov	 DWORD PTR [edi+8], 19	; 00000013H
  00bb5	e9 7a f4 ff ff	 jmp	 $LN462@luaV_execu
$LN111@luaV_execu:
; Line 949
  00bba	6a 0f		 push	 15			; 0000000fH
; Line 950
  00bbc	e9 93 fa ff ff	 jmp	 $LN484@luaV_execu
$LN109@luaV_execu:
; Line 953
  00bc1	8b ca		 mov	 ecx, edx
  00bc3	c1 e9 17	 shr	 ecx, 23			; 00000017H
  00bc6	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  00bcc	74 0b		 je	 SHORT $LN286@luaV_execu
  00bce	0f b6 c9	 movzx	 ecx, cl
  00bd1	c1 e1 04	 shl	 ecx, 4
  00bd4	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  00bd7	eb 05		 jmp	 SHORT $LN516@luaV_execu
$LN286@luaV_execu:
  00bd9	c1 e1 04	 shl	 ecx, 4
  00bdc	03 c8		 add	 ecx, eax
$LN516@luaV_execu:
; Line 954
  00bde	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  00be1	89 4d f4	 mov	 DWORD PTR _rb$1$[ebp], ecx
  00be4	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  00bea	74 0b		 je	 SHORT $LN288@luaV_execu
  00bec	0f b6 d2	 movzx	 edx, dl
  00bef	c1 e2 04	 shl	 edx, 4
  00bf2	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  00bf5	eb 0b		 jmp	 SHORT $LN517@luaV_execu
$LN288@luaV_execu:
  00bf7	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  00bfd	c1 e2 04	 shl	 edx, 4
  00c00	03 d0		 add	 edx, eax
$LN517@luaV_execu:
; Line 956
  00c02	83 79 08 13	 cmp	 DWORD PTR [ecx+8], 19	; 00000013H
  00c06	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  00c09	75 10		 jne	 SHORT $LN290@luaV_execu
  00c0b	8b 01		 mov	 eax, DWORD PTR [ecx]
  00c0d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00c10	89 45 c0	 mov	 DWORD PTR _ib$30[ebp], eax
  00c13	89 4d e0	 mov	 DWORD PTR _ib$2$[ebp], ecx
  00c16	89 4d c4	 mov	 DWORD PTR _ib$30[ebp+4], ecx
  00c19	eb 1f		 jmp	 SHORT $LN518@luaV_execu
$LN290@luaV_execu:
  00c1b	6a 00		 push	 0
  00c1d	8d 45 c0	 lea	 eax, DWORD PTR _ib$30[ebp]
  00c20	50		 push	 eax
  00c21	51		 push	 ecx
  00c22	e8 00 00 00 00	 call	 _luaV_tointeger
  00c27	83 c4 0c	 add	 esp, 12			; 0000000cH
  00c2a	85 c0		 test	 eax, eax
  00c2c	74 5c		 je	 SHORT $LN108@luaV_execu
  00c2e	8b 45 c4	 mov	 eax, DWORD PTR _ib$30[ebp+4]
  00c31	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
  00c34	89 45 e0	 mov	 DWORD PTR _ib$2$[ebp], eax
  00c37	8b 45 c0	 mov	 eax, DWORD PTR _ib$30[ebp]
$LN518@luaV_execu:
  00c3a	83 7a 08 13	 cmp	 DWORD PTR [edx+8], 19	; 00000013H
  00c3e	89 45 e8	 mov	 DWORD PTR _ib$1$[ebp], eax
  00c41	75 0d		 jne	 SHORT $LN292@luaV_execu
  00c43	8b 02		 mov	 eax, DWORD PTR [edx]
  00c45	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00c48	89 45 b0	 mov	 DWORD PTR _ic$28[ebp], eax
  00c4b	89 4d b4	 mov	 DWORD PTR _ic$28[ebp+4], ecx
  00c4e	eb 19		 jmp	 SHORT $LN436@luaV_execu
$LN292@luaV_execu:
  00c50	6a 00		 push	 0
  00c52	8d 45 b0	 lea	 eax, DWORD PTR _ic$28[ebp]
  00c55	50		 push	 eax
  00c56	52		 push	 edx
  00c57	e8 00 00 00 00	 call	 _luaV_tointeger
  00c5c	83 c4 0c	 add	 esp, 12			; 0000000cH
  00c5f	85 c0		 test	 eax, eax
  00c61	74 27		 je	 SHORT $LN108@luaV_execu
  00c63	8b 4d b4	 mov	 ecx, DWORD PTR _ic$28[ebp+4]
  00c66	8b 45 b0	 mov	 eax, DWORD PTR _ic$28[ebp]
$LN436@luaV_execu:
; Line 957
  00c69	51		 push	 ecx
  00c6a	50		 push	 eax
$LN478@luaV_execu:
  00c6b	ff 75 e0	 push	 DWORD PTR _ib$2$[ebp]
  00c6e	ff 75 e8	 push	 DWORD PTR _ib$1$[ebp]
  00c71	e8 00 00 00 00	 call	 _luaV_shiftl
  00c76	83 c4 10	 add	 esp, 16			; 00000010H
  00c79	89 57 04	 mov	 DWORD PTR [edi+4], edx
  00c7c	89 07		 mov	 DWORD PTR [edi], eax
  00c7e	c7 47 08 13 00
	00 00		 mov	 DWORD PTR [edi+8], 19	; 00000013H
  00c85	e9 aa f3 ff ff	 jmp	 $LN462@luaV_execu
$LN108@luaV_execu:
; Line 959
  00c8a	6a 10		 push	 16			; 00000010H
; Line 960
  00c8c	e9 c3 f9 ff ff	 jmp	 $LN484@luaV_execu
$LN106@luaV_execu:
; Line 963
  00c91	8b ca		 mov	 ecx, edx
  00c93	c1 e9 17	 shr	 ecx, 23			; 00000017H
  00c96	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  00c9c	74 0b		 je	 SHORT $LN294@luaV_execu
  00c9e	0f b6 c9	 movzx	 ecx, cl
  00ca1	c1 e1 04	 shl	 ecx, 4
  00ca4	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  00ca7	eb 05		 jmp	 SHORT $LN519@luaV_execu
$LN294@luaV_execu:
  00ca9	c1 e1 04	 shl	 ecx, 4
  00cac	03 c8		 add	 ecx, eax
$LN519@luaV_execu:
; Line 964
  00cae	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  00cb1	89 4d f4	 mov	 DWORD PTR _rb$1$[ebp], ecx
  00cb4	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  00cba	74 0b		 je	 SHORT $LN296@luaV_execu
  00cbc	0f b6 d2	 movzx	 edx, dl
  00cbf	c1 e2 04	 shl	 edx, 4
  00cc2	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  00cc5	eb 0b		 jmp	 SHORT $LN520@luaV_execu
$LN296@luaV_execu:
  00cc7	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  00ccd	c1 e2 04	 shl	 edx, 4
  00cd0	03 d0		 add	 edx, eax
$LN520@luaV_execu:
; Line 966
  00cd2	83 79 08 13	 cmp	 DWORD PTR [ecx+8], 19	; 00000013H
  00cd6	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  00cd9	75 10		 jne	 SHORT $LN298@luaV_execu
  00cdb	8b 01		 mov	 eax, DWORD PTR [ecx]
  00cdd	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00ce0	89 45 a0	 mov	 DWORD PTR _ib$26[ebp], eax
  00ce3	89 4d e0	 mov	 DWORD PTR _ib$2$[ebp], ecx
  00ce6	89 4d a4	 mov	 DWORD PTR _ib$26[ebp+4], ecx
  00ce9	eb 1f		 jmp	 SHORT $LN521@luaV_execu
$LN298@luaV_execu:
  00ceb	6a 00		 push	 0
  00ced	8d 45 a0	 lea	 eax, DWORD PTR _ib$26[ebp]
  00cf0	50		 push	 eax
  00cf1	51		 push	 ecx
  00cf2	e8 00 00 00 00	 call	 _luaV_tointeger
  00cf7	83 c4 0c	 add	 esp, 12			; 0000000cH
  00cfa	85 c0		 test	 eax, eax
  00cfc	74 55		 je	 SHORT $LN105@luaV_execu
  00cfe	8b 45 a4	 mov	 eax, DWORD PTR _ib$26[ebp+4]
  00d01	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
  00d04	89 45 e0	 mov	 DWORD PTR _ib$2$[ebp], eax
  00d07	8b 45 a0	 mov	 eax, DWORD PTR _ib$26[ebp]
$LN521@luaV_execu:
  00d0a	83 7a 08 13	 cmp	 DWORD PTR [edx+8], 19	; 00000013H
  00d0e	89 45 e8	 mov	 DWORD PTR _ib$1$[ebp], eax
  00d11	75 19		 jne	 SHORT $LN300@luaV_execu
  00d13	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00d15	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00d18	89 4d 90	 mov	 DWORD PTR _ic$24[ebp], ecx
; Line 967
  00d1b	f7 d9		 neg	 ecx
  00d1d	89 45 94	 mov	 DWORD PTR _ic$24[ebp+4], eax
  00d20	83 d0 00	 adc	 eax, 0
  00d23	f7 d8		 neg	 eax
  00d25	50		 push	 eax
  00d26	51		 push	 ecx
  00d27	e9 3f ff ff ff	 jmp	 $LN478@luaV_execu
$LN300@luaV_execu:
; Line 966
  00d2c	6a 00		 push	 0
  00d2e	8d 45 90	 lea	 eax, DWORD PTR _ic$24[ebp]
  00d31	50		 push	 eax
  00d32	52		 push	 edx
  00d33	e8 00 00 00 00	 call	 _luaV_tointeger
  00d38	83 c4 0c	 add	 esp, 12			; 0000000cH
  00d3b	85 c0		 test	 eax, eax
  00d3d	74 14		 je	 SHORT $LN105@luaV_execu
  00d3f	8b 4d 90	 mov	 ecx, DWORD PTR _ic$24[ebp]
  00d42	8b 45 94	 mov	 eax, DWORD PTR _ic$24[ebp+4]
; Line 967
  00d45	f7 d9		 neg	 ecx
  00d47	83 d0 00	 adc	 eax, 0
  00d4a	f7 d8		 neg	 eax
  00d4c	50		 push	 eax
  00d4d	51		 push	 ecx
  00d4e	e9 18 ff ff ff	 jmp	 $LN478@luaV_execu
$LN105@luaV_execu:
; Line 969
  00d53	6a 11		 push	 17			; 00000011H
; Line 970
  00d55	e9 fa f8 ff ff	 jmp	 $LN484@luaV_execu
$LN103@luaV_execu:
; Line 973
  00d5a	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00d5d	8b ca		 mov	 ecx, edx
  00d5f	c1 e9 17	 shr	 ecx, 23			; 00000017H
  00d62	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  00d68	74 0b		 je	 SHORT $LN302@luaV_execu
  00d6a	0f b6 c9	 movzx	 ecx, cl
  00d6d	c1 e1 04	 shl	 ecx, 4
  00d70	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  00d73	eb 05		 jmp	 SHORT $LN522@luaV_execu
$LN302@luaV_execu:
  00d75	c1 e1 04	 shl	 ecx, 4
  00d78	03 c8		 add	 ecx, eax
$LN522@luaV_execu:
; Line 974
  00d7a	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  00d7d	89 4d e0	 mov	 DWORD PTR _rb$1$[ebp], ecx
  00d80	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  00d86	74 0b		 je	 SHORT $LN304@luaV_execu
  00d88	0f b6 d2	 movzx	 edx, dl
  00d8b	c1 e2 04	 shl	 edx, 4
  00d8e	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  00d91	eb 0b		 jmp	 SHORT $LN523@luaV_execu
$LN304@luaV_execu:
  00d93	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  00d99	c1 e2 04	 shl	 edx, 4
  00d9c	03 d0		 add	 edx, eax
$LN523@luaV_execu:
; Line 976
  00d9e	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00da1	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  00da4	83 f8 13	 cmp	 eax, 19			; 00000013H
  00da7	75 29		 jne	 SHORT $LN102@luaV_execu
  00da9	39 42 08	 cmp	 DWORD PTR [edx+8], eax
  00dac	75 24		 jne	 SHORT $LN102@luaV_execu
; Line 978
  00dae	ff 72 04	 push	 DWORD PTR [edx+4]
  00db1	ff 32		 push	 DWORD PTR [edx]
  00db3	ff 71 04	 push	 DWORD PTR [ecx+4]
  00db6	ff 31		 push	 DWORD PTR [ecx]
  00db8	56		 push	 esi
  00db9	e8 00 00 00 00	 call	 _luaV_mod
  00dbe	83 c4 14	 add	 esp, 20			; 00000014H
  00dc1	89 57 04	 mov	 DWORD PTR [edi+4], edx
  00dc4	89 07		 mov	 DWORD PTR [edi], eax
  00dc6	c7 47 08 13 00
	00 00		 mov	 DWORD PTR [edi+8], 19	; 00000013H
  00dcd	e9 62 f2 ff ff	 jmp	 $LN462@luaV_execu
$LN102@luaV_execu:
; Line 980
  00dd2	83 f8 03	 cmp	 eax, 3
  00dd5	75 0e		 jne	 SHORT $LN306@luaV_execu
  00dd7	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  00ddb	f2 0f 11 85 fc
	fe ff ff	 movsd	 QWORD PTR _nb$5[ebp], xmm0
  00de3	eb 17		 jmp	 SHORT $LN439@luaV_execu
$LN306@luaV_execu:
  00de5	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _nb$5[ebp]
  00deb	50		 push	 eax
  00dec	51		 push	 ecx
  00ded	e8 00 00 00 00	 call	 _luaV_tonumber_
  00df2	83 c4 08	 add	 esp, 8
  00df5	85 c0		 test	 eax, eax
  00df7	74 7b		 je	 SHORT $LN100@luaV_execu
  00df9	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
$LN439@luaV_execu:
  00dfc	83 7a 08 03	 cmp	 DWORD PTR [edx+8], 3
  00e00	75 0e		 jne	 SHORT $LN308@luaV_execu
  00e02	f2 0f 10 02	 movsd	 xmm0, QWORD PTR [edx]
  00e06	f2 0f 11 85 78
	ff ff ff	 movsd	 QWORD PTR _nc$21[ebp], xmm0
  00e0e	eb 1c		 jmp	 SHORT $LN524@luaV_execu
$LN308@luaV_execu:
  00e10	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _nc$21[ebp]
  00e16	50		 push	 eax
  00e17	52		 push	 edx
  00e18	e8 00 00 00 00	 call	 _luaV_tonumber_
  00e1d	83 c4 08	 add	 esp, 8
  00e20	85 c0		 test	 eax, eax
  00e22	74 50		 je	 SHORT $LN100@luaV_execu
  00e24	f2 0f 10 85 78
	ff ff ff	 movsd	 xmm0, QWORD PTR _nc$21[ebp]
$LN524@luaV_execu:
; Line 982
  00e2c	dd 85 fc fe ff
	ff		 fld	 QWORD PTR _nb$5[ebp]
  00e32	dd 85 78 ff ff
	ff		 fld	 QWORD PTR _nc$21[ebp]
  00e38	f2 0f 11 45 dc	 movsd	 QWORD PTR _nc$1$[ebp], xmm0
  00e3d	e8 00 00 00 00	 call	 __CIfmod
  00e42	f2 0f 10 55 dc	 movsd	 xmm2, QWORD PTR _nc$1$[ebp]
  00e47	0f 57 db	 xorps	 xmm3, xmm3
  00e4a	dd 5d e4	 fstp	 QWORD PTR _m$33[ebp]
  00e4d	f2 0f 10 4d e4	 movsd	 xmm1, QWORD PTR _m$33[ebp]
  00e52	66 0f 28 c1	 movapd	 xmm0, xmm1
  00e56	f2 0f 59 c2	 mulsd	 xmm0, xmm2
  00e5a	66 0f 2f d8	 comisd	 xmm3, xmm0
  00e5e	76 04		 jbe	 SHORT $LN99@luaV_execu
  00e60	f2 0f 58 ca	 addsd	 xmm1, xmm2
$LN99@luaV_execu:
; Line 983
  00e64	f2 0f 11 0f	 movsd	 QWORD PTR [edi], xmm1
  00e68	c7 47 08 03 00
	00 00		 mov	 DWORD PTR [edi+8], 3
  00e6f	e9 c0 f1 ff ff	 jmp	 $LN462@luaV_execu
$LN100@luaV_execu:
; Line 985
  00e74	8b 75 fc	 mov	 esi, DWORD PTR _b$1$[ebp]
  00e77	6a 09		 push	 9
  00e79	57		 push	 edi
  00e7a	56		 push	 esi
  00e7b	ff 75 e0	 push	 DWORD PTR _rb$1$[ebp]
; Line 986
  00e7e	e9 d9 f7 ff ff	 jmp	 $LN485@luaV_execu
$LN97@luaV_execu:
; Line 989
  00e83	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00e86	8b ca		 mov	 ecx, edx
  00e88	c1 e9 17	 shr	 ecx, 23			; 00000017H
  00e8b	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  00e91	74 0b		 je	 SHORT $LN310@luaV_execu
  00e93	0f b6 c9	 movzx	 ecx, cl
  00e96	c1 e1 04	 shl	 ecx, 4
  00e99	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  00e9c	eb 05		 jmp	 SHORT $LN525@luaV_execu
$LN310@luaV_execu:
  00e9e	c1 e1 04	 shl	 ecx, 4
  00ea1	03 c8		 add	 ecx, eax
$LN525@luaV_execu:
; Line 990
  00ea3	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  00ea6	89 4d e0	 mov	 DWORD PTR _rb$1$[ebp], ecx
  00ea9	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  00eaf	74 0b		 je	 SHORT $LN312@luaV_execu
  00eb1	0f b6 d2	 movzx	 edx, dl
  00eb4	c1 e2 04	 shl	 edx, 4
  00eb7	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  00eba	eb 0b		 jmp	 SHORT $LN526@luaV_execu
$LN312@luaV_execu:
  00ebc	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  00ec2	c1 e2 04	 shl	 edx, 4
  00ec5	03 d0		 add	 edx, eax
$LN526@luaV_execu:
; Line 992
  00ec7	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00eca	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  00ecd	83 f8 13	 cmp	 eax, 19			; 00000013H
  00ed0	75 29		 jne	 SHORT $LN96@luaV_execu
  00ed2	39 42 08	 cmp	 DWORD PTR [edx+8], eax
  00ed5	75 24		 jne	 SHORT $LN96@luaV_execu
; Line 994
  00ed7	ff 72 04	 push	 DWORD PTR [edx+4]
  00eda	ff 32		 push	 DWORD PTR [edx]
  00edc	ff 71 04	 push	 DWORD PTR [ecx+4]
  00edf	ff 31		 push	 DWORD PTR [ecx]
  00ee1	56		 push	 esi
  00ee2	e8 00 00 00 00	 call	 _luaV_div
  00ee7	83 c4 14	 add	 esp, 20			; 00000014H
  00eea	89 57 04	 mov	 DWORD PTR [edi+4], edx
  00eed	89 07		 mov	 DWORD PTR [edi], eax
  00eef	c7 47 08 13 00
	00 00		 mov	 DWORD PTR [edi+8], 19	; 00000013H
  00ef6	e9 39 f1 ff ff	 jmp	 $LN462@luaV_execu
$LN96@luaV_execu:
; Line 996
  00efb	83 f8 03	 cmp	 eax, 3
  00efe	75 0e		 jne	 SHORT $LN314@luaV_execu
  00f00	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  00f04	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR _nb$19[ebp], xmm0
  00f0c	eb 1f		 jmp	 SHORT $LN527@luaV_execu
$LN314@luaV_execu:
  00f0e	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _nb$19[ebp]
  00f14	50		 push	 eax
  00f15	51		 push	 ecx
  00f16	e8 00 00 00 00	 call	 _luaV_tonumber_
  00f1b	83 c4 08	 add	 esp, 8
  00f1e	85 c0		 test	 eax, eax
  00f20	74 73		 je	 SHORT $LN94@luaV_execu
  00f22	f2 0f 10 85 6c
	ff ff ff	 movsd	 xmm0, QWORD PTR _nb$19[ebp]
  00f2a	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
$LN527@luaV_execu:
  00f2d	83 7a 08 03	 cmp	 DWORD PTR [edx+8], 3
  00f31	f2 0f 11 45 e4	 movsd	 QWORD PTR _nb$1$[ebp], xmm0
  00f36	75 0e		 jne	 SHORT $LN316@luaV_execu
  00f38	f2 0f 10 0a	 movsd	 xmm1, QWORD PTR [edx]
  00f3c	f2 0f 11 8d 64
	ff ff ff	 movsd	 QWORD PTR _nc$18[ebp], xmm1
  00f44	eb 1c		 jmp	 SHORT $LN442@luaV_execu
$LN316@luaV_execu:
  00f46	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _nc$18[ebp]
  00f4c	50		 push	 eax
  00f4d	52		 push	 edx
  00f4e	e8 00 00 00 00	 call	 _luaV_tonumber_
  00f53	83 c4 08	 add	 esp, 8
  00f56	85 c0		 test	 eax, eax
  00f58	74 3b		 je	 SHORT $LN94@luaV_execu
  00f5a	f2 0f 10 8d 64
	ff ff ff	 movsd	 xmm1, QWORD PTR _nc$18[ebp]
$LN442@luaV_execu:
; Line 997
  00f62	f2 0f 10 45 e4	 movsd	 xmm0, QWORD PTR _nb$1$[ebp]
  00f67	83 ec 08	 sub	 esp, 8
  00f6a	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00f6e	f2 0f 11 85 d4
	fe ff ff	 movsd	 QWORD PTR tv4154[ebp], xmm0
  00f76	dd 85 d4 fe ff
	ff		 fld	 QWORD PTR tv4154[ebp]
  00f7c	dd 1c 24	 fstp	 QWORD PTR [esp]
  00f7f	e8 00 00 00 00	 call	 _floor
  00f84	dd 1f		 fstp	 QWORD PTR [edi]
  00f86	83 c4 08	 add	 esp, 8
  00f89	c7 47 08 03 00
	00 00		 mov	 DWORD PTR [edi+8], 3
  00f90	e9 9f f0 ff ff	 jmp	 $LN462@luaV_execu
$LN94@luaV_execu:
; Line 999
  00f95	8b 75 fc	 mov	 esi, DWORD PTR _b$1$[ebp]
  00f98	6a 0c		 push	 12			; 0000000cH
  00f9a	57		 push	 edi
  00f9b	56		 push	 esi
  00f9c	ff 75 e0	 push	 DWORD PTR _rb$1$[ebp]
; Line 1000
  00f9f	e9 b8 f6 ff ff	 jmp	 $LN485@luaV_execu
$LN92@luaV_execu:
; Line 1003
  00fa4	8b ca		 mov	 ecx, edx
  00fa6	c1 e9 17	 shr	 ecx, 23			; 00000017H
  00fa9	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  00faf	74 0b		 je	 SHORT $LN318@luaV_execu
  00fb1	0f b6 c9	 movzx	 ecx, cl
  00fb4	c1 e1 04	 shl	 ecx, 4
  00fb7	03 4d f0	 add	 ecx, DWORD PTR _k$1$[ebp]
  00fba	eb 05		 jmp	 SHORT $LN528@luaV_execu
$LN318@luaV_execu:
  00fbc	c1 e1 04	 shl	 ecx, 4
  00fbf	03 c8		 add	 ecx, eax
$LN528@luaV_execu:
; Line 1004
  00fc1	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  00fc4	89 4d e0	 mov	 DWORD PTR _rb$1$[ebp], ecx
  00fc7	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  00fcd	74 0b		 je	 SHORT $LN320@luaV_execu
  00fcf	0f b6 d2	 movzx	 edx, dl
  00fd2	c1 e2 04	 shl	 edx, 4
  00fd5	03 55 f0	 add	 edx, DWORD PTR _k$1$[ebp]
  00fd8	eb 0b		 jmp	 SHORT $LN529@luaV_execu
$LN320@luaV_execu:
  00fda	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  00fe0	c1 e2 04	 shl	 edx, 4
  00fe3	03 d0		 add	 edx, eax
$LN529@luaV_execu:
; Line 1006
  00fe5	83 79 08 03	 cmp	 DWORD PTR [ecx+8], 3
  00fe9	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  00fec	75 0e		 jne	 SHORT $LN322@luaV_execu
  00fee	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  00ff2	f2 0f 11 85 54
	ff ff ff	 movsd	 QWORD PTR _nb$16[ebp], xmm0
  00ffa	eb 1f		 jmp	 SHORT $LN530@luaV_execu
$LN322@luaV_execu:
  00ffc	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _nb$16[ebp]
  01002	50		 push	 eax
  01003	51		 push	 ecx
  01004	e8 00 00 00 00	 call	 _luaV_tonumber_
  01009	83 c4 08	 add	 esp, 8
  0100c	85 c0		 test	 eax, eax
  0100e	74 5a		 je	 SHORT $LN91@luaV_execu
  01010	f2 0f 10 85 54
	ff ff ff	 movsd	 xmm0, QWORD PTR _nb$16[ebp]
  01018	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
$LN530@luaV_execu:
  0101b	83 7a 08 03	 cmp	 DWORD PTR [edx+8], 3
  0101f	f2 0f 11 45 e4	 movsd	 QWORD PTR _nb$1$[ebp], xmm0
  01024	75 0e		 jne	 SHORT $LN324@luaV_execu
  01026	f2 0f 10 0a	 movsd	 xmm1, QWORD PTR [edx]
  0102a	f2 0f 11 8d 44
	ff ff ff	 movsd	 QWORD PTR _nc$14[ebp], xmm1
  01032	eb 1c		 jmp	 SHORT $LN444@luaV_execu
$LN324@luaV_execu:
  01034	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _nc$14[ebp]
  0103a	50		 push	 eax
  0103b	52		 push	 edx
  0103c	e8 00 00 00 00	 call	 _luaV_tonumber_
  01041	83 c4 08	 add	 esp, 8
  01044	85 c0		 test	 eax, eax
  01046	74 22		 je	 SHORT $LN91@luaV_execu
  01048	f2 0f 10 8d 44
	ff ff ff	 movsd	 xmm1, QWORD PTR _nc$14[ebp]
$LN444@luaV_execu:
; Line 1007
  01050	f2 0f 10 45 e4	 movsd	 xmm0, QWORD PTR _nb$1$[ebp]
  01055	e8 00 00 00 00	 call	 __libm_sse2_pow_precise
  0105a	f2 0f 11 07	 movsd	 QWORD PTR [edi], xmm0
  0105e	c7 47 08 03 00
	00 00		 mov	 DWORD PTR [edi+8], 3
  01065	e9 ca ef ff ff	 jmp	 $LN462@luaV_execu
$LN91@luaV_execu:
; Line 1009
  0106a	8b 75 fc	 mov	 esi, DWORD PTR _b$1$[ebp]
  0106d	6a 0a		 push	 10			; 0000000aH
  0106f	57		 push	 edi
  01070	56		 push	 esi
  01071	ff 75 e0	 push	 DWORD PTR _rb$1$[ebp]
; Line 1010
  01074	e9 e3 f5 ff ff	 jmp	 $LN485@luaV_execu
$LN89@luaV_execu:
; Line 1013
  01079	c1 ea 17	 shr	 edx, 23			; 00000017H
  0107c	c1 e2 04	 shl	 edx, 4
  0107f	03 d0		 add	 edx, eax
  01081	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
; Line 1015
  01084	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  01087	83 f8 13	 cmp	 eax, 19			; 00000013H
  0108a	75 1d		 jne	 SHORT $LN88@luaV_execu
; Line 1017
  0108c	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0108e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  01091	f7 d9		 neg	 ecx
  01093	89 0f		 mov	 DWORD PTR [edi], ecx
  01095	83 d0 00	 adc	 eax, 0
  01098	c7 47 08 13 00
	00 00		 mov	 DWORD PTR [edi+8], 19	; 00000013H
  0109f	f7 d8		 neg	 eax
  010a1	89 47 04	 mov	 DWORD PTR [edi+4], eax
  010a4	e9 8b ef ff ff	 jmp	 $LN462@luaV_execu
$LN88@luaV_execu:
; Line 1019
  010a9	83 f8 03	 cmp	 eax, 3
  010ac	75 0e		 jne	 SHORT $LN326@luaV_execu
  010ae	f2 0f 10 02	 movsd	 xmm0, QWORD PTR [edx]
  010b2	f2 0f 11 85 34
	ff ff ff	 movsd	 QWORD PTR _nb$12[ebp], xmm0
  010ba	eb 1c		 jmp	 SHORT $LN445@luaV_execu
$LN326@luaV_execu:
  010bc	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _nb$12[ebp]
  010c2	50		 push	 eax
  010c3	52		 push	 edx
  010c4	e8 00 00 00 00	 call	 _luaV_tonumber_
  010c9	83 c4 08	 add	 esp, 8
  010cc	85 c0		 test	 eax, eax
  010ce	74 20		 je	 SHORT $LN86@luaV_execu
  010d0	f2 0f 10 85 34
	ff ff ff	 movsd	 xmm0, QWORD PTR _nb$12[ebp]
$LN445@luaV_execu:
; Line 1020
  010d8	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  010e0	f2 0f 11 07	 movsd	 QWORD PTR [edi], xmm0
  010e4	c7 47 08 03 00
	00 00		 mov	 DWORD PTR [edi+8], 3
; Line 1022
  010eb	e9 44 ef ff ff	 jmp	 $LN462@luaV_execu
$LN86@luaV_execu:
; Line 1023
  010f0	8b 75 fc	 mov	 esi, DWORD PTR _b$1$[ebp]
  010f3	6a 12		 push	 18			; 00000012H
  010f5	57		 push	 edi
  010f6	56		 push	 esi
  010f7	56		 push	 esi
; Line 1025
  010f8	e9 5f f5 ff ff	 jmp	 $LN485@luaV_execu
$LN84@luaV_execu:
; Line 1028
  010fd	c1 ea 17	 shr	 edx, 23			; 00000017H
  01100	c1 e2 04	 shl	 edx, 4
  01103	03 d0		 add	 edx, eax
  01105	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
; Line 1030
  01108	83 7a 08 13	 cmp	 DWORD PTR [edx+8], 19	; 00000013H
  0110c	75 20		 jne	 SHORT $LN328@luaV_execu
  0110e	8b 02		 mov	 eax, DWORD PTR [edx]
  01110	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  01113	89 45 80	 mov	 DWORD PTR _ib$22[ebp], eax
; Line 1031
  01116	f7 d0		 not	 eax
  01118	89 4d 84	 mov	 DWORD PTR _ib$22[ebp+4], ecx
  0111b	f7 d1		 not	 ecx
  0111d	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
  01120	89 07		 mov	 DWORD PTR [edi], eax
  01122	c7 47 08 13 00
	00 00		 mov	 DWORD PTR [edi+8], 19	; 00000013H
  01129	e9 06 ef ff ff	 jmp	 $LN462@luaV_execu
$LN328@luaV_execu:
; Line 1030
  0112e	6a 00		 push	 0
  01130	8d 45 80	 lea	 eax, DWORD PTR _ib$22[ebp]
  01133	50		 push	 eax
  01134	52		 push	 edx
  01135	e8 00 00 00 00	 call	 _luaV_tointeger
  0113a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0113d	85 c0		 test	 eax, eax
  0113f	74 1b		 je	 SHORT $LN83@luaV_execu
  01141	8b 4d 84	 mov	 ecx, DWORD PTR _ib$22[ebp+4]
  01144	8b 45 80	 mov	 eax, DWORD PTR _ib$22[ebp]
; Line 1031
  01147	f7 d1		 not	 ecx
  01149	f7 d0		 not	 eax
  0114b	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
  0114e	89 07		 mov	 DWORD PTR [edi], eax
  01150	c7 47 08 13 00
	00 00		 mov	 DWORD PTR [edi+8], 19	; 00000013H
  01157	e9 d8 ee ff ff	 jmp	 $LN462@luaV_execu
$LN83@luaV_execu:
; Line 1034
  0115c	8b 75 fc	 mov	 esi, DWORD PTR _b$1$[ebp]
  0115f	6a 13		 push	 19			; 00000013H
  01161	57		 push	 edi
  01162	56		 push	 esi
  01163	56		 push	 esi
; Line 1036
  01164	e9 f3 f4 ff ff	 jmp	 $LN485@luaV_execu
$LN81@luaV_execu:
; Line 1039
  01169	c1 ea 17	 shr	 edx, 23			; 00000017H
  0116c	c1 e2 04	 shl	 edx, 4
  0116f	03 d0		 add	 edx, eax
; Line 1040
  01171	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  01174	85 c0		 test	 eax, eax
  01176	74 1a		 je	 SHORT $LN331@luaV_execu
  01178	83 f8 01	 cmp	 eax, 1
  0117b	75 05		 jne	 SHORT $LN330@luaV_execu
  0117d	83 3a 00	 cmp	 DWORD PTR [edx], 0
  01180	74 10		 je	 SHORT $LN331@luaV_execu
$LN330@luaV_execu:
  01182	33 c0		 xor	 eax, eax
; Line 1041
  01184	c7 47 08 01 00
	00 00		 mov	 DWORD PTR [edi+8], 1
  0118b	89 07		 mov	 DWORD PTR [edi], eax
; Line 1042
  0118d	e9 a5 ee ff ff	 jmp	 $LL169@luaV_execu
$LN331@luaV_execu:
; Line 1040
  01192	b8 01 00 00 00	 mov	 eax, 1
; Line 1041
  01197	89 07		 mov	 DWORD PTR [edi], eax
  01199	89 47 08	 mov	 DWORD PTR [edi+8], eax
; Line 1042
  0119c	e9 96 ee ff ff	 jmp	 $LL169@luaV_execu
$LN80@luaV_execu:
; Line 1045
  011a1	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  011a4	c1 ea 17	 shr	 edx, 23			; 00000017H
  011a7	c1 e2 04	 shl	 edx, 4
  011aa	03 d0		 add	 edx, eax
  011ac	52		 push	 edx
  011ad	57		 push	 edi
  011ae	56		 push	 esi
  011af	e8 00 00 00 00	 call	 _luaV_objlen
  011b4	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  011b7	83 c4 0c	 add	 esp, 12			; 0000000cH
  011ba	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  011bd	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
  011c0	e9 72 ee ff ff	 jmp	 $LL169@luaV_execu
$LN79@luaV_execu:
; Line 1052
  011c5	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  011c8	8b ca		 mov	 ecx, edx
  011ca	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  011cd	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  011d3	c1 e9 17	 shr	 ecx, 23			; 00000017H
  011d6	89 4d e8	 mov	 DWORD PTR _rb$1$[ebp], ecx
  011d9	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
; Line 1053
  011dc	2b d1		 sub	 edx, ecx
  011de	42		 inc	 edx
  011df	c1 e0 04	 shl	 eax, 4
  011e2	03 45 ec	 add	 eax, DWORD PTR _base$1$[ebp]
  011e5	52		 push	 edx
  011e6	56		 push	 esi
  011e7	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  011ea	e8 00 00 00 00	 call	 _luaV_concat
  011ef	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  011f2	83 c4 08	 add	 esp, 8
; Line 1055
  011f5	8b 55 e8	 mov	 edx, DWORD PTR _rb$1$[ebp]
  011f8	8b 7d e0	 mov	 edi, DWORD PTR tv3922[ebp]
  011fb	c1 e2 04	 shl	 edx, 4
  011fe	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  01201	03 f8		 add	 edi, eax
  01203	03 d0		 add	 edx, eax
  01205	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
; Line 1056
  01208	f3 0f 6f 02	 movdqu	 xmm0, XMMWORD PTR [edx]
  0120c	f3 0f 7f 07	 movdqu	 XMMWORD PTR [edi], xmm0
; Line 1057
  01210	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  01213	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  01217	7e 22		 jle	 SHORT $LN78@luaV_execu
  01219	3b fa		 cmp	 edi, edx
  0121b	72 03		 jb	 SHORT $LN333@luaV_execu
  0121d	8d 57 10	 lea	 edx, DWORD PTR [edi+16]
$LN333@luaV_execu:
  01220	56		 push	 esi
  01221	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  01224	e8 00 00 00 00	 call	 _luaC_step
  01229	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  0122c	83 c4 04	 add	 esp, 4
  0122f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  01232	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  01235	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  01238	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
$LN78@luaV_execu:
; Line 1058
  0123b	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0123e	89 46 0c	 mov	 DWORD PTR [esi+12], eax
; Line 1059
  01241	e9 f1 ed ff ff	 jmp	 $LL169@luaV_execu
$LN77@luaV_execu:
; Line 1062
  01246	8b 7d f4	 mov	 edi, DWORD PTR _a$1$[ebp]
  01249	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0124c	85 ff		 test	 edi, edi
  0124e	74 1b		 je	 SHORT $LN76@luaV_execu
  01250	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  01253	c1 e7 04	 shl	 edi, 4
  01256	83 c7 f0	 add	 edi, -16		; fffffff0H
  01259	03 c7		 add	 eax, edi
  0125b	50		 push	 eax
  0125c	56		 push	 esi
  0125d	e8 00 00 00 00	 call	 _luaF_close
  01262	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
  01265	83 c4 08	 add	 esp, 8
  01268	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
$LN76@luaV_execu:
  0126b	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  0126e	8d 04 95 04 00
	f8 ff		 lea	 eax, DWORD PTR [edx*4-524284]
  01275	01 41 14	 add	 DWORD PTR [ecx+20], eax
; Line 1063
  01278	e9 ba ed ff ff	 jmp	 $LL169@luaV_execu
$LN75@luaV_execu:
; Line 1066
  0127d	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  01280	8b ca		 mov	 ecx, edx
  01282	8b 7d f0	 mov	 edi, DWORD PTR _k$1$[ebp]
  01285	c1 e9 17	 shr	 ecx, 23			; 00000017H
  01288	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  0128e	74 0a		 je	 SHORT $LN335@luaV_execu
  01290	0f b6 c9	 movzx	 ecx, cl
  01293	c1 e1 04	 shl	 ecx, 4
  01296	03 cf		 add	 ecx, edi
  01298	eb 05		 jmp	 SHORT $LN336@luaV_execu
$LN335@luaV_execu:
  0129a	c1 e1 04	 shl	 ecx, 4
  0129d	03 c8		 add	 ecx, eax
$LN336@luaV_execu:
; Line 1067
  0129f	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  012a2	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  012a8	74 0a		 je	 SHORT $LN337@luaV_execu
  012aa	0f b6 d2	 movzx	 edx, dl
  012ad	c1 e2 04	 shl	 edx, 4
  012b0	03 d7		 add	 edx, edi
  012b2	eb 0b		 jmp	 SHORT $LN338@luaV_execu
$LN337@luaV_execu:
  012b4	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  012ba	c1 e2 04	 shl	 edx, 4
  012bd	03 d0		 add	 edx, eax
$LN338@luaV_execu:
; Line 1073
  012bf	52		 push	 edx
  012c0	51		 push	 ecx
  012c1	56		 push	 esi
  012c2	e8 00 00 00 00	 call	 _luaV_equalobj
$LN488@luaV_execu:
  012c7	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  012ca	83 c4 0c	 add	 esp, 12			; 0000000cH
  012cd	3b 45 f4	 cmp	 eax, DWORD PTR _a$1$[ebp]
  012d0	74 0f		 je	 SHORT $LN74@luaV_execu
  012d2	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  012d5	83 41 14 04	 add	 DWORD PTR [ecx+20], 4
  012d9	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
  012dc	e9 56 ed ff ff	 jmp	 $LL169@luaV_execu
$LN74@luaV_execu:
  012e1	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  012e4	8b 38		 mov	 edi, DWORD PTR [eax]
  012e6	8b d7		 mov	 edx, edi
  012e8	c1 ea 06	 shr	 edx, 6
  012eb	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  012f1	74 18		 je	 SHORT $LN72@luaV_execu
  012f3	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  012f6	c1 e2 04	 shl	 edx, 4
  012f9	83 c0 f0	 add	 eax, -16		; fffffff0H
  012fc	03 c2		 add	 eax, edx
  012fe	50		 push	 eax
  012ff	56		 push	 esi
  01300	e8 00 00 00 00	 call	 _luaF_close
  01305	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  01308	83 c4 08	 add	 esp, 8
$LN72@luaV_execu:
  0130b	c1 ef 0e	 shr	 edi, 14			; 0000000eH
  0130e	8d 04 bd 08 00
	f8 ff		 lea	 eax, DWORD PTR [edi*4-524280]
  01315	01 41 14	 add	 DWORD PTR [ecx+20], eax
  01318	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  0131b	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
  0131e	e9 14 ed ff ff	 jmp	 $LL169@luaV_execu
$LN71@luaV_execu:
; Line 1082
  01323	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  01326	8b ca		 mov	 ecx, edx
  01328	8b 7d f0	 mov	 edi, DWORD PTR _k$1$[ebp]
  0132b	c1 e9 0e	 shr	 ecx, 14			; 0000000eH
  0132e	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  01334	74 0a		 je	 SHORT $LN339@luaV_execu
  01336	0f b6 c9	 movzx	 ecx, cl
  01339	c1 e1 04	 shl	 ecx, 4
  0133c	03 cf		 add	 ecx, edi
  0133e	eb 0b		 jmp	 SHORT $LN340@luaV_execu
$LN339@luaV_execu:
  01340	81 e1 ff 01 00
	00		 and	 ecx, 511		; 000001ffH
  01346	c1 e1 04	 shl	 ecx, 4
  01349	03 c8		 add	 ecx, eax
$LN340@luaV_execu:
  0134b	c1 ea 17	 shr	 edx, 23			; 00000017H
  0134e	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  01354	74 15		 je	 SHORT $LN341@luaV_execu
  01356	0f b6 d2	 movzx	 edx, dl
  01359	c1 e2 04	 shl	 edx, 4
  0135c	51		 push	 ecx
  0135d	03 d7		 add	 edx, edi
  0135f	52		 push	 edx
  01360	56		 push	 esi
  01361	e8 00 00 00 00	 call	 _luaV_lessthan
  01366	e9 5c ff ff ff	 jmp	 $LN488@luaV_execu
$LN341@luaV_execu:
  0136b	c1 e2 04	 shl	 edx, 4
  0136e	51		 push	 ecx
  0136f	03 d0		 add	 edx, eax
  01371	52		 push	 edx
  01372	56		 push	 esi
  01373	e8 00 00 00 00	 call	 _luaV_lessthan
  01378	e9 4a ff ff ff	 jmp	 $LN488@luaV_execu
$LN67@luaV_execu:
; Line 1091
  0137d	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  01380	8b ca		 mov	 ecx, edx
  01382	8b 7d f0	 mov	 edi, DWORD PTR _k$1$[ebp]
  01385	c1 e9 0e	 shr	 ecx, 14			; 0000000eH
  01388	f7 c1 00 01 00
	00		 test	 ecx, 256		; 00000100H
  0138e	74 0a		 je	 SHORT $LN343@luaV_execu
  01390	0f b6 c9	 movzx	 ecx, cl
  01393	c1 e1 04	 shl	 ecx, 4
  01396	03 cf		 add	 ecx, edi
  01398	eb 0b		 jmp	 SHORT $LN344@luaV_execu
$LN343@luaV_execu:
  0139a	81 e1 ff 01 00
	00		 and	 ecx, 511		; 000001ffH
  013a0	c1 e1 04	 shl	 ecx, 4
  013a3	03 c8		 add	 ecx, eax
$LN344@luaV_execu:
  013a5	c1 ea 17	 shr	 edx, 23			; 00000017H
  013a8	f7 c2 00 01 00
	00		 test	 edx, 256		; 00000100H
  013ae	74 15		 je	 SHORT $LN345@luaV_execu
  013b0	0f b6 d2	 movzx	 edx, dl
  013b3	c1 e2 04	 shl	 edx, 4
  013b6	51		 push	 ecx
  013b7	03 d7		 add	 edx, edi
  013b9	52		 push	 edx
  013ba	56		 push	 esi
  013bb	e8 00 00 00 00	 call	 _luaV_lessequal
  013c0	e9 02 ff ff ff	 jmp	 $LN488@luaV_execu
$LN345@luaV_execu:
  013c5	c1 e2 04	 shl	 edx, 4
  013c8	51		 push	 ecx
  013c9	03 d0		 add	 edx, eax
  013cb	52		 push	 edx
  013cc	56		 push	 esi
  013cd	e8 00 00 00 00	 call	 _luaV_lessequal
  013d2	e9 f0 fe ff ff	 jmp	 $LN488@luaV_execu
$LN63@luaV_execu:
; Line 1095
  013d7	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  013da	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  013dd	f7 c2 00 c0 7f
	00		 test	 edx, 8372224		; 007fc000H
  013e3	74 10		 je	 SHORT $LN353@luaV_execu
  013e5	85 c0		 test	 eax, eax
  013e7	74 1a		 je	 SHORT $LN447@luaV_execu
  013e9	83 f8 01	 cmp	 eax, 1
  013ec	75 53		 jne	 SHORT $LN62@luaV_execu
  013ee	83 3f 00	 cmp	 DWORD PTR [edi], 0
  013f1	74 10		 je	 SHORT $LN447@luaV_execu
  013f3	eb 4c		 jmp	 SHORT $LN62@luaV_execu
$LN353@luaV_execu:
  013f5	85 c0		 test	 eax, eax
  013f7	74 48		 je	 SHORT $LN62@luaV_execu
  013f9	83 f8 01	 cmp	 eax, 1
  013fc	75 05		 jne	 SHORT $LN447@luaV_execu
  013fe	83 3f 00	 cmp	 DWORD PTR [edi], 0
  01401	74 3e		 je	 SHORT $LN62@luaV_execu
$LN447@luaV_execu:
; Line 1096
  01403	83 41 14 04	 add	 DWORD PTR [ecx+20], 4
; Line 1097
  01407	e9 2b ec ff ff	 jmp	 $LL169@luaV_execu
$LN59@luaV_execu:
; Line 1103
  0140c	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0140f	89 55 fc	 mov	 DWORD PTR _rb$1$[ebp], edx
  01412	c1 6d fc 17	 shr	 DWORD PTR _rb$1$[ebp], 23 ; 00000017H
  01416	c1 65 fc 04	 shl	 DWORD PTR _rb$1$[ebp], 4
  0141a	01 45 fc	 add	 DWORD PTR _rb$1$[ebp], eax
  0141d	f7 c2 00 c0 7f
	00		 test	 edx, 8372224		; 007fc000H
  01423	8b 45 fc	 mov	 eax, DWORD PTR _rb$1$[ebp]
  01426	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  01429	74 52		 je	 SHORT $LN361@luaV_execu
  0142b	85 d2		 test	 edx, edx
  0142d	74 d4		 je	 SHORT $LN447@luaV_execu
  0142f	83 fa 01	 cmp	 edx, 1
  01432	75 05		 jne	 SHORT $LN58@luaV_execu
  01434	83 38 00	 cmp	 DWORD PTR [eax], 0
  01437	74 ca		 je	 SHORT $LN447@luaV_execu
$LN58@luaV_execu:
; Line 1106
  01439	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  0143d	f3 0f 7f 07	 movdqu	 XMMWORD PTR [edi], xmm0
$LN62@luaV_execu:
; Line 1107
  01441	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  01444	8b 38		 mov	 edi, DWORD PTR [eax]
  01446	8b d7		 mov	 edx, edi
  01448	c1 ea 06	 shr	 edx, 6
  0144b	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  01451	74 18		 je	 SHORT $LN60@luaV_execu
  01453	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  01456	c1 e2 04	 shl	 edx, 4
  01459	83 c0 f0	 add	 eax, -16		; fffffff0H
  0145c	03 c2		 add	 eax, edx
  0145e	50		 push	 eax
  0145f	56		 push	 esi
  01460	e8 00 00 00 00	 call	 _luaF_close
  01465	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  01468	83 c4 08	 add	 esp, 8
$LN60@luaV_execu:
  0146b	c1 ef 0e	 shr	 edi, 14			; 0000000eH
  0146e	8d 04 bd 08 00
	f8 ff		 lea	 eax, DWORD PTR [edi*4-524280]
  01475	01 41 14	 add	 DWORD PTR [ecx+20], eax
; Line 1109
  01478	e9 ba eb ff ff	 jmp	 $LL169@luaV_execu
$LN361@luaV_execu:
; Line 1103
  0147d	85 d2		 test	 edx, edx
  0147f	74 b8		 je	 SHORT $LN58@luaV_execu
  01481	83 fa 01	 cmp	 edx, 1
  01484	0f 85 79 ff ff
	ff		 jne	 $LN447@luaV_execu
  0148a	83 38 00	 cmp	 DWORD PTR [eax], 0
  0148d	74 aa		 je	 SHORT $LN58@luaV_execu
; Line 1104
  0148f	83 41 14 04	 add	 DWORD PTR [ecx+20], 4
; Line 1105
  01493	e9 9f eb ff ff	 jmp	 $LL169@luaV_execu
$LN55@luaV_execu:
; Line 1114
  01498	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0149b	8b c2		 mov	 eax, edx
  0149d	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  014a0	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  014a6	c1 e8 17	 shr	 eax, 23			; 00000017H
  014a9	4a		 dec	 edx
  014aa	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  014ad	85 c0		 test	 eax, eax
  014af	74 08		 je	 SHORT $LN54@luaV_execu
  014b1	c1 e0 04	 shl	 eax, 4
  014b4	03 c7		 add	 eax, edi
  014b6	89 46 0c	 mov	 DWORD PTR [esi+12], eax
$LN54@luaV_execu:
; Line 1115
  014b9	52		 push	 edx
  014ba	57		 push	 edi
  014bb	56		 push	 esi
  014bc	e8 00 00 00 00	 call	 _luaD_precall
  014c1	83 c4 0c	 add	 esp, 12			; 0000000cH
  014c4	85 c0		 test	 eax, eax
  014c6	0f 84 c5 05 00
	00		 je	 $LN53@luaV_execu
; Line 1116
  014cc	8b 75 fc	 mov	 esi, DWORD PTR _b$1$[ebp]
  014cf	85 f6		 test	 esi, esi
  014d1	0f 88 ee ec ff
	ff		 js	 $LN477@luaV_execu
; Line 1117
  014d7	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  014da	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  014dd	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  014e0	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  014e3	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  014e6	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
  014e9	e9 49 eb ff ff	 jmp	 $LL169@luaV_execu
$LN50@luaV_execu:
; Line 1128
  014ee	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  014f1	c1 ea 17	 shr	 edx, 23			; 00000017H
  014f4	85 d2		 test	 edx, edx
  014f6	74 08		 je	 SHORT $LN49@luaV_execu
  014f8	c1 e2 04	 shl	 edx, 4
  014fb	03 d7		 add	 edx, edi
  014fd	89 56 0c	 mov	 DWORD PTR [esi+12], edx
$LN49@luaV_execu:
; Line 1130
  01500	6a ff		 push	 -1
  01502	57		 push	 edi
  01503	56		 push	 esi
  01504	e8 00 00 00 00	 call	 _luaD_precall
  01509	83 c4 0c	 add	 esp, 12			; 0000000cH
  0150c	85 c0		 test	 eax, eax
  0150e	0f 85 b1 ec ff
	ff		 jne	 $LN477@luaV_execu
; Line 1135
  01514	8b 56 14	 mov	 edx, DWORD PTR [esi+20]
  01517	89 55 f0	 mov	 DWORD PTR _nci$1$[ebp], edx
; Line 1136
  0151a	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
; Line 1137
  0151d	8b 3a		 mov	 edi, DWORD PTR [edx]
  0151f	89 4d f8	 mov	 DWORD PTR _ci$1$[ebp], ecx
  01522	89 7d e8	 mov	 DWORD PTR _nfunc$1$[ebp], edi
; Line 1138
  01525	8b 01		 mov	 eax, DWORD PTR [ecx]
  01527	89 45 f4	 mov	 DWORD PTR _ofunc$1$[ebp], eax
; Line 1140
  0152a	8b 07		 mov	 eax, DWORD PTR [edi]
  0152c	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0152f	0f b6 40 06	 movzx	 eax, BYTE PTR [eax+6]
  01533	c1 e0 04	 shl	 eax, 4
  01536	03 42 10	 add	 eax, DWORD PTR [edx+16]
  01539	89 45 e0	 mov	 DWORD PTR _lim$1$[ebp], eax
; Line 1143
  0153c	8b 45 d8	 mov	 eax, DWORD PTR _cl$1$[ebp]
  0153f	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  01542	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  01546	7e 0f		 jle	 SHORT $LN46@luaV_execu
  01548	ff 71 10	 push	 DWORD PTR [ecx+16]
  0154b	56		 push	 esi
  0154c	e8 00 00 00 00	 call	 _luaF_close
  01551	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  01554	83 c4 08	 add	 esp, 8
$LN46@luaV_execu:
; Line 1145
  01557	33 d2		 xor	 edx, edx
  01559	3b 7d e0	 cmp	 edi, DWORD PTR _lim$1$[ebp]
  0155c	73 27		 jae	 SHORT $LN43@luaV_execu
  0155e	8b 4d f4	 mov	 ecx, DWORD PTR _ofunc$1$[ebp]
  01561	33 c0		 xor	 eax, eax
  01563	8b f7		 mov	 esi, edi
$LL472@luaV_execu:
; Line 1146
  01565	f3 0f 6f 07	 movdqu	 xmm0, XMMWORD PTR [edi]
  01569	42		 inc	 edx
  0156a	f3 0f 7f 04 08	 movdqu	 XMMWORD PTR [eax+ecx], xmm0
  0156f	8b c2		 mov	 eax, edx
  01571	c1 e0 04	 shl	 eax, 4
  01574	8d 3c 30	 lea	 edi, DWORD PTR [eax+esi]
  01577	3b 7d e0	 cmp	 edi, DWORD PTR _lim$1$[ebp]
  0157a	72 e9		 jb	 SHORT $LL472@luaV_execu
  0157c	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0157f	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  01582	8b 7d e8	 mov	 edi, DWORD PTR _nfunc$1$[ebp]
$LN43@luaV_execu:
; Line 1147
  01585	8b 45 f0	 mov	 eax, DWORD PTR _nci$1$[ebp]
  01588	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0158b	2b c7		 sub	 eax, edi
  0158d	83 e0 f0	 and	 eax, -16		; fffffff0H
  01590	03 45 f4	 add	 eax, DWORD PTR _ofunc$1$[ebp]
  01593	89 41 10	 mov	 DWORD PTR [ecx+16], eax
; Line 1148
  01596	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  01599	2b c7		 sub	 eax, edi
  0159b	83 e0 f0	 and	 eax, -16		; fffffff0H
  0159e	03 45 f4	 add	 eax, DWORD PTR _ofunc$1$[ebp]
  015a1	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  015a4	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 1149
  015a7	8b 45 f0	 mov	 eax, DWORD PTR _nci$1$[ebp]
  015aa	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
; Line 1150
  015ad	80 49 22 20	 or	 BYTE PTR [ecx+34], 32	; 00000020H
  015b1	89 41 14	 mov	 DWORD PTR [ecx+20], eax
; Line 1151
  015b4	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
; Line 1153
  015b7	e9 5c ea ff ff	 jmp	 $newframe$541
$LN39@luaV_execu:
; Line 1172
  015bc	83 7f 08 13	 cmp	 DWORD PTR [edi+8], 19	; 00000013H
  015c0	75 7e		 jne	 SHORT $LN36@luaV_execu
; Line 1174
  015c2	8b 37		 mov	 esi, DWORD PTR [edi]
  015c4	03 77 20	 add	 esi, DWORD PTR [edi+32]
  015c7	8b 47 24	 mov	 eax, DWORD PTR [edi+36]
  015ca	89 75 e8	 mov	 DWORD PTR _idx$1$[ebp], esi
  015cd	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  015d0	13 f0		 adc	 esi, eax
  015d2	89 75 f4	 mov	 DWORD PTR _idx$2$[ebp], esi
; Line 1176
  015d5	85 c0		 test	 eax, eax
  015d7	7c 23		 jl	 SHORT $LN369@luaV_execu
  015d9	7f 06		 jg	 SHORT $LN453@luaV_execu
  015db	83 7f 20 00	 cmp	 DWORD PTR [edi+32], 0
  015df	76 1b		 jbe	 SHORT $LN369@luaV_execu
$LN453@luaV_execu:
  015e1	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  015e4	39 45 f4	 cmp	 DWORD PTR _idx$2$[ebp], eax
  015e7	7c 2d		 jl	 SHORT $LN455@luaV_execu
  015e9	0f 8f 48 ea ff
	ff		 jg	 $LL169@luaV_execu
  015ef	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  015f2	39 45 e8	 cmp	 DWORD PTR _idx$1$[ebp], eax
  015f5	76 1f		 jbe	 SHORT $LN455@luaV_execu
  015f7	e9 3b ea ff ff	 jmp	 $LL169@luaV_execu
$LN369@luaV_execu:
  015fc	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  015ff	3b 45 f4	 cmp	 eax, DWORD PTR _idx$2$[ebp]
  01602	0f 8f 2f ea ff
	ff		 jg	 $LL169@luaV_execu
  01608	7c 0c		 jl	 SHORT $LN455@luaV_execu
  0160a	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0160d	3b 45 e8	 cmp	 eax, DWORD PTR _idx$1$[ebp]
  01610	0f 87 21 ea ff
	ff		 ja	 $LL169@luaV_execu
$LN455@luaV_execu:
; Line 1177
  01616	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  01619	8d 04 95 04 00
	f8 ff		 lea	 eax, DWORD PTR [edx*4-524284]
; Line 1178
  01620	8b 55 f4	 mov	 edx, DWORD PTR _idx$2$[ebp]
  01623	01 41 14	 add	 DWORD PTR [ecx+20], eax
  01626	8b 45 e8	 mov	 eax, DWORD PTR _idx$1$[ebp]
  01629	89 07		 mov	 DWORD PTR [edi], eax
  0162b	89 57 04	 mov	 DWORD PTR [edi+4], edx
; Line 1179
  0162e	89 47 30	 mov	 DWORD PTR [edi+48], eax
  01631	89 57 34	 mov	 DWORD PTR [edi+52], edx
  01634	c7 47 38 13 00
	00 00		 mov	 DWORD PTR [edi+56], 19	; 00000013H
; Line 1182
  0163b	e9 f7 e9 ff ff	 jmp	 $LL169@luaV_execu
$LN36@luaV_execu:
; Line 1183
  01640	f2 0f 10 47 20	 movsd	 xmm0, QWORD PTR [edi+32]
; Line 1187
  01645	33 c0		 xor	 eax, eax
  01647	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0164f	f2 0f 10 57 10	 movsd	 xmm2, QWORD PTR [edi+16]
  01654	66 0f 28 c8	 movapd	 xmm1, xmm0
  01658	f2 0f 58 0f	 addsd	 xmm1, QWORD PTR [edi]
  0165c	76 06		 jbe	 SHORT $LN371@luaV_execu
  0165e	66 0f 2f d1	 comisd	 xmm2, xmm1
  01662	eb 04		 jmp	 SHORT $LN532@luaV_execu
$LN371@luaV_execu:
  01664	66 0f 2f ca	 comisd	 xmm1, xmm2
$LN532@luaV_execu:
  01668	0f 93 c0	 setae	 al
  0166b	85 c0		 test	 eax, eax
  0166d	0f 84 c4 e9 ff
	ff		 je	 $LL169@luaV_execu
; Line 1188
  01673	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  01676	8d 04 95 04 00
	f8 ff		 lea	 eax, DWORD PTR [edx*4-524284]
  0167d	01 41 14	 add	 DWORD PTR [ecx+20], eax
; Line 1189
  01680	f2 0f 11 0f	 movsd	 QWORD PTR [edi], xmm1
; Line 1190
  01684	f2 0f 11 4f 30	 movsd	 QWORD PTR [edi+48], xmm1
  01689	c7 47 38 03 00
	00 00		 mov	 DWORD PTR [edi+56], 3
; Line 1193
  01690	e9 a2 e9 ff ff	 jmp	 $LL169@luaV_execu
$LN32@luaV_execu:
; Line 1202
  01695	83 7f 08 13	 cmp	 DWORD PTR [edi+8], 19	; 00000013H
  01699	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
  0169c	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0169f	0f 85 81 00 00
	00		 jne	 $LN31@luaV_execu
  016a5	83 7f 28 13	 cmp	 DWORD PTR [edi+40], 19	; 00000013H
  016a9	75 7b		 jne	 SHORT $LN31@luaV_execu
  016ab	8d 95 74 ff ff
	ff		 lea	 edx, DWORD PTR _stopnow$20[ebp]
  016b1	52		 push	 edx
  016b2	ff 77 24	 push	 DWORD PTR [edi+36]
  016b5	8d 85 14 ff ff
	ff		 lea	 eax, DWORD PTR _ilimit$8[ebp]
  016bb	ff 77 20	 push	 DWORD PTR [edi+32]
  016be	50		 push	 eax
  016bf	51		 push	 ecx
  016c0	e8 00 00 00 00	 call	 _forlimit
  016c5	83 c4 14	 add	 esp, 20			; 00000014H
  016c8	85 c0		 test	 eax, eax
  016ca	74 57		 je	 SHORT $LN465@luaV_execu
; Line 1204
  016cc	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR _stopnow$20[ebp], 0
  016d3	74 19		 je	 SHORT $LN373@luaV_execu
  016d5	0f 57 c0	 xorps	 xmm0, xmm0
  016d8	66 0f 13 85 24
	ff ff ff	 movlpd	 QWORD PTR _initv$10[ebp], xmm0
  016e0	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _initv$10[ebp+4]
  016e6	8b 95 24 ff ff
	ff		 mov	 edx, DWORD PTR _initv$10[ebp]
  016ec	eb 05		 jmp	 SHORT $LN374@luaV_execu
$LN373@luaV_execu:
  016ee	8b 17		 mov	 edx, DWORD PTR [edi]
  016f0	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
$LN374@luaV_execu:
; Line 1205
  016f3	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR _ilimit$8[ebp]
  016f9	89 47 10	 mov	 DWORD PTR [edi+16], eax
  016fc	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _ilimit$8[ebp+4]
  01702	89 47 14	 mov	 DWORD PTR [edi+20], eax
  01705	c7 47 18 13 00
	00 00		 mov	 DWORD PTR [edi+24], 19	; 00000013H
; Line 1206
  0170c	2b 57 20	 sub	 edx, DWORD PTR [edi+32]
  0170f	1b 4f 24	 sbb	 ecx, DWORD PTR [edi+36]
  01712	89 17		 mov	 DWORD PTR [edi], edx
  01714	89 4f 04	 mov	 DWORD PTR [edi+4], ecx
  01717	c7 47 08 13 00
	00 00		 mov	 DWORD PTR [edi+8], 19	; 00000013H
; Line 1208
  0171e	e9 d3 00 00 00	 jmp	 $LN30@luaV_execu
$LN465@luaV_execu:
  01723	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
$LN31@luaV_execu:
; Line 1210
  01726	83 79 08 03	 cmp	 DWORD PTR [ecx+8], 3
  0172a	75 0e		 jne	 SHORT $LN375@luaV_execu
  0172c	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  01730	f2 0f 11 85 04
	ff ff ff	 movsd	 QWORD PTR _nlimit$6[ebp], xmm0
  01738	eb 23		 jmp	 SHORT $LN450@luaV_execu
$LN375@luaV_execu:
  0173a	8d 85 04 ff ff
	ff		 lea	 eax, DWORD PTR _nlimit$6[ebp]
  01740	50		 push	 eax
  01741	51		 push	 ecx
  01742	e8 00 00 00 00	 call	 _luaV_tonumber_
  01747	83 c4 08	 add	 esp, 8
  0174a	85 c0		 test	 eax, eax
  0174c	0f 84 c4 03 00
	00		 je	 $LN394@luaV_execu
  01752	f2 0f 10 85 04
	ff ff ff	 movsd	 xmm0, QWORD PTR _nlimit$6[ebp]
  0175a	8d 4f 10	 lea	 ecx, DWORD PTR [edi+16]
$LN450@luaV_execu:
; Line 1213
  0175d	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
  01760	f2 0f 11 01	 movsd	 QWORD PTR [ecx], xmm0
  01764	c7 41 08 03 00
	00 00		 mov	 DWORD PTR [ecx+8], 3
  0176b	83 78 08 03	 cmp	 DWORD PTR [eax+8], 3
  0176f	75 0e		 jne	 SHORT $LN377@luaV_execu
  01771	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  01775	f2 0f 11 85 f4
	fe ff ff	 movsd	 QWORD PTR _nstep$4[ebp], xmm0
  0177d	eb 23		 jmp	 SHORT $LN533@luaV_execu
$LN377@luaV_execu:
  0177f	8d 8d f4 fe ff
	ff		 lea	 ecx, DWORD PTR _nstep$4[ebp]
  01785	51		 push	 ecx
  01786	50		 push	 eax
  01787	e8 00 00 00 00	 call	 _luaV_tonumber_
  0178c	83 c4 08	 add	 esp, 8
  0178f	85 c0		 test	 eax, eax
  01791	0f 84 74 03 00
	00		 je	 $LN395@luaV_execu
  01797	f2 0f 10 85 f4
	fe ff ff	 movsd	 xmm0, QWORD PTR _nstep$4[ebp]
  0179f	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
$LN533@luaV_execu:
; Line 1215
  017a2	f2 0f 11 00	 movsd	 QWORD PTR [eax], xmm0
  017a6	c7 40 08 03 00
	00 00		 mov	 DWORD PTR [eax+8], 3
; Line 1216
  017ad	83 7f 08 03	 cmp	 DWORD PTR [edi+8], 3
  017b1	f2 0f 11 45 dc	 movsd	 QWORD PTR _nstep$1$[ebp], xmm0
  017b6	75 0e		 jne	 SHORT $LN379@luaV_execu
  017b8	f2 0f 10 07	 movsd	 xmm0, QWORD PTR [edi]
  017bc	f2 0f 11 85 e4
	fe ff ff	 movsd	 QWORD PTR _ninit$2[ebp], xmm0
  017c4	eb 20		 jmp	 SHORT $LN452@luaV_execu
$LN379@luaV_execu:
  017c6	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _ninit$2[ebp]
  017cc	50		 push	 eax
  017cd	57		 push	 edi
  017ce	e8 00 00 00 00	 call	 _luaV_tonumber_
  017d3	83 c4 08	 add	 esp, 8
  017d6	85 c0		 test	 eax, eax
  017d8	0f 84 22 03 00
	00		 je	 $LN536@luaV_execu
  017de	f2 0f 10 85 e4
	fe ff ff	 movsd	 xmm0, QWORD PTR _ninit$2[ebp]
$LN452@luaV_execu:
; Line 1218
  017e6	f2 0f 5c 45 dc	 subsd	 xmm0, QWORD PTR _nstep$1$[ebp]
  017eb	c7 47 08 03 00
	00 00		 mov	 DWORD PTR [edi+8], 3
  017f2	f2 0f 11 07	 movsd	 QWORD PTR [edi], xmm0
$LN30@luaV_execu:
; Line 1220
  017f6	8b 75 fc	 mov	 esi, DWORD PTR _b$1$[ebp]
  017f9	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  017fc	c1 ee 0e	 shr	 esi, 14			; 0000000eH
  017ff	8d 04 b5 04 00
	f8 ff		 lea	 eax, DWORD PTR [esi*4-524284]
  01806	01 41 14	 add	 DWORD PTR [ecx+20], eax
; Line 1221
  01809	e9 29 e8 ff ff	 jmp	 $LL169@luaV_execu
$LN26@luaV_execu:
; Line 1225
  0180e	f3 0f 6f 47 20	 movdqu	 xmm0, XMMWORD PTR [edi+32]
; Line 1228
  01813	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  01816	8d 4f 30	 lea	 ecx, DWORD PTR [edi+48]
; Line 1229
  01819	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  0181c	8d 41 30	 lea	 eax, DWORD PTR [ecx+48]
  0181f	f3 0f 7f 41 20	 movdqu	 XMMWORD PTR [ecx+32], xmm0
  01824	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  0182a	f3 0f 6f 47 10	 movdqu	 xmm0, XMMWORD PTR [edi+16]
  0182f	52		 push	 edx
  01830	51		 push	 ecx
  01831	f3 0f 7f 41 10	 movdqu	 XMMWORD PTR [ecx+16], xmm0
  01836	56		 push	 esi
  01837	f3 0f 6f 07	 movdqu	 xmm0, XMMWORD PTR [edi]
  0183b	f3 0f 7f 01	 movdqu	 XMMWORD PTR [ecx], xmm0
  0183f	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  01842	e8 00 00 00 00	 call	 _luaD_call
  01847	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  0184a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0184d	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  01850	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
; Line 1230
  01853	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  01856	89 46 0c	 mov	 DWORD PTR [esi+12], eax
; Line 1231
  01859	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  0185c	8b 10		 mov	 edx, DWORD PTR [eax]
; Line 1232
  0185e	8b fa		 mov	 edi, edx
  01860	c1 ef 06	 shr	 edi, 6
  01863	83 c0 04	 add	 eax, 4
  01866	81 e7 ff 00 00
	00		 and	 edi, 255		; 000000ffH
  0186c	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0186f	c1 e7 04	 shl	 edi, 4
  01872	03 7d ec	 add	 edi, DWORD PTR _base$1$[ebp]
$l_tforloop$542:
; Line 1238
  01875	83 7f 18 00	 cmp	 DWORD PTR [edi+24], 0
  01879	0f 84 b8 e7 ff
	ff		 je	 $LL169@luaV_execu
; Line 1239
  0187f	f3 0f 6f 47 10	 movdqu	 xmm0, XMMWORD PTR [edi+16]
; Line 1240
  01884	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  01887	f3 0f 7f 07	 movdqu	 XMMWORD PTR [edi], xmm0
  0188b	8d 04 95 04 00
	f8 ff		 lea	 eax, DWORD PTR [edx*4-524284]
  01892	01 41 14	 add	 DWORD PTR [ecx+20], eax
; Line 1242
  01895	e9 9d e7 ff ff	 jmp	 $LL169@luaV_execu
$LN23@luaV_execu:
; Line 1249
  0189a	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0189d	8b c2		 mov	 eax, edx
  0189f	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  018a2	c1 e8 17	 shr	 eax, 23			; 00000017H
  018a5	81 e2 ff 01 00
	00		 and	 edx, 511		; 000001ffH
  018ab	89 45 f4	 mov	 DWORD PTR _n$1$[ebp], eax
  018ae	85 c0		 test	 eax, eax
  018b0	75 0c		 jne	 SHORT $LN22@luaV_execu
  018b2	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  018b5	2b c7		 sub	 eax, edi
  018b7	c1 f8 04	 sar	 eax, 4
  018ba	48		 dec	 eax
  018bb	89 45 f4	 mov	 DWORD PTR _n$1$[ebp], eax
$LN22@luaV_execu:
; Line 1250
  018be	85 d2		 test	 edx, edx
  018c0	75 0e		 jne	 SHORT $LN21@luaV_execu
; Line 1252
  018c2	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  018c5	8b 10		 mov	 edx, DWORD PTR [eax]
  018c7	c1 ea 06	 shr	 edx, 6
  018ca	83 c0 04	 add	 eax, 4
  018cd	89 41 14	 mov	 DWORD PTR [ecx+20], eax
$LN21@luaV_execu:
; Line 1254
  018d0	8b 0f		 mov	 ecx, DWORD PTR [edi]
; Line 1255
  018d2	8d 42 ff	 lea	 eax, DWORD PTR [edx-1]
  018d5	6b d0 32	 imul	 edx, eax, 50
  018d8	8b 45 f4	 mov	 eax, DWORD PTR _n$1$[ebp]
  018db	89 4d e8	 mov	 DWORD PTR _h$1$[ebp], ecx
  018de	03 d0		 add	 edx, eax
  018e0	89 55 fc	 mov	 DWORD PTR _last$1$[ebp], edx
; Line 1256
  018e3	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  018e6	76 14		 jbe	 SHORT $LN20@luaV_execu
; Line 1257
  018e8	52		 push	 edx
  018e9	51		 push	 ecx
  018ea	56		 push	 esi
  018eb	e8 00 00 00 00	 call	 _luaH_resizearray
  018f0	8b 45 f4	 mov	 eax, DWORD PTR _n$1$[ebp]
  018f3	83 c4 0c	 add	 esp, 12			; 0000000cH
  018f6	8b 4d e8	 mov	 ecx, DWORD PTR _h$1$[ebp]
  018f9	8b 55 fc	 mov	 edx, DWORD PTR _last$1$[ebp]
$LN20@luaV_execu:
; Line 1258
  018fc	85 c0		 test	 eax, eax
  018fe	7e 5c		 jle	 SHORT $LN17@luaV_execu
  01900	8b f0		 mov	 esi, eax
  01902	c1 e6 04	 shl	 esi, 4
  01905	03 f7		 add	 esi, edi
  01907	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0190a	8d 9b 00 00 00
	00		 npad	 6
$LL469@luaV_execu:
; Line 1260
  01910	56		 push	 esi
  01911	6a 00		 push	 0
  01913	52		 push	 edx
  01914	51		 push	 ecx
  01915	57		 push	 edi
  01916	e8 00 00 00 00	 call	 _luaH_setint
  0191b	8b 55 fc	 mov	 edx, DWORD PTR _last$1$[ebp]
  0191e	83 c4 14	 add	 esp, 20			; 00000014H
; Line 1261
  01921	8b 4d e8	 mov	 ecx, DWORD PTR _h$1$[ebp]
  01924	4a		 dec	 edx
  01925	f6 46 08 40	 test	 BYTE PTR [esi+8], 64	; 00000040H
  01929	89 55 fc	 mov	 DWORD PTR _last$1$[ebp], edx
  0192c	74 1e		 je	 SHORT $LN18@luaV_execu
  0192e	f6 41 05 04	 test	 BYTE PTR [ecx+5], 4
  01932	74 18		 je	 SHORT $LN18@luaV_execu
  01934	8b 06		 mov	 eax, DWORD PTR [esi]
  01936	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0193a	74 10		 je	 SHORT $LN18@luaV_execu
  0193c	51		 push	 ecx
  0193d	57		 push	 edi
  0193e	e8 00 00 00 00	 call	 _luaC_barrierback_
  01943	8b 4d e8	 mov	 ecx, DWORD PTR _h$1$[ebp]
  01946	83 c4 08	 add	 esp, 8
  01949	8b 55 fc	 mov	 edx, DWORD PTR _last$1$[ebp]
$LN18@luaV_execu:
; Line 1258
  0194c	8b 45 f4	 mov	 eax, DWORD PTR _n$1$[ebp]
  0194f	83 ee 10	 sub	 esi, 16			; 00000010H
  01952	48		 dec	 eax
  01953	89 45 f4	 mov	 DWORD PTR _n$1$[ebp], eax
  01956	85 c0		 test	 eax, eax
  01958	7f b6		 jg	 SHORT $LL469@luaV_execu
  0195a	8b f7		 mov	 esi, edi
$LN17@luaV_execu:
; Line 1263
  0195c	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  0195f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  01962	89 46 0c	 mov	 DWORD PTR [esi+12], eax
; Line 1264
  01965	e9 cd e6 ff ff	 jmp	 $LL169@luaV_execu
$LN16@luaV_execu:
; Line 1267
  0196a	8b 4d d8	 mov	 ecx, DWORD PTR _cl$1$[ebp]
; Line 1268
  0196d	ff 75 ec	 push	 DWORD PTR _base$1$[ebp]
  01970	c1 ea 0e	 shr	 edx, 14			; 0000000eH
  01973	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  01976	83 c1 10	 add	 ecx, 16			; 00000010H
  01979	51		 push	 ecx
  0197a	8b 40 34	 mov	 eax, DWORD PTR [eax+52]
  0197d	8b 04 90	 mov	 eax, DWORD PTR [eax+edx*4]
  01980	50		 push	 eax
  01981	89 45 e0	 mov	 DWORD PTR _p$1$[ebp], eax
  01984	e8 00 00 00 00	 call	 _getcached
; Line 1269
  01989	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0198c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0198f	85 c0		 test	 eax, eax
  01991	75 1c		 jne	 SHORT $LN15@luaV_execu
; Line 1270
  01993	8b 45 d8	 mov	 eax, DWORD PTR _cl$1$[ebp]
  01996	57		 push	 edi
  01997	ff 75 ec	 push	 DWORD PTR _base$1$[ebp]
  0199a	83 c0 10	 add	 eax, 16			; 00000010H
  0199d	50		 push	 eax
  0199e	ff 75 e0	 push	 DWORD PTR _p$1$[ebp]
  019a1	56		 push	 esi
  019a2	e8 00 00 00 00	 call	 _pushclosure
  019a7	83 c4 14	 add	 esp, 20			; 00000014H
; Line 1271
  019aa	e9 25 eb ff ff	 jmp	 $LN142@luaV_execu
$LN15@luaV_execu:
; Line 1272
  019af	89 07		 mov	 DWORD PTR [edi], eax
  019b1	c7 47 08 46 00
	00 00		 mov	 DWORD PTR [edi+8], 70	; 00000046H
; Line 1274
  019b8	e9 17 eb ff ff	 jmp	 $LN142@luaV_execu
$LN12@luaV_execu:
; Line 1279
  019bd	2b 01		 sub	 eax, DWORD PTR [ecx]
; Line 1282
  019bf	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  019c2	c1 f8 04	 sar	 eax, 4
  019c5	89 45 f4	 mov	 DWORD PTR _n$2$[ebp], eax
  019c8	8b 45 d8	 mov	 eax, DWORD PTR _cl$1$[ebp]
  019cb	c1 ea 17	 shr	 edx, 23			; 00000017H
  019ce	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR tv3808[ebp], 0
  019d5	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  019d8	0f b6 40 06	 movzx	 eax, BYTE PTR [eax+6]
  019dc	29 45 f4	 sub	 DWORD PTR _n$2$[ebp], eax
  019df	8b 45 f4	 mov	 eax, DWORD PTR _n$2$[ebp]
  019e2	48		 dec	 eax
  019e3	0f 48 45 e8	 cmovs	 eax, DWORD PTR tv3808[ebp]
  019e7	4a		 dec	 edx
  019e8	89 45 f4	 mov	 DWORD PTR _n$2$[ebp], eax
  019eb	79 3c		 jns	 SHORT $LN10@luaV_execu
; Line 1283
  019ed	8b d0		 mov	 edx, eax
; Line 1284
  019ef	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  019f2	2b 46 0c	 sub	 eax, DWORD PTR [esi+12]
  019f5	8b fa		 mov	 edi, edx
  019f7	c1 f8 04	 sar	 eax, 4
  019fa	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  019fd	3b c7		 cmp	 eax, edi
  019ff	7f 0f		 jg	 SHORT $LN9@luaV_execu
  01a01	57		 push	 edi
  01a02	56		 push	 esi
  01a03	e8 00 00 00 00	 call	 _luaD_growstack
  01a08	8b 4d f8	 mov	 ecx, DWORD PTR _ci$1$[ebp]
  01a0b	83 c4 08	 add	 esp, 8
  01a0e	8b d7		 mov	 edx, edi
$LN9@luaV_execu:
  01a10	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
; Line 1285
  01a13	8b 7d e0	 mov	 edi, DWORD PTR tv3922[ebp]
  01a16	89 45 ec	 mov	 DWORD PTR _base$1$[ebp], eax
  01a19	03 f8		 add	 edi, eax
; Line 1286
  01a1b	8b 45 f4	 mov	 eax, DWORD PTR _n$2$[ebp]
  01a1e	c1 e0 04	 shl	 eax, 4
  01a21	03 c7		 add	 eax, edi
  01a23	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  01a26	8b 45 f4	 mov	 eax, DWORD PTR _n$2$[ebp]
$LN10@luaV_execu:
; Line 1288
  01a29	33 c9		 xor	 ecx, ecx
  01a2b	85 d2		 test	 edx, edx
  01a2d	0f 8e 01 e6 ff
	ff		 jle	 $LN462@luaV_execu
  01a33	8b 75 ec	 mov	 esi, DWORD PTR _base$1$[ebp]
  01a36	c1 e0 04	 shl	 eax, 4
  01a39	2b f0		 sub	 esi, eax
  01a3b	89 7d e0	 mov	 DWORD PTR tv3837[ebp], edi
  01a3e	89 75 e8	 mov	 DWORD PTR tv3836[ebp], esi
  01a41	8b c6		 mov	 eax, esi
$LL470@luaV_execu:
  01a43	3b 4d f4	 cmp	 ecx, DWORD PTR _n$2$[ebp]
  01a46	7d 1e		 jge	 SHORT $LN5@luaV_execu
; Line 1289
  01a48	8b 75 e0	 mov	 esi, DWORD PTR tv3837[ebp]
  01a4b	41		 inc	 ecx
  01a4c	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  01a50	83 c0 10	 add	 eax, 16			; 00000010H
  01a53	f3 0f 7f 06	 movdqu	 XMMWORD PTR [esi], xmm0
  01a57	83 c6 10	 add	 esi, 16			; 00000010H
  01a5a	89 75 e0	 mov	 DWORD PTR tv3837[ebp], esi
  01a5d	3b ca		 cmp	 ecx, edx
  01a5f	7c e2		 jl	 SHORT $LL470@luaV_execu
; Line 1290
  01a61	e9 ce e5 ff ff	 jmp	 $LN462@luaV_execu
$LN5@luaV_execu:
  01a66	3b ca		 cmp	 ecx, edx
  01a68	0f 8d c6 e5 ff
	ff		 jge	 $LN462@luaV_execu
  01a6e	8b c1		 mov	 eax, ecx
  01a70	c1 e0 04	 shl	 eax, 4
  01a73	83 c0 08	 add	 eax, 8
  01a76	03 c7		 add	 eax, edi
  01a78	2b d1		 sub	 edx, ecx
  01a7a	8d 9b 00 00 00
	00		 npad	 6
$LL471@luaV_execu:
; Line 1291
  01a80	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  01a86	8d 40 10	 lea	 eax, DWORD PTR [eax+16]
  01a89	4a		 dec	 edx
  01a8a	75 f4		 jne	 SHORT $LL471@luaV_execu
; Line 1299
  01a8c	e9 a3 e5 ff ff	 jmp	 $LN462@luaV_execu
$LN53@luaV_execu:
; Line 1121
  01a91	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
; Line 1122
  01a94	e9 7c e5 ff ff	 jmp	 $LN534@luaV_execu
$LN42@luaV_execu:
; Line 1159
  01a99	8b 45 d8	 mov	 eax, DWORD PTR _cl$1$[ebp]
  01a9c	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  01a9f	c1 ea 17	 shr	 edx, 23			; 00000017H
  01aa2	89 55 fc	 mov	 DWORD PTR _b$1$[ebp], edx
  01aa5	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  01aa8	83 78 1c 00	 cmp	 DWORD PTR [eax+28], 0
  01aac	7e 0f		 jle	 SHORT $LN41@luaV_execu
  01aae	ff 75 ec	 push	 DWORD PTR _base$1$[ebp]
  01ab1	56		 push	 esi
  01ab2	e8 00 00 00 00	 call	 _luaF_close
  01ab7	8b 55 fc	 mov	 edx, DWORD PTR _b$1$[ebp]
  01aba	83 c4 08	 add	 esp, 8
$LN41@luaV_execu:
; Line 1160
  01abd	85 d2		 test	 edx, edx
  01abf	74 03		 je	 SHORT $LN363@luaV_execu
  01ac1	4a		 dec	 edx
  01ac2	eb 08		 jmp	 SHORT $LN364@luaV_execu
$LN363@luaV_execu:
  01ac4	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  01ac7	2b d7		 sub	 edx, edi
  01ac9	c1 fa 04	 sar	 edx, 4
$LN364@luaV_execu:
  01acc	52		 push	 edx
  01acd	57		 push	 edi
  01ace	8b 7d f8	 mov	 edi, DWORD PTR _ci$1$[ebp]
  01ad1	57		 push	 edi
  01ad2	56		 push	 esi
  01ad3	e8 00 00 00 00	 call	 _luaD_poscall
  01ad8	83 c4 10	 add	 esp, 16			; 00000010H
; Line 1161
  01adb	f6 47 22 08	 test	 BYTE PTR [edi+34], 8
  01adf	75 19		 jne	 SHORT $LN168@luaV_execu
; Line 1164
  01ae1	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  01ae4	89 4d f8	 mov	 DWORD PTR _ci$1$[ebp], ecx
; Line 1165
  01ae7	85 c0		 test	 eax, eax
  01ae9	0f 84 29 e5 ff
	ff		 je	 $newframe$541
  01aef	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  01af2	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  01af5	e9 1e e5 ff ff	 jmp	 $newframe$541
$LN168@luaV_execu:
  01afa	5f		 pop	 edi
  01afb	5e		 pop	 esi
; Line 1300
  01afc	8b e5		 mov	 esp, ebp
  01afe	5d		 pop	 ebp
  01aff	c3		 ret	 0
$LN536@luaV_execu:
; Line 1217
  01b00	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@JJFDEONC@?8for?8?5initial?5value?5must?5be?5a?5nu@
  01b05	56		 push	 esi
  01b06	e8 00 00 00 00	 call	 _luaG_runerror
$LN538@luaV_execu:
$LN395@luaV_execu:
; Line 1214
  01b0b	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@EGCFKNIJ@?8for?8?5step?5must?5be?5a?5number?$AA@
  01b10	56		 push	 esi
  01b11	e8 00 00 00 00	 call	 _luaG_runerror
$LN539@luaV_execu:
$LN394@luaV_execu:
; Line 1211
  01b16	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@GHPMJMPH@?8for?8?5limit?5must?5be?5a?5number?$AA@
  01b1b	56		 push	 esi
  01b1c	e8 00 00 00 00	 call	 _luaG_runerror
$LN540@luaV_execu:
$LN473@luaV_execu:
  01b21	8d 49 00	 npad	 3
$LN537@luaV_execu:
; Line 1300
  01b24	00 00 00 00	 DD	 $LN164@luaV_execu
  01b28	00 00 00 00	 DD	 $LN163@luaV_execu
  01b2c	00 00 00 00	 DD	 $LN162@luaV_execu
  01b30	00 00 00 00	 DD	 $LN161@luaV_execu
  01b34	00 00 00 00	 DD	 $LN159@luaV_execu
  01b38	00 00 00 00	 DD	 $LN155@luaV_execu
  01b3c	00 00 00 00	 DD	 $LN154@luaV_execu
  01b40	00 00 00 00	 DD	 $LN151@luaV_execu
  01b44	00 00 00 00	 DD	 $LN148@luaV_execu
  01b48	00 00 00 00	 DD	 $LN146@luaV_execu
  01b4c	00 00 00 00	 DD	 $LN145@luaV_execu
  01b50	00 00 00 00	 DD	 $LN143@luaV_execu
  01b54	00 00 00 00	 DD	 $LN139@luaV_execu
  01b58	00 00 00 00	 DD	 $LN136@luaV_execu
  01b5c	00 00 00 00	 DD	 $LN131@luaV_execu
  01b60	00 00 00 00	 DD	 $LN126@luaV_execu
  01b64	00 00 00 00	 DD	 $LN103@luaV_execu
  01b68	00 00 00 00	 DD	 $LN92@luaV_execu
  01b6c	00 00 00 00	 DD	 $LN121@luaV_execu
  01b70	00 00 00 00	 DD	 $LN97@luaV_execu
  01b74	00 00 00 00	 DD	 $LN118@luaV_execu
  01b78	00 00 00 00	 DD	 $LN115@luaV_execu
  01b7c	00 00 00 00	 DD	 $LN112@luaV_execu
  01b80	00 00 00 00	 DD	 $LN109@luaV_execu
  01b84	00 00 00 00	 DD	 $LN106@luaV_execu
  01b88	00 00 00 00	 DD	 $LN89@luaV_execu
  01b8c	00 00 00 00	 DD	 $LN84@luaV_execu
  01b90	00 00 00 00	 DD	 $LN81@luaV_execu
  01b94	00 00 00 00	 DD	 $LN80@luaV_execu
  01b98	00 00 00 00	 DD	 $LN79@luaV_execu
  01b9c	00 00 00 00	 DD	 $LN77@luaV_execu
  01ba0	00 00 00 00	 DD	 $LN75@luaV_execu
  01ba4	00 00 00 00	 DD	 $LN71@luaV_execu
  01ba8	00 00 00 00	 DD	 $LN67@luaV_execu
  01bac	00 00 00 00	 DD	 $LN63@luaV_execu
  01bb0	00 00 00 00	 DD	 $LN59@luaV_execu
  01bb4	00 00 00 00	 DD	 $LN55@luaV_execu
  01bb8	00 00 00 00	 DD	 $LN50@luaV_execu
  01bbc	00 00 00 00	 DD	 $LN42@luaV_execu
  01bc0	00 00 00 00	 DD	 $LN39@luaV_execu
  01bc4	00 00 00 00	 DD	 $LN32@luaV_execu
  01bc8	00 00 00 00	 DD	 $LN26@luaV_execu
  01bcc	00 00 00 00	 DD	 $l_tforloop$542
  01bd0	00 00 00 00	 DD	 $LN23@luaV_execu
  01bd4	00 00 00 00	 DD	 $LN16@luaV_execu
  01bd8	00 00 00 00	 DD	 $LN12@luaV_execu
_luaV_execute ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaV_finishOp
_TEXT	SEGMENT
_base$1$ = 8						; size = 4
_L$ = 8							; size = 4
_luaV_finishOp PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 642
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
; Line 643
  00006	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00009	8b 5f 14	 mov	 ebx, DWORD PTR [edi+20]
; Line 645
  0000c	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  0000f	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00012	89 4d 08	 mov	 DWORD PTR _base$1$[ebp], ecx
  00015	8b 70 fc	 mov	 esi, DWORD PTR [eax-4]
; Line 646
  00018	8b c6		 mov	 eax, esi
  0001a	83 e0 3f	 and	 eax, 63			; 0000003fH
; Line 647
  0001d	83 c0 fa	 add	 eax, -6			; fffffffaH
  00020	83 f8 23	 cmp	 eax, 35			; 00000023H
  00023	0f 87 eb 00 00
	00		 ja	 $LN3@luaV_finis
  00029	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN19@luaV_finis[eax]
  00030	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN22@luaV_finis[eax*4]
$LN11@luaV_finis:
; Line 653
  00037	83 47 0c f0	 add	 DWORD PTR [edi+12], -16	; fffffff0H
  0003b	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0003e	c1 ee 06	 shr	 esi, 6
  00041	81 e6 ff 00 00
	00		 and	 esi, 255		; 000000ffH
  00047	03 f6		 add	 esi, esi
  00049	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  0004d	5f		 pop	 edi
  0004e	f3 0f 7f 04 f1	 movdqu	 XMMWORD PTR [ecx+esi*8], xmm0
  00053	5e		 pop	 esi
  00054	5b		 pop	 ebx
; Line 697
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
$LN10@luaV_finis:
; Line 657
  00057	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  0005a	8b 48 f8	 mov	 ecx, DWORD PTR [eax-8]
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 12		 je	 SHORT $LN17@luaV_finis
  00061	83 f9 01	 cmp	 ecx, 1
  00064	75 06		 jne	 SHORT $LN16@luaV_finis
  00066	83 78 f0 00	 cmp	 DWORD PTR [eax-16], 0
  0006a	74 07		 je	 SHORT $LN17@luaV_finis
$LN16@luaV_finis:
  0006c	b9 01 00 00 00	 mov	 ecx, 1
  00071	eb 02		 jmp	 SHORT $LN18@luaV_finis
$LN17@luaV_finis:
  00073	33 c9		 xor	 ecx, ecx
$LN18@luaV_finis:
; Line 658
  00075	83 c0 f0	 add	 eax, -16		; fffffff0H
  00078	89 47 0c	 mov	 DWORD PTR [edi+12], eax
; Line 659
  0007b	8a 43 22	 mov	 al, BYTE PTR [ebx+34]
  0007e	84 c0		 test	 al, al
  00080	79 0e		 jns	 SHORT $LN9@luaV_finis
; Line 661
  00082	34 80		 xor	 al, 128			; 00000080H
  00084	88 43 22	 mov	 BYTE PTR [ebx+34], al
; Line 662
  00087	33 c0		 xor	 eax, eax
  00089	85 c9		 test	 ecx, ecx
  0008b	0f 94 c0	 sete	 al
  0008e	8b c8		 mov	 ecx, eax
$LN9@luaV_finis:
; Line 665
  00090	c1 ee 06	 shr	 esi, 6
  00093	81 e6 ff 00 00
	00		 and	 esi, 255		; 000000ffH
  00099	3b ce		 cmp	 ecx, esi
  0009b	74 77		 je	 SHORT $LN3@luaV_finis
; Line 666
  0009d	83 43 14 04	 add	 DWORD PTR [ebx+20], 4
  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
; Line 697
  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
$LN7@luaV_finis:
; Line 670
  000a6	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
; Line 671
  000a9	8b c6		 mov	 eax, esi
  000ab	c1 e8 17	 shr	 eax, 23			; 00000017H
; Line 672
  000ae	40		 inc	 eax
  000af	c1 e0 04	 shl	 eax, 4
; Line 673
  000b2	f3 0f 6f 42 f0	 movdqu	 xmm0, XMMWORD PTR [edx-16]
  000b7	8d 4a f0	 lea	 ecx, DWORD PTR [edx-16]
  000ba	2b c8		 sub	 ecx, eax
  000bc	2b 4d 08	 sub	 ecx, DWORD PTR _base$1$[ebp]
  000bf	c1 f9 04	 sar	 ecx, 4
  000c2	f3 0f 7f 42 d0	 movdqu	 XMMWORD PTR [edx-48], xmm0
; Line 674
  000c7	83 f9 01	 cmp	 ecx, 1
  000ca	7e 10		 jle	 SHORT $LN6@luaV_finis
; Line 676
  000cc	51		 push	 ecx
  000cd	8d 42 e0	 lea	 eax, DWORD PTR [edx-32]
  000d0	57		 push	 edi
  000d1	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  000d4	e8 00 00 00 00	 call	 _luaV_concat
  000d9	83 c4 08	 add	 esp, 8
$LN6@luaV_finis:
; Line 679
  000dc	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  000df	c1 ee 06	 shr	 esi, 6
  000e2	81 e6 ff 00 00
	00		 and	 esi, 255		; 000000ffH
  000e8	c1 e6 04	 shl	 esi, 4
  000eb	03 73 10	 add	 esi, DWORD PTR [ebx+16]
  000ee	f3 0f 6f 40 f0	 movdqu	 xmm0, XMMWORD PTR [eax-16]
  000f3	f3 0f 7f 06	 movdqu	 XMMWORD PTR [esi], xmm0
; Line 690
  000f7	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000fa	89 47 0c	 mov	 DWORD PTR [edi+12], eax
  000fd	5f		 pop	 edi
  000fe	5e		 pop	 esi
  000ff	5b		 pop	 ebx
; Line 697
  00100	5d		 pop	 ebp
  00101	c3		 ret	 0
$LN4@luaV_finis:
; Line 689
  00102	c1 ee 0e	 shr	 esi, 14			; 0000000eH
  00105	81 e6 ff 01 00
	00		 and	 esi, 511		; 000001ffH
  0010b	4e		 dec	 esi
  0010c	78 06		 js	 SHORT $LN3@luaV_finis
$LN20@luaV_finis:
; Line 690
  0010e	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00111	89 47 0c	 mov	 DWORD PTR [edi+12], eax
$LN3@luaV_finis:
  00114	5f		 pop	 edi
  00115	5e		 pop	 esi
  00116	5b		 pop	 ebx
; Line 697
  00117	5d		 pop	 ebp
  00118	c3		 ret	 0
  00119	8d 49 00	 npad	 3
$LN22@luaV_finis:
  0011c	00 00 00 00	 DD	 $LN11@luaV_finis
  00120	00 00 00 00	 DD	 $LN7@luaV_finis
  00124	00 00 00 00	 DD	 $LN10@luaV_finis
  00128	00 00 00 00	 DD	 $LN4@luaV_finis
  0012c	00 00 00 00	 DD	 $LN20@luaV_finis
  00130	00 00 00 00	 DD	 $LN3@luaV_finis
$LN19@luaV_finis:
  00134	00		 DB	 0
  00135	00		 DB	 0
  00136	05		 DB	 5
  00137	05		 DB	 5
  00138	05		 DB	 5
  00139	05		 DB	 5
  0013a	00		 DB	 0
  0013b	00		 DB	 0
  0013c	00		 DB	 0
  0013d	00		 DB	 0
  0013e	00		 DB	 0
  0013f	00		 DB	 0
  00140	00		 DB	 0
  00141	00		 DB	 0
  00142	00		 DB	 0
  00143	00		 DB	 0
  00144	00		 DB	 0
  00145	00		 DB	 0
  00146	00		 DB	 0
  00147	00		 DB	 0
  00148	00		 DB	 0
  00149	05		 DB	 5
  0014a	00		 DB	 0
  0014b	01		 DB	 1
  0014c	05		 DB	 5
  0014d	02		 DB	 2
  0014e	02		 DB	 2
  0014f	02		 DB	 2
  00150	05		 DB	 5
  00151	05		 DB	 5
  00152	03		 DB	 3
  00153	05		 DB	 5
  00154	05		 DB	 5
  00155	05		 DB	 5
  00156	05		 DB	 5
  00157	04		 DB	 4
_luaV_finishOp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaV_finishset
_TEXT	SEGMENT
_loop$1$ = -4						; size = 4
_L$ = 8							; size = 4
_t$ = 12						; size = 4
_key$ = 16						; size = 4
_val$ = 20						; size = 4
_oldval$ = 24						; size = 4
_luaV_finishset PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 188
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; Line 190
  00005	8b 5d 0c	 mov	 ebx, DWORD PTR _t$[ebp]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b 7d 18	 mov	 edi, DWORD PTR _oldval$[ebp]
  0000d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$1$[ebp], 0
$LL10@luaV_finis:
; Line 192
  00014	85 ff		 test	 edi, edi
  00016	74 39		 je	 SHORT $LN7@luaV_finis
; Line 200
  00018	8b 03		 mov	 eax, DWORD PTR [ebx]
  0001a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0001d	85 c9		 test	 ecx, ecx
  0001f	0f 84 8e 00 00
	00		 je	 $LN26@luaV_finis
  00025	f6 41 06 02	 test	 BYTE PTR [ecx+6], 2
  00029	0f 85 84 00 00
	00		 jne	 $LN26@luaV_finis
  0002f	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00032	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00035	ff b0 8c 00 00
	00		 push	 DWORD PTR [eax+140]
  0003b	6a 01		 push	 1
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 _luaT_gettm
  00043	8b f0		 mov	 esi, eax
  00045	83 c4 0c	 add	 esp, 12			; 0000000cH
  00048	85 f6		 test	 esi, esi
  0004a	74 67		 je	 SHORT $LN26@luaV_finis
; Line 209
  0004c	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0004f	eb 1b		 jmp	 SHORT $LN3@luaV_finis
$LN7@luaV_finis:
; Line 210
  00051	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00054	6a 01		 push	 1
  00056	53		 push	 ebx
  00057	57		 push	 edi
  00058	e8 00 00 00 00	 call	 _luaT_gettmbyobj
  0005d	8b f0		 mov	 esi, eax
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00062	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  00066	0f 84 f7 00 00
	00		 je	 $LN27@luaV_finis
$LN3@luaV_finis:
; Line 214
  0006c	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0006f	8b c1		 mov	 eax, ecx
  00071	83 e0 0f	 and	 eax, 15			; 0000000fH
  00074	3c 06		 cmp	 al, 6
  00076	0f 84 bf 00 00
	00		 je	 $LN28@luaV_finis
; Line 218
  0007c	8b de		 mov	 ebx, esi
; Line 219
  0007e	83 f9 45	 cmp	 ecx, 69			; 00000045H
  00081	74 04		 je	 SHORT $LN23@luaV_finis
  00083	33 ff		 xor	 edi, edi
  00085	eb 15		 jmp	 SHORT $LN33@luaV_finis
$LN23@luaV_finis:
  00087	ff 75 10	 push	 DWORD PTR _key$[ebp]
  0008a	ff 36		 push	 DWORD PTR [esi]
  0008c	e8 00 00 00 00	 call	 _luaH_get
  00091	8b f8		 mov	 edi, eax
  00093	83 c4 08	 add	 esp, 8
  00096	83 7f 08 00	 cmp	 DWORD PTR [edi+8], 0
  0009a	75 6a		 jne	 SHORT $LN21@luaV_finis
$LN33@luaV_finis:
; Line 190
  0009c	8b 45 fc	 mov	 eax, DWORD PTR _loop$1$[ebp]
  0009f	40		 inc	 eax
  000a0	89 45 fc	 mov	 DWORD PTR _loop$1$[ebp], eax
  000a3	3d d0 07 00 00	 cmp	 eax, 2000		; 000007d0H
  000a8	0f 8c 66 ff ff
	ff		 jl	 $LL10@luaV_finis
  000ae	e9 a2 00 00 00	 jmp	 $LN39@luaV_finis
$LN26@luaV_finis:
; Line 200
  000b3	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  000b6	81 ff 00 00 00
	00		 cmp	 edi, OFFSET _luaO_nilobject_
  000bc	75 10		 jne	 SHORT $LN5@luaV_finis
  000be	ff 75 10	 push	 DWORD PTR _key$[ebp]
  000c1	ff 33		 push	 DWORD PTR [ebx]
  000c3	56		 push	 esi
  000c4	e8 00 00 00 00	 call	 _luaH_newkey
  000c9	83 c4 0c	 add	 esp, 12			; 0000000cH
  000cc	8b f8		 mov	 edi, eax
$LN5@luaV_finis:
; Line 202
  000ce	8b 4d 14	 mov	 ecx, DWORD PTR _val$[ebp]
  000d1	f3 0f 6f 01	 movdqu	 xmm0, XMMWORD PTR [ecx]
  000d5	f3 0f 7f 07	 movdqu	 XMMWORD PTR [edi], xmm0
; Line 203
  000d9	8b 03		 mov	 eax, DWORD PTR [ebx]
  000db	c6 40 06 00	 mov	 BYTE PTR [eax+6], 0
; Line 204
  000df	f6 41 08 40	 test	 BYTE PTR [ecx+8], 64	; 00000040H
  000e3	74 1a		 je	 SHORT $LN11@luaV_finis
  000e5	8b 13		 mov	 edx, DWORD PTR [ebx]
  000e7	f6 42 05 04	 test	 BYTE PTR [edx+5], 4
  000eb	74 12		 je	 SHORT $LN11@luaV_finis
  000ed	8b 01		 mov	 eax, DWORD PTR [ecx]
  000ef	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  000f3	74 0a		 je	 SHORT $LN11@luaV_finis
  000f5	52		 push	 edx
  000f6	56		 push	 esi
  000f7	e8 00 00 00 00	 call	 _luaC_barrierback_
  000fc	83 c4 08	 add	 esp, 8
$LN11@luaV_finis:
  000ff	5f		 pop	 edi
  00100	5e		 pop	 esi
  00101	5b		 pop	 ebx
; Line 224
  00102	8b e5		 mov	 esp, ebp
  00104	5d		 pop	 ebp
  00105	c3		 ret	 0
$LN21@luaV_finis:
; Line 219
  00106	8b 5d 14	 mov	 ebx, DWORD PTR _val$[ebp]
  00109	f6 43 08 40	 test	 BYTE PTR [ebx+8], 64	; 00000040H
  0010d	74 1d		 je	 SHORT $LN19@luaV_finis
  0010f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00111	f6 41 05 04	 test	 BYTE PTR [ecx+5], 4
  00115	74 15		 je	 SHORT $LN19@luaV_finis
  00117	8b 03		 mov	 eax, DWORD PTR [ebx]
  00119	f6 40 05 03	 test	 BYTE PTR [eax+5], 3
  0011d	74 0d		 je	 SHORT $LN19@luaV_finis
  0011f	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00122	51		 push	 ecx
  00123	50		 push	 eax
  00124	e8 00 00 00 00	 call	 _luaC_barrierback_
  00129	83 c4 08	 add	 esp, 8
$LN19@luaV_finis:
  0012c	f3 0f 6f 03	 movdqu	 xmm0, XMMWORD PTR [ebx]
  00130	f3 0f 7f 07	 movdqu	 XMMWORD PTR [edi], xmm0
  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
; Line 224
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c3		 ret	 0
$LN28@luaV_finis:
; Line 215
  0013b	6a 00		 push	 0
  0013d	ff 75 14	 push	 DWORD PTR _val$[ebp]
  00140	ff 75 10	 push	 DWORD PTR _key$[ebp]
  00143	53		 push	 ebx
  00144	56		 push	 esi
  00145	57		 push	 edi
  00146	e8 00 00 00 00	 call	 _luaT_callTM
  0014b	83 c4 18	 add	 esp, 24			; 00000018H
  0014e	5f		 pop	 edi
  0014f	5e		 pop	 esi
  00150	5b		 pop	 ebx
; Line 224
  00151	8b e5		 mov	 esp, ebp
  00153	5d		 pop	 ebp
  00154	c3		 ret	 0
$LN39@luaV_finis:
; Line 223
  00155	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00158	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@OBFLNBKM@settable?5chain?5too?5long?$DL?5possibl@
  0015d	50		 push	 eax
  0015e	e8 00 00 00 00	 call	 _luaG_runerror
$LN41@luaV_finis:
$LN27@luaV_finis:
; Line 211
  00163	68 00 00 00 00	 push	 OFFSET ??_C@_05FKHKFDID@index?$AA@
  00168	53		 push	 ebx
  00169	57		 push	 edi
  0016a	e8 00 00 00 00	 call	 _luaG_typeerror
$LN42@luaV_finis:
$LN38@luaV_finis:
  0016f	cc		 int	 3
_luaV_finishset ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaV_finishget
_TEXT	SEGMENT
_L$ = 8							; size = 4
_t$ = 12						; size = 4
_key$ = 16						; size = 4
_val$ = 20						; size = 4
_tm$ = 24						; size = 4
_luaV_finishget PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 160
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 163
  00003	8b 45 18	 mov	 eax, DWORD PTR _tm$[ebp]
  00006	53		 push	 ebx
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  0000a	56		 push	 esi
  0000b	8b 75 0c	 mov	 esi, DWORD PTR _t$[ebp]
  0000e	57		 push	 edi
  0000f	33 ff		 xor	 edi, edi
$LL7@luaV_finis:
; Line 164
  00011	85 c0		 test	 eax, eax
  00013	75 15		 jne	 SHORT $LN3@luaV_finis
; Line 165
  00015	50		 push	 eax
  00016	56		 push	 esi
  00017	53		 push	 ebx
  00018	e8 00 00 00 00	 call	 _luaT_gettmbyobj
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00020	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00024	0f 84 95 00 00
	00		 je	 $LN21@luaV_finis
$LN3@luaV_finis:
; Line 168
  0002a	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00032	80 f9 06	 cmp	 cl, 6
  00035	74 65		 je	 SHORT $LN22@luaV_finis
; Line 172
  00037	8b f0		 mov	 esi, eax
; Line 173
  00039	83 fa 45	 cmp	 edx, 69			; 00000045H
  0003c	74 04		 je	 SHORT $LN18@luaV_finis
  0003e	33 c0		 xor	 eax, eax
  00040	eb 3a		 jmp	 SHORT $LN27@luaV_finis
$LN18@luaV_finis:
  00042	ff 75 10	 push	 DWORD PTR _key$[ebp]
  00045	ff 30		 push	 DWORD PTR [eax]
  00047	e8 00 00 00 00	 call	 _luaH_get
  0004c	83 c4 08	 add	 esp, 8
  0004f	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00053	75 37		 jne	 SHORT $LN23@luaV_finis
  00055	8b 06		 mov	 eax, DWORD PTR [esi]
  00057	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0005a	85 c9		 test	 ecx, ecx
  0005c	74 29		 je	 SHORT $LN31@luaV_finis
  0005e	f6 41 06 01	 test	 BYTE PTR [ecx+6], 1
  00062	75 23		 jne	 SHORT $LN31@luaV_finis
  00064	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  00067	ff b0 88 00 00
	00		 push	 DWORD PTR [eax+136]
  0006d	6a 00		 push	 0
  0006f	51		 push	 ecx
  00070	e8 00 00 00 00	 call	 _luaT_gettm
  00075	83 c4 0c	 add	 esp, 12			; 0000000cH
  00078	85 c0		 test	 eax, eax
  0007a	74 0b		 je	 SHORT $LN31@luaV_finis
$LN27@luaV_finis:
; Line 163
  0007c	47		 inc	 edi
  0007d	81 ff d0 07 00
	00		 cmp	 edi, 2000		; 000007d0H
  00083	7c 8c		 jl	 SHORT $LL7@luaV_finis
  00085	eb 2d		 jmp	 SHORT $LN33@luaV_finis
$LN31@luaV_finis:
; Line 173
  00087	b8 00 00 00 00	 mov	 eax, OFFSET _luaO_nilobject_
$LN23@luaV_finis:
; Line 174
  0008c	f3 0f 6f 00	 movdqu	 xmm0, XMMWORD PTR [eax]
  00090	8b 45 14	 mov	 eax, DWORD PTR _val$[ebp]
  00093	5f		 pop	 edi
  00094	5e		 pop	 esi
  00095	5b		 pop	 ebx
  00096	f3 0f 7f 00	 movdqu	 XMMWORD PTR [eax], xmm0
; Line 180
  0009a	5d		 pop	 ebp
  0009b	c3		 ret	 0
$LN22@luaV_finis:
; Line 169
  0009c	6a 01		 push	 1
  0009e	ff 75 14	 push	 DWORD PTR _val$[ebp]
  000a1	ff 75 10	 push	 DWORD PTR _key$[ebp]
  000a4	56		 push	 esi
  000a5	50		 push	 eax
  000a6	53		 push	 ebx
  000a7	e8 00 00 00 00	 call	 _luaT_callTM
  000ac	83 c4 18	 add	 esp, 24			; 00000018H
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5b		 pop	 ebx
; Line 180
  000b2	5d		 pop	 ebp
  000b3	c3		 ret	 0
$LN33@luaV_finis:
; Line 179
  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@DDLIFGFP@gettable?5chain?5too?5long?$DL?5possibl@
  000b9	53		 push	 ebx
  000ba	e8 00 00 00 00	 call	 _luaG_runerror
$LN35@luaV_finis:
$LN21@luaV_finis:
; Line 166
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_05FKHKFDID@index?$AA@
  000c4	56		 push	 esi
  000c5	53		 push	 ebx
  000c6	e8 00 00 00 00	 call	 _luaG_typeerror
$LN36@luaV_finis:
$LN32@luaV_finis:
  000cb	cc		 int	 3
_luaV_finishget ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaV_tointeger
_TEXT	SEGMENT
_v$ = -24						; size = 16
_f$1 = -8						; size = 8
_n$2 = -8						; size = 8
_obj$ = 8						; size = 4
_p$ = 12						; size = 4
_mode$ = 16						; size = 4
_luaV_tointeger PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 94
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	56		 push	 esi
; Line 97
  00007	8b 75 08	 mov	 esi, DWORD PTR _obj$[ebp]
  0000a	83 7e 08 03	 cmp	 DWORD PTR [esi+8], 3
  0000e	74 4b		 je	 SHORT $LN17@luaV_toint
$again$23:
; Line 107
  00010	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00013	83 f8 13	 cmp	 eax, 19			; 00000013H
  00016	0f 84 b5 00 00
	00		 je	 $LN18@luaV_toint
; Line 112
  0001c	24 0f		 and	 al, 15			; 0000000fH
  0001e	3c 04		 cmp	 al, 4
  00020	0f 85 c2 00 00
	00		 jne	 $LN12@luaV_toint
  00026	8b 06		 mov	 eax, DWORD PTR [esi]
  00028	80 78 04 04	 cmp	 BYTE PTR [eax+4], 4
  0002c	75 06		 jne	 SHORT $LN14@luaV_toint
  0002e	0f b6 70 07	 movzx	 esi, BYTE PTR [eax+7]
  00032	eb 03		 jmp	 SHORT $LN15@luaV_toint
$LN14@luaV_toint:
  00034	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
$LN15@luaV_toint:
  00037	8d 4d e8	 lea	 ecx, DWORD PTR _v$[ebp]
  0003a	83 c0 10	 add	 eax, 16			; 00000010H
  0003d	51		 push	 ecx
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 _luaO_str2num
  00044	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00047	83 c4 08	 add	 esp, 8
  0004a	3b c1		 cmp	 eax, ecx
  0004c	0f 85 96 00 00
	00		 jne	 $LN12@luaV_toint
; Line 113
  00052	83 7d f0 03	 cmp	 DWORD PTR _v$[ebp+8], 3
  00056	8d 75 e8	 lea	 esi, DWORD PTR _v$[ebp]
  00059	75 b5		 jne	 SHORT $again$23
$LN17@luaV_toint:
; Line 98
  0005b	f2 0f 10 06	 movsd	 xmm0, QWORD PTR [esi]
; Line 99
  0005f	83 ec 08	 sub	 esp, 8
  00062	f2 0f 11 45 f8	 movsd	 QWORD PTR _n$2[ebp], xmm0
  00067	dd 45 f8	 fld	 QWORD PTR _n$2[ebp]
  0006a	dd 1c 24	 fstp	 QWORD PTR [esp]
  0006d	e8 00 00 00 00	 call	 _floor
; Line 100
  00072	f2 0f 10 06	 movsd	 xmm0, QWORD PTR [esi]
  00076	83 c4 08	 add	 esp, 8
  00079	dd 5d f8	 fstp	 QWORD PTR _f$1[ebp]
  0007c	f2 0f 10 55 f8	 movsd	 xmm2, QWORD PTR _f$1[ebp]
  00081	66 0f 2e c2	 ucomisd xmm0, xmm2
  00085	9f		 lahf
  00086	f6 c4 44	 test	 ah, 68			; 00000044H
  00089	7b 14		 jnp	 SHORT $LN5@luaV_toint
; Line 101
  0008b	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  0008e	85 c0		 test	 eax, eax
  00090	74 56		 je	 SHORT $LN12@luaV_toint
; Line 102
  00092	83 f8 01	 cmp	 eax, 1
  00095	7e 08		 jle	 SHORT $LN5@luaV_toint
; Line 103
  00097	f2 0f 58 15 00
	00 00 00	 addsd	 xmm2, QWORD PTR __real@3ff0000000000000
$LN5@luaV_toint:
; Line 105
  0009f	66 0f 2f 15 00
	00 00 00	 comisd	 xmm2, QWORD PTR __real@c3e0000000000000
  000a7	72 3f		 jb	 SHORT $LN12@luaV_toint
  000a9	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@43e0000000000000
  000b1	66 0f 2f ca	 comisd	 xmm1, xmm2
  000b5	76 31		 jbe	 SHORT $LN12@luaV_toint
  000b7	0f 28 c2	 movaps	 xmm0, xmm2
  000ba	e8 00 00 00 00	 call	 __dtol3
  000bf	8b 4d 0c	 mov	 ecx, DWORD PTR _p$[ebp]
  000c2	5e		 pop	 esi
  000c3	89 01		 mov	 DWORD PTR [ecx], eax
  000c5	b8 01 00 00 00	 mov	 eax, 1
  000ca	89 51 04	 mov	 DWORD PTR [ecx+4], edx
; Line 117
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
$LN18@luaV_toint:
; Line 108
  000d1	8b 4d 0c	 mov	 ecx, DWORD PTR _p$[ebp]
  000d4	8b 06		 mov	 eax, DWORD PTR [esi]
  000d6	89 01		 mov	 DWORD PTR [ecx], eax
  000d8	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000db	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; Line 109
  000de	b8 01 00 00 00	 mov	 eax, 1
  000e3	5e		 pop	 esi
; Line 117
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c3		 ret	 0
$LN12@luaV_toint:
; Line 105
  000e8	33 c0		 xor	 eax, eax
  000ea	5e		 pop	 esi
; Line 117
  000eb	8b e5		 mov	 esp, ebp
  000ed	5d		 pop	 ebp
  000ee	c3		 ret	 0
_luaV_tointeger ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaV_tonumber_
_TEXT	SEGMENT
_v$ = -16						; size = 16
_obj$ = 8						; size = 4
_n$ = 12						; size = 4
_luaV_tonumber_ PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 72
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 74
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00006	83 ec 10	 sub	 esp, 16			; 00000010H
  00009	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000c	83 f8 13	 cmp	 eax, 19			; 00000013H
  0000f	75 1a		 jne	 SHORT $LN4@luaV_tonum
; Line 75
  00011	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00014	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00016	e8 00 00 00 00	 call	 __ltod3
  0001b	8b 45 0c	 mov	 eax, DWORD PTR _n$[ebp]
  0001e	f2 0f 11 00	 movsd	 QWORD PTR [eax], xmm0
; Line 76
  00022	b8 01 00 00 00	 mov	 eax, 1
; Line 85
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN4@luaV_tonum:
; Line 79
  0002b	24 0f		 and	 al, 15			; 0000000fH
  0002d	3c 04		 cmp	 al, 4
  0002f	75 60		 jne	 SHORT $LN2@luaV_tonum
  00031	8b 01		 mov	 eax, DWORD PTR [ecx]
  00033	56		 push	 esi
  00034	80 78 04 04	 cmp	 BYTE PTR [eax+4], 4
  00038	75 06		 jne	 SHORT $LN7@luaV_tonum
  0003a	0f b6 70 07	 movzx	 esi, BYTE PTR [eax+7]
  0003e	eb 03		 jmp	 SHORT $LN8@luaV_tonum
$LN7@luaV_tonum:
  00040	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
$LN8@luaV_tonum:
  00043	8d 4d f0	 lea	 ecx, DWORD PTR _v$[ebp]
  00046	83 c0 10	 add	 eax, 16			; 00000010H
  00049	51		 push	 ecx
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 _luaO_str2num
  00050	83 c4 08	 add	 esp, 8
  00053	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00056	5e		 pop	 esi
  00057	3b c1		 cmp	 eax, ecx
  00059	75 36		 jne	 SHORT $LN2@luaV_tonum
; Line 80
  0005b	83 7d f8 13	 cmp	 DWORD PTR _v$[ebp+8], 19 ; 00000013H
  0005f	75 1b		 jne	 SHORT $LN9@luaV_tonum
  00061	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+4]
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp]
  00067	e8 00 00 00 00	 call	 __ltod3
  0006c	8b 45 0c	 mov	 eax, DWORD PTR _n$[ebp]
  0006f	f2 0f 11 00	 movsd	 QWORD PTR [eax], xmm0
; Line 81
  00073	b8 01 00 00 00	 mov	 eax, 1
; Line 85
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
$LN9@luaV_tonum:
; Line 80
  0007c	8b 45 0c	 mov	 eax, DWORD PTR _n$[ebp]
  0007f	f2 0f 10 45 f0	 movsd	 xmm0, QWORD PTR _v$[ebp]
  00084	f2 0f 11 00	 movsd	 QWORD PTR [eax], xmm0
; Line 81
  00088	b8 01 00 00 00	 mov	 eax, 1
; Line 85
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c3		 ret	 0
$LN2@luaV_tonum:
; Line 84
  00091	33 c0		 xor	 eax, eax
; Line 85
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
_luaV_tonumber_ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaV_lessequal
_TEXT	SEGMENT
_L$ = 8							; size = 4
_l$ = 12						; size = 4
_r$ = 16						; size = 4
_luaV_lessequal PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 370
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 372
  00004	8b 75 10	 mov	 esi, DWORD PTR _r$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR _l$[ebp]
  0000b	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0000e	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00011	83 f9 03	 cmp	 ecx, 3
  00014	75 18		 jne	 SHORT $LN7@luaV_lesse
  00016	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00019	83 e0 0f	 and	 eax, 15			; 0000000fH
  0001c	3c 03		 cmp	 al, 3
  0001e	75 0e		 jne	 SHORT $LN7@luaV_lesse
; Line 373
  00020	56		 push	 esi
  00021	57		 push	 edi
  00022	e8 00 00 00 00	 call	 _LEnum
  00027	83 c4 08	 add	 esp, 8
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
; Line 386
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
$LN7@luaV_lesse:
; Line 374
  0002e	83 f9 04	 cmp	 ecx, 4
  00031	75 22		 jne	 SHORT $LN5@luaV_lesse
  00033	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00036	24 0f		 and	 al, 15			; 0000000fH
  00038	3a c1		 cmp	 al, cl
  0003a	75 19		 jne	 SHORT $LN5@luaV_lesse
; Line 375
  0003c	ff 36		 push	 DWORD PTR [esi]
  0003e	ff 37		 push	 DWORD PTR [edi]
  00040	e8 00 00 00 00	 call	 _l_strcmp
  00045	83 c4 08	 add	 esp, 8
  00048	33 c9		 xor	 ecx, ecx
  0004a	85 c0		 test	 eax, eax
  0004c	0f 9e c1	 setle	 cl
  0004f	5f		 pop	 edi
  00050	8b c1		 mov	 eax, ecx
  00052	5e		 pop	 esi
; Line 386
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
$LN5@luaV_lesse:
  00055	53		 push	 ebx
; Line 376
  00056	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00059	6a 15		 push	 21			; 00000015H
  0005b	56		 push	 esi
  0005c	57		 push	 edi
  0005d	53		 push	 ebx
  0005e	e8 00 00 00 00	 call	 _luaT_callorderTM
  00063	83 c4 10	 add	 esp, 16			; 00000010H
  00066	85 c0		 test	 eax, eax
  00068	79 28		 jns	 SHORT $LN10@luaV_lesse
; Line 379
  0006a	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
; Line 380
  0006d	6a 14		 push	 20			; 00000014H
  0006f	57		 push	 edi
  00070	56		 push	 esi
  00071	80 48 22 80	 or	 BYTE PTR [eax+34], 128	; 00000080H
  00075	53		 push	 ebx
  00076	e8 00 00 00 00	 call	 _luaT_callorderTM
; Line 381
  0007b	8b 4b 14	 mov	 ecx, DWORD PTR [ebx+20]
  0007e	8b d0		 mov	 edx, eax
  00080	83 c4 10	 add	 esp, 16			; 00000010H
  00083	80 71 22 80	 xor	 BYTE PTR [ecx+34], 128	; 00000080H
; Line 382
  00087	85 d2		 test	 edx, edx
  00089	78 0c		 js	 SHORT $LN12@luaV_lesse
; Line 384
  0008b	33 c0		 xor	 eax, eax
  0008d	85 d2		 test	 edx, edx
  0008f	0f 94 c0	 sete	 al
$LN10@luaV_lesse:
  00092	5b		 pop	 ebx
  00093	5f		 pop	 edi
  00094	5e		 pop	 esi
; Line 386
  00095	5d		 pop	 ebp
  00096	c3		 ret	 0
$LN12@luaV_lesse:
; Line 383
  00097	56		 push	 esi
  00098	57		 push	 edi
  00099	53		 push	 ebx
  0009a	e8 00 00 00 00	 call	 _luaG_ordererror
$LN14@luaV_lesse:
$LN11@luaV_lesse:
  0009f	cc		 int	 3
_luaV_lessequal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaV_lessthan
_TEXT	SEGMENT
_L$ = 8							; size = 4
_l$ = 12						; size = 4
_r$ = 16						; size = 4
_luaV_lessthan PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 350
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 352
  00004	8b 75 10	 mov	 esi, DWORD PTR _r$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR _l$[ebp]
  0000b	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0000e	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00011	83 f9 03	 cmp	 ecx, 3
  00014	75 18		 jne	 SHORT $LN5@luaV_lesst
  00016	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00019	83 e0 0f	 and	 eax, 15			; 0000000fH
  0001c	3c 03		 cmp	 al, 3
  0001e	75 0e		 jne	 SHORT $LN5@luaV_lesst
; Line 353
  00020	56		 push	 esi
  00021	57		 push	 edi
  00022	e8 00 00 00 00	 call	 _LTnum
  00027	83 c4 08	 add	 esp, 8
$LN6@luaV_lesst:
  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
; Line 359
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
$LN5@luaV_lesst:
; Line 354
  0002e	83 f9 04	 cmp	 ecx, 4
  00031	75 22		 jne	 SHORT $LN3@luaV_lesst
  00033	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00036	24 0f		 and	 al, 15			; 0000000fH
  00038	3a c1		 cmp	 al, cl
  0003a	75 19		 jne	 SHORT $LN3@luaV_lesst
; Line 355
  0003c	ff 36		 push	 DWORD PTR [esi]
  0003e	ff 37		 push	 DWORD PTR [edi]
  00040	e8 00 00 00 00	 call	 _l_strcmp
  00045	83 c4 08	 add	 esp, 8
  00048	33 c9		 xor	 ecx, ecx
  0004a	85 c0		 test	 eax, eax
  0004c	0f 98 c1	 sets	 cl
  0004f	5f		 pop	 edi
  00050	8b c1		 mov	 eax, ecx
  00052	5e		 pop	 esi
; Line 359
  00053	5d		 pop	 ebp
  00054	c3		 ret	 0
$LN3@luaV_lesst:
; Line 356
  00055	6a 14		 push	 20			; 00000014H
  00057	56		 push	 esi
  00058	57		 push	 edi
  00059	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0005c	e8 00 00 00 00	 call	 _luaT_callorderTM
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	85 c0		 test	 eax, eax
  00066	79 c2		 jns	 SHORT $LN6@luaV_lesst
; Line 357
  00068	56		 push	 esi
  00069	57		 push	 edi
  0006a	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0006d	e8 00 00 00 00	 call	 _luaG_ordererror
$LN11@luaV_lesst:
$LN8@luaV_lesst:
  00072	cc		 int	 3
_luaV_lessthan ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaV_equalobj
_TEXT	SEGMENT
_i2$1 = -8						; size = 8
_i1$2 = -8						; size = 8
_L$ = 8							; size = 4
_t1$ = 12						; size = 4
_t2$ = 16						; size = 4
_luaV_equalobj PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 393
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
; Line 395
  00008	8b 75 10	 mov	 esi, DWORD PTR _t2$[ebp]
  0000b	57		 push	 edi
  0000c	8b 7d 0c	 mov	 edi, DWORD PTR _t1$[ebp]
  0000f	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00012	8b c2		 mov	 eax, edx
  00014	83 e0 3f	 and	 eax, 63			; 0000003fH
  00017	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0001a	8b cb		 mov	 ecx, ebx
  0001c	83 e1 3f	 and	 ecx, 63			; 0000003fH
  0001f	3b c8		 cmp	 ecx, eax
  00021	74 6d		 je	 SHORT $LN23@luaV_equal
; Line 396
  00023	8b c3		 mov	 eax, ebx
  00025	83 e2 0f	 and	 edx, 15			; 0000000fH
  00028	83 e0 0f	 and	 eax, 15			; 0000000fH
  0002b	3b c2		 cmp	 eax, edx
  0002d	75 58		 jne	 SHORT $LN24@luaV_equal
  0002f	83 f8 03	 cmp	 eax, 3
  00032	75 53		 jne	 SHORT $LN24@luaV_equal
; Line 400
  00034	83 fb 13	 cmp	 ebx, 19			; 00000013H
  00037	75 07		 jne	 SHORT $LN29@luaV_equal
  00039	8b 1f		 mov	 ebx, DWORD PTR [edi]
  0003b	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  0003e	eb 19		 jmp	 SHORT $LN58@luaV_equal
$LN29@luaV_equal:
  00040	6a 00		 push	 0
  00042	8d 45 f8	 lea	 eax, DWORD PTR _i1$2[ebp]
  00045	50		 push	 eax
  00046	57		 push	 edi
  00047	e8 00 00 00 00	 call	 _luaV_tointeger
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	85 c0		 test	 eax, eax
  00051	74 34		 je	 SHORT $LN24@luaV_equal
  00053	8b 7d fc	 mov	 edi, DWORD PTR _i1$2[ebp+4]
  00056	8b 5d f8	 mov	 ebx, DWORD PTR _i1$2[ebp]
$LN58@luaV_equal:
  00059	83 7e 08 13	 cmp	 DWORD PTR [esi+8], 19	; 00000013H
  0005d	75 07		 jne	 SHORT $LN31@luaV_equal
  0005f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00061	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00064	eb 19		 jmp	 SHORT $LN59@luaV_equal
$LN31@luaV_equal:
  00066	6a 00		 push	 0
  00068	8d 45 f8	 lea	 eax, DWORD PTR _i2$1[ebp]
  0006b	50		 push	 eax
  0006c	56		 push	 esi
  0006d	e8 00 00 00 00	 call	 _luaV_tointeger
  00072	83 c4 0c	 add	 esp, 12			; 0000000cH
  00075	85 c0		 test	 eax, eax
  00077	74 0e		 je	 SHORT $LN24@luaV_equal
  00079	8b 45 fc	 mov	 eax, DWORD PTR _i2$1[ebp+4]
  0007c	8b 4d f8	 mov	 ecx, DWORD PTR _i2$1[ebp]
$LN59@luaV_equal:
  0007f	3b d9		 cmp	 ebx, ecx
  00081	75 04		 jne	 SHORT $LN24@luaV_equal
  00083	3b f8		 cmp	 edi, eax
  00085	74 20		 je	 SHORT $LN20@luaV_equal
$LN24@luaV_equal:
  00087	5f		 pop	 edi
  00088	5e		 pop	 esi
; Line 397
  00089	33 c0		 xor	 eax, eax
  0008b	5b		 pop	 ebx
; Line 436
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
$LN23@luaV_equal:
; Line 404
  00090	83 f9 16	 cmp	 ecx, 22			; 00000016H
  00093	0f 87 41 01 00
	00		 ja	 $LN2@luaV_equal
  00099	0f b6 81 00 00
	00 00		 movzx	 eax, BYTE PTR $LN63@luaV_equal[ecx]
  000a0	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN68@luaV_equal[eax*4]
$LN20@luaV_equal:
  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi
; Line 405
  000a9	b8 01 00 00 00	 mov	 eax, 1
  000ae	5b		 pop	 ebx
; Line 436
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
$LN19@luaV_equal:
; Line 406
  000b3	8b 07		 mov	 eax, DWORD PTR [edi]
  000b5	3b 06		 cmp	 eax, DWORD PTR [esi]
  000b7	75 ce		 jne	 SHORT $LN24@luaV_equal
  000b9	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bc	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  000bf	75 c6		 jne	 SHORT $LN24@luaV_equal
  000c1	5f		 pop	 edi
  000c2	5e		 pop	 esi
  000c3	b8 01 00 00 00	 mov	 eax, 1
  000c8	5b		 pop	 ebx
; Line 436
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c3		 ret	 0
$LN18@luaV_equal:
; Line 407
  000cd	f2 0f 10 07	 movsd	 xmm0, QWORD PTR [edi]
  000d1	66 0f 2e 06	 ucomisd xmm0, QWORD PTR [esi]
  000d5	9f		 lahf
  000d6	f6 c4 44	 test	 ah, 68			; 00000044H
  000d9	7a ac		 jp	 SHORT $LN24@luaV_equal
  000db	5f		 pop	 edi
  000dc	5e		 pop	 esi
  000dd	b8 01 00 00 00	 mov	 eax, 1
  000e2	5b		 pop	 ebx
; Line 436
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c3		 ret	 0
$LN13@luaV_equal:
; Line 412
  000e7	ff 36		 push	 DWORD PTR [esi]
  000e9	ff 37		 push	 DWORD PTR [edi]
  000eb	e8 00 00 00 00	 call	 _luaS_eqlngstr
  000f0	83 c4 08	 add	 esp, 8
  000f3	5f		 pop	 edi
  000f4	5e		 pop	 esi
  000f5	5b		 pop	 ebx
; Line 436
  000f6	8b e5		 mov	 esp, ebp
  000f8	5d		 pop	 ebp
  000f9	c3		 ret	 0
$LN12@luaV_equal:
; Line 414
  000fa	8b 0f		 mov	 ecx, DWORD PTR [edi]
  000fc	3b 0e		 cmp	 ecx, DWORD PTR [esi]
  000fe	74 a7		 je	 SHORT $LN20@luaV_equal
; Line 415
  00100	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00103	85 db		 test	 ebx, ebx
  00105	74 80		 je	 SHORT $LN24@luaV_equal
; Line 416
  00107	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0010a	85 c9		 test	 ecx, ecx
  0010c	74 1e		 je	 SHORT $LN60@luaV_equal
  0010e	f6 41 06 20	 test	 BYTE PTR [ecx+6], 32	; 00000020H
  00112	75 18		 jne	 SHORT $LN60@luaV_equal
  00114	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  00117	ff b0 9c 00 00
	00		 push	 DWORD PTR [eax+156]
  0011d	6a 05		 push	 5
  0011f	51		 push	 ecx
  00120	e8 00 00 00 00	 call	 _luaT_gettm
  00125	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 417
  00128	85 c0		 test	 eax, eax
  0012a	75 74		 jne	 SHORT $LN1@luaV_equal
$LN60@luaV_equal:
; Line 418
  0012c	8b 06		 mov	 eax, DWORD PTR [esi]
  0012e	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
; Line 419
  00131	eb 3f		 jmp	 SHORT $LN66@luaV_equal
$LN7@luaV_equal:
; Line 422
  00133	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00135	3b 0e		 cmp	 ecx, DWORD PTR [esi]
  00137	0f 84 6a ff ff
	ff		 je	 $LN20@luaV_equal
; Line 423
  0013d	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00140	85 db		 test	 ebx, ebx
  00142	0f 84 3f ff ff
	ff		 je	 $LN24@luaV_equal
; Line 424
  00148	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  0014b	85 c9		 test	 ecx, ecx
  0014d	74 1e		 je	 SHORT $LN62@luaV_equal
  0014f	f6 41 06 20	 test	 BYTE PTR [ecx+6], 32	; 00000020H
  00153	75 18		 jne	 SHORT $LN62@luaV_equal
  00155	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  00158	ff b0 9c 00 00
	00		 push	 DWORD PTR [eax+156]
  0015e	6a 05		 push	 5
  00160	51		 push	 ecx
  00161	e8 00 00 00 00	 call	 _luaT_gettm
  00166	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 425
  00169	85 c0		 test	 eax, eax
  0016b	75 33		 jne	 SHORT $LN1@luaV_equal
$LN62@luaV_equal:
; Line 426
  0016d	8b 06		 mov	 eax, DWORD PTR [esi]
  0016f	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
$LN66@luaV_equal:
  00172	85 c9		 test	 ecx, ecx
  00174	0f 84 0d ff ff
	ff		 je	 $LN24@luaV_equal
  0017a	f6 41 06 20	 test	 BYTE PTR [ecx+6], 32	; 00000020H
  0017e	0f 85 03 ff ff
	ff		 jne	 $LN24@luaV_equal
  00184	8b 43 10	 mov	 eax, DWORD PTR [ebx+16]
  00187	ff b0 9c 00 00
	00		 push	 DWORD PTR [eax+156]
  0018d	6a 05		 push	 5
  0018f	51		 push	 ecx
  00190	e8 00 00 00 00	 call	 _luaT_gettm
  00195	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 432
  00198	85 c0		 test	 eax, eax
  0019a	0f 84 e7 fe ff
	ff		 je	 $LN24@luaV_equal
$LN1@luaV_equal:
; Line 434
  001a0	6a 01		 push	 1
  001a2	ff 73 0c	 push	 DWORD PTR [ebx+12]
  001a5	56		 push	 esi
  001a6	57		 push	 edi
  001a7	50		 push	 eax
  001a8	53		 push	 ebx
  001a9	e8 00 00 00 00	 call	 _luaT_callTM
; Line 435
  001ae	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  001b1	83 c4 18	 add	 esp, 24			; 00000018H
  001b4	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001b7	85 c9		 test	 ecx, ecx
  001b9	0f 84 c8 fe ff
	ff		 je	 $LN24@luaV_equal
  001bf	83 f9 01	 cmp	 ecx, 1
  001c2	0f 85 df fe ff
	ff		 jne	 $LN20@luaV_equal
  001c8	83 38 00	 cmp	 DWORD PTR [eax], 0
  001cb	0f 84 b6 fe ff
	ff		 je	 $LN24@luaV_equal
  001d1	5f		 pop	 edi
  001d2	5e		 pop	 esi
  001d3	8b c1		 mov	 eax, ecx
  001d5	5b		 pop	 ebx
; Line 436
  001d6	8b e5		 mov	 esp, ebp
  001d8	5d		 pop	 ebp
  001d9	c3		 ret	 0
$LN2@luaV_equal:
; Line 430
  001da	8b 0f		 mov	 ecx, DWORD PTR [edi]
  001dc	33 c0		 xor	 eax, eax
  001de	3b 0e		 cmp	 ecx, DWORD PTR [esi]
  001e0	5f		 pop	 edi
  001e1	5e		 pop	 esi
  001e2	0f 94 c0	 sete	 al
  001e5	5b		 pop	 ebx
; Line 436
  001e6	8b e5		 mov	 esp, ebp
  001e8	5d		 pop	 ebp
  001e9	c3		 ret	 0
  001ea	8b ff		 npad	 2
$LN68@luaV_equal:
  001ec	00 00 00 00	 DD	 $LN20@luaV_equal
  001f0	00 00 00 00	 DD	 $LN2@luaV_equal
  001f4	00 00 00 00	 DD	 $LN18@luaV_equal
  001f8	00 00 00 00	 DD	 $LN7@luaV_equal
  001fc	00 00 00 00	 DD	 $LN12@luaV_equal
  00200	00 00 00 00	 DD	 $LN19@luaV_equal
  00204	00 00 00 00	 DD	 $LN13@luaV_equal
  00208	00 00 00 00	 DD	 $LN2@luaV_equal
$LN63@luaV_equal:
  0020c	00		 DB	 0
  0020d	01		 DB	 1
  0020e	01		 DB	 1
  0020f	02		 DB	 2
  00210	01		 DB	 1
  00211	03		 DB	 3
  00212	07		 DB	 7
  00213	04		 DB	 4
  00214	07		 DB	 7
  00215	07		 DB	 7
  00216	07		 DB	 7
  00217	07		 DB	 7
  00218	07		 DB	 7
  00219	07		 DB	 7
  0021a	07		 DB	 7
  0021b	07		 DB	 7
  0021c	07		 DB	 7
  0021d	07		 DB	 7
  0021e	07		 DB	 7
  0021f	05		 DB	 5
  00220	06		 DB	 6
  00221	07		 DB	 7
  00222	01		 DB	 1
_luaV_equalobj ENDP
_TEXT	ENDS
END
