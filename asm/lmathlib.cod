; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

	TITLE	F:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_03BCGAIFPO@abs?$AA@			; `string'
PUBLIC	??_C@_04PDIFKINK@acos?$AA@			; `string'
PUBLIC	??_C@_04FIHNOPOL@asin?$AA@			; `string'
PUBLIC	??_C@_04MLLJIGOK@atan?$AA@			; `string'
PUBLIC	??_C@_04GFPJNGEK@ceil?$AA@			; `string'
PUBLIC	??_C@_03LALBNOCG@cos?$AA@			; `string'
PUBLIC	??_C@_03OFPLEBM@deg?$AA@			; `string'
PUBLIC	??_C@_03KHJOGHMM@exp?$AA@			; `string'
PUBLIC	??_C@_09EAKFBKNJ@tointeger?$AA@			; `string'
PUBLIC	??_C@_05PBJFFIGL@floor?$AA@			; `string'
PUBLIC	??_C@_04KEPJIHGP@fmod?$AA@			; `string'
PUBLIC	??_C@_03IIMEPOPL@ult?$AA@			; `string'
PUBLIC	??_C@_03MGHMBJCF@log?$AA@			; `string'
PUBLIC	??_C@_03LJAEFNNE@max?$AA@			; `string'
PUBLIC	??_C@_03KLIPLJLL@min?$AA@			; `string'
PUBLIC	??_C@_04EHEDPDJG@modf?$AA@			; `string'
PUBLIC	??_C@_03FHAJEHEA@rad?$AA@			; `string'
PUBLIC	??_C@_06NLFCANPD@random?$AA@			; `string'
PUBLIC	??_C@_0L@PIIACENG@randomseed?$AA@		; `string'
PUBLIC	??_C@_03BLEJJJBH@sin?$AA@			; `string'
PUBLIC	??_C@_04EIAKFFMI@sqrt?$AA@			; `string'
PUBLIC	??_C@_03IIINPABG@tan?$AA@			; `string'
PUBLIC	??_C@_04GPMDFGEJ@type?$AA@			; `string'
PUBLIC	??_C@_05KNGEOGJB@atan2?$AA@			; `string'
PUBLIC	??_C@_04HPJJNFIM@cosh?$AA@			; `string'
PUBLIC	??_C@_04COOMCNPB@sinh?$AA@			; `string'
PUBLIC	??_C@_04FJHINJAO@tanh?$AA@			; `string'
PUBLIC	??_C@_03JGHBODFD@pow?$AA@			; `string'
PUBLIC	??_C@_05GKKHEGJL@frexp?$AA@			; `string'
PUBLIC	??_C@_05CEJMAHNP@ldexp?$AA@			; `string'
PUBLIC	??_C@_05HGHHAHAP@log10?$AA@			; `string'
PUBLIC	??_C@_02OAHAJOFD@pi?$AA@			; `string'
PUBLIC	??_C@_04JJGMCGIH@huge?$AA@			; `string'
PUBLIC	??_C@_0L@FKMOHNGI@maxinteger?$AA@		; `string'
PUBLIC	??_C@_0L@JGMDAGGH@mininteger?$AA@		; `string'
;	COMDAT ??_C@_0L@JGMDAGGH@mininteger?$AA@
CONST	SEGMENT
??_C@_0L@JGMDAGGH@mininteger?$AA@ DB 'mininteger', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FKMOHNGI@maxinteger?$AA@
CONST	SEGMENT
??_C@_0L@FKMOHNGI@maxinteger?$AA@ DB 'maxinteger', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04JJGMCGIH@huge?$AA@
CONST	SEGMENT
??_C@_04JJGMCGIH@huge?$AA@ DB 'huge', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02OAHAJOFD@pi?$AA@
CONST	SEGMENT
??_C@_02OAHAJOFD@pi?$AA@ DB 'pi', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05HGHHAHAP@log10?$AA@
CONST	SEGMENT
??_C@_05HGHHAHAP@log10?$AA@ DB 'log10', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CEJMAHNP@ldexp?$AA@
CONST	SEGMENT
??_C@_05CEJMAHNP@ldexp?$AA@ DB 'ldexp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GKKHEGJL@frexp?$AA@
CONST	SEGMENT
??_C@_05GKKHEGJL@frexp?$AA@ DB 'frexp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JGHBODFD@pow?$AA@
CONST	SEGMENT
??_C@_03JGHBODFD@pow?$AA@ DB 'pow', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04FJHINJAO@tanh?$AA@
CONST	SEGMENT
??_C@_04FJHINJAO@tanh?$AA@ DB 'tanh', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04COOMCNPB@sinh?$AA@
CONST	SEGMENT
??_C@_04COOMCNPB@sinh?$AA@ DB 'sinh', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HPJJNFIM@cosh?$AA@
CONST	SEGMENT
??_C@_04HPJJNFIM@cosh?$AA@ DB 'cosh', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KNGEOGJB@atan2?$AA@
CONST	SEGMENT
??_C@_05KNGEOGJB@atan2?$AA@ DB 'atan2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GPMDFGEJ@type?$AA@
CONST	SEGMENT
??_C@_04GPMDFGEJ@type?$AA@ DB 'type', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03IIINPABG@tan?$AA@
CONST	SEGMENT
??_C@_03IIINPABG@tan?$AA@ DB 'tan', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04EIAKFFMI@sqrt?$AA@
CONST	SEGMENT
??_C@_04EIAKFFMI@sqrt?$AA@ DB 'sqrt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03BLEJJJBH@sin?$AA@
CONST	SEGMENT
??_C@_03BLEJJJBH@sin?$AA@ DB 'sin', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PIIACENG@randomseed?$AA@
CONST	SEGMENT
??_C@_0L@PIIACENG@randomseed?$AA@ DB 'randomseed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NLFCANPD@random?$AA@
CONST	SEGMENT
??_C@_06NLFCANPD@random?$AA@ DB 'random', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03FHAJEHEA@rad?$AA@
CONST	SEGMENT
??_C@_03FHAJEHEA@rad?$AA@ DB 'rad', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04EHEDPDJG@modf?$AA@
CONST	SEGMENT
??_C@_04EHEDPDJG@modf?$AA@ DB 'modf', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03KLIPLJLL@min?$AA@
CONST	SEGMENT
??_C@_03KLIPLJLL@min?$AA@ DB 'min', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LJAEFNNE@max?$AA@
CONST	SEGMENT
??_C@_03LJAEFNNE@max?$AA@ DB 'max', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MGHMBJCF@log?$AA@
CONST	SEGMENT
??_C@_03MGHMBJCF@log?$AA@ DB 'log', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IIMEPOPL@ult?$AA@
CONST	SEGMENT
??_C@_03IIMEPOPL@ult?$AA@ DB 'ult', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KEPJIHGP@fmod?$AA@
CONST	SEGMENT
??_C@_04KEPJIHGP@fmod?$AA@ DB 'fmod', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PBJFFIGL@floor?$AA@
CONST	SEGMENT
??_C@_05PBJFFIGL@floor?$AA@ DB 'floor', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09EAKFBKNJ@tointeger?$AA@
CONST	SEGMENT
??_C@_09EAKFBKNJ@tointeger?$AA@ DB 'tointeger', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03KHJOGHMM@exp?$AA@
CONST	SEGMENT
??_C@_03KHJOGHMM@exp?$AA@ DB 'exp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFPLEBM@deg?$AA@
CONST	SEGMENT
??_C@_03OFPLEBM@deg?$AA@ DB 'deg', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LALBNOCG@cos?$AA@
CONST	SEGMENT
??_C@_03LALBNOCG@cos?$AA@ DB 'cos', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04GFPJNGEK@ceil?$AA@
CONST	SEGMENT
??_C@_04GFPJNGEK@ceil?$AA@ DB 'ceil', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MLLJIGOK@atan?$AA@
CONST	SEGMENT
??_C@_04MLLJIGOK@atan?$AA@ DB 'atan', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FIHNOPOL@asin?$AA@
CONST	SEGMENT
??_C@_04FIHNOPOL@asin?$AA@ DB 'asin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PDIFKINK@acos?$AA@
CONST	SEGMENT
??_C@_04PDIFKINK@acos?$AA@ DB 'acos', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03BCGAIFPO@abs?$AA@
CONST	SEGMENT
??_C@_03BCGAIFPO@abs?$AA@ DB 'abs', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_mathlib DD	FLAT:??_C@_03BCGAIFPO@abs?$AA@
	DD	FLAT:_math_abs
	DD	FLAT:??_C@_04PDIFKINK@acos?$AA@
	DD	FLAT:_math_acos
	DD	FLAT:??_C@_04FIHNOPOL@asin?$AA@
	DD	FLAT:_math_asin
	DD	FLAT:??_C@_04MLLJIGOK@atan?$AA@
	DD	FLAT:_math_atan
	DD	FLAT:??_C@_04GFPJNGEK@ceil?$AA@
	DD	FLAT:_math_ceil
	DD	FLAT:??_C@_03LALBNOCG@cos?$AA@
	DD	FLAT:_math_cos
	DD	FLAT:??_C@_03OFPLEBM@deg?$AA@
	DD	FLAT:_math_deg
	DD	FLAT:??_C@_03KHJOGHMM@exp?$AA@
	DD	FLAT:_math_exp
	DD	FLAT:??_C@_09EAKFBKNJ@tointeger?$AA@
	DD	FLAT:_math_toint
	DD	FLAT:??_C@_05PBJFFIGL@floor?$AA@
	DD	FLAT:_math_floor
	DD	FLAT:??_C@_04KEPJIHGP@fmod?$AA@
	DD	FLAT:_math_fmod
	DD	FLAT:??_C@_03IIMEPOPL@ult?$AA@
	DD	FLAT:_math_ult
	DD	FLAT:??_C@_03MGHMBJCF@log?$AA@
	DD	FLAT:_math_log
	DD	FLAT:??_C@_03LJAEFNNE@max?$AA@
	DD	FLAT:_math_max
	DD	FLAT:??_C@_03KLIPLJLL@min?$AA@
	DD	FLAT:_math_min
	DD	FLAT:??_C@_04EHEDPDJG@modf?$AA@
	DD	FLAT:_math_modf
	DD	FLAT:??_C@_03FHAJEHEA@rad?$AA@
	DD	FLAT:_math_rad
	DD	FLAT:??_C@_06NLFCANPD@random?$AA@
	DD	FLAT:_math_random
	DD	FLAT:??_C@_0L@PIIACENG@randomseed?$AA@
	DD	FLAT:_math_randomseed
	DD	FLAT:??_C@_03BLEJJJBH@sin?$AA@
	DD	FLAT:_math_sin
	DD	FLAT:??_C@_04EIAKFFMI@sqrt?$AA@
	DD	FLAT:_math_sqrt
	DD	FLAT:??_C@_03IIINPABG@tan?$AA@
	DD	FLAT:_math_tan
	DD	FLAT:??_C@_04GPMDFGEJ@type?$AA@
	DD	FLAT:_math_type
	DD	FLAT:??_C@_05KNGEOGJB@atan2?$AA@
	DD	FLAT:_math_atan
	DD	FLAT:??_C@_04HPJJNFIM@cosh?$AA@
	DD	FLAT:_math_cosh
	DD	FLAT:??_C@_04COOMCNPB@sinh?$AA@
	DD	FLAT:_math_sinh
	DD	FLAT:??_C@_04FJHINJAO@tanh?$AA@
	DD	FLAT:_math_tanh
	DD	FLAT:??_C@_03JGHBODFD@pow?$AA@
	DD	FLAT:_math_pow
	DD	FLAT:??_C@_05GKKHEGJL@frexp?$AA@
	DD	FLAT:_math_frexp
	DD	FLAT:??_C@_05CEJMAHNP@ldexp?$AA@
	DD	FLAT:_math_ldexp
	DD	FLAT:??_C@_05HGHHAHAP@log10?$AA@
	DD	FLAT:_math_log10
	DD	FLAT:??_C@_02OAHAJOFD@pi?$AA@
	DD	00H
	DD	FLAT:??_C@_04JJGMCGIH@huge?$AA@
	DD	00H
	DD	FLAT:??_C@_0L@FKMOHNGI@maxinteger?$AA@
	DD	00H
	DD	FLAT:??_C@_0L@JGMDAGGH@mininteger?$AA@
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	_luaopen_math
PUBLIC	??_C@_04DDFHDMOL@zero?$AA@			; `string'
PUBLIC	??_C@_0P@PDHEKNMA@value?5expected?$AA@		; `string'
PUBLIC	??_C@_0BK@KNAOOCNO@wrong?5number?5of?5arguments?$AA@ ; `string'
PUBLIC	??_C@_0BC@JKHEKPDC@interval?5is?5empty?$AA@	; `string'
PUBLIC	??_C@_0BD@LOCDHFO@interval?5too?5large?$AA@	; `string'
PUBLIC	??_C@_07LKHFMGFB@integer?$AA@			; `string'
PUBLIC	??_C@_05KNFBNCOH@float?$AA@			; `string'
PUBLIC	__real@3f00000000000000
PUBLIC	__real@3f91df46a2529d39
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@400921fb54442d18
PUBLIC	__real@4024000000000000
PUBLIC	__real@404ca5dc1a63c1f8
PUBLIC	__real@405bc00000000000
PUBLIC	__real@43e0000000000000
PUBLIC	__real@7ff0000000000000
PUBLIC	__real@c3e0000000000000
EXTRN	__sin:PROC
EXTRN	__cos:PROC
EXTRN	__tan:PROC
EXTRN	_sqrt_1:PROC
EXTRN	___pow:PROC
EXTRN	__floor:PROC
EXTRN	__ceil:PROC
EXTRN	__exp:PROC
EXTRN	__log10:PROC
EXTRN	__log:PROC
EXTRN	__log2:PROC
EXTRN	___rand:PROC
EXTRN	_srand_1:PROC
EXTRN	___asin:PROC
EXTRN	___acos:PROC
EXTRN	___sinh:PROC
EXTRN	___cosh:PROC
EXTRN	___tanh:PROC
EXTRN	___fmod:PROC
EXTRN	___fabs:PROC
EXTRN	_____atan2:PROC
EXTRN	___ldexp:PROC
EXTRN	___frexp:PROC
EXTRN	_lua_gettop:PROC
EXTRN	_lua_settop:PROC
EXTRN	_lua_pushvalue:PROC
EXTRN	_lua_isinteger:PROC
EXTRN	_lua_type:PROC
EXTRN	_lua_tointegerx:PROC
EXTRN	_lua_compare:PROC
EXTRN	_lua_pushnil:PROC
EXTRN	_lua_pushnumber:PROC
EXTRN	_lua_pushinteger:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_lua_pushboolean:PROC
EXTRN	_lua_createtable:PROC
EXTRN	_lua_setfield:PROC
EXTRN	_luaL_checkversion_:PROC
EXTRN	_luaL_argerror:PROC
EXTRN	_luaL_checknumber:PROC
EXTRN	_luaL_optnumber:PROC
EXTRN	_luaL_checkinteger:PROC
EXTRN	_luaL_checkany:PROC
EXTRN	_luaL_error:PROC
EXTRN	_luaL_setfuncs:PROC
EXTRN	__allrem:PROC
EXTRN	__dtol3:PROC
EXTRN	__ltod3:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@c3e0000000000000
CONST	SEGMENT
__real@c3e0000000000000 DQ 0c3e0000000000000r	; -9.22337e+018
CONST	ENDS
;	COMDAT __real@7ff0000000000000
CONST	SEGMENT
__real@7ff0000000000000 DQ 07ff0000000000000r	; 1.#INF
CONST	ENDS
;	COMDAT __real@43e0000000000000
CONST	SEGMENT
__real@43e0000000000000 DQ 043e0000000000000r	; 9.22337e+018
CONST	ENDS
;	COMDAT __real@405bc00000000000
CONST	SEGMENT
__real@405bc00000000000 DQ 0405bc00000000000r	; 111
CONST	ENDS
;	COMDAT __real@404ca5dc1a63c1f8
CONST	SEGMENT
__real@404ca5dc1a63c1f8 DQ 0404ca5dc1a63c1f8r	; 57.2958
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@400921fb54442d18
CONST	SEGMENT
__real@400921fb54442d18 DQ 0400921fb54442d18r	; 3.14159
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f91df46a2529d39
CONST	SEGMENT
__real@3f91df46a2529d39 DQ 03f91df46a2529d39r	; 0.0174533
CONST	ENDS
;	COMDAT __real@3f00000000000000
CONST	SEGMENT
__real@3f00000000000000 DQ 03f00000000000000r	; 3.05176e-005
CONST	ENDS
;	COMDAT ??_C@_05KNFBNCOH@float?$AA@
CONST	SEGMENT
??_C@_05KNFBNCOH@float?$AA@ DB 'float', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LKHFMGFB@integer?$AA@
CONST	SEGMENT
??_C@_07LKHFMGFB@integer?$AA@ DB 'integer', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LOCDHFO@interval?5too?5large?$AA@
CONST	SEGMENT
??_C@_0BD@LOCDHFO@interval?5too?5large?$AA@ DB 'interval too large', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JKHEKPDC@interval?5is?5empty?$AA@
CONST	SEGMENT
??_C@_0BC@JKHEKPDC@interval?5is?5empty?$AA@ DB 'interval is empty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KNAOOCNO@wrong?5number?5of?5arguments?$AA@
CONST	SEGMENT
??_C@_0BK@KNAOOCNO@wrong?5number?5of?5arguments?$AA@ DB 'wrong number of '
	DB	'arguments', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PDHEKNMA@value?5expected?$AA@
CONST	SEGMENT
??_C@_0P@PDHEKNMA@value?5expected?$AA@ DB 'value expected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04DDFHDMOL@zero?$AA@
CONST	SEGMENT
??_C@_04DDFHDMOL@zero?$AA@ DB 'zero', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_log10
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_log10 PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 340
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 341
  00003	6a 01		 push	 1
  00005	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00008	e8 00 00 00 00	 call	 _luaL_checknumber
  0000d	dd 1c 24	 fstp	 QWORD PTR [esp]
  00010	e8 00 00 00 00	 call	 __log10
  00015	dd 1c 24	 fstp	 QWORD PTR [esp]
  00018	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001b	e8 00 00 00 00	 call	 _lua_pushnumber
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 342
  00023	b8 01 00 00 00	 mov	 eax, 1
; Line 343
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
_math_log10 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_ldexp
_TEXT	SEGMENT
_x$ = -8						; size = 8
_L$ = 8							; size = 4
_math_ldexp PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 333
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
; Line 334
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	6a 01		 push	 1
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _luaL_checknumber
; Line 335
  00012	6a 02		 push	 2
  00014	56		 push	 esi
  00015	dd 5d f8	 fstp	 QWORD PTR _x$[ebp]
  00018	e8 00 00 00 00	 call	 _luaL_checkinteger
; Line 336
  0001d	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _x$[ebp]
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	50		 push	 eax
  00026	83 ec 08	 sub	 esp, 8
  00029	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0002e	e8 00 00 00 00	 call	 ___ldexp
  00033	83 c4 04	 add	 esp, 4
  00036	dd 1c 24	 fstp	 QWORD PTR [esp]
  00039	56		 push	 esi
  0003a	e8 00 00 00 00	 call	 _lua_pushnumber
  0003f	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 337
  00042	b8 01 00 00 00	 mov	 eax, 1
  00047	5e		 pop	 esi
; Line 338
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
_math_ldexp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_frexp
_TEXT	SEGMENT
_e$ = -4						; size = 4
_L$ = 8							; size = 4
_math_frexp PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 326
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
; Line 328
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	8d 45 fc	 lea	 eax, DWORD PTR _e$[ebp]
  0000b	50		 push	 eax
  0000c	6a 01		 push	 1
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 _luaL_checknumber
  00014	dd 1c 24	 fstp	 QWORD PTR [esp]
  00017	e8 00 00 00 00	 call	 ___frexp
  0001c	83 c4 04	 add	 esp, 4
  0001f	dd 1c 24	 fstp	 QWORD PTR [esp]
  00022	56		 push	 esi
  00023	e8 00 00 00 00	 call	 _lua_pushnumber
; Line 329
  00028	8b 45 fc	 mov	 eax, DWORD PTR _e$[ebp]
  0002b	99		 cdq
  0002c	52		 push	 edx
  0002d	50		 push	 eax
  0002e	56		 push	 esi
  0002f	e8 00 00 00 00	 call	 _lua_pushinteger
  00034	83 c4 18	 add	 esp, 24			; 00000018H
; Line 330
  00037	b8 02 00 00 00	 mov	 eax, 2
  0003c	5e		 pop	 esi
; Line 331
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
_math_frexp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_pow
_TEXT	SEGMENT
_x$ = -16						; size = 8
_y$ = -8						; size = 8
_L$ = 8							; size = 4
_math_pow PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 319
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
; Line 320
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	6a 01		 push	 1
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _luaL_checknumber
; Line 321
  00012	6a 02		 push	 2
  00014	dd 5d f0	 fstp	 QWORD PTR _x$[ebp]
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 _luaL_checknumber
; Line 322
  0001d	f2 0f 10 45 f0	 movsd	 xmm0, QWORD PTR _x$[ebp]
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	dd 5d f8	 fstp	 QWORD PTR _y$[ebp]
  00028	f2 0f 2c 45 f8	 cvttsd2si eax, QWORD PTR _y$[ebp]
  0002d	50		 push	 eax
  0002e	83 ec 08	 sub	 esp, 8
  00031	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00036	e8 00 00 00 00	 call	 ___pow
  0003b	83 c4 04	 add	 esp, 4
  0003e	dd 1c 24	 fstp	 QWORD PTR [esp]
  00041	56		 push	 esi
  00042	e8 00 00 00 00	 call	 _lua_pushnumber
  00047	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 323
  0004a	b8 01 00 00 00	 mov	 eax, 1
  0004f	5e		 pop	 esi
; Line 324
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
_math_pow ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_tanh
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_tanh PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 314
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 315
  00003	6a 01		 push	 1
  00005	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00008	e8 00 00 00 00	 call	 _luaL_checknumber
  0000d	dd 1c 24	 fstp	 QWORD PTR [esp]
  00010	e8 00 00 00 00	 call	 ___tanh
  00015	dd 1c 24	 fstp	 QWORD PTR [esp]
  00018	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001b	e8 00 00 00 00	 call	 _lua_pushnumber
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 316
  00023	b8 01 00 00 00	 mov	 eax, 1
; Line 317
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
_math_tanh ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_sinh
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_sinh PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 309
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 310
  00003	6a 01		 push	 1
  00005	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00008	e8 00 00 00 00	 call	 _luaL_checknumber
  0000d	dd 1c 24	 fstp	 QWORD PTR [esp]
  00010	e8 00 00 00 00	 call	 ___sinh
  00015	dd 1c 24	 fstp	 QWORD PTR [esp]
  00018	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001b	e8 00 00 00 00	 call	 _lua_pushnumber
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 311
  00023	b8 01 00 00 00	 mov	 eax, 1
; Line 312
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
_math_sinh ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_cosh
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_cosh PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 304
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 305
  00003	6a 01		 push	 1
  00005	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00008	e8 00 00 00 00	 call	 _luaL_checknumber
  0000d	dd 1c 24	 fstp	 QWORD PTR [esp]
  00010	e8 00 00 00 00	 call	 ___cosh
  00015	dd 1c 24	 fstp	 QWORD PTR [esp]
  00018	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001b	e8 00 00 00 00	 call	 _lua_pushnumber
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 306
  00023	b8 01 00 00 00	 mov	 eax, 1
; Line 307
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
_math_cosh ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_type
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_type PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 282
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 283
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 01		 push	 1
  00009	56		 push	 esi
  0000a	e8 00 00 00 00	 call	 _lua_type
  0000f	83 c4 08	 add	 esp, 8
; Line 284
  00012	6a 01		 push	 1
  00014	56		 push	 esi
  00015	83 f8 03	 cmp	 eax, 3
  00018	75 38		 jne	 SHORT $LN4@math_type
  0001a	e8 00 00 00 00	 call	 _lua_isinteger
  0001f	83 c4 08	 add	 esp, 8
  00022	85 c0		 test	 eax, eax
  00024	74 16		 je	 SHORT $LN3@math_type
; Line 285
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_07LKHFMGFB@integer?$AA@
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 _lua_pushstring
  00031	83 c4 08	 add	 esp, 8
; Line 293
  00034	b8 01 00 00 00	 mov	 eax, 1
  00039	5e		 pop	 esi
; Line 294
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
$LN3@math_type:
; Line 287
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_05KNFBNCOH@float?$AA@
  00041	56		 push	 esi
  00042	e8 00 00 00 00	 call	 _lua_pushstring
  00047	83 c4 08	 add	 esp, 8
; Line 293
  0004a	b8 01 00 00 00	 mov	 eax, 1
  0004f	5e		 pop	 esi
; Line 294
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN4@math_type:
; Line 290
  00052	e8 00 00 00 00	 call	 _luaL_checkany
; Line 291
  00057	56		 push	 esi
  00058	e8 00 00 00 00	 call	 _lua_pushnil
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 293
  00060	b8 01 00 00 00	 mov	 eax, 1
  00065	5e		 pop	 esi
; Line 294
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
_math_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_randomseed
_TEXT	SEGMENT
tv73 = -8						; size = 8
_L$ = 8							; size = 4
_math_randomseed PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 275
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
; Line 276
  00006	6a 01		 push	 1
  00008	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000b	e8 00 00 00 00	 call	 _luaL_checknumber
  00010	83 c4 08	 add	 esp, 8
  00013	dd 5d f8	 fstp	 QWORD PTR tv73[ebp]
  00016	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR tv73[ebp]
  0001b	e8 00 00 00 00	 call	 __dtol3
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 _srand_1
  00026	83 c4 04	 add	 esp, 4
; Line 277
  00029	e8 00 00 00 00	 call	 ___rand
; Line 278
  0002e	33 c0		 xor	 eax, eax
; Line 279
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
_math_randomseed ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_random
_TEXT	SEGMENT
_r$1$ = -16						; size = 8
_up$2$ = -8						; size = 4
_up$1$ = -4						; size = 4
_L$ = 8							; size = 4
_math_random PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 245
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
; Line 247
  00007	e8 00 00 00 00	 call	 ___rand
; Line 248
  0000c	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000f	56		 push	 esi
  00010	66 0f 6e c0	 movd	 xmm0, eax
  00014	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00018	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000
  00020	f2 0f 11 45 f0	 movsd	 QWORD PTR _r$1$[ebp], xmm0
  00025	e8 00 00 00 00	 call	 _lua_gettop
  0002a	83 c4 04	 add	 esp, 4
  0002d	83 e8 00	 sub	 eax, 0
  00030	0f 84 e2 00 00
	00		 je	 $LN4@math_rando
  00036	53		 push	 ebx
  00037	57		 push	 edi
  00038	48		 dec	 eax
  00039	74 36		 je	 SHORT $LN3@math_rando
  0003b	48		 dec	 eax
  0003c	74 15		 je	 SHORT $LN2@math_rando
; Line 263
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@KNAOOCNO@wrong?5number?5of?5arguments?$AA@
  00043	56		 push	 esi
  00044	e8 00 00 00 00	 call	 _luaL_error
  00049	83 c4 08	 add	 esp, 8
  0004c	5f		 pop	 edi
  0004d	5b		 pop	 ebx
  0004e	5e		 pop	 esi
; Line 272
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
$LN2@math_rando:
; Line 259
  00053	6a 01		 push	 1
  00055	56		 push	 esi
  00056	e8 00 00 00 00	 call	 _luaL_checkinteger
; Line 260
  0005b	6a 02		 push	 2
  0005d	56		 push	 esi
  0005e	8b f8		 mov	 edi, eax
  00060	8b da		 mov	 ebx, edx
  00062	e8 00 00 00 00	 call	 _luaL_checkinteger
  00067	8b ca		 mov	 ecx, edx
  00069	83 c4 10	 add	 esp, 16			; 00000010H
  0006c	89 4d f8	 mov	 DWORD PTR _up$2$[ebp], ecx
; Line 261
  0006f	eb 16		 jmp	 SHORT $LN19@math_rando
$LN3@math_rando:
; Line 254
  00071	bf 01 00 00 00	 mov	 edi, 1
  00076	33 db		 xor	 ebx, ebx
; Line 255
  00078	57		 push	 edi
  00079	56		 push	 esi
  0007a	e8 00 00 00 00	 call	 _luaL_checkinteger
  0007f	83 c4 08	 add	 esp, 8
  00082	89 55 f8	 mov	 DWORD PTR _up$2$[ebp], edx
  00085	8b ca		 mov	 ecx, edx
$LN19@math_rando:
  00087	89 45 fc	 mov	 DWORD PTR _up$1$[ebp], eax
; Line 266
  0008a	3b d9		 cmp	 ebx, ecx
  0008c	7c 19		 jl	 SHORT $LN9@math_rando
  0008e	7f 04		 jg	 SHORT $LN11@math_rando
  00090	3b f8		 cmp	 edi, eax
  00092	76 13		 jbe	 SHORT $LN9@math_rando
$LN11@math_rando:
  00094	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@JKHEKPDC@interval?5is?5empty?$AA@
  00099	6a 01		 push	 1
  0009b	56		 push	 esi
  0009c	e8 00 00 00 00	 call	 _luaL_argerror
  000a1	8b 4d f8	 mov	 ecx, DWORD PTR _up$2$[ebp]
  000a4	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN9@math_rando:
; Line 268
  000a7	85 db		 test	 ebx, ebx
  000a9	7f 2f		 jg	 SHORT $LN16@math_rando
  000ab	7c 04		 jl	 SHORT $LN12@math_rando
  000ad	85 ff		 test	 edi, edi
  000af	73 29		 jae	 SHORT $LN16@math_rando
$LN12@math_rando:
  000b1	8b d7		 mov	 edx, edi
  000b3	8b c3		 mov	 eax, ebx
  000b5	83 c2 ff	 add	 edx, -1
  000b8	15 ff ff ff 7f	 adc	 eax, 2147483647		; 7fffffffH
  000bd	3b c8		 cmp	 ecx, eax
  000bf	7c 19		 jl	 SHORT $LN16@math_rando
  000c1	7f 07		 jg	 SHORT $LN13@math_rando
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _up$1$[ebp]
  000c6	3b c2		 cmp	 eax, edx
  000c8	76 13		 jbe	 SHORT $LN10@math_rando
$LN13@math_rando:
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LOCDHFO@interval?5too?5large?$AA@
  000cf	6a 01		 push	 1
  000d1	56		 push	 esi
  000d2	e8 00 00 00 00	 call	 _luaL_argerror
  000d7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN16@math_rando:
  000da	8b 45 fc	 mov	 eax, DWORD PTR _up$1$[ebp]
$LN10@math_rando:
; Line 269
  000dd	8b 55 f8	 mov	 edx, DWORD PTR _up$2$[ebp]
  000e0	2b c7		 sub	 eax, edi
  000e2	8b c8		 mov	 ecx, eax
  000e4	1b d3		 sbb	 edx, ebx
  000e6	e8 00 00 00 00	 call	 __ltod3
  000eb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000f3	f2 0f 59 45 f0	 mulsd	 xmm0, QWORD PTR _r$1$[ebp]
; Line 270
  000f8	e8 00 00 00 00	 call	 __dtol3
  000fd	03 c7		 add	 eax, edi
  000ff	13 d3		 adc	 edx, ebx
  00101	52		 push	 edx
  00102	50		 push	 eax
  00103	56		 push	 esi
  00104	e8 00 00 00 00	 call	 _lua_pushinteger
  00109	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 271
  0010c	b8 01 00 00 00	 mov	 eax, 1
  00111	5f		 pop	 edi
  00112	5b		 pop	 ebx
  00113	5e		 pop	 esi
; Line 272
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c3		 ret	 0
$LN4@math_rando:
; Line 250
  00118	f2 0f 10 4d f0	 movsd	 xmm1, QWORD PTR _r$1$[ebp]
  0011d	83 ec 08	 sub	 esp, 8
  00120	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  00125	56		 push	 esi
  00126	e8 00 00 00 00	 call	 _lua_pushnumber
  0012b	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 251
  0012e	b8 01 00 00 00	 mov	 eax, 1
  00133	5e		 pop	 esi
; Line 272
  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c3		 ret	 0
_math_random ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_max
_TEXT	SEGMENT
_n$1$ = -4						; size = 4
_L$ = 8							; size = 4
_math_max PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 227
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; Line 228
  00005	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	53		 push	 ebx
  0000b	e8 00 00 00 00	 call	 _lua_gettop
; Line 229
  00010	be 01 00 00 00	 mov	 esi, 1
  00015	89 45 fc	 mov	 DWORD PTR _n$1$[ebp], eax
  00018	83 c4 04	 add	 esp, 4
; Line 231
  0001b	3b c6		 cmp	 eax, esi
  0001d	7d 12		 jge	 SHORT $LN7@math_max
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PDHEKNMA@value?5expected?$AA@
  00024	56		 push	 esi
  00025	53		 push	 ebx
  00026	e8 00 00 00 00	 call	 _luaL_argerror
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _n$1$[ebp]
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@math_max:
; Line 232
  00031	bf 02 00 00 00	 mov	 edi, 2
  00036	3b c7		 cmp	 eax, edi
  00038	7c 1e		 jl	 SHORT $LN2@math_max
  0003a	8d 9b 00 00 00
	00		 npad	 6
$LL4@math_max:
; Line 233
  00040	6a 01		 push	 1
  00042	57		 push	 edi
  00043	56		 push	 esi
  00044	53		 push	 ebx
  00045	e8 00 00 00 00	 call	 _lua_compare
  0004a	83 c4 10	 add	 esp, 16			; 00000010H
  0004d	85 c0		 test	 eax, eax
  0004f	0f 45 f7	 cmovne	 esi, edi
  00052	47		 inc	 edi
  00053	3b 7d fc	 cmp	 edi, DWORD PTR _n$1$[ebp]
  00056	7e e8		 jle	 SHORT $LL4@math_max
$LN2@math_max:
; Line 236
  00058	56		 push	 esi
  00059	53		 push	 ebx
  0005a	e8 00 00 00 00	 call	 _lua_pushvalue
  0005f	83 c4 08	 add	 esp, 8
; Line 237
  00062	b8 01 00 00 00	 mov	 eax, 1
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
; Line 238
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
_math_max ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_min
_TEXT	SEGMENT
_n$1$ = -4						; size = 4
_L$ = 8							; size = 4
_math_min PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 213
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
; Line 214
  00005	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	53		 push	 ebx
  0000b	e8 00 00 00 00	 call	 _lua_gettop
; Line 215
  00010	be 01 00 00 00	 mov	 esi, 1
  00015	89 45 fc	 mov	 DWORD PTR _n$1$[ebp], eax
  00018	83 c4 04	 add	 esp, 4
; Line 217
  0001b	3b c6		 cmp	 eax, esi
  0001d	7d 12		 jge	 SHORT $LN7@math_min
  0001f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PDHEKNMA@value?5expected?$AA@
  00024	56		 push	 esi
  00025	53		 push	 ebx
  00026	e8 00 00 00 00	 call	 _luaL_argerror
  0002b	8b 45 fc	 mov	 eax, DWORD PTR _n$1$[ebp]
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@math_min:
; Line 218
  00031	bf 02 00 00 00	 mov	 edi, 2
  00036	3b c7		 cmp	 eax, edi
  00038	7c 1e		 jl	 SHORT $LN2@math_min
  0003a	8d 9b 00 00 00
	00		 npad	 6
$LL4@math_min:
; Line 219
  00040	6a 01		 push	 1
  00042	56		 push	 esi
  00043	57		 push	 edi
  00044	53		 push	 ebx
  00045	e8 00 00 00 00	 call	 _lua_compare
  0004a	83 c4 10	 add	 esp, 16			; 00000010H
  0004d	85 c0		 test	 eax, eax
  0004f	0f 45 f7	 cmovne	 esi, edi
  00052	47		 inc	 edi
  00053	3b 7d fc	 cmp	 edi, DWORD PTR _n$1$[ebp]
  00056	7e e8		 jle	 SHORT $LL4@math_min
$LN2@math_min:
; Line 222
  00058	56		 push	 esi
  00059	53		 push	 ebx
  0005a	e8 00 00 00 00	 call	 _lua_pushvalue
  0005f	83 c4 08	 add	 esp, 8
; Line 223
  00062	b8 01 00 00 00	 mov	 eax, 1
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
; Line 224
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c3		 ret	 0
_math_min ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_rad
_TEXT	SEGMENT
tv72 = -8						; size = 8
_L$ = 8							; size = 4
_math_rad PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 207
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
; Line 208
  00006	6a 01		 push	 1
  00008	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000b	e8 00 00 00 00	 call	 _luaL_checknumber
  00010	dd 5d f8	 fstp	 QWORD PTR tv72[ebp]
  00013	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR tv72[ebp]
  00018	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a2529d39
  00020	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00025	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00028	e8 00 00 00 00	 call	 _lua_pushnumber
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 209
  00030	b8 01 00 00 00	 mov	 eax, 1
; Line 210
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_math_rad ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_deg
_TEXT	SEGMENT
tv72 = -8						; size = 8
_L$ = 8							; size = 4
_math_deg PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 202
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
; Line 203
  00006	6a 01		 push	 1
  00008	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000b	e8 00 00 00 00	 call	 _luaL_checknumber
  00010	dd 5d f8	 fstp	 QWORD PTR tv72[ebp]
  00013	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR tv72[ebp]
  00018	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@404ca5dc1a63c1f8
  00020	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00025	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00028	e8 00 00 00 00	 call	 _lua_pushnumber
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 204
  00030	b8 01 00 00 00	 mov	 eax, 1
; Line 205
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_math_deg ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_exp
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_exp PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 197
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 198
  00003	6a 01		 push	 1
  00005	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00008	e8 00 00 00 00	 call	 _luaL_checknumber
  0000d	dd 1c 24	 fstp	 QWORD PTR [esp]
  00010	e8 00 00 00 00	 call	 __exp
  00015	dd 1c 24	 fstp	 QWORD PTR [esp]
  00018	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001b	e8 00 00 00 00	 call	 _lua_pushnumber
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 199
  00023	b8 01 00 00 00	 mov	 eax, 1
; Line 200
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
_math_exp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_log
_TEXT	SEGMENT
tv176 = -16						; size = 8
_base$1 = -16						; size = 8
tv170 = -8						; size = 8
_res$ = -8						; size = 8
_x$ = -8						; size = 8
_L$ = 8							; size = 4
_math_log PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 180
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
; Line 181
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	6a 01		 push	 1
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _luaL_checknumber
; Line 183
  00012	6a 02		 push	 2
  00014	56		 push	 esi
  00015	dd 5d f8	 fstp	 QWORD PTR _x$[ebp]
  00018	e8 00 00 00 00	 call	 _lua_type
  0001d	83 c4 10	 add	 esp, 16			; 00000010H
  00020	85 c0		 test	 eax, eax
  00022	7f 1a		 jg	 SHORT $LN6@math_log
; Line 184
  00024	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _x$[ebp]
  00029	83 ec 08	 sub	 esp, 8
  0002c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00031	e8 00 00 00 00	 call	 __log
  00036	dd 5d f8	 fstp	 QWORD PTR _res$[ebp]
; Line 185
  00039	e9 86 00 00 00	 jmp	 $LN9@math_log
$LN6@math_log:
; Line 186
  0003e	6a 02		 push	 2
  00040	56		 push	 esi
  00041	e8 00 00 00 00	 call	 _luaL_checknumber
  00046	dd 5d f0	 fstp	 QWORD PTR _base$1[ebp]
; Line 188
  00049	f2 0f 10 45 f0	 movsd	 xmm0, QWORD PTR _base$1[ebp]
  0004e	83 c4 08	 add	 esp, 8
  00051	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@4000000000000000
  00059	9f		 lahf
  0005a	f6 c4 44	 test	 ah, 68			; 00000044H
  0005d	7a 17		 jp	 SHORT $LN4@math_log
  0005f	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _x$[ebp]
  00064	83 ec 08	 sub	 esp, 8
  00067	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0006c	e8 00 00 00 00	 call	 __log2
  00071	dd 5d f8	 fstp	 QWORD PTR _res$[ebp]
  00074	eb 4e		 jmp	 SHORT $LN9@math_log
$LN4@math_log:
; Line 190
  00076	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@4024000000000000
  0007e	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _x$[ebp]
  00083	9f		 lahf
  00084	83 ec 08	 sub	 esp, 8
  00087	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0008c	f6 c4 44	 test	 ah, 68			; 00000044H
  0008f	7a 0a		 jp	 SHORT $LN2@math_log
  00091	e8 00 00 00 00	 call	 __log10
  00096	dd 5d f8	 fstp	 QWORD PTR _res$[ebp]
  00099	eb 29		 jmp	 SHORT $LN9@math_log
$LN2@math_log:
; Line 191
  0009b	e8 00 00 00 00	 call	 __log
  000a0	f2 0f 10 45 f0	 movsd	 xmm0, QWORD PTR _base$1[ebp]
  000a5	dd 5d f8	 fstp	 QWORD PTR tv170[ebp]
  000a8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000ad	e8 00 00 00 00	 call	 __log
  000b2	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR tv170[ebp]
  000b7	dd 5d f0	 fstp	 QWORD PTR tv176[ebp]
  000ba	f2 0f 5e 45 f0	 divsd	 xmm0, QWORD PTR tv176[ebp]
  000bf	f2 0f 11 45 f8	 movsd	 QWORD PTR _res$[ebp], xmm0
$LN9@math_log:
; Line 193
  000c4	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _res$[ebp]
  000c9	83 c4 08	 add	 esp, 8
  000cc	83 ec 08	 sub	 esp, 8
  000cf	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000d4	56		 push	 esi
  000d5	e8 00 00 00 00	 call	 _lua_pushnumber
  000da	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 194
  000dd	b8 01 00 00 00	 mov	 eax, 1
  000e2	5e		 pop	 esi
; Line 195
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c3		 ret	 0
_math_log ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_ult
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_ult PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 173
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi
; Line 174
  00006	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  00009	6a 01		 push	 1
  0000b	57		 push	 edi
  0000c	e8 00 00 00 00	 call	 _luaL_checkinteger
; Line 175
  00011	6a 02		 push	 2
  00013	57		 push	 edi
  00014	8b d8		 mov	 ebx, eax
  00016	8b f2		 mov	 esi, edx
  00018	e8 00 00 00 00	 call	 _luaL_checkinteger
  0001d	83 c4 10	 add	 esp, 16			; 00000010H
; Line 176
  00020	3b f2		 cmp	 esi, edx
  00022	77 1f		 ja	 SHORT $LN3@math_ult
  00024	72 04		 jb	 SHORT $LN5@math_ult
  00026	3b d8		 cmp	 ebx, eax
  00028	73 19		 jae	 SHORT $LN3@math_ult
$LN5@math_ult:
  0002a	b8 01 00 00 00	 mov	 eax, 1
  0002f	50		 push	 eax
  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 _lua_pushboolean
  00036	83 c4 08	 add	 esp, 8
; Line 177
  00039	b8 01 00 00 00	 mov	 eax, 1
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
; Line 178
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
$LN3@math_ult:
; Line 176
  00043	33 c0		 xor	 eax, eax
  00045	50		 push	 eax
  00046	57		 push	 edi
  00047	e8 00 00 00 00	 call	 _lua_pushboolean
  0004c	83 c4 08	 add	 esp, 8
; Line 177
  0004f	b8 01 00 00 00	 mov	 eax, 1
  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
; Line 178
  00057	5d		 pop	 ebp
  00058	c3		 ret	 0
_math_ult ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_sqrt
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_sqrt PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 167
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 168
  00003	6a 01		 push	 1
  00005	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00008	e8 00 00 00 00	 call	 _luaL_checknumber
  0000d	dd 1c 24	 fstp	 QWORD PTR [esp]
  00010	e8 00 00 00 00	 call	 _sqrt_1
  00015	dd 1c 24	 fstp	 QWORD PTR [esp]
  00018	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001b	e8 00 00 00 00	 call	 _lua_pushnumber
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 169
  00023	b8 01 00 00 00	 mov	 eax, 1
; Line 170
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
_math_sqrt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_modf
_TEXT	SEGMENT
_n$1 = -16						; size = 8
_ip$1$ = -8						; size = 8
_ip$2 = -8						; size = 8
_L$ = 8							; size = 4
_math_modf PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 150
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
; Line 151
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	6a 01		 push	 1
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _lua_isinteger
  00012	83 c4 08	 add	 esp, 8
; Line 152
  00015	6a 01		 push	 1
  00017	56		 push	 esi
  00018	85 c0		 test	 eax, eax
  0001a	74 20		 je	 SHORT $LN2@math_modf
  0001c	e8 00 00 00 00	 call	 _lua_settop
  00021	0f 57 c0	 xorps	 xmm0, xmm0
; Line 153
  00024	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
; Line 161
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 _lua_pushnumber
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 163
  00032	b8 02 00 00 00	 mov	 eax, 2
  00037	5e		 pop	 esi
; Line 164
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
$LN2@math_modf:
; Line 156
  0003c	e8 00 00 00 00	 call	 _luaL_checknumber
  00041	83 c4 08	 add	 esp, 8
  00044	0f 57 c9	 xorps	 xmm1, xmm1
; Line 158
  00047	83 ec 08	 sub	 esp, 8
  0004a	dd 5d f0	 fstp	 QWORD PTR _n$1[ebp]
  0004d	f2 0f 10 45 f0	 movsd	 xmm0, QWORD PTR _n$1[ebp]
  00052	66 0f 2f c8	 comisd	 xmm1, xmm0
  00056	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0005b	76 0f		 jbe	 SHORT $LN5@math_modf
  0005d	e8 00 00 00 00	 call	 __ceil
  00062	dd 5d f8	 fstp	 QWORD PTR _ip$2[ebp]
  00065	f2 0f 10 4d f8	 movsd	 xmm1, QWORD PTR _ip$2[ebp]
  0006a	eb 0d		 jmp	 SHORT $LN14@math_modf
$LN5@math_modf:
  0006c	e8 00 00 00 00	 call	 __floor
  00071	66 0f 6e c8	 movd	 xmm1, eax
  00075	f3 0f e6 c9	 cvtdq2pd xmm1, xmm1
$LN14@math_modf:
  00079	83 c4 08	 add	 esp, 8
  0007c	f2 0f 11 4d f8	 movsd	 QWORD PTR _ip$1$[ebp], xmm1
; Line 159
  00081	66 0f 2f 0d 00
	00 00 00	 comisd	 xmm1, QWORD PTR __real@c3e0000000000000
  00089	72 20		 jb	 SHORT $LN10@math_modf
  0008b	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@43e0000000000000
  00093	66 0f 2f c1	 comisd	 xmm0, xmm1
  00097	76 12		 jbe	 SHORT $LN10@math_modf
  00099	0f 28 c1	 movaps	 xmm0, xmm1
  0009c	e8 00 00 00 00	 call	 __dtol3
  000a1	52		 push	 edx
  000a2	50		 push	 eax
  000a3	56		 push	 esi
  000a4	e8 00 00 00 00	 call	 _lua_pushinteger
  000a9	eb 0e		 jmp	 SHORT $LN15@math_modf
$LN10@math_modf:
  000ab	83 ec 08	 sub	 esp, 8
  000ae	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  000b3	56		 push	 esi
  000b4	e8 00 00 00 00	 call	 _lua_pushnumber
$LN15@math_modf:
; Line 161
  000b9	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _ip$1$[ebp]
  000be	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c1	f2 0f 10 4d f0	 movsd	 xmm1, QWORD PTR _n$1[ebp]
  000c6	66 0f 2e c8	 ucomisd xmm1, xmm0
  000ca	9f		 lahf
  000cb	f6 c4 44	 test	 ah, 68			; 00000044H
  000ce	7a 05		 jp	 SHORT $LN7@math_modf
  000d0	0f 57 c9	 xorps	 xmm1, xmm1
  000d3	eb 04		 jmp	 SHORT $LN8@math_modf
$LN7@math_modf:
  000d5	f2 0f 5c c8	 subsd	 xmm1, xmm0
$LN8@math_modf:
  000d9	83 ec 08	 sub	 esp, 8
  000dc	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  000e1	56		 push	 esi
  000e2	e8 00 00 00 00	 call	 _lua_pushnumber
  000e7	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 163
  000ea	b8 02 00 00 00	 mov	 eax, 2
  000ef	5e		 pop	 esi
; Line 164
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c3		 ret	 0
_math_modf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_fmod
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_fmod PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 128
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 129
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 01		 push	 1
  00009	56		 push	 esi
  0000a	e8 00 00 00 00	 call	 _lua_isinteger
  0000f	83 c4 08	 add	 esp, 8
  00012	85 c0		 test	 eax, eax
  00014	0f 84 8b 00 00
	00		 je	 $LN4@math_fmod
  0001a	6a 02		 push	 2
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 _lua_isinteger
  00022	83 c4 08	 add	 esp, 8
  00025	85 c0		 test	 eax, eax
  00027	74 7c		 je	 SHORT $LN4@math_fmod
; Line 130
  00029	53		 push	 ebx
  0002a	57		 push	 edi
  0002b	6a 00		 push	 0
  0002d	6a 02		 push	 2
  0002f	56		 push	 esi
  00030	e8 00 00 00 00	 call	 _lua_tointegerx
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	8b f8		 mov	 edi, eax
  0003a	8b da		 mov	 ebx, edx
; Line 131
  0003c	83 c0 01	 add	 eax, 1
  0003f	8b cb		 mov	 ecx, ebx
  00041	83 d1 00	 adc	 ecx, 0
  00044	85 c9		 test	 ecx, ecx
  00046	77 32		 ja	 SHORT $LN3@math_fmod
  00048	72 05		 jb	 SHORT $LN8@math_fmod
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	77 2b		 ja	 SHORT $LN3@math_fmod
$LN8@math_fmod:
; Line 132
  0004f	0b fb		 or	 edi, ebx
  00051	75 10		 jne	 SHORT $LN7@math_fmod
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_04DDFHDMOL@zero?$AA@
  00058	6a 02		 push	 2
  0005a	56		 push	 esi
  0005b	e8 00 00 00 00	 call	 _luaL_argerror
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@math_fmod:
; Line 133
  00063	6a 00		 push	 0
  00065	6a 00		 push	 0
  00067	56		 push	 esi
  00068	e8 00 00 00 00	 call	 _lua_pushinteger
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 141
  00070	b8 01 00 00 00	 mov	 eax, 1
  00075	5f		 pop	 edi
  00076	5b		 pop	 ebx
  00077	5e		 pop	 esi
; Line 142
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
$LN3@math_fmod:
; Line 136
  0007a	6a 00		 push	 0
  0007c	6a 01		 push	 1
  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 _lua_tointegerx
  00084	83 c4 0c	 add	 esp, 12			; 0000000cH
  00087	53		 push	 ebx
  00088	57		 push	 edi
  00089	52		 push	 edx
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 __allrem
  00090	52		 push	 edx
  00091	50		 push	 eax
  00092	56		 push	 esi
  00093	e8 00 00 00 00	 call	 _lua_pushinteger
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 141
  0009b	b8 01 00 00 00	 mov	 eax, 1
  000a0	5f		 pop	 edi
  000a1	5b		 pop	 ebx
  000a2	5e		 pop	 esi
; Line 142
  000a3	5d		 pop	 ebp
  000a4	c3		 ret	 0
$LN4@math_fmod:
; Line 140
  000a5	6a 02		 push	 2
  000a7	56		 push	 esi
  000a8	e8 00 00 00 00	 call	 _luaL_checknumber
  000ad	dd 1c 24	 fstp	 QWORD PTR [esp]
  000b0	6a 01		 push	 1
  000b2	56		 push	 esi
  000b3	e8 00 00 00 00	 call	 _luaL_checknumber
  000b8	dd 1c 24	 fstp	 QWORD PTR [esp]
  000bb	e8 00 00 00 00	 call	 ___fmod
  000c0	83 c4 08	 add	 esp, 8
  000c3	dd 1c 24	 fstp	 QWORD PTR [esp]
  000c6	56		 push	 esi
  000c7	e8 00 00 00 00	 call	 _lua_pushnumber
  000cc	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 141
  000cf	b8 01 00 00 00	 mov	 eax, 1
  000d4	5e		 pop	 esi
; Line 142
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
_math_fmod ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_ceil
_TEXT	SEGMENT
_d$1 = -8						; size = 8
_L$ = 8							; size = 4
_math_ceil PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 117
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
; Line 118
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	6a 01		 push	 1
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _lua_isinteger
  00012	83 c4 08	 add	 esp, 8
; Line 119
  00015	6a 01		 push	 1
  00017	56		 push	 esi
  00018	85 c0		 test	 eax, eax
  0001a	74 12		 je	 SHORT $LN2@math_ceil
  0001c	e8 00 00 00 00	 call	 _lua_settop
  00021	83 c4 08	 add	 esp, 8
; Line 124
  00024	b8 01 00 00 00	 mov	 eax, 1
  00029	5e		 pop	 esi
; Line 125
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
$LN2@math_ceil:
; Line 121
  0002e	e8 00 00 00 00	 call	 _luaL_checknumber
  00033	dd 1c 24	 fstp	 QWORD PTR [esp]
  00036	e8 00 00 00 00	 call	 __ceil
  0003b	dd 5d f8	 fstp	 QWORD PTR _d$1[ebp]
; Line 122
  0003e	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _d$1[ebp]
  00043	83 c4 08	 add	 esp, 8
  00046	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@c3e0000000000000
  0004e	72 28		 jb	 SHORT $LN6@math_ceil
  00050	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@43e0000000000000
  00058	66 0f 2f c8	 comisd	 xmm1, xmm0
  0005c	76 1a		 jbe	 SHORT $LN6@math_ceil
  0005e	e8 00 00 00 00	 call	 __dtol3
  00063	52		 push	 edx
  00064	50		 push	 eax
  00065	56		 push	 esi
  00066	e8 00 00 00 00	 call	 _lua_pushinteger
  0006b	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 124
  0006e	b8 01 00 00 00	 mov	 eax, 1
  00073	5e		 pop	 esi
; Line 125
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
; Line 122
$LN6@math_ceil:
  00078	83 ec 08	 sub	 esp, 8
  0007b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00080	56		 push	 esi
  00081	e8 00 00 00 00	 call	 _lua_pushnumber
  00086	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 124
  00089	b8 01 00 00 00	 mov	 eax, 1
  0008e	5e		 pop	 esi
; Line 125
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
_math_ceil ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_floor
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_floor PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 106
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 107
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 01		 push	 1
  00009	56		 push	 esi
  0000a	e8 00 00 00 00	 call	 _lua_isinteger
  0000f	83 c4 08	 add	 esp, 8
; Line 108
  00012	6a 01		 push	 1
  00014	56		 push	 esi
  00015	85 c0		 test	 eax, eax
  00017	74 10		 je	 SHORT $LN2@math_floor
  00019	e8 00 00 00 00	 call	 _lua_settop
  0001e	83 c4 08	 add	 esp, 8
; Line 113
  00021	b8 01 00 00 00	 mov	 eax, 1
  00026	5e		 pop	 esi
; Line 114
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
$LN2@math_floor:
; Line 110
  00029	e8 00 00 00 00	 call	 _luaL_checknumber
  0002e	dd 1c 24	 fstp	 QWORD PTR [esp]
  00031	e8 00 00 00 00	 call	 __floor
  00036	83 c4 08	 add	 esp, 8
  00039	66 0f 6e c0	 movd	 xmm0, eax
  0003d	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
; Line 111
  00041	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@c3e0000000000000
  00049	72 26		 jb	 SHORT $LN6@math_floor
  0004b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@43e0000000000000
  00053	66 0f 2f c8	 comisd	 xmm1, xmm0
  00057	76 18		 jbe	 SHORT $LN6@math_floor
  00059	e8 00 00 00 00	 call	 __dtol3
  0005e	52		 push	 edx
  0005f	50		 push	 eax
  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 _lua_pushinteger
  00066	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 113
  00069	b8 01 00 00 00	 mov	 eax, 1
  0006e	5e		 pop	 esi
; Line 114
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
; Line 111
$LN6@math_floor:
  00071	83 ec 08	 sub	 esp, 8
  00074	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00079	56		 push	 esi
  0007a	e8 00 00 00 00	 call	 _lua_pushnumber
  0007f	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 113
  00082	b8 01 00 00 00	 mov	 eax, 1
  00087	5e		 pop	 esi
; Line 114
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
_math_floor ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _pushnumint
_TEXT	SEGMENT
_L$ = 8							; size = 4
_d$ = 12						; size = 8
_pushnumint PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 97
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 99
  00003	f2 0f 10 45 0c	 movsd	 xmm0, QWORD PTR _d$[ebp]
  00008	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@c3e0000000000000
  00010	72 22		 jb	 SHORT $LN2@pushnumint
  00012	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@43e0000000000000
  0001a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0001e	76 14		 jbe	 SHORT $LN2@pushnumint
  00020	e8 00 00 00 00	 call	 __dtol3
; Line 100
  00025	52		 push	 edx
  00026	50		 push	 eax
  00027	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0002a	e8 00 00 00 00	 call	 _lua_pushinteger
; Line 102
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 103
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
$LN2@pushnumint:
; Line 102
  00034	83 ec 08	 sub	 esp, 8
  00037	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0003c	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0003f	e8 00 00 00 00	 call	 _lua_pushnumber
  00044	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 103
  00047	5d		 pop	 ebp
  00048	c3		 ret	 0
_pushnumint ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_toint
_TEXT	SEGMENT
_valid$ = -4						; size = 4
_L$ = 8							; size = 4
_math_toint PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 84
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
; Line 86
  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	8d 45 fc	 lea	 eax, DWORD PTR _valid$[ebp]
  0000b	50		 push	 eax
  0000c	6a 01		 push	 1
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 _lua_tointegerx
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 87
  00017	83 7d fc 00	 cmp	 DWORD PTR _valid$[ebp], 0
  0001b	74 15		 je	 SHORT $LN2@math_toint
; Line 88
  0001d	52		 push	 edx
  0001e	50		 push	 eax
  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 _lua_pushinteger
; Line 91
  00025	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 93
  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	5e		 pop	 esi
; Line 94
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
$LN2@math_toint:
; Line 90
  00032	6a 01		 push	 1
  00034	56		 push	 esi
  00035	e8 00 00 00 00	 call	 _luaL_checkany
; Line 91
  0003a	56		 push	 esi
  0003b	e8 00 00 00 00	 call	 _lua_pushnil
  00040	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 93
  00043	b8 01 00 00 00	 mov	 eax, 1
  00048	5e		 pop	 esi
; Line 94
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
_math_toint ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_atan
_TEXT	SEGMENT
_y$ = -16						; size = 8
_x$ = -8						; size = 8
_L$ = 8							; size = 4
_math_atan PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 76
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
; Line 77
  00007	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000a	6a 01		 push	 1
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 _luaL_checknumber
; Line 78
  00012	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0001a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0001f	6a 02		 push	 2
  00021	dd 5d f0	 fstp	 QWORD PTR _y$[ebp]
  00024	56		 push	 esi
  00025	e8 00 00 00 00	 call	 _luaL_optnumber
  0002a	83 c4 10	 add	 esp, 16			; 00000010H
  0002d	dd 5d f8	 fstp	 QWORD PTR _x$[ebp]
; Line 79
  00030	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _x$[ebp]
  00035	6a 64		 push	 100			; 00000064H
  00037	83 ec 10	 sub	 esp, 16			; 00000010H
  0003a	f2 0f 11 44 24
	08		 movsd	 QWORD PTR [esp+8], xmm0
  00040	f2 0f 10 45 f0	 movsd	 xmm0, QWORD PTR _y$[ebp]
  00045	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0004a	e8 00 00 00 00	 call	 _____atan2
  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00052	dd 1c 24	 fstp	 QWORD PTR [esp]
  00055	56		 push	 esi
  00056	e8 00 00 00 00	 call	 _lua_pushnumber
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 80
  0005e	b8 01 00 00 00	 mov	 eax, 1
  00063	5e		 pop	 esi
; Line 81
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c3		 ret	 0
_math_atan ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_acos
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_acos PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 71
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 72
  00003	6a 01		 push	 1
  00005	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00008	e8 00 00 00 00	 call	 _luaL_checknumber
  0000d	dd 1c 24	 fstp	 QWORD PTR [esp]
  00010	e8 00 00 00 00	 call	 ___acos
  00015	dd 1c 24	 fstp	 QWORD PTR [esp]
  00018	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001b	e8 00 00 00 00	 call	 _lua_pushnumber
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 73
  00023	b8 01 00 00 00	 mov	 eax, 1
; Line 74
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
_math_acos ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_asin
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_asin PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 66
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 67
  00003	6a 01		 push	 1
  00005	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00008	e8 00 00 00 00	 call	 _luaL_checknumber
  0000d	dd 1c 24	 fstp	 QWORD PTR [esp]
  00010	e8 00 00 00 00	 call	 ___asin
  00015	dd 1c 24	 fstp	 QWORD PTR [esp]
  00018	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001b	e8 00 00 00 00	 call	 _lua_pushnumber
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 68
  00023	b8 01 00 00 00	 mov	 eax, 1
; Line 69
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
_math_asin ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_tan
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_tan PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 61
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 62
  00003	6a 01		 push	 1
  00005	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00008	e8 00 00 00 00	 call	 _luaL_checknumber
  0000d	dd 1c 24	 fstp	 QWORD PTR [esp]
  00010	e8 00 00 00 00	 call	 __tan
  00015	dd 1c 24	 fstp	 QWORD PTR [esp]
  00018	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001b	e8 00 00 00 00	 call	 _lua_pushnumber
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 63
  00023	b8 01 00 00 00	 mov	 eax, 1
; Line 64
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
_math_tan ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_cos
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_cos PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 56
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 57
  00003	6a 01		 push	 1
  00005	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00008	e8 00 00 00 00	 call	 _luaL_checknumber
  0000d	dd 1c 24	 fstp	 QWORD PTR [esp]
  00010	e8 00 00 00 00	 call	 __cos
  00015	dd 1c 24	 fstp	 QWORD PTR [esp]
  00018	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001b	e8 00 00 00 00	 call	 _lua_pushnumber
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 58
  00023	b8 01 00 00 00	 mov	 eax, 1
; Line 59
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
_math_cos ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_sin
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_sin PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 51
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 52
  00003	6a 01		 push	 1
  00005	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00008	e8 00 00 00 00	 call	 _luaL_checknumber
  0000d	dd 1c 24	 fstp	 QWORD PTR [esp]
  00010	e8 00 00 00 00	 call	 __sin
  00015	dd 1c 24	 fstp	 QWORD PTR [esp]
  00018	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001b	e8 00 00 00 00	 call	 _lua_pushnumber
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 53
  00023	b8 01 00 00 00	 mov	 eax, 1
; Line 54
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
_math_sin ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _math_abs
_TEXT	SEGMENT
_L$ = 8							; size = 4
_math_abs PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 40
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
; Line 41
  00004	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00007	6a 01		 push	 1
  00009	56		 push	 esi
  0000a	e8 00 00 00 00	 call	 _lua_isinteger
  0000f	83 c4 08	 add	 esp, 8
  00012	85 c0		 test	 eax, eax
  00014	74 31		 je	 SHORT $LN3@math_abs
; Line 42
  00016	6a 00		 push	 0
  00018	6a 01		 push	 1
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 _lua_tointegerx
  00020	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 43
  00023	85 d2		 test	 edx, edx
  00025	7f 0d		 jg	 SHORT $LN2@math_abs
  00027	7c 04		 jl	 SHORT $LN6@math_abs
  00029	85 c0		 test	 eax, eax
  0002b	73 07		 jae	 SHORT $LN2@math_abs
$LN6@math_abs:
  0002d	f7 d8		 neg	 eax
  0002f	83 d2 00	 adc	 edx, 0
  00032	f7 da		 neg	 edx
$LN2@math_abs:
; Line 44
  00034	52		 push	 edx
  00035	50		 push	 eax
  00036	56		 push	 esi
  00037	e8 00 00 00 00	 call	 _lua_pushinteger
; Line 47
  0003c	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 48
  0003f	b8 01 00 00 00	 mov	 eax, 1
  00044	5e		 pop	 esi
; Line 49
  00045	5d		 pop	 ebp
  00046	c3		 ret	 0
$LN3@math_abs:
; Line 47
  00047	6a 01		 push	 1
  00049	56		 push	 esi
  0004a	e8 00 00 00 00	 call	 _luaL_checknumber
  0004f	dd 1c 24	 fstp	 QWORD PTR [esp]
  00052	e8 00 00 00 00	 call	 ___fabs
  00057	dd 1c 24	 fstp	 QWORD PTR [esp]
  0005a	56		 push	 esi
  0005b	e8 00 00 00 00	 call	 _lua_pushnumber
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 48
  00063	b8 01 00 00 00	 mov	 eax, 1
  00068	5e		 pop	 esi
; Line 49
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
_math_abs ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _luaopen_math
_TEXT	SEGMENT
_L$ = 8							; size = 4
_luaopen_math PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmathlib.c
; Line 395
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 396
  00003	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@405bc00000000000
  0000b	56		 push	 esi
  0000c	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000f	68 88 00 00 00	 push	 136			; 00000088H
  00014	83 ec 08	 sub	 esp, 8
  00017	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 _luaL_checkversion_
  00022	6a 23		 push	 35			; 00000023H
  00024	6a 00		 push	 0
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 _lua_createtable
  0002c	6a 00		 push	 0
  0002e	68 00 00 00 00	 push	 OFFSET _mathlib
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 _luaL_setfuncs
; Line 397
  00039	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@400921fb54442d18
  00041	83 c4 20	 add	 esp, 32			; 00000020H
  00044	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00049	56		 push	 esi
  0004a	e8 00 00 00 00	 call	 _lua_pushnumber
; Line 398
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_02OAHAJOFD@pi?$AA@
  00054	6a fe		 push	 -2			; fffffffeH
  00056	56		 push	 esi
  00057	e8 00 00 00 00	 call	 _lua_setfield
; Line 399
  0005c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@7ff0000000000000
  00064	83 c4 10	 add	 esp, 16			; 00000010H
  00067	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0006c	56		 push	 esi
  0006d	e8 00 00 00 00	 call	 _lua_pushnumber
; Line 400
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_04JJGMCGIH@huge?$AA@
  00077	6a fe		 push	 -2			; fffffffeH
  00079	56		 push	 esi
  0007a	e8 00 00 00 00	 call	 _lua_setfield
; Line 401
  0007f	68 ff ff ff 7f	 push	 2147483647		; 7fffffffH
  00084	6a ff		 push	 -1
  00086	56		 push	 esi
  00087	e8 00 00 00 00	 call	 _lua_pushinteger
; Line 402
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FKMOHNGI@maxinteger?$AA@
  00091	6a fe		 push	 -2			; fffffffeH
  00093	56		 push	 esi
  00094	e8 00 00 00 00	 call	 _lua_setfield
; Line 403
  00099	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0009e	6a 00		 push	 0
  000a0	56		 push	 esi
  000a1	e8 00 00 00 00	 call	 _lua_pushinteger
; Line 404
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JGMDAGGH@mininteger?$AA@
  000ab	6a fe		 push	 -2			; fffffffeH
  000ad	56		 push	 esi
  000ae	e8 00 00 00 00	 call	 _lua_setfield
  000b3	83 c4 48	 add	 esp, 72			; 00000048H
; Line 405
  000b6	b8 01 00 00 00	 mov	 eax, 1
  000bb	5e		 pop	 esi
; Line 406
  000bc	5d		 pop	 ebp
  000bd	c3		 ret	 0
_luaopen_math ENDP
_TEXT	ENDS
END
