; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	luaV_equalobj
PUBLIC	luaV_lessthan
PUBLIC	luaV_lessequal
PUBLIC	luaV_tonumber_
PUBLIC	luaV_tointeger
PUBLIC	luaV_finishget
PUBLIC	luaV_finishset
PUBLIC	luaV_finishOp
PUBLIC	luaV_execute
PUBLIC	luaV_concat
PUBLIC	luaV_div
PUBLIC	luaV_mod
PUBLIC	luaV_shiftl
PUBLIC	luaV_objlen
PUBLIC	??_C@_05FKHKFDID@index?$AA@			; `string'
PUBLIC	??_C@_0CH@DDLIFGFP@gettable?5chain?5too?5long?$DL?5possibl@ ; `string'
PUBLIC	??_C@_0CH@OBFLNBKM@settable?5chain?5too?5long?$DL?5possibl@ ; `string'
PUBLIC	??_C@_0BH@ONIKNOCM@string?5length?5overflow?$AA@ ; `string'
PUBLIC	??_C@_0O@MKOIIDGO@get?5length?5of?$AA@		; `string'
PUBLIC	??_C@_0BK@KPCDLNKD@attempt?5to?5divide?5by?5zero?$AA@ ; `string'
PUBLIC	??_C@_0BK@HHICHKCC@attempt?5to?5perform?5?8n?$CF?$CF0?8?$AA@ ; `string'
PUBLIC	??_C@_0BN@GHPMJMPH@?8for?8?5limit?5must?5be?5a?5number?$AA@ ; `string'
PUBLIC	??_C@_0BM@EGCFKNIJ@?8for?8?5step?5must?5be?5a?5number?$AA@ ; `string'
PUBLIC	??_C@_0CF@JJFDEONC@?8for?8?5initial?5value?5must?5be?5a?5nu@ ; `string'
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@43e0000000000000
PUBLIC	__real@c3e0000000000000
PUBLIC	__xmm@80000000000000008000000000000000
EXTRN	__imp_strcoll:PROC
EXTRN	luaO_fb2int:PROC
EXTRN	luaO_str2num:PROC
EXTRN	luaO_tostring:PROC
EXTRN	luaT_gettm:PROC
EXTRN	luaT_gettmbyobj:PROC
EXTRN	luaT_callTM:PROC
EXTRN	luaT_trybinTM:PROC
EXTRN	luaT_callorderTM:PROC
EXTRN	luaG_typeerror:PROC
EXTRN	luaG_ordererror:PROC
EXTRN	luaG_runerror:PROC
EXTRN	luaG_traceexec:PROC
EXTRN	luaD_precall:PROC
EXTRN	luaD_call:PROC
EXTRN	luaD_poscall:PROC
EXTRN	luaD_growstack:PROC
EXTRN	luaF_newLclosure:PROC
EXTRN	luaF_findupval:PROC
EXTRN	luaF_close:PROC
EXTRN	luaC_step:PROC
EXTRN	luaC_barrierback_:PROC
EXTRN	luaC_upvalbarrier_:PROC
EXTRN	luaS_eqlngstr:PROC
EXTRN	luaS_newlstr:PROC
EXTRN	luaS_createlngstrobj:PROC
EXTRN	luaH_setint:PROC
EXTRN	luaH_getstr:PROC
EXTRN	luaH_get:PROC
EXTRN	luaH_newkey:PROC
EXTRN	luaH_new:PROC
EXTRN	luaH_resize:PROC
EXTRN	luaH_resizearray:PROC
EXTRN	luaH_getn:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	floor:PROC
EXTRN	fmod:PROC
EXTRN	memcpy:PROC
EXTRN	pow:PROC
EXTRN	luaO_nilobject_:BYTE
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaV_equalobj DD imagerel $LN69
	DD	imagerel $LN69+648
	DD	imagerel $unwind$luaV_equalobj
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaV_lessthan DD imagerel $LN22
	DD	imagerel $LN22+325
	DD	imagerel $unwind$luaV_lessthan
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaV_lessequal DD imagerel $LN24
	DD	imagerel $LN24+365
	DD	imagerel $unwind$luaV_lessequal
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaV_tonumber_ DD imagerel $LN12
	DD	imagerel $LN12+49
	DD	imagerel $unwind$luaV_tonumber_
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$luaV_tonumber_ DD imagerel $LN12+49
	DD	imagerel $LN12+97
	DD	imagerel $chain$0$luaV_tonumber_
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$luaV_tonumber_ DD imagerel $LN12+97
	DD	imagerel $LN12+158
	DD	imagerel $chain$1$luaV_tonumber_
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaV_tointeger DD imagerel $LN24
	DD	imagerel $LN24+111
	DD	imagerel $unwind$luaV_tointeger
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$luaV_tointeger DD imagerel $LN24+111
	DD	imagerel $LN24+142
	DD	imagerel $chain$0$luaV_tointeger
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$luaV_tointeger DD imagerel $LN24+142
	DD	imagerel $LN24+259
	DD	imagerel $chain$1$luaV_tointeger
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaV_finishget DD imagerel $LN35
	DD	imagerel $LN35+280
	DD	imagerel $unwind$luaV_finishget
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaV_finishset DD imagerel $LN40
	DD	imagerel $LN40+421
	DD	imagerel $unwind$luaV_finishset
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaV_finishOp DD imagerel $LN23
	DD	imagerel $LN23+404
	DD	imagerel $unwind$luaV_finishOp
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaV_execute DD imagerel $LN597
	DD	imagerel $LN597+7684
	DD	imagerel $unwind$luaV_execute
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaV_concat DD imagerel $LN62
	DD	imagerel $LN62+675
	DD	imagerel $unwind$luaV_concat
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaV_div DD imagerel $LN10
	DD	imagerel $LN10+72
	DD	imagerel $unwind$luaV_div
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaV_mod DD imagerel $LN10
	DD	imagerel $LN10+71
	DD	imagerel $unwind$luaV_mod
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaV_objlen DD imagerel $LN19
	DD	imagerel $LN19+42
	DD	imagerel $unwind$luaV_objlen
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$luaV_objlen DD imagerel $LN19+42
	DD	imagerel $LN19+121
	DD	imagerel $chain$0$luaV_objlen
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$luaV_objlen DD imagerel $LN19+121
	DD	imagerel $LN19+220
	DD	imagerel $chain$2$luaV_objlen
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$luaV_objlen DD imagerel $LN19+220
	DD	imagerel $LN19+253
	DD	imagerel $chain$3$luaV_objlen
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$luaV_objlen DD imagerel $LN19+253
	DD	imagerel $LN19+272
	DD	imagerel $chain$4$luaV_objlen
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$forlimit DD imagerel forlimit
	DD	imagerel forlimit+173
	DD	imagerel $unwind$forlimit
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$l_strcmp DD imagerel l_strcmp
	DD	imagerel l_strcmp+172
	DD	imagerel $unwind$l_strcmp
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$LTnum DD	imagerel LTnum
	DD	imagerel LTnum+117
	DD	imagerel $unwind$LTnum
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$LEnum DD	imagerel LEnum
	DD	imagerel LEnum+117
	DD	imagerel $unwind$LEnum
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$copy2buff DD imagerel copy2buff
	DD	imagerel copy2buff+125
	DD	imagerel $unwind$copy2buff
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$getcached DD imagerel getcached
	DD	imagerel getcached+130
	DD	imagerel $unwind$getcached
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$pushclosure DD imagerel pushclosure
	DD	imagerel pushclosure+12
	DD	imagerel $unwind$pushclosure
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$pushclosure DD imagerel pushclosure+12
	DD	imagerel pushclosure+91
	DD	imagerel $chain$4$pushclosure
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$pushclosure DD imagerel pushclosure+91
	DD	imagerel pushclosure+170
	DD	imagerel $chain$5$pushclosure
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$pushclosure DD imagerel pushclosure+170
	DD	imagerel pushclosure+201
	DD	imagerel $chain$6$pushclosure
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$pushclosure DD imagerel pushclosure+201
	DD	imagerel pushclosure+213
	DD	imagerel $chain$7$pushclosure
pdata	ENDS
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c3e0000000000000
CONST	SEGMENT
__real@c3e0000000000000 DQ 0c3e0000000000000r	; -9.22337e+018
CONST	ENDS
;	COMDAT __real@43e0000000000000
CONST	SEGMENT
__real@43e0000000000000 DQ 043e0000000000000r	; 9.22337e+018
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT ??_C@_0CF@JJFDEONC@?8for?8?5initial?5value?5must?5be?5a?5nu@
CONST	SEGMENT
??_C@_0CF@JJFDEONC@?8for?8?5initial?5value?5must?5be?5a?5nu@ DB '''for'' '
	DB	'initial value must be a number', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EGCFKNIJ@?8for?8?5step?5must?5be?5a?5number?$AA@
CONST	SEGMENT
??_C@_0BM@EGCFKNIJ@?8for?8?5step?5must?5be?5a?5number?$AA@ DB '''for'' st'
	DB	'ep must be a number', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GHPMJMPH@?8for?8?5limit?5must?5be?5a?5number?$AA@
CONST	SEGMENT
??_C@_0BN@GHPMJMPH@?8for?8?5limit?5must?5be?5a?5number?$AA@ DB '''for'' l'
	DB	'imit must be a number', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@HHICHKCC@attempt?5to?5perform?5?8n?$CF?$CF0?8?$AA@
CONST	SEGMENT
??_C@_0BK@HHICHKCC@attempt?5to?5perform?5?8n?$CF?$CF0?8?$AA@ DB 'attempt '
	DB	'to perform ''n%%0''', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KPCDLNKD@attempt?5to?5divide?5by?5zero?$AA@
CONST	SEGMENT
??_C@_0BK@KPCDLNKD@attempt?5to?5divide?5by?5zero?$AA@ DB 'attempt to divi'
	DB	'de by zero', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MKOIIDGO@get?5length?5of?$AA@
CONST	SEGMENT
??_C@_0O@MKOIIDGO@get?5length?5of?$AA@ DB 'get length of', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@ONIKNOCM@string?5length?5overflow?$AA@
CONST	SEGMENT
??_C@_0BH@ONIKNOCM@string?5length?5overflow?$AA@ DB 'string length overfl'
	DB	'ow', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OBFLNBKM@settable?5chain?5too?5long?$DL?5possibl@
CONST	SEGMENT
??_C@_0CH@OBFLNBKM@settable?5chain?5too?5long?$DL?5possibl@ DB 'settable '
	DB	'chain too long; possible loop', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@DDLIFGFP@gettable?5chain?5too?5long?$DL?5possibl@
CONST	SEGMENT
??_C@_0CH@DDLIFGFP@gettable?5chain?5too?5long?$DL?5possibl@ DB 'gettable '
	DB	'chain too long; possible loop', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FKHKFDID@index?$AA@
CONST	SEGMENT
??_C@_05FKHKFDID@index?$AA@ DB 'index', 00H		; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$pushclosure DD 021H
	DD	imagerel pushclosure
	DD	imagerel pushclosure+12
	DD	imagerel $unwind$pushclosure
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$pushclosure DD 021H
	DD	imagerel pushclosure+12
	DD	imagerel pushclosure+91
	DD	imagerel $chain$4$pushclosure
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$pushclosure DD 020521H
	DD	0c7405H
	DD	imagerel pushclosure+12
	DD	imagerel pushclosure+91
	DD	imagerel $chain$4$pushclosure
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$pushclosure DD 0a2621H
	DD	04e426H
	DD	05d418H
	DD	06c413H
	DD	0b640eH
	DD	0a3405H
	DD	imagerel pushclosure
	DD	imagerel pushclosure+12
	DD	imagerel $unwind$pushclosure
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$pushclosure DD 030c01H
	DD	0f008620cH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$getcached DD 040a01H
	DD	02740aH
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$copy2buff DD 0a1a01H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0e016321aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LEnum DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LTnum DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$l_strcmp DD 082c01H
	DD	06642cH
	DD	08540fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$forlimit DD 081501H
	DD	097415H
	DD	076415H
	DD	063415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$luaV_objlen DD 020021H
	DD	085400H
	DD	imagerel $LN19
	DD	imagerel $LN19+42
	DD	imagerel $unwind$luaV_objlen
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$luaV_objlen DD 021H
	DD	imagerel $LN19
	DD	imagerel $LN19+42
	DD	imagerel $unwind$luaV_objlen
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$luaV_objlen DD 020021H
	DD	085400H
	DD	imagerel $LN19
	DD	imagerel $LN19+42
	DD	imagerel $unwind$luaV_objlen
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$luaV_objlen DD 020521H
	DD	085405H
	DD	imagerel $LN19
	DD	imagerel $LN19+42
	DD	imagerel $unwind$luaV_objlen
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaV_objlen DD 060f01H
	DD	0a640fH
	DD	09340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaV_mod DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaV_div DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaV_concat DD 0c2b19H
	DD	017641cH
	DD	016541cH
	DD	015341cH
	DD	0f018d21cH
	DD	0d014e016H
	DD	07010c012H
	DD	imagerel __GSHandlerCheck
	DD	060H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaV_execute DD 0123f01H
	DD	016983fH
	DD	0178837H
	DD	0187829H
	DD	0196825H
	DD	035011dH
	DD	0e00df00fH
	DD	0c009d00bH
	DD	060067007H
	DD	050043005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaV_finishOp DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaV_finishset DD 0c3101H
	DD	0a3431H
	DD	0d7419H
	DD	0c6419H
	DD	0b5419H
	DD	0f0155219H
	DD	0c011e013H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaV_finishget DD 0a1a01H
	DD	0b741aH
	DD	0a641aH
	DD	09541aH
	DD	08341aH
	DD	0e016521aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$luaV_tointeger DD 021H
	DD	imagerel $LN24
	DD	imagerel $LN24+111
	DD	imagerel $unwind$luaV_tointeger
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$luaV_tointeger DD 020521H
	DD	036805H
	DD	imagerel $LN24
	DD	imagerel $LN24+111
	DD	imagerel $unwind$luaV_tointeger
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaV_tointeger DD 060f01H
	DD	0b640fH
	DD	0a340fH
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$luaV_tonumber_ DD 021H
	DD	imagerel $LN12
	DD	imagerel $LN12+49
	DD	imagerel $unwind$luaV_tonumber_
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$luaV_tonumber_ DD 020521H
	DD	083405H
	DD	imagerel $LN12
	DD	imagerel $LN12+49
	DD	imagerel $unwind$luaV_tonumber_
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaV_tonumber_ DD 020601H
	DD	070025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaV_lessequal DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaV_lessthan DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaV_equalobj DD 081401H
	DD	0b6414H
	DD	0a5414H
	DD	083414H
	DD	070105214H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT pushclosure
_TEXT	SEGMENT
L$ = 80
p$ = 88
encup$ = 96
base$ = 104
ra$ = 112
pushclosure PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 619
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	55		 push	 rbp
  00006	41 57		 push	 r15
  00008	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  0000c	48 89 5c 24 50	 mov	 QWORD PTR [rsp+80], rbx
; Line 620
  00011	48 63 5a 10	 movsxd	 rbx, DWORD PTR [rdx+16]
  00015	48 89 74 24 58	 mov	 QWORD PTR [rsp+88], rsi
  0001a	4c 89 64 24 30	 mov	 QWORD PTR [rsp+48], r12
  0001f	4c 89 6c 24 28	 mov	 QWORD PTR [rsp+40], r13
; Line 621
  00024	4c 8b 6a 58	 mov	 r13, QWORD PTR [rdx+88]
  00028	48 8b ea	 mov	 rbp, rdx
; Line 623
  0002b	8b d3		 mov	 edx, ebx
  0002d	4c 89 74 24 20	 mov	 QWORD PTR [rsp+32], r14
  00032	4d 8b f0	 mov	 r14, r8
  00035	4c 8b e1	 mov	 r12, rcx
  00038	e8 00 00 00 00	 call	 luaF_newLclosure
; Line 625
  0003d	4c 8b 54 24 70	 mov	 r10, QWORD PTR ra$[rsp]
  00042	48 89 68 18	 mov	 QWORD PTR [rax+24], rbp
; Line 626
  00046	48 8b f3	 mov	 rsi, rbx
  00049	4c 8b f8	 mov	 r15, rax
  0004c	49 89 02	 mov	 QWORD PTR [r10], rax
  0004f	41 c7 42 08 46
	00 00 00	 mov	 DWORD PTR [r10+8], 70	; 00000046H
  00057	85 db		 test	 ebx, ebx
  00059	7e 4f		 jle	 SHORT $LN4@pushclosur
; Line 620
  0005b	48 89 7c 24 60	 mov	 QWORD PTR [rsp+96], rdi
  00060	49 8d 5d 09	 lea	 rbx, QWORD PTR [r13+9]
  00064	4c 8b 6c 24 68	 mov	 r13, QWORD PTR base$[rsp]
  00069	48 8d 78 20	 lea	 rdi, QWORD PTR [rax+32]
  0006d	0f 1f 00	 npad	 3
$LL6@pushclosur:
; Line 627
  00070	80 7b ff 00	 cmp	 BYTE PTR [rbx-1], 0
  00074	74 14		 je	 SHORT $LN3@pushclosur
; Line 628
  00076	0f b6 13	 movzx	 edx, BYTE PTR [rbx]
  00079	49 8b cc	 mov	 rcx, r12
  0007c	48 c1 e2 04	 shl	 rdx, 4
  00080	49 03 d5	 add	 rdx, r13
  00083	e8 00 00 00 00	 call	 luaF_findupval
; Line 629
  00088	eb 07		 jmp	 SHORT $LN13@pushclosur
$LN3@pushclosur:
; Line 630
  0008a	0f b6 03	 movzx	 eax, BYTE PTR [rbx]
  0008d	49 8b 04 c6	 mov	 rax, QWORD PTR [r14+rax*8]
$LN13@pushclosur:
; Line 631
  00091	48 89 07	 mov	 QWORD PTR [rdi], rax
  00094	48 ff 40 08	 inc	 QWORD PTR [rax+8]
  00098	48 83 c7 08	 add	 rdi, 8
  0009c	48 83 c3 10	 add	 rbx, 16
  000a0	48 ff ce	 dec	 rsi
  000a3	75 cb		 jne	 SHORT $LL6@pushclosur
  000a5	48 8b 7c 24 60	 mov	 rdi, QWORD PTR [rsp+96]
$LN4@pushclosur:
; Line 634
  000aa	f6 45 09 04	 test	 BYTE PTR [rbp+9], 4
  000ae	4c 8b 74 24 20	 mov	 r14, QWORD PTR [rsp+32]
  000b3	4c 8b 6c 24 28	 mov	 r13, QWORD PTR [rsp+40]
  000b8	4c 8b 64 24 30	 mov	 r12, QWORD PTR [rsp+48]
  000bd	48 8b 74 24 58	 mov	 rsi, QWORD PTR [rsp+88]
  000c2	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  000c7	75 04		 jne	 SHORT $LN1@pushclosur
; Line 635
  000c9	4c 89 7d 60	 mov	 QWORD PTR [rbp+96], r15
$LN1@pushclosur:
; Line 636
  000cd	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000d1	41 5f		 pop	 r15
  000d3	5d		 pop	 rbp
  000d4	c3		 ret	 0
pushclosure ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT getcached
_TEXT	SEGMENT
p$ = 8
encup$ = 16
base$ = 24
getcached PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 596
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 7c 24 10	 mov	 QWORD PTR [rsp+16], rdi
; Line 597
  0000a	48 8b 59 60	 mov	 rbx, QWORD PTR [rcx+96]
  0000e	49 8b f8	 mov	 rdi, r8
; Line 598
  00011	48 85 db	 test	 rbx, rbx
  00014	74 51		 je	 SHORT $LN2@getcached
; Line 602
  00016	4c 63 59 10	 movsxd	 r11, DWORD PTR [rcx+16]
  0001a	4c 8b 41 58	 mov	 r8, QWORD PTR [rcx+88]
  0001e	45 33 c9	 xor	 r9d, r9d
  00021	4d 85 db	 test	 r11, r11
  00024	7e 41		 jle	 SHORT $LN2@getcached
; Line 600
  00026	4c 8d 53 20	 lea	 r10, QWORD PTR [rbx+32]
  0002a	49 83 c0 09	 add	 r8, 9
  0002e	66 90		 npad	 2
$LL4@getcached:
; Line 603
  00030	41 80 78 ff 00	 cmp	 BYTE PTR [r8-1], 0
  00035	74 0d		 je	 SHORT $LN8@getcached
  00037	41 0f b6 08	 movzx	 ecx, BYTE PTR [r8]
  0003b	48 c1 e1 04	 shl	 rcx, 4
  0003f	48 03 cf	 add	 rcx, rdi
  00042	eb 0b		 jmp	 SHORT $LN9@getcached
$LN8@getcached:
  00044	41 0f b6 00	 movzx	 eax, BYTE PTR [r8]
  00048	48 8b 0c c2	 mov	 rcx, QWORD PTR [rdx+rax*8]
  0004c	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
$LN9@getcached:
; Line 604
  0004f	49 8b 02	 mov	 rax, QWORD PTR [r10]
  00052	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00055	75 1e		 jne	 SHORT $LN11@getcached
; Line 602
  00057	49 ff c1	 inc	 r9
  0005a	49 83 c2 08	 add	 r10, 8
  0005e	49 83 c0 10	 add	 r8, 16
  00062	4d 3b cb	 cmp	 r9, r11
  00065	7c c9		 jl	 SHORT $LL4@getcached
$LN2@getcached:
; Line 608
  00067	48 8b c3	 mov	 rax, rbx
; Line 609
  0006a	48 8b 5c 24 08	 mov	 rbx, QWORD PTR [rsp+8]
  0006f	48 8b 7c 24 10	 mov	 rdi, QWORD PTR [rsp+16]
  00074	c3		 ret	 0
$LN11@getcached:
  00075	48 8b 5c 24 08	 mov	 rbx, QWORD PTR [rsp+8]
  0007a	48 8b 7c 24 10	 mov	 rdi, QWORD PTR [rsp+16]
  0007f	33 c0		 xor	 eax, eax
  00081	c3		 ret	 0
getcached ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT copy2buff
_TEXT	SEGMENT
top$ = 48
n$ = 56
buff$ = 64
copy2buff PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 446
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00014	41 56		 push	 r14
  00016	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0001a	48 63 f2	 movsxd	 rsi, edx
  0001d	48 8b f9	 mov	 rdi, rcx
; Line 447
  00020	45 33 f6	 xor	 r14d, r14d
  00023	48 8b c6	 mov	 rax, rsi
  00026	49 8b e8	 mov	 rbp, r8
  00029	48 c1 e0 04	 shl	 rax, 4
  0002d	48 2b f8	 sub	 rdi, rax
$LL3@copy2buff:
; Line 449
  00030	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  00033	80 7a 08 04	 cmp	 BYTE PTR [rdx+8], 4
  00037	75 06		 jne	 SHORT $LN6@copy2buff
  00039	0f b6 5a 0b	 movzx	 ebx, BYTE PTR [rdx+11]
  0003d	eb 04		 jmp	 SHORT $LN7@copy2buff
$LN6@copy2buff:
  0003f	48 8b 5a 10	 mov	 rbx, QWORD PTR [rdx+16]
$LN7@copy2buff:
; Line 450
  00043	49 8d 0c 2e	 lea	 rcx, QWORD PTR [r14+rbp]
  00047	48 83 c2 18	 add	 rdx, 24
  0004b	4c 8b c3	 mov	 r8, rbx
  0004e	e8 00 00 00 00	 call	 memcpy
; Line 452
  00053	48 ff ce	 dec	 rsi
  00056	4c 03 f3	 add	 r14, rbx
  00059	48 83 c7 10	 add	 rdi, 16
  0005d	48 85 f6	 test	 rsi, rsi
  00060	7f ce		 jg	 SHORT $LL3@copy2buff
; Line 453
  00062	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00067	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  0006c	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00071	48 8b 7c 24 48	 mov	 rdi, QWORD PTR [rsp+72]
  00076	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007a	41 5e		 pop	 r14
  0007c	c3		 ret	 0
copy2buff ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LEnum
_TEXT	SEGMENT
l$ = 48
r$ = 56
LEnum	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 327
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 328
  00004	83 79 08 13	 cmp	 DWORD PTR [rcx+8], 19
  00008	75 28		 jne	 SHORT $LN8@LEnum
; Line 330
  0000a	83 7a 08 13	 cmp	 DWORD PTR [rdx+8], 19
  0000e	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00011	75 0f		 jne	 SHORT $LN7@LEnum
; Line 331
  00013	33 c9		 xor	 ecx, ecx
  00015	48 3b 02	 cmp	 rax, QWORD PTR [rdx]
  00018	0f 9e c1	 setle	 cl
  0001b	8b c1		 mov	 eax, ecx
; Line 344
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
$LN7@LEnum:
; Line 333
  00022	f2 0f 10 0a	 movsdx	 xmm1, QWORD PTR [rdx]
  00026	48 8b c8	 mov	 rcx, rax
; Line 344
  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
; Line 333
  0002d	e9 00 00 00 00	 jmp	 LEintfloat
$LN8@LEnum:
; Line 337
  00032	83 7a 08 03	 cmp	 DWORD PTR [rdx+8], 3
  00036	f2 0f 10 09	 movsdx	 xmm1, QWORD PTR [rcx]
  0003a	75 14		 jne	 SHORT $LN4@LEnum
; Line 338
  0003c	f2 0f 10 02	 movsdx	 xmm0, QWORD PTR [rdx]
  00040	33 c9		 xor	 ecx, ecx
  00042	66 0f 2f c1	 comisd	 xmm0, xmm1
  00046	0f 93 c1	 setae	 cl
  00049	8b c1		 mov	 eax, ecx
; Line 344
  0004b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004f	c3		 ret	 0
$LN4@LEnum:
; Line 339
  00050	66 0f 2e c9	 ucomisd xmm1, xmm1
  00054	7a 18		 jp	 SHORT $LN11@LEnum
  00056	75 16		 jne	 SHORT $LN11@LEnum
; Line 342
  00058	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  0005b	e8 00 00 00 00	 call	 LTintfloat
  00060	33 c9		 xor	 ecx, ecx
  00062	85 c0		 test	 eax, eax
  00064	0f 94 c1	 sete	 cl
  00067	8b c1		 mov	 eax, ecx
; Line 344
  00069	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006d	c3		 ret	 0
$LN11@LEnum:
; Line 340
  0006e	33 c0		 xor	 eax, eax
; Line 344
  00070	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00074	c3		 ret	 0
LEnum	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LTnum
_TEXT	SEGMENT
l$ = 48
r$ = 56
LTnum	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 304
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 305
  00004	83 79 08 13	 cmp	 DWORD PTR [rcx+8], 19
  00008	75 28		 jne	 SHORT $LN8@LTnum
; Line 307
  0000a	83 7a 08 13	 cmp	 DWORD PTR [rdx+8], 19
  0000e	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  00011	75 0f		 jne	 SHORT $LN7@LTnum
; Line 308
  00013	33 c9		 xor	 ecx, ecx
  00015	48 3b 02	 cmp	 rax, QWORD PTR [rdx]
  00018	0f 9c c1	 setl	 cl
  0001b	8b c1		 mov	 eax, ecx
; Line 321
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
$LN7@LTnum:
; Line 310
  00022	f2 0f 10 0a	 movsdx	 xmm1, QWORD PTR [rdx]
  00026	48 8b c8	 mov	 rcx, rax
; Line 321
  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
; Line 310
  0002d	e9 00 00 00 00	 jmp	 LTintfloat
$LN8@LTnum:
; Line 314
  00032	83 7a 08 03	 cmp	 DWORD PTR [rdx+8], 3
  00036	f2 0f 10 09	 movsdx	 xmm1, QWORD PTR [rcx]
  0003a	75 14		 jne	 SHORT $LN4@LTnum
; Line 315
  0003c	f2 0f 10 02	 movsdx	 xmm0, QWORD PTR [rdx]
  00040	33 c9		 xor	 ecx, ecx
  00042	66 0f 2f c1	 comisd	 xmm0, xmm1
  00046	0f 97 c1	 seta	 cl
  00049	8b c1		 mov	 eax, ecx
; Line 321
  0004b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004f	c3		 ret	 0
$LN4@LTnum:
; Line 316
  00050	66 0f 2e c9	 ucomisd xmm1, xmm1
  00054	7a 18		 jp	 SHORT $LN11@LTnum
  00056	75 16		 jne	 SHORT $LN11@LTnum
; Line 319
  00058	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  0005b	e8 00 00 00 00	 call	 LEintfloat
  00060	33 c9		 xor	 ecx, ecx
  00062	85 c0		 test	 eax, eax
  00064	0f 94 c1	 sete	 cl
  00067	8b c1		 mov	 eax, ecx
; Line 321
  00069	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006d	c3		 ret	 0
$LN11@LTnum:
; Line 317
  0006e	33 c0		 xor	 eax, eax
; Line 321
  00070	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00074	c3		 ret	 0
LTnum	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LEintfloat
_TEXT	SEGMENT
i$ = 8
f$ = 16
LEintfloat PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 288
  00000	48 b8 00 00 00
	00 00 00 20 00	 mov	 rax, 9007199254740992	; 0020000000000000H
  0000a	48 8b d1	 mov	 rdx, rcx
  0000d	48 03 c1	 add	 rax, rcx
  00010	48 b9 00 00 00
	00 00 00 40 00	 mov	 rcx, 18014398509481984	; 0040000000000000H
  0001a	48 3b c1	 cmp	 rax, rcx
  0001d	77 12		 ja	 SHORT $LN5@LEintfloat
; Line 297
  0001f	33 c0		 xor	 eax, eax
  00021	0f 57 c0	 xorps	 xmm0, xmm0
  00024	f2 48 0f 2a c2	 cvtsi2sd xmm0, rdx
  00029	66 0f 2f c8	 comisd	 xmm1, xmm0
  0002d	0f 93 c0	 setae	 al
; Line 298
  00030	c3		 ret	 0
$LN5@LEintfloat:
; Line 289
  00031	66 0f 2f 0d 00
	00 00 00	 comisd	 xmm1, QWORD PTR __real@43e0000000000000
  00039	72 06		 jb	 SHORT $LN4@LEintfloat
; Line 290
  0003b	b8 01 00 00 00	 mov	 eax, 1
; Line 298
  00040	c3		 ret	 0
$LN4@LEintfloat:
; Line 292
  00041	33 c0		 xor	 eax, eax
  00043	66 0f 2f 0d 00
	00 00 00	 comisd	 xmm1, QWORD PTR __real@c3e0000000000000
  0004b	72 0b		 jb	 SHORT $LN7@LEintfloat
  0004d	f2 48 0f 2c c9	 cvttsd2si rcx, xmm1
  00052	48 3b d1	 cmp	 rdx, rcx
  00055	0f 9e c0	 setle	 al
$LN7@LEintfloat:
; Line 298
  00058	c3		 ret	 0
LEintfloat ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LTintfloat
_TEXT	SEGMENT
i$ = 8
f$ = 16
LTintfloat PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 269
  00000	48 b8 00 00 00
	00 00 00 20 00	 mov	 rax, 9007199254740992	; 0020000000000000H
  0000a	48 8b d1	 mov	 rdx, rcx
  0000d	48 03 c1	 add	 rax, rcx
  00010	48 b9 00 00 00
	00 00 00 40 00	 mov	 rcx, 18014398509481984	; 0040000000000000H
  0001a	48 3b c1	 cmp	 rax, rcx
  0001d	77 12		 ja	 SHORT $LN5@LTintfloat
; Line 278
  0001f	33 c0		 xor	 eax, eax
  00021	0f 57 c0	 xorps	 xmm0, xmm0
  00024	f2 48 0f 2a c2	 cvtsi2sd xmm0, rdx
  00029	66 0f 2f c8	 comisd	 xmm1, xmm0
  0002d	0f 97 c0	 seta	 al
; Line 279
  00030	c3		 ret	 0
$LN5@LTintfloat:
; Line 270
  00031	66 0f 2f 0d 00
	00 00 00	 comisd	 xmm1, QWORD PTR __real@43e0000000000000
  00039	72 06		 jb	 SHORT $LN4@LTintfloat
; Line 271
  0003b	b8 01 00 00 00	 mov	 eax, 1
; Line 279
  00040	c3		 ret	 0
$LN4@LTintfloat:
; Line 273
  00041	33 c0		 xor	 eax, eax
  00043	66 0f 2f 0d 00
	00 00 00	 comisd	 xmm1, QWORD PTR __real@c3e0000000000000
  0004b	76 0b		 jbe	 SHORT $LN7@LTintfloat
  0004d	f2 48 0f 2c c9	 cvttsd2si rcx, xmm1
  00052	48 3b d1	 cmp	 rdx, rcx
  00055	0f 9c c0	 setl	 al
$LN7@LTintfloat:
; Line 279
  00058	c3		 ret	 0
LTintfloat ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT l_strcmp
_TEXT	SEGMENT
ls$ = 48
rs$ = 56
l_strcmp PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 234
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 236
  0000f	80 79 08 04	 cmp	 BYTE PTR [rcx+8], 4
  00013	48 8d 59 18	 lea	 rbx, QWORD PTR [rcx+24]
  00017	75 06		 jne	 SHORT $LN10@l_strcmp
  00019	0f b6 79 0b	 movzx	 edi, BYTE PTR [rcx+11]
  0001d	eb 04		 jmp	 SHORT $LN11@l_strcmp
$LN10@l_strcmp:
  0001f	48 8b 79 10	 mov	 rdi, QWORD PTR [rcx+16]
$LN11@l_strcmp:
; Line 238
  00023	80 7a 08 04	 cmp	 BYTE PTR [rdx+8], 4
  00027	48 89 74 24 30	 mov	 QWORD PTR [rsp+48], rsi
  0002c	48 8d 6a 18	 lea	 rbp, QWORD PTR [rdx+24]
  00030	75 06		 jne	 SHORT $LN12@l_strcmp
  00032	0f b6 72 0b	 movzx	 esi, BYTE PTR [rdx+11]
  00036	eb 04		 jmp	 SHORT $LN13@l_strcmp
$LN12@l_strcmp:
  00038	48 8b 72 10	 mov	 rsi, QWORD PTR [rdx+16]
$LN13@l_strcmp:
; Line 240
  0003c	48 8b d5	 mov	 rdx, rbp
  0003f	48 8b cb	 mov	 rcx, rbx
  00042	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strcoll
; Line 241
  00048	85 c0		 test	 eax, eax
  0004a	75 4b		 jne	 SHORT $LN16@l_strcmp
  0004c	0f 1f 40 00	 npad	 4
$LL7@l_strcmp:
; Line 244
  00050	48 83 c8 ff	 or	 rax, -1
$LL21@l_strcmp:
  00054	48 ff c0	 inc	 rax
  00057	80 3c 03 00	 cmp	 BYTE PTR [rbx+rax], 0
  0005b	75 f7		 jne	 SHORT $LL21@l_strcmp
; Line 245
  0005d	48 3b c6	 cmp	 rax, rsi
  00060	74 2b		 je	 SHORT $LN17@l_strcmp
; Line 247
  00062	48 3b c7	 cmp	 rax, rdi
  00065	74 21		 je	 SHORT $LN18@l_strcmp
; Line 250
  00067	48 ff c0	 inc	 rax
; Line 251
  0006a	48 03 d8	 add	 rbx, rax
  0006d	48 03 e8	 add	 rbp, rax
  00070	48 2b f8	 sub	 rdi, rax
  00073	48 8b d5	 mov	 rdx, rbp
  00076	48 8b cb	 mov	 rcx, rbx
  00079	48 2b f0	 sub	 rsi, rax
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strcoll
  00082	85 c0		 test	 eax, eax
  00084	74 ca		 je	 SHORT $LL7@l_strcmp
; Line 241
  00086	eb 0f		 jmp	 SHORT $LN16@l_strcmp
$LN18@l_strcmp:
; Line 248
  00088	83 c8 ff	 or	 eax, -1
  0008b	eb 0a		 jmp	 SHORT $LN16@l_strcmp
$LN17@l_strcmp:
; Line 246
  0008d	33 c9		 xor	 ecx, ecx
  0008f	48 3b c7	 cmp	 rax, rdi
  00092	0f 95 c1	 setne	 cl
  00095	8b c1		 mov	 eax, ecx
$LN16@l_strcmp:
; Line 254
  00097	48 8b 74 24 30	 mov	 rsi, QWORD PTR [rsp+48]
  0009c	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000a1	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  000a6	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
l_strcmp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT forlimit
_TEXT	SEGMENT
obj$ = 48
p$ = 56
n$1 = 64
step$ = 64
stopnow$ = 72
forlimit PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 136
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  0000f	41 56		 push	 r14
  00011	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00015	49 8b f0	 mov	 rsi, r8
; Line 137
  00018	45 33 c0	 xor	 r8d, r8d
  0001b	49 8b f9	 mov	 rdi, r9
  0001e	45 89 01	 mov	 DWORD PTR [r9], r8d
; Line 138
  00021	48 85 f6	 test	 rsi, rsi
  00024	4c 8b f2	 mov	 r14, rdx
  00027	41 0f 98 c0	 sets	 r8b
  0002b	48 8b d9	 mov	 rbx, rcx
  0002e	41 ff c0	 inc	 r8d
  00031	e8 00 00 00 00	 call	 luaV_tointeger
  00036	85 c0		 test	 eax, eax
  00038	75 58		 jne	 SHORT $LN1@forlimit
; Line 140
  0003a	83 7b 08 03	 cmp	 DWORD PTR [rbx+8], 3
  0003e	75 06		 jne	 SHORT $LN9@forlimit
  00040	f2 0f 10 0b	 movsdx	 xmm1, QWORD PTR [rbx]
  00044	eb 17		 jmp	 SHORT $LN5@forlimit
$LN9@forlimit:
  00046	48 8d 54 24 40	 lea	 rdx, QWORD PTR n$1[rsp]
  0004b	48 8b cb	 mov	 rcx, rbx
  0004e	e8 00 00 00 00	 call	 luaV_tonumber_
  00053	85 c0		 test	 eax, eax
  00055	74 40		 je	 SHORT $LN7@forlimit
$LN11@forlimit:
; Line 141
  00057	f2 0f 10 4c 24
	40		 movsdx	 xmm1, QWORD PTR n$1[rsp]
$LN5@forlimit:
  0005d	0f 57 c0	 xorps	 xmm0, xmm0
; Line 142
  00060	66 0f 2f c8	 comisd	 xmm1, xmm0
  00064	76 14		 jbe	 SHORT $LN4@forlimit
; Line 143
  00066	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  00070	49 89 06	 mov	 QWORD PTR [r14], rax
; Line 144
  00073	48 85 f6	 test	 rsi, rsi
  00076	79 1a		 jns	 SHORT $LN1@forlimit
; Line 146
  00078	eb 12		 jmp	 SHORT $LN12@forlimit
$LN4@forlimit:
; Line 147
  0007a	48 b9 00 00 00
	00 00 00 00 80	 mov	 rcx, -9223372036854775808 ; 8000000000000000H
  00084	49 89 0e	 mov	 QWORD PTR [r14], rcx
; Line 148
  00087	48 85 f6	 test	 rsi, rsi
  0008a	78 06		 js	 SHORT $LN1@forlimit
$LN12@forlimit:
  0008c	c7 07 01 00 00
	00		 mov	 DWORD PTR [rdi], 1
$LN1@forlimit:
; Line 151
  00092	b8 01 00 00 00	 mov	 eax, 1
$LN7@forlimit:
; Line 152
  00097	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0009c	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000a1	48 8b 7c 24 48	 mov	 rdi, QWORD PTR [rsp+72]
  000a6	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000aa	41 5e		 pop	 r14
  000ac	c3		 ret	 0
forlimit ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaV_objlen
_TEXT	SEGMENT
L$ = 64
ra$ = 72
rb$ = 80
luaV_objlen PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 503
$LN19:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 505
  0000f	45 8b 48 08	 mov	 r9d, DWORD PTR [r8+8]
  00013	49 8b d8	 mov	 rbx, r8
  00016	48 8b fa	 mov	 rdi, rdx
  00019	41 83 e1 3f	 and	 r9d, 63			; 0000003fH
  0001d	48 8b f1	 mov	 rsi, rcx
  00020	41 83 e9 04	 sub	 r9d, 4
  00024	0f 84 b2 00 00
	00		 je	 $LN4@luaV_objle
  0002a	48 89 6c 24 40	 mov	 QWORD PTR [rsp+64], rbp
  0002f	41 ff c9	 dec	 r9d
  00032	74 45		 je	 SHORT $LN6@luaV_objle
  00034	41 83 f9 0f	 cmp	 r9d, 15
  00038	74 19		 je	 SHORT $LN3@luaV_objle
; Line 522
  0003a	41 b8 04 00 00
	00		 mov	 r8d, 4
  00040	48 8b d3	 mov	 rdx, rbx
  00043	e8 00 00 00 00	 call	 luaT_gettmbyobj
; Line 523
  00048	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  0004c	75 57		 jne	 SHORT $LN7@luaV_objle
  0004e	e9 aa 00 00 00	 jmp	 $LN17@luaV_objle
$LN3@luaV_objle:
; Line 518
  00053	49 8b 00	 mov	 rax, QWORD PTR [r8]
  00056	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  0005a	c7 42 08 13 00
	00 00		 mov	 DWORD PTR [rdx+8], 19
  00061	48 89 0a	 mov	 QWORD PTR [rdx], rcx
$LN15@luaV_objle:
  00064	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
; Line 529
  00069	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  0006e	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  00073	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00077	5f		 pop	 rdi
  00078	c3		 ret	 0
$LN6@luaV_objle:
; Line 507
  00079	49 8b 28	 mov	 rbp, QWORD PTR [r8]
; Line 508
  0007c	48 8b 4d 28	 mov	 rcx, QWORD PTR [rbp+40]
  00080	48 85 c9	 test	 rcx, rcx
  00083	74 40		 je	 SHORT $LN5@luaV_objle
  00085	f6 41 0a 10	 test	 BYTE PTR [rcx+10], 16
  00089	75 3a		 jne	 SHORT $LN5@luaV_objle
  0008b	4c 8b 46 18	 mov	 r8, QWORD PTR [rsi+24]
  0008f	ba 04 00 00 00	 mov	 edx, 4
  00094	4d 8b 80 00 01
	00 00		 mov	 r8, QWORD PTR [r8+256]
  0009b	e8 00 00 00 00	 call	 luaT_gettm
; Line 509
  000a0	48 85 c0	 test	 rax, rax
  000a3	74 20		 je	 SHORT $LN5@luaV_objle
$LN7@luaV_objle:
; Line 528
  000a5	4c 8b cb	 mov	 r9, rbx
  000a8	4c 8b c3	 mov	 r8, rbx
  000ab	48 8b d0	 mov	 rdx, rax
  000ae	48 8b ce	 mov	 rcx, rsi
  000b1	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR [rsp+40], 1
  000b9	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  000be	e8 00 00 00 00	 call	 luaT_callTM
  000c3	eb 9f		 jmp	 SHORT $LN15@luaV_objle
$LN5@luaV_objle:
; Line 510
  000c5	48 8b cd	 mov	 rcx, rbp
  000c8	e8 00 00 00 00	 call	 luaH_getn
  000cd	c7 47 08 13 00
	00 00		 mov	 DWORD PTR [rdi+8], 19
  000d4	48 63 c8	 movsxd	 rcx, eax
  000d7	48 89 0f	 mov	 QWORD PTR [rdi], rcx
; Line 511
  000da	eb 88		 jmp	 SHORT $LN15@luaV_objle
$LN4@luaV_objle:
; Line 514
  000dc	49 8b 00	 mov	 rax, QWORD PTR [r8]
; Line 529
  000df	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  000e4	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  000e9	0f b6 48 0b	 movzx	 ecx, BYTE PTR [rax+11]
  000ed	c7 42 08 13 00
	00 00		 mov	 DWORD PTR [rdx+8], 19
  000f4	48 89 0a	 mov	 QWORD PTR [rdx], rcx
  000f7	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000fb	5f		 pop	 rdi
  000fc	c3		 ret	 0
$LN17@luaV_objle:
; Line 524
  000fd	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0O@MKOIIDGO@get?5length?5of?$AA@
  00104	48 8b d3	 mov	 rdx, rbx
  00107	48 8b ce	 mov	 rcx, rsi
  0010a	e8 00 00 00 00	 call	 luaG_typeerror
  0010f	cc		 int	 3
$LN16@luaV_objle:
luaV_objlen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaV_shiftl
_TEXT	SEGMENT
x$ = 8
y$ = 16
luaV_shiftl PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 579
  00000	4c 8b c1	 mov	 r8, rcx
; Line 580
  00003	48 85 d2	 test	 rdx, rdx
  00006	79 15		 jns	 SHORT $LN6@luaV_shift
; Line 581
  00008	48 83 fa c0	 cmp	 rdx, -64		; ffffffffffffffc0H
  0000c	7f 03		 jg	 SHORT $LN5@luaV_shift
$LN10@luaV_shift:
  0000e	33 c0		 xor	 eax, eax
; Line 588
  00010	c3		 ret	 0
$LN5@luaV_shift:
; Line 582
  00011	0f b6 ca	 movzx	 ecx, dl
  00014	f6 d9		 neg	 cl
  00016	49 d3 e8	 shr	 r8, cl
; Line 586
  00019	49 8b c0	 mov	 rax, r8
; Line 588
  0001c	c3		 ret	 0
$LN6@luaV_shift:
; Line 585
  0001d	48 83 fa 40	 cmp	 rdx, 64			; 00000040H
  00021	7d eb		 jge	 SHORT $LN10@luaV_shift
; Line 586
  00023	48 8b ca	 mov	 rcx, rdx
  00026	49 d3 e0	 shl	 r8, cl
  00029	49 8b c0	 mov	 rax, r8
; Line 588
  0002c	c3		 ret	 0
luaV_shiftl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaV_mod
_TEXT	SEGMENT
L$ = 48
m$ = 56
n$ = 64
luaV_mod PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 558
$LN10:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 559
  00004	49 8d 40 01	 lea	 rax, QWORD PTR [r8+1]
  00008	4c 8b ca	 mov	 r9, rdx
  0000b	48 83 f8 01	 cmp	 rax, 1
  0000f	77 0c		 ja	 SHORT $LN4@luaV_mod
; Line 560
  00011	4d 85 c0	 test	 r8, r8
  00014	74 24		 je	 SHORT $LN8@luaV_mod
; Line 562
  00016	33 c0		 xor	 eax, eax
; Line 570
  00018	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001c	c3		 ret	 0
$LN4@luaV_mod:
; Line 565
  0001d	48 8b c2	 mov	 rax, rdx
  00020	48 99		 cdq
  00022	49 f7 f8	 idiv	 r8
; Line 566
  00025	48 85 d2	 test	 rdx, rdx
  00028	74 08		 je	 SHORT $LN1@luaV_mod
  0002a	4d 33 c8	 xor	 r9, r8
  0002d	7d 03		 jge	 SHORT $LN1@luaV_mod
; Line 567
  0002f	49 03 d0	 add	 rdx, r8
$LN1@luaV_mod:
; Line 568
  00032	48 8b c2	 mov	 rax, rdx
; Line 570
  00035	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00039	c3		 ret	 0
$LN8@luaV_mod:
; Line 561
  0003a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BK@HHICHKCC@attempt?5to?5perform?5?8n?$CF?$CF0?8?$AA@
  00041	e8 00 00 00 00	 call	 luaG_runerror
  00046	cc		 int	 3
$LN7@luaV_mod:
luaV_mod ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaV_div
_TEXT	SEGMENT
L$ = 48
m$ = 56
n$ = 64
luaV_div PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 538
$LN10:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 539
  00004	49 8d 40 01	 lea	 rax, QWORD PTR [r8+1]
  00008	4c 8b ca	 mov	 r9, rdx
  0000b	48 83 f8 01	 cmp	 rax, 1
  0000f	77 10		 ja	 SHORT $LN4@luaV_div
; Line 540
  00011	4d 85 c0	 test	 r8, r8
  00014	74 25		 je	 SHORT $LN8@luaV_div
; Line 542
  00016	49 f7 d9	 neg	 r9
  00019	49 8b c1	 mov	 rax, r9
; Line 550
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	c3		 ret	 0
$LN4@luaV_div:
; Line 545
  00021	48 8b c2	 mov	 rax, rdx
  00024	48 99		 cdq
  00026	49 f7 f8	 idiv	 r8
; Line 546
  00029	4d 33 c8	 xor	 r9, r8
  0002c	7d 08		 jge	 SHORT $LN1@luaV_div
  0002e	48 85 d2	 test	 rdx, rdx
  00031	74 03		 je	 SHORT $LN1@luaV_div
; Line 547
  00033	48 ff c8	 dec	 rax
$LN1@luaV_div:
; Line 550
  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
$LN8@luaV_div:
; Line 541
  0003b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BK@KPCDLNKD@attempt?5to?5divide?5by?5zero?$AA@
  00042	e8 00 00 00 00	 call	 luaG_runerror
  00047	cc		 int	 3
$LN7@luaV_div:
luaV_div ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaV_concat
_TEXT	SEGMENT
total$1$ = 48
buff$1 = 56
__$ArrayPad$ = 96
L$ = 160
total$ = 168
luaV_concat PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 460
$LN62:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	57		 push	 rdi
  00010	41 54		 push	 r12
  00012	41 55		 push	 r13
  00014	41 56		 push	 r14
  00016	41 57		 push	 r15
  00018	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0001c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00023	48 33 c4	 xor	 rax, rsp
  00026	48 89 44 24 60	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0002b	89 54 24 30	 mov	 DWORD PTR total$1$[rsp], edx
  0002f	4c 8b e1	 mov	 r12, rcx
  00032	49 bf ff ff ff
	ff ff ff ff 7f	 mov	 r15, 9223372036854775807 ; 7fffffffffffffffH
  0003c	0f 1f 40 00	 npad	 4
$LL19@luaV_conca:
; Line 463
  00040	49 8b 7c 24 10	 mov	 rdi, QWORD PTR [r12+16]
; Line 464
  00045	41 bd 02 00 00
	00		 mov	 r13d, 2
; Line 465
  0004b	8b 47 e8	 mov	 eax, DWORD PTR [rdi-24]
  0004e	83 e0 0f	 and	 eax, 15
  00051	83 e8 03	 sub	 eax, 3
  00054	83 f8 01	 cmp	 eax, 1
  00057	0f 87 c2 01 00
	00		 ja	 $LN13@luaV_conca
  0005d	8b 47 f8	 mov	 eax, DWORD PTR [rdi-8]
  00060	83 e0 0f	 and	 eax, 15
  00063	83 f8 04	 cmp	 eax, 4
  00066	74 19		 je	 SHORT $LN16@luaV_conca
  00068	83 f8 03	 cmp	 eax, 3
  0006b	0f 85 ae 01 00
	00		 jne	 $LN13@luaV_conca
  00071	48 8d 57 f0	 lea	 rdx, QWORD PTR [rdi-16]
  00075	49 8b cc	 mov	 rcx, r12
  00078	e8 00 00 00 00	 call	 luaO_tostring
  0007d	8b 54 24 30	 mov	 edx, DWORD PTR total$1$[rsp]
$LN16@luaV_conca:
; Line 467
  00081	83 7f f8 44	 cmp	 DWORD PTR [rdi-8], 68	; 00000044H
  00085	75 29		 jne	 SHORT $LN11@luaV_conca
  00087	48 8b 47 f0	 mov	 rax, QWORD PTR [rdi-16]
  0008b	80 78 0b 00	 cmp	 BYTE PTR [rax+11], 0
  0008f	75 1f		 jne	 SHORT $LN11@luaV_conca
; Line 468
  00091	8b 47 e8	 mov	 eax, DWORD PTR [rdi-24]
  00094	83 e0 0f	 and	 eax, 15
  00097	3c 03		 cmp	 al, 3
  00099	0f 85 9f 01 00
	00		 jne	 $LN8@luaV_conca
  0009f	48 8d 57 e0	 lea	 rdx, QWORD PTR [rdi-32]
  000a3	49 8b cc	 mov	 rcx, r12
  000a6	e8 00 00 00 00	 call	 luaO_tostring
; Line 469
  000ab	e9 8a 01 00 00	 jmp	 $LN60@luaV_conca
$LN11@luaV_conca:
  000b0	83 7f e8 44	 cmp	 DWORD PTR [rdi-24], 68	; 00000044H
  000b4	75 17		 jne	 SHORT $LN9@luaV_conca
  000b6	48 8b 47 e0	 mov	 rax, QWORD PTR [rdi-32]
  000ba	80 78 0b 00	 cmp	 BYTE PTR [rax+11], 0
  000be	75 0d		 jne	 SHORT $LN9@luaV_conca
; Line 470
  000c0	0f 10 47 f0	 movups	 xmm0, XMMWORD PTR [rdi-16]
  000c4	0f 11 47 e0	 movups	 XMMWORD PTR [rdi-32], xmm0
; Line 472
  000c8	e9 71 01 00 00	 jmp	 $LN8@luaV_conca
$LN9@luaV_conca:
; Line 474
  000cd	48 8b 6f f0	 mov	 rbp, QWORD PTR [rdi-16]
  000d1	80 7d 08 04	 cmp	 BYTE PTR [rbp+8], 4
  000d5	75 06		 jne	 SHORT $LN24@luaV_conca
  000d7	0f b6 6d 0b	 movzx	 ebp, BYTE PTR [rbp+11]
  000db	eb 04		 jmp	 SHORT $LN25@luaV_conca
$LN24@luaV_conca:
  000dd	48 8b 6d 10	 mov	 rbp, QWORD PTR [rbp+16]
$LN25@luaV_conca:
; Line 477
  000e1	bb 01 00 00 00	 mov	 ebx, 1
  000e6	4c 63 f2	 movsxd	 r14, edx
  000e9	44 8b eb	 mov	 r13d, ebx
  000ec	49 3b de	 cmp	 rbx, r14
  000ef	7d 60		 jge	 SHORT $LN5@luaV_conca
  000f1	48 8d 77 e0	 lea	 rsi, QWORD PTR [rdi-32]
$LL7@luaV_conca:
  000f5	8b 46 08	 mov	 eax, DWORD PTR [rsi+8]
  000f8	83 e0 0f	 and	 eax, 15
  000fb	83 f8 04	 cmp	 eax, 4
  000fe	74 1d		 je	 SHORT $LN4@luaV_conca
  00100	83 f8 03	 cmp	 eax, 3
  00103	75 4c		 jne	 SHORT $LN5@luaV_conca
  00105	49 63 c5	 movsxd	 rax, r13d
  00108	48 8b d7	 mov	 rdx, rdi
  0010b	49 8b cc	 mov	 rcx, r12
  0010e	48 ff c0	 inc	 rax
  00111	48 c1 e0 04	 shl	 rax, 4
  00115	48 2b d0	 sub	 rdx, rax
  00118	e8 00 00 00 00	 call	 luaO_tostring
$LN4@luaV_conca:
; Line 478
  0011d	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  00120	80 78 08 04	 cmp	 BYTE PTR [rax+8], 4
  00124	75 06		 jne	 SHORT $LN26@luaV_conca
  00126	0f b6 48 0b	 movzx	 ecx, BYTE PTR [rax+11]
  0012a	eb 04		 jmp	 SHORT $LN27@luaV_conca
$LN26@luaV_conca:
  0012c	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
$LN27@luaV_conca:
; Line 479
  00130	49 8b c7	 mov	 rax, r15
  00133	48 2b c5	 sub	 rax, rbp
  00136	48 3b c8	 cmp	 rcx, rax
  00139	0f 83 54 01 00
	00		 jae	 $LN61@luaV_conca
; Line 481
  0013f	48 ff c3	 inc	 rbx
  00142	48 03 e9	 add	 rbp, rcx
  00145	41 ff c5	 inc	 r13d
  00148	48 83 ee 10	 sub	 rsi, 16
  0014c	49 3b de	 cmp	 rbx, r14
  0014f	7c a4		 jl	 SHORT $LL7@luaV_conca
$LN5@luaV_conca:
; Line 483
  00151	48 83 fd 28	 cmp	 rbp, 40			; 00000028H
  00155	77 5b		 ja	 SHORT $LN2@luaV_conca
; Line 485
  00157	48 8b c3	 mov	 rax, rbx
  0015a	45 33 ff	 xor	 r15d, r15d
  0015d	48 c1 e0 04	 shl	 rax, 4
  00161	48 2b f8	 sub	 rdi, rax
  00164	4c 8b f7	 mov	 r14, rdi
$LL30@luaV_conca:
  00167	49 8b 16	 mov	 rdx, QWORD PTR [r14]
  0016a	80 7a 08 04	 cmp	 BYTE PTR [rdx+8], 4
  0016e	75 06		 jne	 SHORT $LN33@luaV_conca
  00170	0f b6 72 0b	 movzx	 esi, BYTE PTR [rdx+11]
  00174	eb 04		 jmp	 SHORT $LN34@luaV_conca
$LN33@luaV_conca:
  00176	48 8b 72 10	 mov	 rsi, QWORD PTR [rdx+16]
$LN34@luaV_conca:
  0017a	48 8d 4c 24 38	 lea	 rcx, QWORD PTR buff$1[rsp]
  0017f	48 83 c2 18	 add	 rdx, 24
  00183	4c 8b c6	 mov	 r8, rsi
  00186	49 03 cf	 add	 rcx, r15
  00189	e8 00 00 00 00	 call	 memcpy
  0018e	48 ff cb	 dec	 rbx
  00191	4c 03 fe	 add	 r15, rsi
  00194	49 83 c6 10	 add	 r14, 16
  00198	48 85 db	 test	 rbx, rbx
  0019b	7f ca		 jg	 SHORT $LL30@luaV_conca
; Line 486
  0019d	48 8d 54 24 38	 lea	 rdx, QWORD PTR buff$1[rsp]
  001a2	4c 8b c5	 mov	 r8, rbp
  001a5	49 8b cc	 mov	 rcx, r12
  001a8	e8 00 00 00 00	 call	 luaS_newlstr
  001ad	4c 8b f8	 mov	 r15, rax
; Line 488
  001b0	eb 53		 jmp	 SHORT $LN35@luaV_conca
$LN2@luaV_conca:
; Line 489
  001b2	48 8b d5	 mov	 rdx, rbp
  001b5	49 8b cc	 mov	 rcx, r12
  001b8	e8 00 00 00 00	 call	 luaS_createlngstrobj
; Line 490
  001bd	33 ed		 xor	 ebp, ebp
  001bf	4c 8b f8	 mov	 r15, rax
  001c2	48 8b c3	 mov	 rax, rbx
  001c5	48 c1 e0 04	 shl	 rax, 4
  001c9	48 2b f8	 sub	 rdi, rax
  001cc	4c 8b f7	 mov	 r14, rdi
  001cf	90		 npad	 1
$LL37@luaV_conca:
  001d0	49 8b 16	 mov	 rdx, QWORD PTR [r14]
  001d3	80 7a 08 04	 cmp	 BYTE PTR [rdx+8], 4
  001d7	75 06		 jne	 SHORT $LN40@luaV_conca
  001d9	0f b6 72 0b	 movzx	 esi, BYTE PTR [rdx+11]
  001dd	eb 04		 jmp	 SHORT $LN41@luaV_conca
$LN40@luaV_conca:
  001df	48 8b 72 10	 mov	 rsi, QWORD PTR [rdx+16]
$LN41@luaV_conca:
  001e3	48 8d 4d 18	 lea	 rcx, QWORD PTR [rbp+24]
  001e7	48 83 c2 18	 add	 rdx, 24
  001eb	4c 8b c6	 mov	 r8, rsi
  001ee	49 03 cf	 add	 rcx, r15
  001f1	e8 00 00 00 00	 call	 memcpy
  001f6	48 ff cb	 dec	 rbx
  001f9	48 03 ee	 add	 rbp, rsi
  001fc	49 83 c6 10	 add	 r14, 16
  00200	48 85 db	 test	 rbx, rbx
  00203	7f cb		 jg	 SHORT $LL37@luaV_conca
$LN35@luaV_conca:
; Line 492
  00205	4c 89 3f	 mov	 QWORD PTR [rdi], r15
  00208	41 0f b6 47 08	 movzx	 eax, BYTE PTR [r15+8]
  0020d	49 bf ff ff ff
	ff ff ff ff 7f	 mov	 r15, 9223372036854775807 ; 7fffffffffffffffH
  00217	83 c8 40	 or	 eax, 64			; 00000040H
  0021a	89 47 08	 mov	 DWORD PTR [rdi+8], eax
  0021d	eb 1b		 jmp	 SHORT $LN60@luaV_conca
$LN13@luaV_conca:
; Line 466
  0021f	48 8d 57 e0	 lea	 rdx, QWORD PTR [rdi-32]
  00223	4c 8d 47 f0	 lea	 r8, QWORD PTR [rdi-16]
  00227	49 8b cc	 mov	 rcx, r12
  0022a	4c 8b ca	 mov	 r9, rdx
  0022d	c7 44 24 20 16
	00 00 00	 mov	 DWORD PTR [rsp+32], 22
  00235	e8 00 00 00 00	 call	 luaT_trybinTM
$LN60@luaV_conca:
  0023a	8b 54 24 30	 mov	 edx, DWORD PTR total$1$[rsp]
$LN8@luaV_conca:
; Line 494
  0023e	b8 01 00 00 00	 mov	 eax, 1
  00243	41 2b c5	 sub	 eax, r13d
  00246	03 d0		 add	 edx, eax
; Line 495
  00248	41 8d 45 ff	 lea	 eax, DWORD PTR [r13-1]
  0024c	48 63 c8	 movsxd	 rcx, eax
  0024f	89 54 24 30	 mov	 DWORD PTR total$1$[rsp], edx
  00253	48 f7 d9	 neg	 rcx
  00256	48 c1 e1 04	 shl	 rcx, 4
  0025a	49 01 4c 24 10	 add	 QWORD PTR [r12+16], rcx
; Line 496
  0025f	83 fa 01	 cmp	 edx, 1
  00262	0f 8f d8 fd ff
	ff		 jg	 $LL19@luaV_conca
; Line 497
  00268	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0026d	48 33 cc	 xor	 rcx, rsp
  00270	e8 00 00 00 00	 call	 __security_check_cookie
  00275	4c 8d 5c 24 70	 lea	 r11, QWORD PTR [rsp+112]
  0027a	49 8b 5b 38	 mov	 rbx, QWORD PTR [r11+56]
  0027e	49 8b 6b 40	 mov	 rbp, QWORD PTR [r11+64]
  00282	49 8b 73 48	 mov	 rsi, QWORD PTR [r11+72]
  00286	49 8b e3	 mov	 rsp, r11
  00289	41 5f		 pop	 r15
  0028b	41 5e		 pop	 r14
  0028d	41 5d		 pop	 r13
  0028f	41 5c		 pop	 r12
  00291	5f		 pop	 rdi
  00292	c3		 ret	 0
$LN61@luaV_conca:
; Line 480
  00293	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BH@ONIKNOCM@string?5length?5overflow?$AA@
  0029a	49 8b cc	 mov	 rcx, r12
  0029d	e8 00 00 00 00	 call	 luaG_runerror
  002a2	cc		 int	 3
$LN59@luaV_conca:
luaV_concat ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaV_execute
_TEXT	SEGMENT
nc$1 = 48
nc$2 = 56
nc$3 = 64
nc$4 = 72
nc$5 = 80
nb$6 = 88
ic$7 = 96
ib$8 = 104
ic$9 = 112
n$10 = 120
ic$11 = 128
nstep$12 = 136
ic$13 = 144
ninit$14 = 152
ic$15 = 160
ib$16 = 168
nc$17 = 176
ib$18 = 184
ib$19 = 192
ib$20 = 200
ib$21 = 208
nc$22 = 216
v$23 = 224
v$24 = 240
v$25 = 256
v$26 = 272
v$27 = 288
v$28 = 304
v$29 = 320
v$30 = 336
base$1$ = 496
L$ = 496
k$1$ = 504
cl$1$ = 512
ilimit$31 = 520
luaV_execute PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 762
$LN597:
  00000	48 8b c4	 mov	 rax, rsp
  00003	55		 push	 rbp
  00004	53		 push	 rbx
  00005	56		 push	 rsi
  00006	57		 push	 rdi
  00007	41 54		 push	 r12
  00009	41 55		 push	 r13
  0000b	41 56		 push	 r14
  0000d	41 57		 push	 r15
  0000f	48 8d a8 18 ff
	ff ff		 lea	 rbp, QWORD PTR [rax-232]
  00016	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
; Line 763
  0001d	4c 8b 61 20	 mov	 r12, QWORD PTR [rcx+32]
  00021	0f 29 70 a8	 movaps	 XMMWORD PTR [rax-88], xmm6
  00025	0f 29 78 98	 movaps	 XMMWORD PTR [rax-104], xmm7
  00029	4c 8b e9	 mov	 r13, rcx
; Line 767
  0002c	41 80 4c 24 42
	08		 or	 BYTE PTR [r12+66], 8
  00032	44 0f 29 40 88	 movaps	 XMMWORD PTR [rax-120], xmm8
  00037	44 0f 29 88 78
	ff ff ff	 movaps	 XMMWORD PTR [rax-136], xmm9
  0003f	f2 44 0f 10 0d
	00 00 00 00	 movsdx	 xmm9, QWORD PTR __xmm@80000000000000008000000000000000
  00048	45 0f 57 c0	 xorps	 xmm8, xmm8
$LN593@luaV_execu:
  0004c	45 33 db	 xor	 r11d, r11d
  0004f	90		 npad	 1
$newframe$598:
; Line 770
  00050	49 8b 04 24	 mov	 rax, QWORD PTR [r12]
; Line 772
  00054	4d 8b 4c 24 20	 mov	 r9, QWORD PTR [r12+32]
  00059	4c 8b 38	 mov	 r15, QWORD PTR [rax]
  0005c	4c 89 8d f0 00
	00 00		 mov	 QWORD PTR base$1$[rbp-256], r9
  00063	49 8b 47 18	 mov	 rax, QWORD PTR [r15+24]
  00067	4c 89 bd 00 01
	00 00		 mov	 QWORD PTR cl$1$[rbp-256], r15
  0006e	4c 8b 50 30	 mov	 r10, QWORD PTR [rax+48]
  00072	4c 89 95 f8 00
	00 00		 mov	 QWORD PTR k$1$[rbp-256], r10
  00079	0f 1f 80 00 00
	00 00		 npad	 7
$LL169@luaV_execu:
; Line 775
  00080	49 8b 44 24 28	 mov	 rax, QWORD PTR [r12+40]
  00085	48 83 c0 04	 add	 rax, 4
  00089	8b 78 fc	 mov	 edi, DWORD PTR [rax-4]
  0008c	49 89 44 24 28	 mov	 QWORD PTR [r12+40], rax
; Line 777
  00091	41 f6 85 c8 00
	00 00 0c	 test	 BYTE PTR [r13+200], 12
  00099	74 1e		 je	 SHORT $LN167@luaV_execu
; Line 778
  0009b	49 8b cd	 mov	 rcx, r13
  0009e	e8 00 00 00 00	 call	 luaG_traceexec
  000a3	4d 8b 4c 24 20	 mov	 r9, QWORD PTR [r12+32]
  000a8	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  000af	4c 89 8d f0 00
	00 00		 mov	 QWORD PTR base$1$[rbp-256], r9
  000b6	45 33 db	 xor	 r11d, r11d
$LN167@luaV_execu:
; Line 780
  000b9	8b c7		 mov	 eax, edi
  000bb	c1 e8 06	 shr	 eax, 6
  000be	0f b6 d8	 movzx	 ebx, al
; Line 783
  000c1	8b c7		 mov	 eax, edi
  000c3	48 63 d3	 movsxd	 rdx, ebx
  000c6	83 e0 3f	 and	 eax, 63			; 0000003fH
  000c9	48 8b f2	 mov	 rsi, rdx
  000cc	48 03 f6	 add	 rsi, rsi
  000cf	4d 8d 34 f1	 lea	 r14, QWORD PTR [r9+rsi*8]
  000d3	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  000d6	77 a8		 ja	 SHORT $LL169@luaV_execu
  000d8	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:__ImageBase
  000df	48 98		 cdqe
  000e1	41 8b 8c 80 00
	00 00 00	 mov	 ecx, DWORD PTR $LN571@luaV_execu[r8+rax*4]
  000e9	49 03 c8	 add	 rcx, r8
  000ec	ff e1		 jmp	 rcx
$LN164@luaV_execu:
; Line 785
  000ee	c1 ef 17	 shr	 edi, 23
  000f1	8b c7		 mov	 eax, edi
  000f3	48 03 c0	 add	 rax, rax
  000f6	41 0f 10 04 c1	 movups	 xmm0, XMMWORD PTR [r9+rax*8]
  000fb	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0
; Line 786
  000ff	e9 7c ff ff ff	 jmp	 $LL169@luaV_execu
$LN163@luaV_execu:
; Line 789
  00104	c1 ef 0e	 shr	 edi, 14
  00107	8b c7		 mov	 eax, edi
  00109	48 03 c0	 add	 rax, rax
; Line 790
  0010c	41 0f 10 04 c2	 movups	 xmm0, XMMWORD PTR [r10+rax*8]
  00111	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0
; Line 791
  00115	e9 66 ff ff ff	 jmp	 $LL169@luaV_execu
$LN162@luaV_execu:
; Line 796
  0011a	49 8b 4c 24 28	 mov	 rcx, QWORD PTR [r12+40]
  0011f	8b 11		 mov	 edx, DWORD PTR [rcx]
  00121	48 8d 41 04	 lea	 rax, QWORD PTR [rcx+4]
  00125	49 89 44 24 28	 mov	 QWORD PTR [r12+40], rax
  0012a	c1 ea 06	 shr	 edx, 6
  0012d	48 03 d2	 add	 rdx, rdx
; Line 797
  00130	41 0f 10 04 d2	 movups	 xmm0, XMMWORD PTR [r10+rdx*8]
  00135	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0
; Line 798
  00139	e9 42 ff ff ff	 jmp	 $LL169@luaV_execu
$LN161@luaV_execu:
; Line 801
  0013e	8b c7		 mov	 eax, edi
  00140	41 c7 46 08 01
	00 00 00	 mov	 DWORD PTR [r14+8], 1
  00148	c1 e8 17	 shr	 eax, 23
  0014b	41 89 06	 mov	 DWORD PTR [r14], eax
; Line 802
  0014e	f7 c7 00 c0 7f
	00		 test	 edi, 8372224		; 007fc000H
  00154	0f 84 26 ff ff
	ff		 je	 $LL169@luaV_execu
  0015a	49 83 44 24 28
	04		 add	 QWORD PTR [r12+40], 4
; Line 803
  00160	e9 1b ff ff ff	 jmp	 $LL169@luaV_execu
$LN159@luaV_execu:
; Line 806
  00165	c1 ef 17	 shr	 edi, 23
  00168	49 8d 4e 08	 lea	 rcx, QWORD PTR [r14+8]
  0016c	0f 1f 40 00	 npad	 4
$LL158@luaV_execu:
; Line 809
  00170	8b c7		 mov	 eax, edi
  00172	ff cf		 dec	 edi
  00174	44 89 19	 mov	 DWORD PTR [rcx], r11d
  00177	48 8d 49 10	 lea	 rcx, QWORD PTR [rcx+16]
  0017b	85 c0		 test	 eax, eax
  0017d	75 f1		 jne	 SHORT $LL158@luaV_execu
; Line 810
  0017f	e9 fc fe ff ff	 jmp	 $LL169@luaV_execu
$LN155@luaV_execu:
; Line 813
  00184	c1 ef 17	 shr	 edi, 23
; Line 814
  00187	49 8b 4c ff 20	 mov	 rcx, QWORD PTR [r15+rdi*8+32]
  0018c	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0018f	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00192	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0
; Line 815
  00196	e9 e5 fe ff ff	 jmp	 $LL169@luaV_execu
$LN154@luaV_execu:
; Line 818
  0019b	8b c7		 mov	 eax, edi
  0019d	c1 e8 17	 shr	 eax, 23
  001a0	49 8b 4c c7 20	 mov	 rcx, QWORD PTR [r15+rax*8+32]
  001a5	48 8b 31	 mov	 rsi, QWORD PTR [rcx]
$LN594@luaV_execu:
; Line 819
  001a8	c1 ef 0e	 shr	 edi, 14
  001ab	8b df		 mov	 ebx, edi
  001ad	0f ba e7 08	 bt	 edi, 8
  001b1	73 0c		 jae	 SHORT $LN172@luaV_execu
  001b3	0f b6 db	 movzx	 ebx, bl
  001b6	48 c1 e3 04	 shl	 rbx, 4
  001ba	49 03 da	 add	 rbx, r10
  001bd	eb 0d		 jmp	 SHORT $LN173@luaV_execu
$LN172@luaV_execu:
  001bf	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  001c5	48 c1 e3 04	 shl	 rbx, 4
  001c9	49 03 d9	 add	 rbx, r9
$LN173@luaV_execu:
; Line 820
  001cc	83 7e 08 45	 cmp	 DWORD PTR [rsi+8], 69	; 00000045H
  001d0	74 05		 je	 SHORT $LN182@luaV_execu
  001d2	49 8b c3	 mov	 rax, r11
  001d5	eb 3a		 jmp	 SHORT $LN153@luaV_execu
$LN182@luaV_execu:
  001d7	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  001da	48 8b d3	 mov	 rdx, rbx
  001dd	e8 00 00 00 00	 call	 luaH_get
$LN588@luaV_execu:
  001e2	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  001e6	75 61		 jne	 SHORT $LN533@luaV_execu
  001e8	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  001eb	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  001ef	48 85 c9	 test	 rcx, rcx
  001f2	74 4e		 je	 SHORT $LN178@luaV_execu
  001f4	f6 41 0a 01	 test	 BYTE PTR [rcx+10], 1
  001f8	75 48		 jne	 SHORT $LN178@luaV_execu
  001fa	4d 8b 45 18	 mov	 r8, QWORD PTR [r13+24]
  001fe	33 d2		 xor	 edx, edx
  00200	4d 8b 80 e0 00
	00 00		 mov	 r8, QWORD PTR [r8+224]
  00207	e8 00 00 00 00	 call	 luaT_gettm
  0020c	48 85 c0	 test	 rax, rax
  0020f	74 31		 je	 SHORT $LN178@luaV_execu
$LN153@luaV_execu:
  00211	4d 8b ce	 mov	 r9, r14
  00214	4c 8b c3	 mov	 r8, rbx
  00217	48 8b d6	 mov	 rdx, rsi
  0021a	49 8b cd	 mov	 rcx, r13
  0021d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00222	e8 00 00 00 00	 call	 luaV_finishget
$LN574@luaV_execu:
  00227	4d 8b 4c 24 20	 mov	 r9, QWORD PTR [r12+32]
; Line 821
  0022c	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  00233	45 33 db	 xor	 r11d, r11d
  00236	4c 89 8d f0 00
	00 00		 mov	 QWORD PTR base$1$[rbp-256], r9
  0023d	e9 3e fe ff ff	 jmp	 $LL169@luaV_execu
$LN178@luaV_execu:
; Line 820
  00242	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:luaO_nilobject_
$LN533@luaV_execu:
  00249	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  0024c	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
; Line 821
  00253	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  0025a	45 33 db	 xor	 r11d, r11d
  0025d	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0
  00261	e9 1a fe ff ff	 jmp	 $LL169@luaV_execu
$LN151@luaV_execu:
; Line 824
  00266	8b f7		 mov	 esi, edi
  00268	c1 ee 17	 shr	 esi, 23
  0026b	48 c1 e6 04	 shl	 rsi, 4
  0026f	49 03 f1	 add	 rsi, r9
; Line 825
  00272	e9 31 ff ff ff	 jmp	 $LN594@luaV_execu
$LN148@luaV_execu:
; Line 830
  00277	49 8b 44 d7 20	 mov	 rax, QWORD PTR [r15+rdx*8+32]
  0027c	4c 8b 30	 mov	 r14, QWORD PTR [rax]
$LN145@luaV_execu:
; Line 831
  0027f	8b c7		 mov	 eax, edi
  00281	c1 e8 17	 shr	 eax, 23
  00284	8b c8		 mov	 ecx, eax
  00286	0f ba e0 08	 bt	 eax, 8
  0028a	73 0c		 jae	 SHORT $LN196@luaV_execu
  0028c	0f b6 f1	 movzx	 esi, cl
  0028f	48 c1 e6 04	 shl	 rsi, 4
  00293	49 03 f2	 add	 rsi, r10
  00296	eb 0a		 jmp	 SHORT $LN197@luaV_execu
$LN196@luaV_execu:
  00298	48 8b f1	 mov	 rsi, rcx
  0029b	48 c1 e6 04	 shl	 rsi, 4
  0029f	49 03 f1	 add	 rsi, r9
$LN197@luaV_execu:
; Line 832
  002a2	c1 ef 0e	 shr	 edi, 14
  002a5	8b df		 mov	 ebx, edi
  002a7	0f ba e7 08	 bt	 edi, 8
  002ab	73 0c		 jae	 SHORT $LN198@luaV_execu
  002ad	0f b6 db	 movzx	 ebx, bl
  002b0	48 c1 e3 04	 shl	 rbx, 4
  002b4	49 03 da	 add	 rbx, r10
  002b7	eb 0d		 jmp	 SHORT $LN199@luaV_execu
$LN198@luaV_execu:
  002b9	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  002bf	48 c1 e3 04	 shl	 rbx, 4
  002c3	49 03 d9	 add	 rbx, r9
$LN199@luaV_execu:
; Line 833
  002c6	41 83 7e 08 45	 cmp	 DWORD PTR [r14+8], 69	; 00000045H
  002cb	74 1e		 je	 SHORT $LN204@luaV_execu
  002cd	49 8b fb	 mov	 rdi, r11
$LN535@luaV_execu:
  002d0	4c 8b cb	 mov	 r9, rbx
  002d3	4c 8b c6	 mov	 r8, rsi
  002d6	49 8b d6	 mov	 rdx, r14
  002d9	49 8b cd	 mov	 rcx, r13
  002dc	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  002e1	e8 00 00 00 00	 call	 luaV_finishset
; Line 834
  002e6	e9 3c ff ff ff	 jmp	 $LN574@luaV_execu
$LN204@luaV_execu:
; Line 833
  002eb	49 8b 0e	 mov	 rcx, QWORD PTR [r14]
  002ee	48 8b d6	 mov	 rdx, rsi
  002f1	e8 00 00 00 00	 call	 luaH_get
  002f6	48 8b f8	 mov	 rdi, rax
  002f9	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  002fd	74 d1		 je	 SHORT $LN535@luaV_execu
  002ff	f6 43 08 40	 test	 BYTE PTR [rbx+8], 64	; 00000040H
  00303	74 1a		 je	 SHORT $LN200@luaV_execu
  00305	49 8b 16	 mov	 rdx, QWORD PTR [r14]
  00308	f6 42 09 04	 test	 BYTE PTR [rdx+9], 4
  0030c	74 11		 je	 SHORT $LN200@luaV_execu
  0030e	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00311	f6 41 09 03	 test	 BYTE PTR [rcx+9], 3
  00315	74 08		 je	 SHORT $LN200@luaV_execu
  00317	49 8b cd	 mov	 rcx, r13
  0031a	e8 00 00 00 00	 call	 luaC_barrierback_
$LN200@luaV_execu:
  0031f	0f 10 03	 movups	 xmm0, XMMWORD PTR [rbx]
  00322	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  00329	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  00330	45 33 db	 xor	 r11d, r11d
  00333	0f 11 07	 movups	 XMMWORD PTR [rdi], xmm0
  00336	e9 45 fd ff ff	 jmp	 $LL169@luaV_execu
$LN146@luaV_execu:
; Line 838
  0033b	41 0f 10 06	 movups	 xmm0, XMMWORD PTR [r14]
  0033f	c1 ef 17	 shr	 edi, 23
  00342	49 8b 54 ff 20	 mov	 rdx, QWORD PTR [r15+rdi*8+32]
  00347	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0034a	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0
; Line 839
  0034d	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00350	f6 41 08 40	 test	 BYTE PTR [rcx+8], 64	; 00000040H
  00354	0f 84 26 fd ff
	ff		 je	 $LL169@luaV_execu
  0035a	48 8d 42 10	 lea	 rax, QWORD PTR [rdx+16]
  0035e	48 3b c8	 cmp	 rcx, rax
  00361	0f 85 19 fd ff
	ff		 jne	 $LL169@luaV_execu
  00367	49 8b cd	 mov	 rcx, r13
  0036a	e8 00 00 00 00	 call	 luaC_upvalbarrier_
; Line 840
  0036f	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  00376	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  0037d	45 33 db	 xor	 r11d, r11d
  00380	e9 fb fc ff ff	 jmp	 $LL169@luaV_execu
$LN143@luaV_execu:
; Line 849
  00385	8b f7		 mov	 esi, edi
; Line 850
  00387	c1 ef 0e	 shr	 edi, 14
; Line 851
  0038a	49 8b cd	 mov	 rcx, r13
  0038d	81 e7 ff 01 00
	00		 and	 edi, 511		; 000001ffH
  00393	c1 ee 17	 shr	 esi, 23
  00396	e8 00 00 00 00	 call	 luaH_new
; Line 852
  0039b	41 c7 46 08 45
	00 00 00	 mov	 DWORD PTR [r14+8], 69	; 00000045H
  003a3	4c 8b f8	 mov	 r15, rax
  003a6	49 89 06	 mov	 QWORD PTR [r14], rax
; Line 853
  003a9	85 f6		 test	 esi, esi
  003ab	75 04		 jne	 SHORT $LN141@luaV_execu
  003ad	85 ff		 test	 edi, edi
  003af	74 21		 je	 SHORT $LN142@luaV_execu
$LN141@luaV_execu:
; Line 854
  003b1	8b cf		 mov	 ecx, edi
  003b3	e8 00 00 00 00	 call	 luaO_fb2int
  003b8	8b ce		 mov	 ecx, esi
  003ba	8b d8		 mov	 ebx, eax
  003bc	e8 00 00 00 00	 call	 luaO_fb2int
  003c1	44 8b cb	 mov	 r9d, ebx
  003c4	49 8b d7	 mov	 rdx, r15
  003c7	49 8b cd	 mov	 rcx, r13
  003ca	44 8b c0	 mov	 r8d, eax
  003cd	e8 00 00 00 00	 call	 luaH_resize
$LN142@luaV_execu:
; Line 855
  003d2	49 8b 45 18	 mov	 rax, QWORD PTR [r13+24]
  003d6	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  003dd	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  003e4	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  003e9	4c 8b bd 00 01
	00 00		 mov	 r15, QWORD PTR cl$1$[rbp-256]
  003f0	41 bb 00 00 00
	00		 mov	 r11d, 0
  003f6	0f 8e 84 fc ff
	ff		 jle	 $LL169@luaV_execu
  003fc	49 8d 46 10	 lea	 rax, QWORD PTR [r14+16]
  00400	49 8b cd	 mov	 rcx, r13
  00403	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
  00407	e8 00 00 00 00	 call	 luaC_step
  0040c	49 8b 44 24 08	 mov	 rax, QWORD PTR [r12+8]
  00411	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
; Line 856
  00415	e9 0d fe ff ff	 jmp	 $LN574@luaV_execu
$LN139@luaV_execu:
; Line 860
  0041a	8b f7		 mov	 esi, edi
; Line 861
  0041c	c1 ef 0e	 shr	 edi, 14
  0041f	c1 ee 17	 shr	 esi, 23
  00422	8b df		 mov	 ebx, edi
  00424	48 c1 e6 04	 shl	 rsi, 4
  00428	49 03 f1	 add	 rsi, r9
  0042b	0f ba e7 08	 bt	 edi, 8
  0042f	73 0c		 jae	 SHORT $LN218@luaV_execu
  00431	0f b6 db	 movzx	 ebx, bl
  00434	48 c1 e3 04	 shl	 rbx, 4
  00438	49 03 da	 add	 rbx, r10
  0043b	eb 0d		 jmp	 SHORT $LN219@luaV_execu
$LN218@luaV_execu:
  0043d	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  00443	48 c1 e3 04	 shl	 rbx, 4
  00447	49 03 d9	 add	 rbx, r9
$LN219@luaV_execu:
; Line 863
  0044a	0f 10 06	 movups	 xmm0, XMMWORD PTR [rsi]
  0044d	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00450	41 0f 11 46 10	 movups	 XMMWORD PTR [r14+16], xmm0
; Line 864
  00455	83 7e 08 45	 cmp	 DWORD PTR [rsi+8], 69	; 00000045H
  00459	74 08		 je	 SHORT $LN228@luaV_execu
  0045b	49 8b c3	 mov	 rax, r11
  0045e	e9 ae fd ff ff	 jmp	 $LN153@luaV_execu
$LN228@luaV_execu:
  00463	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00466	e8 00 00 00 00	 call	 luaH_getstr
; Line 868
  0046b	e9 72 fd ff ff	 jmp	 $LN588@luaV_execu
$LN136@luaV_execu:
; Line 871
  00470	8b c7		 mov	 eax, edi
  00472	c1 e8 17	 shr	 eax, 23
  00475	8b c8		 mov	 ecx, eax
  00477	0f ba e0 08	 bt	 eax, 8
  0047b	73 0c		 jae	 SHORT $LN230@luaV_execu
  0047d	0f b6 f1	 movzx	 esi, cl
  00480	48 c1 e6 04	 shl	 rsi, 4
  00484	49 03 f2	 add	 rsi, r10
  00487	eb 0a		 jmp	 SHORT $LN231@luaV_execu
$LN230@luaV_execu:
  00489	48 8b f1	 mov	 rsi, rcx
  0048c	48 c1 e6 04	 shl	 rsi, 4
  00490	49 03 f1	 add	 rsi, r9
$LN231@luaV_execu:
; Line 872
  00493	c1 ef 0e	 shr	 edi, 14
  00496	8b df		 mov	 ebx, edi
  00498	0f ba e7 08	 bt	 edi, 8
  0049c	73 0c		 jae	 SHORT $LN232@luaV_execu
  0049e	0f b6 db	 movzx	 ebx, bl
  004a1	48 c1 e3 04	 shl	 rbx, 4
  004a5	49 03 da	 add	 rbx, r10
  004a8	eb 0d		 jmp	 SHORT $LN233@luaV_execu
$LN232@luaV_execu:
  004aa	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  004b0	48 c1 e3 04	 shl	 rbx, 4
  004b4	49 03 d9	 add	 rbx, r9
$LN233@luaV_execu:
; Line 874
  004b7	8b 46 08	 mov	 eax, DWORD PTR [rsi+8]
  004ba	83 f8 13	 cmp	 eax, 19
  004bd	75 1b		 jne	 SHORT $LN135@luaV_execu
  004bf	39 43 08	 cmp	 DWORD PTR [rbx+8], eax
  004c2	75 16		 jne	 SHORT $LN135@luaV_execu
; Line 876
  004c4	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  004c7	48 03 06	 add	 rax, QWORD PTR [rsi]
  004ca	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  004d2	49 89 06	 mov	 QWORD PTR [r14], rax
  004d5	e9 a6 fb ff ff	 jmp	 $LL169@luaV_execu
$LN135@luaV_execu:
; Line 878
  004da	83 f8 03	 cmp	 eax, 3
  004dd	75 06		 jne	 SHORT $LN234@luaV_execu
  004df	f2 0f 10 36	 movsdx	 xmm6, QWORD PTR [rsi]
  004e3	eb 57		 jmp	 SHORT $LN538@luaV_execu
$LN234@luaV_execu:
  004e5	83 f8 13	 cmp	 eax, 19
  004e8	75 0a		 jne	 SHORT $LN382@luaV_execu
  004ea	0f 57 f6	 xorps	 xmm6, xmm6
  004ed	f2 48 0f 2a 36	 cvtsi2sd xmm6, QWORD PTR [rsi]
  004f2	eb 48		 jmp	 SHORT $LN538@luaV_execu
$LN382@luaV_execu:
  004f4	24 0f		 and	 al, 15
  004f6	3c 04		 cmp	 al, 4
  004f8	0f 85 8b 00 00
	00		 jne	 $LN133@luaV_execu
  004fe	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00501	38 41 08	 cmp	 BYTE PTR [rcx+8], al
  00504	75 06		 jne	 SHORT $LN385@luaV_execu
  00506	0f b6 79 0b	 movzx	 edi, BYTE PTR [rcx+11]
  0050a	eb 04		 jmp	 SHORT $LN386@luaV_execu
$LN385@luaV_execu:
  0050c	48 8b 79 10	 mov	 rdi, QWORD PTR [rcx+16]
$LN386@luaV_execu:
  00510	48 8d 55 e0	 lea	 rdx, QWORD PTR v$23[rbp-256]
  00514	48 83 c1 18	 add	 rcx, 24
  00518	e8 00 00 00 00	 call	 luaO_str2num
  0051d	48 8d 4f 01	 lea	 rcx, QWORD PTR [rdi+1]
  00521	48 3b c1	 cmp	 rax, rcx
  00524	75 63		 jne	 SHORT $LN133@luaV_execu
  00526	83 7d e8 13	 cmp	 DWORD PTR v$23[rbp-248], 19
  0052a	75 0b		 jne	 SHORT $LN387@luaV_execu
  0052c	0f 57 f6	 xorps	 xmm6, xmm6
  0052f	f2 48 0f 2a 75
	e0		 cvtsi2sd xmm6, QWORD PTR v$23[rbp-256]
  00535	eb 05		 jmp	 SHORT $LN538@luaV_execu
$LN387@luaV_execu:
  00537	f2 0f 10 75 e0	 movsdx	 xmm6, QWORD PTR v$23[rbp-256]
$LN538@luaV_execu:
  0053c	83 7b 08 03	 cmp	 DWORD PTR [rbx+8], 3
  00540	75 0b		 jne	 SHORT $LN236@luaV_execu
  00542	f2 0f 10 03	 movsdx	 xmm0, QWORD PTR [rbx]
  00546	f2 0f 11 45 d8	 movsdx	 QWORD PTR nc$22[rbp-256], xmm0
  0054b	eb 15		 jmp	 SHORT $LN539@luaV_execu
$LN236@luaV_execu:
  0054d	48 8d 55 d8	 lea	 rdx, QWORD PTR nc$22[rbp-256]
  00551	48 8b cb	 mov	 rcx, rbx
  00554	e8 00 00 00 00	 call	 luaV_tonumber_
  00559	85 c0		 test	 eax, eax
  0055b	74 2c		 je	 SHORT $LN133@luaV_execu
  0055d	f2 0f 10 45 d8	 movsdx	 xmm0, QWORD PTR nc$22[rbp-256]
$LN539@luaV_execu:
; Line 879
  00562	f2 0f 58 c6	 addsd	 xmm0, xmm6
$LN579@luaV_execu:
  00566	f2 41 0f 11 06	 movsdx	 QWORD PTR [r14], xmm0
$LN580@luaV_execu:
  0056b	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  00572	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  00579	41 c7 46 08 03
	00 00 00	 mov	 DWORD PTR [r14+8], 3
  00581	45 33 db	 xor	 r11d, r11d
  00584	e9 f7 fa ff ff	 jmp	 $LL169@luaV_execu
$LN133@luaV_execu:
; Line 881
  00589	c7 44 24 20 06
	00 00 00	 mov	 DWORD PTR [rsp+32], 6
$LN577@luaV_execu:
  00591	48 8b d6	 mov	 rdx, rsi
  00594	4d 8b ce	 mov	 r9, r14
  00597	4c 8b c3	 mov	 r8, rbx
  0059a	49 8b cd	 mov	 rcx, r13
  0059d	e8 00 00 00 00	 call	 luaT_trybinTM
; Line 882
  005a2	e9 80 fc ff ff	 jmp	 $LN574@luaV_execu
$LN131@luaV_execu:
; Line 885
  005a7	8b c7		 mov	 eax, edi
  005a9	c1 e8 17	 shr	 eax, 23
  005ac	8b c8		 mov	 ecx, eax
  005ae	0f ba e0 08	 bt	 eax, 8
  005b2	73 0c		 jae	 SHORT $LN238@luaV_execu
  005b4	0f b6 f1	 movzx	 esi, cl
  005b7	48 c1 e6 04	 shl	 rsi, 4
  005bb	49 03 f2	 add	 rsi, r10
  005be	eb 0a		 jmp	 SHORT $LN239@luaV_execu
$LN238@luaV_execu:
  005c0	48 8b f1	 mov	 rsi, rcx
  005c3	48 c1 e6 04	 shl	 rsi, 4
  005c7	49 03 f1	 add	 rsi, r9
$LN239@luaV_execu:
; Line 886
  005ca	c1 ef 0e	 shr	 edi, 14
  005cd	8b df		 mov	 ebx, edi
  005cf	0f ba e7 08	 bt	 edi, 8
  005d3	73 0c		 jae	 SHORT $LN240@luaV_execu
  005d5	0f b6 db	 movzx	 ebx, bl
  005d8	48 c1 e3 04	 shl	 rbx, 4
  005dc	49 03 da	 add	 rbx, r10
  005df	eb 0d		 jmp	 SHORT $LN241@luaV_execu
$LN240@luaV_execu:
  005e1	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  005e7	48 c1 e3 04	 shl	 rbx, 4
  005eb	49 03 d9	 add	 rbx, r9
$LN241@luaV_execu:
; Line 888
  005ee	8b 46 08	 mov	 eax, DWORD PTR [rsi+8]
  005f1	83 f8 13	 cmp	 eax, 19
  005f4	75 1b		 jne	 SHORT $LN130@luaV_execu
  005f6	39 43 08	 cmp	 DWORD PTR [rbx+8], eax
  005f9	75 16		 jne	 SHORT $LN130@luaV_execu
; Line 890
  005fb	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  005fe	48 2b 03	 sub	 rax, QWORD PTR [rbx]
  00601	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  00609	49 89 06	 mov	 QWORD PTR [r14], rax
  0060c	e9 6f fa ff ff	 jmp	 $LL169@luaV_execu
$LN130@luaV_execu:
; Line 892
  00611	83 f8 03	 cmp	 eax, 3
  00614	75 06		 jne	 SHORT $LN242@luaV_execu
  00616	f2 0f 10 36	 movsdx	 xmm6, QWORD PTR [rsi]
  0061a	eb 57		 jmp	 SHORT $LN540@luaV_execu
$LN242@luaV_execu:
  0061c	83 f8 13	 cmp	 eax, 19
  0061f	75 0a		 jne	 SHORT $LN392@luaV_execu
  00621	0f 57 f6	 xorps	 xmm6, xmm6
  00624	f2 48 0f 2a 36	 cvtsi2sd xmm6, QWORD PTR [rsi]
  00629	eb 48		 jmp	 SHORT $LN540@luaV_execu
$LN392@luaV_execu:
  0062b	24 0f		 and	 al, 15
  0062d	3c 04		 cmp	 al, 4
  0062f	0f 85 8e 00 00
	00		 jne	 $LN128@luaV_execu
  00635	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00638	38 41 08	 cmp	 BYTE PTR [rcx+8], al
  0063b	75 06		 jne	 SHORT $LN395@luaV_execu
  0063d	0f b6 79 0b	 movzx	 edi, BYTE PTR [rcx+11]
  00641	eb 04		 jmp	 SHORT $LN396@luaV_execu
$LN395@luaV_execu:
  00643	48 8b 79 10	 mov	 rdi, QWORD PTR [rcx+16]
$LN396@luaV_execu:
  00647	48 8d 55 00	 lea	 rdx, QWORD PTR v$25[rbp-256]
  0064b	48 83 c1 18	 add	 rcx, 24
  0064f	e8 00 00 00 00	 call	 luaO_str2num
  00654	48 8d 4f 01	 lea	 rcx, QWORD PTR [rdi+1]
  00658	48 3b c1	 cmp	 rax, rcx
  0065b	75 66		 jne	 SHORT $LN128@luaV_execu
  0065d	83 7d 08 13	 cmp	 DWORD PTR v$25[rbp-248], 19
  00661	75 0b		 jne	 SHORT $LN397@luaV_execu
  00663	0f 57 f6	 xorps	 xmm6, xmm6
  00666	f2 48 0f 2a 75
	00		 cvtsi2sd xmm6, QWORD PTR v$25[rbp-256]
  0066c	eb 05		 jmp	 SHORT $LN540@luaV_execu
$LN397@luaV_execu:
  0066e	f2 0f 10 75 00	 movsdx	 xmm6, QWORD PTR v$25[rbp-256]
$LN540@luaV_execu:
  00673	83 7b 08 03	 cmp	 DWORD PTR [rbx+8], 3
  00677	75 0c		 jne	 SHORT $LN244@luaV_execu
  00679	f2 0f 10 03	 movsdx	 xmm0, QWORD PTR [rbx]
  0067d	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR nc$3[rsp], xmm0
  00683	eb 17		 jmp	 SHORT $LN541@luaV_execu
$LN244@luaV_execu:
  00685	48 8d 54 24 40	 lea	 rdx, QWORD PTR nc$3[rsp]
  0068a	48 8b cb	 mov	 rcx, rbx
  0068d	e8 00 00 00 00	 call	 luaV_tonumber_
  00692	85 c0		 test	 eax, eax
  00694	74 2d		 je	 SHORT $LN128@luaV_execu
  00696	f2 0f 10 44 24
	40		 movsdx	 xmm0, QWORD PTR nc$3[rsp]
$LN541@luaV_execu:
; Line 893
  0069c	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  006a3	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  006aa	f2 0f 5c f0	 subsd	 xmm6, xmm0
  006ae	41 c7 46 08 03
	00 00 00	 mov	 DWORD PTR [r14+8], 3
  006b6	45 33 db	 xor	 r11d, r11d
  006b9	f2 41 0f 11 36	 movsdx	 QWORD PTR [r14], xmm6
  006be	e9 bd f9 ff ff	 jmp	 $LL169@luaV_execu
$LN128@luaV_execu:
; Line 895
  006c3	c7 44 24 20 07
	00 00 00	 mov	 DWORD PTR [rsp+32], 7
; Line 896
  006cb	e9 c1 fe ff ff	 jmp	 $LN577@luaV_execu
$LN126@luaV_execu:
; Line 899
  006d0	8b c7		 mov	 eax, edi
  006d2	c1 e8 17	 shr	 eax, 23
  006d5	8b c8		 mov	 ecx, eax
  006d7	0f ba e0 08	 bt	 eax, 8
  006db	73 0c		 jae	 SHORT $LN246@luaV_execu
  006dd	0f b6 f1	 movzx	 esi, cl
  006e0	48 c1 e6 04	 shl	 rsi, 4
  006e4	49 03 f2	 add	 rsi, r10
  006e7	eb 0a		 jmp	 SHORT $LN247@luaV_execu
$LN246@luaV_execu:
  006e9	48 8b f1	 mov	 rsi, rcx
  006ec	48 c1 e6 04	 shl	 rsi, 4
  006f0	49 03 f1	 add	 rsi, r9
$LN247@luaV_execu:
; Line 900
  006f3	c1 ef 0e	 shr	 edi, 14
  006f6	8b df		 mov	 ebx, edi
  006f8	0f ba e7 08	 bt	 edi, 8
  006fc	73 0c		 jae	 SHORT $LN248@luaV_execu
  006fe	0f b6 db	 movzx	 ebx, bl
  00701	48 c1 e3 04	 shl	 rbx, 4
  00705	49 03 da	 add	 rbx, r10
  00708	eb 0d		 jmp	 SHORT $LN249@luaV_execu
$LN248@luaV_execu:
  0070a	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  00710	48 c1 e3 04	 shl	 rbx, 4
  00714	49 03 d9	 add	 rbx, r9
$LN249@luaV_execu:
; Line 902
  00717	8b 46 08	 mov	 eax, DWORD PTR [rsi+8]
  0071a	83 f8 13	 cmp	 eax, 19
  0071d	75 1c		 jne	 SHORT $LN125@luaV_execu
  0071f	39 43 08	 cmp	 DWORD PTR [rbx+8], eax
  00722	75 17		 jne	 SHORT $LN125@luaV_execu
; Line 904
  00724	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00727	48 0f af 06	 imul	 rax, QWORD PTR [rsi]
  0072b	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  00733	49 89 06	 mov	 QWORD PTR [r14], rax
  00736	e9 45 f9 ff ff	 jmp	 $LL169@luaV_execu
$LN125@luaV_execu:
; Line 906
  0073b	83 f8 03	 cmp	 eax, 3
  0073e	75 06		 jne	 SHORT $LN250@luaV_execu
  00740	f2 0f 10 36	 movsdx	 xmm6, QWORD PTR [rsi]
  00744	eb 53		 jmp	 SHORT $LN542@luaV_execu
$LN250@luaV_execu:
  00746	83 f8 13	 cmp	 eax, 19
  00749	75 0a		 jne	 SHORT $LN402@luaV_execu
  0074b	0f 57 f6	 xorps	 xmm6, xmm6
  0074e	f2 48 0f 2a 36	 cvtsi2sd xmm6, QWORD PTR [rsi]
  00753	eb 44		 jmp	 SHORT $LN542@luaV_execu
$LN402@luaV_execu:
  00755	24 0f		 and	 al, 15
  00757	3c 04		 cmp	 al, 4
  00759	75 74		 jne	 SHORT $LN123@luaV_execu
  0075b	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  0075e	38 41 08	 cmp	 BYTE PTR [rcx+8], al
  00761	75 06		 jne	 SHORT $LN405@luaV_execu
  00763	0f b6 79 0b	 movzx	 edi, BYTE PTR [rcx+11]
  00767	eb 04		 jmp	 SHORT $LN406@luaV_execu
$LN405@luaV_execu:
  00769	48 8b 79 10	 mov	 rdi, QWORD PTR [rcx+16]
$LN406@luaV_execu:
  0076d	48 8d 55 40	 lea	 rdx, QWORD PTR v$29[rbp-256]
  00771	48 83 c1 18	 add	 rcx, 24
  00775	e8 00 00 00 00	 call	 luaO_str2num
  0077a	48 8d 4f 01	 lea	 rcx, QWORD PTR [rdi+1]
  0077e	48 3b c1	 cmp	 rax, rcx
  00781	75 4c		 jne	 SHORT $LN123@luaV_execu
  00783	83 7d 48 13	 cmp	 DWORD PTR v$29[rbp-248], 19
  00787	75 0b		 jne	 SHORT $LN407@luaV_execu
  00789	0f 57 f6	 xorps	 xmm6, xmm6
  0078c	f2 48 0f 2a 75
	40		 cvtsi2sd xmm6, QWORD PTR v$29[rbp-256]
  00792	eb 05		 jmp	 SHORT $LN542@luaV_execu
$LN407@luaV_execu:
  00794	f2 0f 10 75 40	 movsdx	 xmm6, QWORD PTR v$29[rbp-256]
$LN542@luaV_execu:
  00799	83 7b 08 03	 cmp	 DWORD PTR [rbx+8], 3
  0079d	75 12		 jne	 SHORT $LN252@luaV_execu
  0079f	f2 0f 10 03	 movsdx	 xmm0, QWORD PTR [rbx]
  007a3	f2 0f 11 45 b0	 movsdx	 QWORD PTR nc$17[rbp-256], xmm0
; Line 907
  007a8	f2 0f 59 c6	 mulsd	 xmm0, xmm6
  007ac	e9 b5 fd ff ff	 jmp	 $LN579@luaV_execu
$LN252@luaV_execu:
; Line 906
  007b1	48 8d 55 b0	 lea	 rdx, QWORD PTR nc$17[rbp-256]
  007b5	48 8b cb	 mov	 rcx, rbx
  007b8	e8 00 00 00 00	 call	 luaV_tonumber_
  007bd	85 c0		 test	 eax, eax
  007bf	74 0e		 je	 SHORT $LN123@luaV_execu
  007c1	f2 0f 10 45 b0	 movsdx	 xmm0, QWORD PTR nc$17[rbp-256]
; Line 907
  007c6	f2 0f 59 c6	 mulsd	 xmm0, xmm6
  007ca	e9 97 fd ff ff	 jmp	 $LN579@luaV_execu
$LN123@luaV_execu:
; Line 909
  007cf	c7 44 24 20 08
	00 00 00	 mov	 DWORD PTR [rsp+32], 8
; Line 910
  007d7	e9 b5 fd ff ff	 jmp	 $LN577@luaV_execu
$LN121@luaV_execu:
; Line 913
  007dc	8b c7		 mov	 eax, edi
  007de	c1 e8 17	 shr	 eax, 23
  007e1	8b c8		 mov	 ecx, eax
  007e3	0f ba e0 08	 bt	 eax, 8
  007e7	73 0c		 jae	 SHORT $LN254@luaV_execu
  007e9	0f b6 f1	 movzx	 esi, cl
  007ec	48 c1 e6 04	 shl	 rsi, 4
  007f0	49 03 f2	 add	 rsi, r10
  007f3	eb 0a		 jmp	 SHORT $LN255@luaV_execu
$LN254@luaV_execu:
  007f5	48 8b f1	 mov	 rsi, rcx
  007f8	48 c1 e6 04	 shl	 rsi, 4
  007fc	49 03 f1	 add	 rsi, r9
$LN255@luaV_execu:
; Line 914
  007ff	c1 ef 0e	 shr	 edi, 14
  00802	8b df		 mov	 ebx, edi
  00804	0f ba e7 08	 bt	 edi, 8
  00808	73 0c		 jae	 SHORT $LN256@luaV_execu
  0080a	0f b6 db	 movzx	 ebx, bl
  0080d	48 c1 e3 04	 shl	 rbx, 4
  00811	49 03 da	 add	 rbx, r10
  00814	eb 0d		 jmp	 SHORT $LN257@luaV_execu
$LN256@luaV_execu:
  00816	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  0081c	48 c1 e3 04	 shl	 rbx, 4
  00820	49 03 d9	 add	 rbx, r9
$LN257@luaV_execu:
; Line 916
  00823	8b 46 08	 mov	 eax, DWORD PTR [rsi+8]
  00826	83 f8 03	 cmp	 eax, 3
  00829	75 06		 jne	 SHORT $LN258@luaV_execu
  0082b	f2 0f 10 36	 movsdx	 xmm6, QWORD PTR [rsi]
  0082f	eb 57		 jmp	 SHORT $LN544@luaV_execu
$LN258@luaV_execu:
  00831	83 f8 13	 cmp	 eax, 19
  00834	75 0a		 jne	 SHORT $LN412@luaV_execu
  00836	0f 57 f6	 xorps	 xmm6, xmm6
  00839	f2 48 0f 2a 36	 cvtsi2sd xmm6, QWORD PTR [rsi]
  0083e	eb 48		 jmp	 SHORT $LN544@luaV_execu
$LN412@luaV_execu:
  00840	24 0f		 and	 al, 15
  00842	3c 04		 cmp	 al, 4
  00844	0f 85 81 00 00
	00		 jne	 $LN120@luaV_execu
  0084a	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  0084d	38 41 08	 cmp	 BYTE PTR [rcx+8], al
  00850	75 06		 jne	 SHORT $LN415@luaV_execu
  00852	0f b6 79 0b	 movzx	 edi, BYTE PTR [rcx+11]
  00856	eb 04		 jmp	 SHORT $LN416@luaV_execu
$LN415@luaV_execu:
  00858	48 8b 79 10	 mov	 rdi, QWORD PTR [rcx+16]
$LN416@luaV_execu:
  0085c	48 8d 55 20	 lea	 rdx, QWORD PTR v$27[rbp-256]
  00860	48 83 c1 18	 add	 rcx, 24
  00864	e8 00 00 00 00	 call	 luaO_str2num
  00869	48 8d 4f 01	 lea	 rcx, QWORD PTR [rdi+1]
  0086d	48 3b c1	 cmp	 rax, rcx
  00870	75 59		 jne	 SHORT $LN120@luaV_execu
  00872	83 7d 28 13	 cmp	 DWORD PTR v$27[rbp-248], 19
  00876	75 0b		 jne	 SHORT $LN417@luaV_execu
  00878	0f 57 f6	 xorps	 xmm6, xmm6
  0087b	f2 48 0f 2a 75
	20		 cvtsi2sd xmm6, QWORD PTR v$27[rbp-256]
  00881	eb 05		 jmp	 SHORT $LN544@luaV_execu
$LN417@luaV_execu:
  00883	f2 0f 10 75 20	 movsdx	 xmm6, QWORD PTR v$27[rbp-256]
$LN544@luaV_execu:
  00888	83 7b 08 03	 cmp	 DWORD PTR [rbx+8], 3
  0088c	75 18		 jne	 SHORT $LN260@luaV_execu
  0088e	f2 0f 10 03	 movsdx	 xmm0, QWORD PTR [rbx]
  00892	f2 0f 11 44 24
	50		 movsdx	 QWORD PTR nc$5[rsp], xmm0
; Line 917
  00898	f2 0f 5e f0	 divsd	 xmm6, xmm0
  0089c	f2 41 0f 11 36	 movsdx	 QWORD PTR [r14], xmm6
  008a1	e9 c5 fc ff ff	 jmp	 $LN580@luaV_execu
$LN260@luaV_execu:
; Line 916
  008a6	48 8d 54 24 50	 lea	 rdx, QWORD PTR nc$5[rsp]
  008ab	48 8b cb	 mov	 rcx, rbx
  008ae	e8 00 00 00 00	 call	 luaV_tonumber_
  008b3	85 c0		 test	 eax, eax
  008b5	74 14		 je	 SHORT $LN120@luaV_execu
  008b7	f2 0f 10 44 24
	50		 movsdx	 xmm0, QWORD PTR nc$5[rsp]
; Line 917
  008bd	f2 0f 5e f0	 divsd	 xmm6, xmm0
  008c1	f2 41 0f 11 36	 movsdx	 QWORD PTR [r14], xmm6
  008c6	e9 a0 fc ff ff	 jmp	 $LN580@luaV_execu
$LN120@luaV_execu:
; Line 919
  008cb	c7 44 24 20 0b
	00 00 00	 mov	 DWORD PTR [rsp+32], 11
; Line 920
  008d3	e9 b9 fc ff ff	 jmp	 $LN577@luaV_execu
$LN118@luaV_execu:
; Line 923
  008d8	8b c7		 mov	 eax, edi
  008da	c1 e8 17	 shr	 eax, 23
  008dd	8b c8		 mov	 ecx, eax
  008df	0f ba e0 08	 bt	 eax, 8
  008e3	73 0c		 jae	 SHORT $LN262@luaV_execu
  008e5	0f b6 f1	 movzx	 esi, cl
  008e8	48 c1 e6 04	 shl	 rsi, 4
  008ec	49 03 f2	 add	 rsi, r10
  008ef	eb 0a		 jmp	 SHORT $LN263@luaV_execu
$LN262@luaV_execu:
  008f1	48 8b f1	 mov	 rsi, rcx
  008f4	48 c1 e6 04	 shl	 rsi, 4
  008f8	49 03 f1	 add	 rsi, r9
$LN263@luaV_execu:
; Line 924
  008fb	c1 ef 0e	 shr	 edi, 14
  008fe	8b df		 mov	 ebx, edi
  00900	0f ba e7 08	 bt	 edi, 8
  00904	73 0c		 jae	 SHORT $LN264@luaV_execu
  00906	0f b6 db	 movzx	 ebx, bl
  00909	48 c1 e3 04	 shl	 rbx, 4
  0090d	49 03 da	 add	 rbx, r10
  00910	eb 0d		 jmp	 SHORT $LN265@luaV_execu
$LN264@luaV_execu:
  00912	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  00918	48 c1 e3 04	 shl	 rbx, 4
  0091c	49 03 d9	 add	 rbx, r9
$LN265@luaV_execu:
; Line 926
  0091f	83 7e 08 13	 cmp	 DWORD PTR [rsi+8], 19
  00923	75 09		 jne	 SHORT $LN266@luaV_execu
  00925	48 8b 3e	 mov	 rdi, QWORD PTR [rsi]
  00928	48 89 7d d0	 mov	 QWORD PTR ib$21[rbp-256], rdi
  0092c	eb 17		 jmp	 SHORT $LN546@luaV_execu
$LN266@luaV_execu:
  0092e	48 8d 55 d0	 lea	 rdx, QWORD PTR ib$21[rbp-256]
  00932	45 33 c0	 xor	 r8d, r8d
  00935	48 8b ce	 mov	 rcx, rsi
  00938	e8 00 00 00 00	 call	 luaV_tointeger
  0093d	85 c0		 test	 eax, eax
  0093f	74 73		 je	 SHORT $LN117@luaV_execu
  00941	48 8b 7d d0	 mov	 rdi, QWORD PTR ib$21[rbp-256]
$LN546@luaV_execu:
  00945	83 7b 08 13	 cmp	 DWORD PTR [rbx+8], 19
  00949	75 2c		 jne	 SHORT $LN268@luaV_execu
  0094b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0094e	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  00955	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  0095c	48 89 44 24 60	 mov	 QWORD PTR ic$7[rsp], rax
; Line 927
  00961	48 23 c7	 and	 rax, rdi
  00964	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  0096c	49 89 06	 mov	 QWORD PTR [r14], rax
  0096f	45 33 db	 xor	 r11d, r11d
  00972	e9 09 f7 ff ff	 jmp	 $LL169@luaV_execu
$LN268@luaV_execu:
; Line 926
  00977	48 8d 54 24 60	 lea	 rdx, QWORD PTR ic$7[rsp]
  0097c	45 33 c0	 xor	 r8d, r8d
  0097f	48 8b cb	 mov	 rcx, rbx
  00982	e8 00 00 00 00	 call	 luaV_tointeger
  00987	85 c0		 test	 eax, eax
  00989	74 29		 je	 SHORT $LN117@luaV_execu
  0098b	48 8b 44 24 60	 mov	 rax, QWORD PTR ic$7[rsp]
  00990	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  00997	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
; Line 927
  0099e	48 23 c7	 and	 rax, rdi
  009a1	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  009a9	45 33 db	 xor	 r11d, r11d
  009ac	49 89 06	 mov	 QWORD PTR [r14], rax
  009af	e9 cc f6 ff ff	 jmp	 $LL169@luaV_execu
$LN117@luaV_execu:
; Line 929
  009b4	c7 44 24 20 0d
	00 00 00	 mov	 DWORD PTR [rsp+32], 13
; Line 930
  009bc	e9 d0 fb ff ff	 jmp	 $LN577@luaV_execu
$LN115@luaV_execu:
; Line 933
  009c1	8b c7		 mov	 eax, edi
  009c3	c1 e8 17	 shr	 eax, 23
  009c6	8b c8		 mov	 ecx, eax
  009c8	0f ba e0 08	 bt	 eax, 8
  009cc	73 0c		 jae	 SHORT $LN270@luaV_execu
  009ce	0f b6 f1	 movzx	 esi, cl
  009d1	48 c1 e6 04	 shl	 rsi, 4
  009d5	49 03 f2	 add	 rsi, r10
  009d8	eb 0a		 jmp	 SHORT $LN271@luaV_execu
$LN270@luaV_execu:
  009da	48 8b f1	 mov	 rsi, rcx
  009dd	48 c1 e6 04	 shl	 rsi, 4
  009e1	49 03 f1	 add	 rsi, r9
$LN271@luaV_execu:
; Line 934
  009e4	c1 ef 0e	 shr	 edi, 14
  009e7	8b df		 mov	 ebx, edi
  009e9	0f ba e7 08	 bt	 edi, 8
  009ed	73 0c		 jae	 SHORT $LN272@luaV_execu
  009ef	0f b6 db	 movzx	 ebx, bl
  009f2	48 c1 e3 04	 shl	 rbx, 4
  009f6	49 03 da	 add	 rbx, r10
  009f9	eb 0d		 jmp	 SHORT $LN273@luaV_execu
$LN272@luaV_execu:
  009fb	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  00a01	48 c1 e3 04	 shl	 rbx, 4
  00a05	49 03 d9	 add	 rbx, r9
$LN273@luaV_execu:
; Line 936
  00a08	83 7e 08 13	 cmp	 DWORD PTR [rsi+8], 19
  00a0c	75 09		 jne	 SHORT $LN274@luaV_execu
  00a0e	48 8b 3e	 mov	 rdi, QWORD PTR [rsi]
  00a11	48 89 7d c0	 mov	 QWORD PTR ib$19[rbp-256], rdi
  00a15	eb 17		 jmp	 SHORT $LN548@luaV_execu
$LN274@luaV_execu:
  00a17	48 8d 55 c0	 lea	 rdx, QWORD PTR ib$19[rbp-256]
  00a1b	45 33 c0	 xor	 r8d, r8d
  00a1e	48 8b ce	 mov	 rcx, rsi
  00a21	e8 00 00 00 00	 call	 luaV_tointeger
  00a26	85 c0		 test	 eax, eax
  00a28	74 73		 je	 SHORT $LN114@luaV_execu
  00a2a	48 8b 7d c0	 mov	 rdi, QWORD PTR ib$19[rbp-256]
$LN548@luaV_execu:
  00a2e	83 7b 08 13	 cmp	 DWORD PTR [rbx+8], 19
  00a32	75 2c		 jne	 SHORT $LN276@luaV_execu
  00a34	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00a37	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  00a3e	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  00a45	48 89 44 24 70	 mov	 QWORD PTR ic$9[rsp], rax
; Line 937
  00a4a	48 0b c7	 or	 rax, rdi
  00a4d	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  00a55	49 89 06	 mov	 QWORD PTR [r14], rax
  00a58	45 33 db	 xor	 r11d, r11d
  00a5b	e9 20 f6 ff ff	 jmp	 $LL169@luaV_execu
$LN276@luaV_execu:
; Line 936
  00a60	48 8d 54 24 70	 lea	 rdx, QWORD PTR ic$9[rsp]
  00a65	45 33 c0	 xor	 r8d, r8d
  00a68	48 8b cb	 mov	 rcx, rbx
  00a6b	e8 00 00 00 00	 call	 luaV_tointeger
  00a70	85 c0		 test	 eax, eax
  00a72	74 29		 je	 SHORT $LN114@luaV_execu
  00a74	48 8b 44 24 70	 mov	 rax, QWORD PTR ic$9[rsp]
  00a79	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  00a80	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
; Line 937
  00a87	48 0b c7	 or	 rax, rdi
  00a8a	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  00a92	45 33 db	 xor	 r11d, r11d
  00a95	49 89 06	 mov	 QWORD PTR [r14], rax
  00a98	e9 e3 f5 ff ff	 jmp	 $LL169@luaV_execu
$LN114@luaV_execu:
; Line 939
  00a9d	c7 44 24 20 0e
	00 00 00	 mov	 DWORD PTR [rsp+32], 14
; Line 940
  00aa5	e9 e7 fa ff ff	 jmp	 $LN577@luaV_execu
$LN112@luaV_execu:
; Line 943
  00aaa	8b c7		 mov	 eax, edi
  00aac	c1 e8 17	 shr	 eax, 23
  00aaf	8b c8		 mov	 ecx, eax
  00ab1	0f ba e0 08	 bt	 eax, 8
  00ab5	73 0c		 jae	 SHORT $LN278@luaV_execu
  00ab7	0f b6 f1	 movzx	 esi, cl
  00aba	48 c1 e6 04	 shl	 rsi, 4
  00abe	49 03 f2	 add	 rsi, r10
  00ac1	eb 0a		 jmp	 SHORT $LN279@luaV_execu
$LN278@luaV_execu:
  00ac3	48 8b f1	 mov	 rsi, rcx
  00ac6	48 c1 e6 04	 shl	 rsi, 4
  00aca	49 03 f1	 add	 rsi, r9
$LN279@luaV_execu:
; Line 944
  00acd	c1 ef 0e	 shr	 edi, 14
  00ad0	8b df		 mov	 ebx, edi
  00ad2	0f ba e7 08	 bt	 edi, 8
  00ad6	73 0c		 jae	 SHORT $LN280@luaV_execu
  00ad8	0f b6 db	 movzx	 ebx, bl
  00adb	48 c1 e3 04	 shl	 rbx, 4
  00adf	49 03 da	 add	 rbx, r10
  00ae2	eb 0d		 jmp	 SHORT $LN281@luaV_execu
$LN280@luaV_execu:
  00ae4	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  00aea	48 c1 e3 04	 shl	 rbx, 4
  00aee	49 03 d9	 add	 rbx, r9
$LN281@luaV_execu:
; Line 946
  00af1	83 7e 08 13	 cmp	 DWORD PTR [rsi+8], 19
  00af5	75 09		 jne	 SHORT $LN282@luaV_execu
  00af7	48 8b 3e	 mov	 rdi, QWORD PTR [rsi]
  00afa	48 89 7d a8	 mov	 QWORD PTR ib$16[rbp-256], rdi
  00afe	eb 17		 jmp	 SHORT $LN550@luaV_execu
$LN282@luaV_execu:
  00b00	48 8d 55 a8	 lea	 rdx, QWORD PTR ib$16[rbp-256]
  00b04	45 33 c0	 xor	 r8d, r8d
  00b07	48 8b ce	 mov	 rcx, rsi
  00b0a	e8 00 00 00 00	 call	 luaV_tointeger
  00b0f	85 c0		 test	 eax, eax
  00b11	74 70		 je	 SHORT $LN111@luaV_execu
  00b13	48 8b 7d a8	 mov	 rdi, QWORD PTR ib$16[rbp-256]
$LN550@luaV_execu:
  00b17	83 7b 08 13	 cmp	 DWORD PTR [rbx+8], 19
  00b1b	75 2b		 jne	 SHORT $LN284@luaV_execu
  00b1d	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00b20	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  00b27	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  00b2e	48 89 45 80	 mov	 QWORD PTR ic$11[rbp-256], rax
; Line 947
  00b32	48 33 c7	 xor	 rax, rdi
  00b35	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  00b3d	49 89 06	 mov	 QWORD PTR [r14], rax
  00b40	45 33 db	 xor	 r11d, r11d
  00b43	e9 38 f5 ff ff	 jmp	 $LL169@luaV_execu
$LN284@luaV_execu:
; Line 946
  00b48	48 8d 55 80	 lea	 rdx, QWORD PTR ic$11[rbp-256]
  00b4c	45 33 c0	 xor	 r8d, r8d
  00b4f	48 8b cb	 mov	 rcx, rbx
  00b52	e8 00 00 00 00	 call	 luaV_tointeger
  00b57	85 c0		 test	 eax, eax
  00b59	74 28		 je	 SHORT $LN111@luaV_execu
  00b5b	48 8b 45 80	 mov	 rax, QWORD PTR ic$11[rbp-256]
  00b5f	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  00b66	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
; Line 947
  00b6d	48 33 c7	 xor	 rax, rdi
  00b70	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  00b78	45 33 db	 xor	 r11d, r11d
  00b7b	49 89 06	 mov	 QWORD PTR [r14], rax
  00b7e	e9 fd f4 ff ff	 jmp	 $LL169@luaV_execu
$LN111@luaV_execu:
; Line 949
  00b83	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR [rsp+32], 15
; Line 950
  00b8b	e9 01 fa ff ff	 jmp	 $LN577@luaV_execu
$LN109@luaV_execu:
; Line 953
  00b90	8b c7		 mov	 eax, edi
  00b92	c1 e8 17	 shr	 eax, 23
  00b95	8b c8		 mov	 ecx, eax
  00b97	0f ba e0 08	 bt	 eax, 8
  00b9b	73 0c		 jae	 SHORT $LN286@luaV_execu
  00b9d	0f b6 f1	 movzx	 esi, cl
  00ba0	48 c1 e6 04	 shl	 rsi, 4
  00ba4	49 03 f2	 add	 rsi, r10
  00ba7	eb 0a		 jmp	 SHORT $LN287@luaV_execu
$LN286@luaV_execu:
  00ba9	48 8b f1	 mov	 rsi, rcx
  00bac	48 c1 e6 04	 shl	 rsi, 4
  00bb0	49 03 f1	 add	 rsi, r9
$LN287@luaV_execu:
; Line 954
  00bb3	c1 ef 0e	 shr	 edi, 14
  00bb6	8b df		 mov	 ebx, edi
  00bb8	0f ba e7 08	 bt	 edi, 8
  00bbc	73 0c		 jae	 SHORT $LN288@luaV_execu
  00bbe	0f b6 db	 movzx	 ebx, bl
  00bc1	48 c1 e3 04	 shl	 rbx, 4
  00bc5	49 03 da	 add	 rbx, r10
  00bc8	eb 0d		 jmp	 SHORT $LN289@luaV_execu
$LN288@luaV_execu:
  00bca	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  00bd0	48 c1 e3 04	 shl	 rbx, 4
  00bd4	49 03 d9	 add	 rbx, r9
$LN289@luaV_execu:
; Line 956
  00bd7	83 7e 08 13	 cmp	 DWORD PTR [rsi+8], 19
  00bdb	75 09		 jne	 SHORT $LN290@luaV_execu
  00bdd	48 8b 3e	 mov	 rdi, QWORD PTR [rsi]
  00be0	48 89 7d b8	 mov	 QWORD PTR ib$18[rbp-256], rdi
  00be4	eb 17		 jmp	 SHORT $LN552@luaV_execu
$LN290@luaV_execu:
  00be6	48 8d 55 b8	 lea	 rdx, QWORD PTR ib$18[rbp-256]
  00bea	45 33 c0	 xor	 r8d, r8d
  00bed	48 8b ce	 mov	 rcx, rsi
  00bf0	e8 00 00 00 00	 call	 luaV_tointeger
  00bf5	85 c0		 test	 eax, eax
  00bf7	74 76		 je	 SHORT $LN108@luaV_execu
  00bf9	48 8b 7d b8	 mov	 rdi, QWORD PTR ib$18[rbp-256]
$LN552@luaV_execu:
  00bfd	83 7b 08 13	 cmp	 DWORD PTR [rbx+8], 19
  00c01	75 09		 jne	 SHORT $LN292@luaV_execu
  00c03	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00c06	48 89 4d 90	 mov	 QWORD PTR ic$13[rbp-256], rcx
  00c0a	eb 17		 jmp	 SHORT $LN553@luaV_execu
$LN292@luaV_execu:
  00c0c	48 8d 55 90	 lea	 rdx, QWORD PTR ic$13[rbp-256]
  00c10	45 33 c0	 xor	 r8d, r8d
  00c13	48 8b cb	 mov	 rcx, rbx
  00c16	e8 00 00 00 00	 call	 luaV_tointeger
  00c1b	85 c0		 test	 eax, eax
  00c1d	74 50		 je	 SHORT $LN108@luaV_execu
  00c1f	48 8b 4d 90	 mov	 rcx, QWORD PTR ic$13[rbp-256]
$LN553@luaV_execu:
; Line 957
  00c23	48 85 c9	 test	 rcx, rcx
$LN595@luaV_execu:
  00c26	79 15		 jns	 SHORT $LN424@luaV_execu
  00c28	48 83 f9 c0	 cmp	 rcx, -64		; ffffffffffffffc0H
  00c2c	7f 08		 jg	 SHORT $LN423@luaV_execu
  00c2e	45 33 db	 xor	 r11d, r11d
  00c31	41 8b fb	 mov	 edi, r11d
  00c34	eb 1b		 jmp	 SHORT $LN419@luaV_execu
$LN423@luaV_execu:
  00c36	f6 d9		 neg	 cl
  00c38	48 d3 ef	 shr	 rdi, cl
  00c3b	eb 11		 jmp	 SHORT $LN589@luaV_execu
$LN424@luaV_execu:
  00c3d	48 83 f9 40	 cmp	 rcx, 64			; 00000040H
  00c41	7c 08		 jl	 SHORT $LN420@luaV_execu
  00c43	45 33 db	 xor	 r11d, r11d
  00c46	41 8b fb	 mov	 edi, r11d
  00c49	eb 06		 jmp	 SHORT $LN419@luaV_execu
$LN420@luaV_execu:
  00c4b	48 d3 e7	 shl	 rdi, cl
$LN589@luaV_execu:
  00c4e	45 33 db	 xor	 r11d, r11d
$LN419@luaV_execu:
  00c51	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  00c58	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  00c5f	49 89 3e	 mov	 QWORD PTR [r14], rdi
  00c62	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  00c6a	e9 11 f4 ff ff	 jmp	 $LL169@luaV_execu
$LN108@luaV_execu:
; Line 959
  00c6f	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
; Line 960
  00c77	e9 15 f9 ff ff	 jmp	 $LN577@luaV_execu
$LN106@luaV_execu:
; Line 963
  00c7c	8b c7		 mov	 eax, edi
  00c7e	c1 e8 17	 shr	 eax, 23
  00c81	8b c8		 mov	 ecx, eax
  00c83	0f ba e0 08	 bt	 eax, 8
  00c87	73 0c		 jae	 SHORT $LN294@luaV_execu
  00c89	0f b6 f1	 movzx	 esi, cl
  00c8c	48 c1 e6 04	 shl	 rsi, 4
  00c90	49 03 f2	 add	 rsi, r10
  00c93	eb 0a		 jmp	 SHORT $LN295@luaV_execu
$LN294@luaV_execu:
  00c95	48 8b f1	 mov	 rsi, rcx
  00c98	48 c1 e6 04	 shl	 rsi, 4
  00c9c	49 03 f1	 add	 rsi, r9
$LN295@luaV_execu:
; Line 964
  00c9f	c1 ef 0e	 shr	 edi, 14
  00ca2	8b df		 mov	 ebx, edi
  00ca4	0f ba e7 08	 bt	 edi, 8
  00ca8	73 0c		 jae	 SHORT $LN296@luaV_execu
  00caa	0f b6 db	 movzx	 ebx, bl
  00cad	48 c1 e3 04	 shl	 rbx, 4
  00cb1	49 03 da	 add	 rbx, r10
  00cb4	eb 0d		 jmp	 SHORT $LN297@luaV_execu
$LN296@luaV_execu:
  00cb6	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  00cbc	48 c1 e3 04	 shl	 rbx, 4
  00cc0	49 03 d9	 add	 rbx, r9
$LN297@luaV_execu:
; Line 966
  00cc3	83 7e 08 13	 cmp	 DWORD PTR [rsi+8], 19
  00cc7	75 09		 jne	 SHORT $LN298@luaV_execu
  00cc9	48 8b 3e	 mov	 rdi, QWORD PTR [rsi]
  00ccc	48 89 7d c8	 mov	 QWORD PTR ib$20[rbp-256], rdi
  00cd0	eb 17		 jmp	 SHORT $LN554@luaV_execu
$LN298@luaV_execu:
  00cd2	48 8d 55 c8	 lea	 rdx, QWORD PTR ib$20[rbp-256]
  00cd6	45 33 c0	 xor	 r8d, r8d
  00cd9	48 8b ce	 mov	 rcx, rsi
  00cdc	e8 00 00 00 00	 call	 luaV_tointeger
  00ce1	85 c0		 test	 eax, eax
  00ce3	74 38		 je	 SHORT $LN105@luaV_execu
  00ce5	48 8b 7d c8	 mov	 rdi, QWORD PTR ib$20[rbp-256]
$LN554@luaV_execu:
  00ce9	83 7b 08 13	 cmp	 DWORD PTR [rbx+8], 19
  00ced	75 0f		 jne	 SHORT $LN300@luaV_execu
  00cef	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00cf2	48 89 4d a0	 mov	 QWORD PTR ic$15[rbp-256], rcx
; Line 967
  00cf6	48 f7 d9	 neg	 rcx
  00cf9	e9 28 ff ff ff	 jmp	 $LN595@luaV_execu
$LN300@luaV_execu:
; Line 966
  00cfe	48 8d 55 a0	 lea	 rdx, QWORD PTR ic$15[rbp-256]
  00d02	45 33 c0	 xor	 r8d, r8d
  00d05	48 8b cb	 mov	 rcx, rbx
  00d08	e8 00 00 00 00	 call	 luaV_tointeger
  00d0d	85 c0		 test	 eax, eax
  00d0f	74 0c		 je	 SHORT $LN105@luaV_execu
  00d11	48 8b 4d a0	 mov	 rcx, QWORD PTR ic$15[rbp-256]
; Line 967
  00d15	48 f7 d9	 neg	 rcx
  00d18	e9 09 ff ff ff	 jmp	 $LN595@luaV_execu
$LN105@luaV_execu:
; Line 969
  00d1d	c7 44 24 20 11
	00 00 00	 mov	 DWORD PTR [rsp+32], 17
; Line 970
  00d25	e9 67 f8 ff ff	 jmp	 $LN577@luaV_execu
$LN103@luaV_execu:
; Line 973
  00d2a	8b c7		 mov	 eax, edi
  00d2c	c1 e8 17	 shr	 eax, 23
  00d2f	8b c8		 mov	 ecx, eax
  00d31	0f ba e0 08	 bt	 eax, 8
  00d35	73 0c		 jae	 SHORT $LN302@luaV_execu
  00d37	0f b6 f1	 movzx	 esi, cl
  00d3a	48 c1 e6 04	 shl	 rsi, 4
  00d3e	49 03 f2	 add	 rsi, r10
  00d41	eb 0a		 jmp	 SHORT $LN303@luaV_execu
$LN302@luaV_execu:
  00d43	48 8b f1	 mov	 rsi, rcx
  00d46	48 c1 e6 04	 shl	 rsi, 4
  00d4a	49 03 f1	 add	 rsi, r9
$LN303@luaV_execu:
; Line 974
  00d4d	c1 ef 0e	 shr	 edi, 14
  00d50	8b df		 mov	 ebx, edi
  00d52	0f ba e7 08	 bt	 edi, 8
  00d56	73 0c		 jae	 SHORT $LN304@luaV_execu
  00d58	0f b6 db	 movzx	 ebx, bl
  00d5b	48 c1 e3 04	 shl	 rbx, 4
  00d5f	49 03 da	 add	 rbx, r10
  00d62	eb 0d		 jmp	 SHORT $LN305@luaV_execu
$LN304@luaV_execu:
  00d64	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  00d6a	48 c1 e3 04	 shl	 rbx, 4
  00d6e	49 03 d9	 add	 rbx, r9
$LN305@luaV_execu:
; Line 976
  00d71	8b 46 08	 mov	 eax, DWORD PTR [rsi+8]
  00d74	83 f8 13	 cmp	 eax, 19
  00d77	75 59		 jne	 SHORT $LN102@luaV_execu
  00d79	39 43 08	 cmp	 DWORD PTR [rbx+8], eax
  00d7c	75 54		 jne	 SHORT $LN102@luaV_execu
; Line 977
  00d7e	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00d81	4c 8b 06	 mov	 r8, QWORD PTR [rsi]
; Line 978
  00d84	48 8d 41 01	 lea	 rax, QWORD PTR [rcx+1]
  00d88	48 83 f8 01	 cmp	 rax, 1
  00d8c	77 1c		 ja	 SHORT $LN438@luaV_execu
  00d8e	48 85 c9	 test	 rcx, rcx
  00d91	0f 84 64 0f 00
	00		 je	 $LN596@luaV_execu
  00d97	49 8b d3	 mov	 rdx, r11
  00d9a	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  00da2	49 89 16	 mov	 QWORD PTR [r14], rdx
  00da5	e9 d6 f2 ff ff	 jmp	 $LL169@luaV_execu
$LN438@luaV_execu:
  00daa	49 8b c0	 mov	 rax, r8
  00dad	48 99		 cdq
  00daf	48 f7 f9	 idiv	 rcx
  00db2	48 85 d2	 test	 rdx, rdx
  00db5	74 0b		 je	 SHORT $LN435@luaV_execu
  00db7	48 8b c1	 mov	 rax, rcx
  00dba	49 33 c0	 xor	 rax, r8
  00dbd	7d 03		 jge	 SHORT $LN435@luaV_execu
  00dbf	48 03 d1	 add	 rdx, rcx
$LN435@luaV_execu:
  00dc2	49 89 16	 mov	 QWORD PTR [r14], rdx
  00dc5	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  00dcd	e9 ae f2 ff ff	 jmp	 $LL169@luaV_execu
$LN102@luaV_execu:
; Line 980
  00dd2	83 f8 03	 cmp	 eax, 3
  00dd5	75 06		 jne	 SHORT $LN306@luaV_execu
  00dd7	f2 0f 10 3e	 movsdx	 xmm7, QWORD PTR [rsi]
  00ddb	eb 57		 jmp	 SHORT $LN556@luaV_execu
$LN306@luaV_execu:
  00ddd	83 f8 13	 cmp	 eax, 19
  00de0	75 0a		 jne	 SHORT $LN445@luaV_execu
  00de2	0f 57 ff	 xorps	 xmm7, xmm7
  00de5	f2 48 0f 2a 3e	 cvtsi2sd xmm7, QWORD PTR [rsi]
  00dea	eb 48		 jmp	 SHORT $LN556@luaV_execu
$LN445@luaV_execu:
  00dec	24 0f		 and	 al, 15
  00dee	3c 04		 cmp	 al, 4
  00df0	0f 85 89 00 00
	00		 jne	 $LN100@luaV_execu
  00df6	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00df9	38 41 08	 cmp	 BYTE PTR [rcx+8], al
  00dfc	75 06		 jne	 SHORT $LN448@luaV_execu
  00dfe	0f b6 79 0b	 movzx	 edi, BYTE PTR [rcx+11]
  00e02	eb 04		 jmp	 SHORT $LN449@luaV_execu
$LN448@luaV_execu:
  00e04	48 8b 79 10	 mov	 rdi, QWORD PTR [rcx+16]
$LN449@luaV_execu:
  00e08	48 8d 55 f0	 lea	 rdx, QWORD PTR v$24[rbp-256]
  00e0c	48 83 c1 18	 add	 rcx, 24
  00e10	e8 00 00 00 00	 call	 luaO_str2num
  00e15	48 8d 4f 01	 lea	 rcx, QWORD PTR [rdi+1]
  00e19	48 3b c1	 cmp	 rax, rcx
  00e1c	75 61		 jne	 SHORT $LN100@luaV_execu
  00e1e	83 7d f8 13	 cmp	 DWORD PTR v$24[rbp-248], 19
  00e22	75 0b		 jne	 SHORT $LN450@luaV_execu
  00e24	0f 57 ff	 xorps	 xmm7, xmm7
  00e27	f2 48 0f 2a 7d
	f0		 cvtsi2sd xmm7, QWORD PTR v$24[rbp-256]
  00e2d	eb 05		 jmp	 SHORT $LN556@luaV_execu
$LN450@luaV_execu:
  00e2f	f2 0f 10 7d f0	 movsdx	 xmm7, QWORD PTR v$24[rbp-256]
$LN556@luaV_execu:
  00e34	83 7b 08 03	 cmp	 DWORD PTR [rbx+8], 3
  00e38	75 0c		 jne	 SHORT $LN308@luaV_execu
  00e3a	f2 0f 10 33	 movsdx	 xmm6, QWORD PTR [rbx]
  00e3e	f2 0f 11 74 24
	30		 movsdx	 QWORD PTR nc$1[rsp], xmm6
  00e44	eb 17		 jmp	 SHORT $LN557@luaV_execu
$LN308@luaV_execu:
  00e46	48 8d 54 24 30	 lea	 rdx, QWORD PTR nc$1[rsp]
  00e4b	48 8b cb	 mov	 rcx, rbx
  00e4e	e8 00 00 00 00	 call	 luaV_tonumber_
  00e53	85 c0		 test	 eax, eax
  00e55	74 28		 je	 SHORT $LN100@luaV_execu
  00e57	f2 0f 10 74 24
	30		 movsdx	 xmm6, QWORD PTR nc$1[rsp]
$LN557@luaV_execu:
; Line 982
  00e5d	0f 28 ce	 movaps	 xmm1, xmm6
  00e60	0f 28 c7	 movaps	 xmm0, xmm7
  00e63	e8 00 00 00 00	 call	 fmod
  00e68	0f 28 c8	 movaps	 xmm1, xmm0
  00e6b	f2 0f 59 ce	 mulsd	 xmm1, xmm6
  00e6f	66 44 0f 2f c1	 comisd	 xmm8, xmm1
  00e74	0f 86 ec f6 ff
	ff		 jbe	 $LN579@luaV_execu
; Line 983
  00e7a	e9 e3 f6 ff ff	 jmp	 $LN539@luaV_execu
$LN100@luaV_execu:
; Line 985
  00e7f	c7 44 24 20 09
	00 00 00	 mov	 DWORD PTR [rsp+32], 9
; Line 986
  00e87	e9 05 f7 ff ff	 jmp	 $LN577@luaV_execu
$LN97@luaV_execu:
; Line 989
  00e8c	8b c7		 mov	 eax, edi
  00e8e	c1 e8 17	 shr	 eax, 23
  00e91	8b c8		 mov	 ecx, eax
  00e93	0f ba e0 08	 bt	 eax, 8
  00e97	73 0c		 jae	 SHORT $LN310@luaV_execu
  00e99	0f b6 f1	 movzx	 esi, cl
  00e9c	48 c1 e6 04	 shl	 rsi, 4
  00ea0	49 03 f2	 add	 rsi, r10
  00ea3	eb 0a		 jmp	 SHORT $LN311@luaV_execu
$LN310@luaV_execu:
  00ea5	48 8b f1	 mov	 rsi, rcx
  00ea8	48 c1 e6 04	 shl	 rsi, 4
  00eac	49 03 f1	 add	 rsi, r9
$LN311@luaV_execu:
; Line 990
  00eaf	c1 ef 0e	 shr	 edi, 14
  00eb2	8b df		 mov	 ebx, edi
  00eb4	0f ba e7 08	 bt	 edi, 8
  00eb8	73 0c		 jae	 SHORT $LN312@luaV_execu
  00eba	0f b6 db	 movzx	 ebx, bl
  00ebd	48 c1 e3 04	 shl	 rbx, 4
  00ec1	49 03 da	 add	 rbx, r10
  00ec4	eb 0d		 jmp	 SHORT $LN313@luaV_execu
$LN312@luaV_execu:
  00ec6	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  00ecc	48 c1 e3 04	 shl	 rbx, 4
  00ed0	49 03 d9	 add	 rbx, r9
$LN313@luaV_execu:
; Line 992
  00ed3	8b 46 08	 mov	 eax, DWORD PTR [rsi+8]
  00ed6	83 f8 13	 cmp	 eax, 19
  00ed9	75 59		 jne	 SHORT $LN96@luaV_execu
  00edb	39 43 08	 cmp	 DWORD PTR [rbx+8], eax
  00ede	75 54		 jne	 SHORT $LN96@luaV_execu
; Line 993
  00ee0	4c 8b 03	 mov	 r8, QWORD PTR [rbx]
  00ee3	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
; Line 994
  00ee6	49 8d 40 01	 lea	 rax, QWORD PTR [r8+1]
  00eea	48 83 f8 01	 cmp	 rax, 1
  00eee	77 1c		 ja	 SHORT $LN455@luaV_execu
  00ef0	4d 85 c0	 test	 r8, r8
  00ef3	0f 84 12 0e 00
	00		 je	 $LN510@luaV_execu
  00ef9	48 f7 d9	 neg	 rcx
  00efc	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  00f04	49 89 0e	 mov	 QWORD PTR [r14], rcx
  00f07	e9 74 f1 ff ff	 jmp	 $LL169@luaV_execu
$LN455@luaV_execu:
  00f0c	48 8b c1	 mov	 rax, rcx
  00f0f	48 99		 cdq
  00f11	49 f7 f8	 idiv	 r8
  00f14	4c 33 c1	 xor	 r8, rcx
  00f17	7d 08		 jge	 SHORT $LN452@luaV_execu
  00f19	48 85 d2	 test	 rdx, rdx
  00f1c	74 03		 je	 SHORT $LN452@luaV_execu
  00f1e	48 ff c8	 dec	 rax
$LN452@luaV_execu:
  00f21	48 8b c8	 mov	 rcx, rax
  00f24	49 89 06	 mov	 QWORD PTR [r14], rax
  00f27	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  00f2f	e9 4c f1 ff ff	 jmp	 $LL169@luaV_execu
$LN96@luaV_execu:
; Line 996
  00f34	83 f8 03	 cmp	 eax, 3
  00f37	75 06		 jne	 SHORT $LN314@luaV_execu
  00f39	f2 0f 10 36	 movsdx	 xmm6, QWORD PTR [rsi]
  00f3d	eb 57		 jmp	 SHORT $LN558@luaV_execu
$LN314@luaV_execu:
  00f3f	83 f8 13	 cmp	 eax, 19
  00f42	75 0a		 jne	 SHORT $LN461@luaV_execu
  00f44	0f 57 f6	 xorps	 xmm6, xmm6
  00f47	f2 48 0f 2a 36	 cvtsi2sd xmm6, QWORD PTR [rsi]
  00f4c	eb 48		 jmp	 SHORT $LN558@luaV_execu
$LN461@luaV_execu:
  00f4e	24 0f		 and	 al, 15
  00f50	3c 04		 cmp	 al, 4
  00f52	0f 85 87 00 00
	00		 jne	 $LN94@luaV_execu
  00f58	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00f5b	38 41 08	 cmp	 BYTE PTR [rcx+8], al
  00f5e	75 06		 jne	 SHORT $LN464@luaV_execu
  00f60	0f b6 79 0b	 movzx	 edi, BYTE PTR [rcx+11]
  00f64	eb 04		 jmp	 SHORT $LN465@luaV_execu
$LN464@luaV_execu:
  00f66	48 8b 79 10	 mov	 rdi, QWORD PTR [rcx+16]
$LN465@luaV_execu:
  00f6a	48 8d 55 10	 lea	 rdx, QWORD PTR v$26[rbp-256]
  00f6e	48 83 c1 18	 add	 rcx, 24
  00f72	e8 00 00 00 00	 call	 luaO_str2num
  00f77	48 8d 4f 01	 lea	 rcx, QWORD PTR [rdi+1]
  00f7b	48 3b c1	 cmp	 rax, rcx
  00f7e	75 5f		 jne	 SHORT $LN94@luaV_execu
  00f80	83 7d 18 13	 cmp	 DWORD PTR v$26[rbp-248], 19
  00f84	75 0b		 jne	 SHORT $LN466@luaV_execu
  00f86	0f 57 f6	 xorps	 xmm6, xmm6
  00f89	f2 48 0f 2a 75
	10		 cvtsi2sd xmm6, QWORD PTR v$26[rbp-256]
  00f8f	eb 05		 jmp	 SHORT $LN558@luaV_execu
$LN466@luaV_execu:
  00f91	f2 0f 10 75 10	 movsdx	 xmm6, QWORD PTR v$26[rbp-256]
$LN558@luaV_execu:
  00f96	83 7b 08 03	 cmp	 DWORD PTR [rbx+8], 3
  00f9a	75 1b		 jne	 SHORT $LN316@luaV_execu
  00f9c	f2 0f 10 03	 movsdx	 xmm0, QWORD PTR [rbx]
  00fa0	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR nc$2[rsp], xmm0
; Line 997
  00fa6	f2 0f 5e f0	 divsd	 xmm6, xmm0
  00faa	0f 28 c6	 movaps	 xmm0, xmm6
  00fad	e8 00 00 00 00	 call	 floor
  00fb2	e9 af f5 ff ff	 jmp	 $LN579@luaV_execu
$LN316@luaV_execu:
; Line 996
  00fb7	48 8d 54 24 38	 lea	 rdx, QWORD PTR nc$2[rsp]
  00fbc	48 8b cb	 mov	 rcx, rbx
  00fbf	e8 00 00 00 00	 call	 luaV_tonumber_
  00fc4	85 c0		 test	 eax, eax
  00fc6	74 17		 je	 SHORT $LN94@luaV_execu
  00fc8	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR nc$2[rsp]
; Line 997
  00fce	f2 0f 5e f0	 divsd	 xmm6, xmm0
  00fd2	0f 28 c6	 movaps	 xmm0, xmm6
  00fd5	e8 00 00 00 00	 call	 floor
  00fda	e9 87 f5 ff ff	 jmp	 $LN579@luaV_execu
$LN94@luaV_execu:
; Line 999
  00fdf	c7 44 24 20 0c
	00 00 00	 mov	 DWORD PTR [rsp+32], 12
; Line 1000
  00fe7	e9 a5 f5 ff ff	 jmp	 $LN577@luaV_execu
$LN92@luaV_execu:
; Line 1003
  00fec	8b c7		 mov	 eax, edi
  00fee	c1 e8 17	 shr	 eax, 23
  00ff1	8b c8		 mov	 ecx, eax
  00ff3	0f ba e0 08	 bt	 eax, 8
  00ff7	73 0c		 jae	 SHORT $LN318@luaV_execu
  00ff9	0f b6 f1	 movzx	 esi, cl
  00ffc	48 c1 e6 04	 shl	 rsi, 4
  01000	49 03 f2	 add	 rsi, r10
  01003	eb 0a		 jmp	 SHORT $LN319@luaV_execu
$LN318@luaV_execu:
  01005	48 8b f1	 mov	 rsi, rcx
  01008	48 c1 e6 04	 shl	 rsi, 4
  0100c	49 03 f1	 add	 rsi, r9
$LN319@luaV_execu:
; Line 1004
  0100f	c1 ef 0e	 shr	 edi, 14
  01012	8b df		 mov	 ebx, edi
  01014	0f ba e7 08	 bt	 edi, 8
  01018	73 0c		 jae	 SHORT $LN320@luaV_execu
  0101a	0f b6 db	 movzx	 ebx, bl
  0101d	48 c1 e3 04	 shl	 rbx, 4
  01021	49 03 da	 add	 rbx, r10
  01024	eb 0d		 jmp	 SHORT $LN321@luaV_execu
$LN320@luaV_execu:
  01026	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  0102c	48 c1 e3 04	 shl	 rbx, 4
  01030	49 03 d9	 add	 rbx, r9
$LN321@luaV_execu:
; Line 1006
  01033	8b 46 08	 mov	 eax, DWORD PTR [rsi+8]
  01036	83 f8 03	 cmp	 eax, 3
  01039	75 06		 jne	 SHORT $LN322@luaV_execu
  0103b	f2 0f 10 36	 movsdx	 xmm6, QWORD PTR [rsi]
  0103f	eb 53		 jmp	 SHORT $LN560@luaV_execu
$LN322@luaV_execu:
  01041	83 f8 13	 cmp	 eax, 19
  01044	75 0a		 jne	 SHORT $LN471@luaV_execu
  01046	0f 57 f6	 xorps	 xmm6, xmm6
  01049	f2 48 0f 2a 36	 cvtsi2sd xmm6, QWORD PTR [rsi]
  0104e	eb 44		 jmp	 SHORT $LN560@luaV_execu
$LN471@luaV_execu:
  01050	24 0f		 and	 al, 15
  01052	3c 04		 cmp	 al, 4
  01054	75 7f		 jne	 SHORT $LN91@luaV_execu
  01056	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  01059	38 41 08	 cmp	 BYTE PTR [rcx+8], al
  0105c	75 06		 jne	 SHORT $LN474@luaV_execu
  0105e	0f b6 79 0b	 movzx	 edi, BYTE PTR [rcx+11]
  01062	eb 04		 jmp	 SHORT $LN475@luaV_execu
$LN474@luaV_execu:
  01064	48 8b 79 10	 mov	 rdi, QWORD PTR [rcx+16]
$LN475@luaV_execu:
  01068	48 8d 55 30	 lea	 rdx, QWORD PTR v$28[rbp-256]
  0106c	48 83 c1 18	 add	 rcx, 24
  01070	e8 00 00 00 00	 call	 luaO_str2num
  01075	48 8d 4f 01	 lea	 rcx, QWORD PTR [rdi+1]
  01079	48 3b c1	 cmp	 rax, rcx
  0107c	75 57		 jne	 SHORT $LN91@luaV_execu
  0107e	83 7d 38 13	 cmp	 DWORD PTR v$28[rbp-248], 19
  01082	75 0b		 jne	 SHORT $LN476@luaV_execu
  01084	0f 57 f6	 xorps	 xmm6, xmm6
  01087	f2 48 0f 2a 75
	30		 cvtsi2sd xmm6, QWORD PTR v$28[rbp-256]
  0108d	eb 05		 jmp	 SHORT $LN560@luaV_execu
$LN476@luaV_execu:
  0108f	f2 0f 10 75 30	 movsdx	 xmm6, QWORD PTR v$28[rbp-256]
$LN560@luaV_execu:
  01094	83 7b 08 03	 cmp	 DWORD PTR [rbx+8], 3
  01098	75 17		 jne	 SHORT $LN324@luaV_execu
  0109a	f2 0f 10 0b	 movsdx	 xmm1, QWORD PTR [rbx]
; Line 1007
  0109e	0f 28 c6	 movaps	 xmm0, xmm6
  010a1	f2 0f 11 4c 24
	48		 movsdx	 QWORD PTR nc$4[rsp], xmm1
  010a7	e8 00 00 00 00	 call	 pow
  010ac	e9 b5 f4 ff ff	 jmp	 $LN579@luaV_execu
$LN324@luaV_execu:
; Line 1006
  010b1	48 8d 54 24 48	 lea	 rdx, QWORD PTR nc$4[rsp]
  010b6	48 8b cb	 mov	 rcx, rbx
  010b9	e8 00 00 00 00	 call	 luaV_tonumber_
  010be	85 c0		 test	 eax, eax
  010c0	74 13		 je	 SHORT $LN91@luaV_execu
  010c2	f2 0f 10 4c 24
	48		 movsdx	 xmm1, QWORD PTR nc$4[rsp]
; Line 1007
  010c8	0f 28 c6	 movaps	 xmm0, xmm6
  010cb	e8 00 00 00 00	 call	 pow
  010d0	e9 91 f4 ff ff	 jmp	 $LN579@luaV_execu
$LN91@luaV_execu:
; Line 1009
  010d5	c7 44 24 20 0a
	00 00 00	 mov	 DWORD PTR [rsp+32], 10
; Line 1010
  010dd	e9 af f4 ff ff	 jmp	 $LN577@luaV_execu
$LN89@luaV_execu:
; Line 1013
  010e2	c1 ef 17	 shr	 edi, 23
  010e5	8b df		 mov	 ebx, edi
  010e7	48 c1 e3 04	 shl	 rbx, 4
  010eb	49 03 d9	 add	 rbx, r9
; Line 1015
  010ee	8b 43 08	 mov	 eax, DWORD PTR [rbx+8]
  010f1	83 f8 13	 cmp	 eax, 19
  010f4	75 16		 jne	 SHORT $LN88@luaV_execu
; Line 1017
  010f6	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  010f9	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  01101	48 f7 d8	 neg	 rax
  01104	49 89 06	 mov	 QWORD PTR [r14], rax
  01107	e9 74 ef ff ff	 jmp	 $LL169@luaV_execu
$LN88@luaV_execu:
; Line 1019
  0110c	83 f8 03	 cmp	 eax, 3
  0110f	75 0c		 jne	 SHORT $LN326@luaV_execu
  01111	f2 0f 10 03	 movsdx	 xmm0, QWORD PTR [rbx]
  01115	f2 0f 11 44 24
	58		 movsdx	 QWORD PTR nb$6[rsp], xmm0
  0111b	eb 1e		 jmp	 SHORT $LN562@luaV_execu
$LN326@luaV_execu:
  0111d	48 8d 54 24 58	 lea	 rdx, QWORD PTR nb$6[rsp]
  01122	48 8b cb	 mov	 rcx, rbx
  01125	e8 00 00 00 00	 call	 luaV_tonumber_
  0112a	85 c0		 test	 eax, eax
  0112c	74 2d		 je	 SHORT $LN86@luaV_execu
  0112e	f2 0f 10 44 24
	58		 movsdx	 xmm0, QWORD PTR nb$6[rsp]
  01134	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
$LN562@luaV_execu:
; Line 1020
  0113b	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  01142	41 0f 57 c1	 xorps	 xmm0, xmm9
  01146	41 c7 46 08 03
	00 00 00	 mov	 DWORD PTR [r14+8], 3
  0114e	45 33 db	 xor	 r11d, r11d
  01151	f2 41 0f 11 06	 movsdx	 QWORD PTR [r14], xmm0
  01156	e9 25 ef ff ff	 jmp	 $LL169@luaV_execu
$LN86@luaV_execu:
; Line 1023
  0115b	48 8b d3	 mov	 rdx, rbx
  0115e	4d 8b ce	 mov	 r9, r14
  01161	4c 8b c3	 mov	 r8, rbx
  01164	49 8b cd	 mov	 rcx, r13
  01167	c7 44 24 20 12
	00 00 00	 mov	 DWORD PTR [rsp+32], 18
  0116f	e8 00 00 00 00	 call	 luaT_trybinTM
  01174	e9 ae f0 ff ff	 jmp	 $LN574@luaV_execu
$LN84@luaV_execu:
; Line 1028
  01179	c1 ef 17	 shr	 edi, 23
  0117c	8b df		 mov	 ebx, edi
  0117e	48 c1 e3 04	 shl	 rbx, 4
  01182	49 03 d9	 add	 rbx, r9
; Line 1030
  01185	83 7b 08 13	 cmp	 DWORD PTR [rbx+8], 19
  01189	75 25		 jne	 SHORT $LN328@luaV_execu
  0118b	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0118e	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  01195	45 33 db	 xor	 r11d, r11d
  01198	48 89 44 24 68	 mov	 QWORD PTR ib$8[rsp], rax
; Line 1031
  0119d	48 f7 d0	 not	 rax
  011a0	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  011a8	49 89 06	 mov	 QWORD PTR [r14], rax
  011ab	e9 d0 ee ff ff	 jmp	 $LL169@luaV_execu
$LN328@luaV_execu:
; Line 1030
  011b0	48 8d 54 24 68	 lea	 rdx, QWORD PTR ib$8[rsp]
  011b5	45 33 c0	 xor	 r8d, r8d
  011b8	48 8b cb	 mov	 rcx, rbx
  011bb	e8 00 00 00 00	 call	 luaV_tointeger
  011c0	85 c0		 test	 eax, eax
  011c2	74 29		 je	 SHORT $LN83@luaV_execu
  011c4	48 8b 44 24 68	 mov	 rax, QWORD PTR ib$8[rsp]
  011c9	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  011d0	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
; Line 1031
  011d7	48 f7 d0	 not	 rax
  011da	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
  011e2	45 33 db	 xor	 r11d, r11d
  011e5	49 89 06	 mov	 QWORD PTR [r14], rax
  011e8	e9 93 ee ff ff	 jmp	 $LL169@luaV_execu
$LN83@luaV_execu:
; Line 1034
  011ed	48 8b d3	 mov	 rdx, rbx
  011f0	4d 8b ce	 mov	 r9, r14
  011f3	4c 8b c3	 mov	 r8, rbx
  011f6	49 8b cd	 mov	 rcx, r13
  011f9	c7 44 24 20 13
	00 00 00	 mov	 DWORD PTR [rsp+32], 19
  01201	e8 00 00 00 00	 call	 luaT_trybinTM
  01206	e9 1c f0 ff ff	 jmp	 $LN574@luaV_execu
$LN81@luaV_execu:
; Line 1039
  0120b	c1 ef 17	 shr	 edi, 23
  0120e	8b c7		 mov	 eax, edi
  01210	48 03 c0	 add	 rax, rax
; Line 1040
  01213	41 8b 4c c1 08	 mov	 ecx, DWORD PTR [r9+rax*8+8]
  01218	85 c9		 test	 ecx, ecx
  0121a	74 1f		 je	 SHORT $LN331@luaV_execu
  0121c	83 f9 01	 cmp	 ecx, 1
  0121f	75 07		 jne	 SHORT $LN330@luaV_execu
  01221	41 83 3c c1 00	 cmp	 DWORD PTR [r9+rax*8], 0
  01226	74 13		 je	 SHORT $LN331@luaV_execu
$LN330@luaV_execu:
  01228	41 8b c3	 mov	 eax, r11d
; Line 1041
  0122b	41 c7 46 08 01
	00 00 00	 mov	 DWORD PTR [r14+8], 1
  01233	41 89 06	 mov	 DWORD PTR [r14], eax
; Line 1042
  01236	e9 45 ee ff ff	 jmp	 $LL169@luaV_execu
$LN331@luaV_execu:
; Line 1040
  0123b	b8 01 00 00 00	 mov	 eax, 1
; Line 1041
  01240	41 89 06	 mov	 DWORD PTR [r14], eax
  01243	41 89 46 08	 mov	 DWORD PTR [r14+8], eax
; Line 1042
  01247	e9 34 ee ff ff	 jmp	 $LL169@luaV_execu
$LN80@luaV_execu:
; Line 1045
  0124c	c1 ef 17	 shr	 edi, 23
  0124f	49 8b d6	 mov	 rdx, r14
  01252	49 8b cd	 mov	 rcx, r13
  01255	44 8b c7	 mov	 r8d, edi
  01258	49 c1 e0 04	 shl	 r8, 4
  0125c	4d 03 c1	 add	 r8, r9
  0125f	e8 00 00 00 00	 call	 luaV_objlen
; Line 1046
  01264	e9 be ef ff ff	 jmp	 $LN574@luaV_execu
$LN79@luaV_execu:
; Line 1049
  01269	8b df		 mov	 ebx, edi
; Line 1050
  0126b	c1 ef 0e	 shr	 edi, 14
; Line 1053
  0126e	49 8b cd	 mov	 rcx, r13
  01271	81 e7 ff 01 00
	00		 and	 edi, 511		; 000001ffH
  01277	c1 eb 17	 shr	 ebx, 23
  0127a	48 63 c7	 movsxd	 rax, edi
  0127d	2b fb		 sub	 edi, ebx
  0127f	48 ff c0	 inc	 rax
  01282	8d 57 01	 lea	 edx, DWORD PTR [rdi+1]
  01285	48 c1 e0 04	 shl	 rax, 4
  01289	49 03 c1	 add	 rax, r9
  0128c	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
  01290	e8 00 00 00 00	 call	 luaV_concat
  01295	4d 8b 4c 24 20	 mov	 r9, QWORD PTR [r12+32]
; Line 1055
  0129a	8b cb		 mov	 ecx, ebx
  0129c	49 8d 14 f1	 lea	 rdx, QWORD PTR [r9+rsi*8]
  012a0	4c 89 8d f0 00
	00 00		 mov	 QWORD PTR base$1$[rbp-256], r9
  012a7	48 c1 e1 04	 shl	 rcx, 4
  012ab	49 03 c9	 add	 rcx, r9
; Line 1056
  012ae	0f 10 01	 movups	 xmm0, XMMWORD PTR [rcx]
  012b1	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
; Line 1057
  012b4	49 8b 45 18	 mov	 rax, QWORD PTR [r13+24]
  012b8	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  012bd	7e 2a		 jle	 SHORT $LN78@luaV_execu
  012bf	48 3b d1	 cmp	 rdx, rcx
  012c2	72 04		 jb	 SHORT $LN333@luaV_execu
  012c4	48 8d 4a 10	 lea	 rcx, QWORD PTR [rdx+16]
$LN333@luaV_execu:
  012c8	49 89 4d 10	 mov	 QWORD PTR [r13+16], rcx
  012cc	49 8b cd	 mov	 rcx, r13
  012cf	e8 00 00 00 00	 call	 luaC_step
  012d4	49 8b 44 24 08	 mov	 rax, QWORD PTR [r12+8]
  012d9	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
  012dd	4d 8b 4c 24 20	 mov	 r9, QWORD PTR [r12+32]
  012e2	4c 89 8d f0 00
	00 00		 mov	 QWORD PTR base$1$[rbp-256], r9
$LN78@luaV_execu:
; Line 1058
  012e9	49 8b 44 24 08	 mov	 rax, QWORD PTR [r12+8]
  012ee	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  012f5	45 33 db	 xor	 r11d, r11d
  012f8	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
  012fc	e9 7f ed ff ff	 jmp	 $LL169@luaV_execu
$LN77@luaV_execu:
; Line 1062
  01301	85 db		 test	 ebx, ebx
  01303	74 22		 je	 SHORT $LN76@luaV_execu
  01305	49 8b 54 24 20	 mov	 rdx, QWORD PTR [r12+32]
  0130a	48 8b cb	 mov	 rcx, rbx
  0130d	48 c1 e1 04	 shl	 rcx, 4
  01311	48 83 c1 f0	 add	 rcx, -16
  01315	48 03 d1	 add	 rdx, rcx
  01318	49 8b cd	 mov	 rcx, r13
  0131b	e8 00 00 00 00	 call	 luaF_close
  01320	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
$LN76@luaV_execu:
  01327	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  0132e	c1 ef 0e	 shr	 edi, 14
  01331	8d 87 01 00 fe
	ff		 lea	 eax, DWORD PTR [rdi-131071]
  01337	48 98		 cdqe
  01339	48 c1 e0 02	 shl	 rax, 2
  0133d	49 01 44 24 28	 add	 QWORD PTR [r12+40], rax
  01342	45 33 db	 xor	 r11d, r11d
  01345	e9 36 ed ff ff	 jmp	 $LL169@luaV_execu
$LN75@luaV_execu:
; Line 1066
  0134a	8b c7		 mov	 eax, edi
  0134c	c1 e8 17	 shr	 eax, 23
  0134f	8b c8		 mov	 ecx, eax
  01351	0f ba e0 08	 bt	 eax, 8
  01355	73 0c		 jae	 SHORT $LN335@luaV_execu
  01357	0f b6 d1	 movzx	 edx, cl
  0135a	48 c1 e2 04	 shl	 rdx, 4
  0135e	49 03 d2	 add	 rdx, r10
  01361	eb 0a		 jmp	 SHORT $LN336@luaV_execu
$LN335@luaV_execu:
  01363	48 8b d1	 mov	 rdx, rcx
  01366	48 c1 e2 04	 shl	 rdx, 4
  0136a	49 03 d1	 add	 rdx, r9
$LN336@luaV_execu:
; Line 1067
  0136d	c1 ef 0e	 shr	 edi, 14
  01370	44 8b c7	 mov	 r8d, edi
  01373	0f ba e7 08	 bt	 edi, 8
  01377	73 0d		 jae	 SHORT $LN337@luaV_execu
  01379	45 0f b6 c0	 movzx	 r8d, r8b
  0137d	49 c1 e0 04	 shl	 r8, 4
  01381	4d 03 c2	 add	 r8, r10
  01384	eb 0e		 jmp	 SHORT $LN338@luaV_execu
$LN337@luaV_execu:
  01386	41 81 e0 ff 01
	00 00		 and	 r8d, 511		; 000001ffH
  0138d	49 c1 e0 04	 shl	 r8, 4
  01391	4d 03 c1	 add	 r8, r9
$LN338@luaV_execu:
; Line 1073
  01394	49 8b cd	 mov	 rcx, r13
  01397	e8 00 00 00 00	 call	 luaV_equalobj
  0139c	3b c3		 cmp	 eax, ebx
  0139e	74 0b		 je	 SHORT $LN74@luaV_execu
  013a0	49 83 44 24 28
	04		 add	 QWORD PTR [r12+40], 4
  013a6	e9 7c ee ff ff	 jmp	 $LN574@luaV_execu
$LN74@luaV_execu:
  013ab	49 8b 44 24 28	 mov	 rax, QWORD PTR [r12+40]
  013b0	8b 18		 mov	 ebx, DWORD PTR [rax]
  013b2	8b c3		 mov	 eax, ebx
  013b4	c1 e8 06	 shr	 eax, 6
  013b7	0f b6 c8	 movzx	 ecx, al
  013ba	84 c0		 test	 al, al
  013bc	74 18		 je	 SHORT $LN72@luaV_execu
  013be	49 8b 54 24 20	 mov	 rdx, QWORD PTR [r12+32]
  013c3	48 c1 e1 04	 shl	 rcx, 4
  013c7	48 83 c1 f0	 add	 rcx, -16
  013cb	48 03 d1	 add	 rdx, rcx
  013ce	49 8b cd	 mov	 rcx, r13
  013d1	e8 00 00 00 00	 call	 luaF_close
$LN72@luaV_execu:
  013d6	c1 eb 0e	 shr	 ebx, 14
  013d9	8d 83 02 00 fe
	ff		 lea	 eax, DWORD PTR [rbx-131070]
  013df	48 98		 cdqe
  013e1	48 c1 e0 02	 shl	 rax, 2
  013e5	49 01 44 24 28	 add	 QWORD PTR [r12+40], rax
; Line 1074
  013ea	e9 38 ee ff ff	 jmp	 $LN574@luaV_execu
$LN71@luaV_execu:
; Line 1082
  013ef	8b c7		 mov	 eax, edi
  013f1	c1 e8 0e	 shr	 eax, 14
  013f4	44 8b c0	 mov	 r8d, eax
  013f7	0f ba e0 08	 bt	 eax, 8
  013fb	73 0d		 jae	 SHORT $LN339@luaV_execu
  013fd	45 0f b6 c0	 movzx	 r8d, r8b
  01401	49 c1 e0 04	 shl	 r8, 4
  01405	4d 03 c2	 add	 r8, r10
  01408	eb 0e		 jmp	 SHORT $LN340@luaV_execu
$LN339@luaV_execu:
  0140a	41 81 e0 ff 01
	00 00		 and	 r8d, 511		; 000001ffH
  01411	49 c1 e0 04	 shl	 r8, 4
  01415	4d 03 c1	 add	 r8, r9
$LN340@luaV_execu:
  01418	c1 ef 17	 shr	 edi, 23
  0141b	8b c7		 mov	 eax, edi
  0141d	0f ba e7 08	 bt	 edi, 8
  01421	73 0c		 jae	 SHORT $LN341@luaV_execu
  01423	0f b6 d0	 movzx	 edx, al
  01426	48 c1 e2 04	 shl	 rdx, 4
  0142a	49 03 d2	 add	 rdx, r10
  0142d	eb 0a		 jmp	 SHORT $LN342@luaV_execu
$LN341@luaV_execu:
  0142f	48 8b d0	 mov	 rdx, rax
  01432	48 c1 e2 04	 shl	 rdx, 4
  01436	49 03 d1	 add	 rdx, r9
$LN342@luaV_execu:
  01439	49 8b cd	 mov	 rcx, r13
  0143c	e8 00 00 00 00	 call	 luaV_lessthan
  01441	3b c3		 cmp	 eax, ebx
  01443	0f 84 62 ff ff
	ff		 je	 $LN74@luaV_execu
  01449	49 83 44 24 28
	04		 add	 QWORD PTR [r12+40], 4
  0144f	e9 d3 ed ff ff	 jmp	 $LN574@luaV_execu
$LN67@luaV_execu:
; Line 1091
  01454	8b c7		 mov	 eax, edi
  01456	c1 e8 0e	 shr	 eax, 14
  01459	44 8b c0	 mov	 r8d, eax
  0145c	0f ba e0 08	 bt	 eax, 8
  01460	73 0d		 jae	 SHORT $LN343@luaV_execu
  01462	45 0f b6 c0	 movzx	 r8d, r8b
  01466	49 c1 e0 04	 shl	 r8, 4
  0146a	4d 03 c2	 add	 r8, r10
  0146d	eb 0e		 jmp	 SHORT $LN344@luaV_execu
$LN343@luaV_execu:
  0146f	41 81 e0 ff 01
	00 00		 and	 r8d, 511		; 000001ffH
  01476	49 c1 e0 04	 shl	 r8, 4
  0147a	4d 03 c1	 add	 r8, r9
$LN344@luaV_execu:
  0147d	c1 ef 17	 shr	 edi, 23
  01480	8b c7		 mov	 eax, edi
  01482	0f ba e7 08	 bt	 edi, 8
  01486	73 0c		 jae	 SHORT $LN345@luaV_execu
  01488	0f b6 d0	 movzx	 edx, al
  0148b	48 c1 e2 04	 shl	 rdx, 4
  0148f	49 03 d2	 add	 rdx, r10
  01492	eb 0a		 jmp	 SHORT $LN346@luaV_execu
$LN345@luaV_execu:
  01494	48 8b d0	 mov	 rdx, rax
  01497	48 c1 e2 04	 shl	 rdx, 4
  0149b	49 03 d1	 add	 rdx, r9
$LN346@luaV_execu:
  0149e	49 8b cd	 mov	 rcx, r13
  014a1	e8 00 00 00 00	 call	 luaV_lessequal
  014a6	3b c3		 cmp	 eax, ebx
  014a8	0f 84 fd fe ff
	ff		 je	 $LN74@luaV_execu
  014ae	49 83 44 24 28
	04		 add	 QWORD PTR [r12+40], 4
  014b4	e9 6e ed ff ff	 jmp	 $LN574@luaV_execu
$LN63@luaV_execu:
; Line 1095
  014b9	41 8b 46 08	 mov	 eax, DWORD PTR [r14+8]
  014bd	f7 c7 00 c0 7f
	00		 test	 edi, 8372224		; 007fc000H
  014c3	74 11		 je	 SHORT $LN353@luaV_execu
  014c5	85 c0		 test	 eax, eax
  014c7	74 1c		 je	 SHORT $LN564@luaV_execu
  014c9	83 f8 01	 cmp	 eax, 1
  014cc	75 4e		 jne	 SHORT $LN62@luaV_execu
  014ce	41 83 3e 00	 cmp	 DWORD PTR [r14], 0
  014d2	74 11		 je	 SHORT $LN564@luaV_execu
  014d4	eb 46		 jmp	 SHORT $LN62@luaV_execu
$LN353@luaV_execu:
  014d6	85 c0		 test	 eax, eax
  014d8	74 42		 je	 SHORT $LN62@luaV_execu
  014da	83 f8 01	 cmp	 eax, 1
  014dd	75 06		 jne	 SHORT $LN564@luaV_execu
  014df	41 83 3e 00	 cmp	 DWORD PTR [r14], 0
  014e3	74 37		 je	 SHORT $LN62@luaV_execu
$LN564@luaV_execu:
; Line 1096
  014e5	49 83 44 24 28
	04		 add	 QWORD PTR [r12+40], 4
; Line 1097
  014eb	e9 90 eb ff ff	 jmp	 $LL169@luaV_execu
$LN59@luaV_execu:
; Line 1102
  014f0	8b cf		 mov	 ecx, edi
  014f2	c1 e9 17	 shr	 ecx, 23
  014f5	48 c1 e1 04	 shl	 rcx, 4
  014f9	49 03 c9	 add	 rcx, r9
; Line 1103
  014fc	8b 41 08	 mov	 eax, DWORD PTR [rcx+8]
  014ff	f7 c7 00 c0 7f
	00		 test	 edi, 8372224		; 007fc000H
  01505	74 6a		 je	 SHORT $LN361@luaV_execu
  01507	85 c0		 test	 eax, eax
  01509	74 da		 je	 SHORT $LN564@luaV_execu
  0150b	83 f8 01	 cmp	 eax, 1
  0150e	75 05		 jne	 SHORT $LN58@luaV_execu
  01510	83 39 00	 cmp	 DWORD PTR [rcx], 0
  01513	74 d0		 je	 SHORT $LN564@luaV_execu
$LN58@luaV_execu:
; Line 1106
  01515	0f 10 01	 movups	 xmm0, XMMWORD PTR [rcx]
  01518	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0
$LN62@luaV_execu:
; Line 1107
  0151c	49 8b 44 24 28	 mov	 rax, QWORD PTR [r12+40]
  01521	8b 18		 mov	 ebx, DWORD PTR [rax]
  01523	8b c3		 mov	 eax, ebx
  01525	c1 e8 06	 shr	 eax, 6
  01528	0f b6 c8	 movzx	 ecx, al
  0152b	84 c0		 test	 al, al
  0152d	74 1f		 je	 SHORT $LN60@luaV_execu
  0152f	49 8b 54 24 20	 mov	 rdx, QWORD PTR [r12+32]
  01534	48 c1 e1 04	 shl	 rcx, 4
  01538	48 83 c1 f0	 add	 rcx, -16
  0153c	48 03 d1	 add	 rdx, rcx
  0153f	49 8b cd	 mov	 rcx, r13
  01542	e8 00 00 00 00	 call	 luaF_close
  01547	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
$LN60@luaV_execu:
  0154e	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  01555	c1 eb 0e	 shr	 ebx, 14
  01558	8d 83 02 00 fe
	ff		 lea	 eax, DWORD PTR [rbx-131070]
  0155e	48 98		 cdqe
  01560	48 c1 e0 02	 shl	 rax, 2
  01564	49 01 44 24 28	 add	 QWORD PTR [r12+40], rax
  01569	45 33 db	 xor	 r11d, r11d
  0156c	e9 0f eb ff ff	 jmp	 $LL169@luaV_execu
$LN361@luaV_execu:
; Line 1103
  01571	85 c0		 test	 eax, eax
  01573	74 a0		 je	 SHORT $LN58@luaV_execu
  01575	83 f8 01	 cmp	 eax, 1
  01578	0f 85 67 ff ff
	ff		 jne	 $LN564@luaV_execu
  0157e	83 39 00	 cmp	 DWORD PTR [rcx], 0
  01581	74 92		 je	 SHORT $LN58@luaV_execu
; Line 1104
  01583	49 83 44 24 28
	04		 add	 QWORD PTR [r12+40], 4
; Line 1105
  01589	e9 f2 ea ff ff	 jmp	 $LL169@luaV_execu
$LN55@luaV_execu:
; Line 1112
  0158e	8b c7		 mov	 eax, edi
; Line 1113
  01590	c1 ef 0e	 shr	 edi, 14
  01593	81 e7 ff 01 00
	00		 and	 edi, 511		; 000001ffH
  01599	c1 e8 17	 shr	 eax, 23
  0159c	ff cf		 dec	 edi
; Line 1114
  0159e	85 c0		 test	 eax, eax
  015a0	74 0b		 je	 SHORT $LN54@luaV_execu
  015a2	48 c1 e0 04	 shl	 rax, 4
  015a6	49 03 c6	 add	 rax, r14
  015a9	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
$LN54@luaV_execu:
; Line 1115
  015ad	44 8b c7	 mov	 r8d, edi
  015b0	49 8b d6	 mov	 rdx, r14
  015b3	49 8b cd	 mov	 rcx, r13
  015b6	e8 00 00 00 00	 call	 luaD_precall
  015bb	85 c0		 test	 eax, eax
  015bd	0f 84 9e 06 00
	00		 je	 $LN53@luaV_execu
; Line 1116
  015c3	85 ff		 test	 edi, edi
  015c5	0f 88 5c ec ff
	ff		 js	 $LN574@luaV_execu
; Line 1117
  015cb	49 8b 44 24 08	 mov	 rax, QWORD PTR [r12+8]
  015d0	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
; Line 1124
  015d4	e9 4e ec ff ff	 jmp	 $LN574@luaV_execu
$LN50@luaV_execu:
; Line 1127
  015d9	c1 ef 17	 shr	 edi, 23
; Line 1128
  015dc	85 ff		 test	 edi, edi
  015de	74 0d		 je	 SHORT $LN49@luaV_execu
  015e0	8b c7		 mov	 eax, edi
  015e2	48 c1 e0 04	 shl	 rax, 4
  015e6	49 03 c6	 add	 rax, r14
  015e9	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
$LN49@luaV_execu:
; Line 1130
  015ed	41 83 c8 ff	 or	 r8d, -1
  015f1	49 8b d6	 mov	 rdx, r14
  015f4	49 8b cd	 mov	 rcx, r13
  015f7	e8 00 00 00 00	 call	 luaD_precall
  015fc	85 c0		 test	 eax, eax
  015fe	0f 85 23 ec ff
	ff		 jne	 $LN574@luaV_execu
; Line 1135
  01604	49 8b 75 20	 mov	 rsi, QWORD PTR [r13+32]
; Line 1137
  01608	48 8b 3e	 mov	 rdi, QWORD PTR [rsi]
  0160b	4c 8b 66 10	 mov	 r12, QWORD PTR [rsi+16]
; Line 1140
  0160f	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  01612	4d 8b 34 24	 mov	 r14, QWORD PTR [r12]
  01616	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
; Line 1143
  0161a	49 8b 47 18	 mov	 rax, QWORD PTR [r15+24]
  0161e	0f b6 59 0a	 movzx	 ebx, BYTE PTR [rcx+10]
  01622	48 c1 e3 04	 shl	 rbx, 4
  01626	48 03 5e 20	 add	 rbx, QWORD PTR [rsi+32]
  0162a	83 78 20 00	 cmp	 DWORD PTR [rax+32], 0
  0162e	7e 0d		 jle	 SHORT $LN46@luaV_execu
  01630	49 8b 54 24 20	 mov	 rdx, QWORD PTR [r12+32]
  01635	49 8b cd	 mov	 rcx, r13
  01638	e8 00 00 00 00	 call	 luaF_close
$LN46@luaV_execu:
; Line 1145
  0163d	45 33 db	 xor	 r11d, r11d
  01640	41 8b d3	 mov	 edx, r11d
  01643	48 3b fb	 cmp	 rdi, rbx
  01646	73 27		 jae	 SHORT $LN43@luaV_execu
  01648	4c 8b c7	 mov	 r8, rdi
  0164b	49 8b ce	 mov	 rcx, r14
  0164e	4d 2b c6	 sub	 r8, r14
$LL45@luaV_execu:
; Line 1146
  01651	41 0f 10 04 08	 movups	 xmm0, XMMWORD PTR [r8+rcx]
  01656	ff c2		 inc	 edx
  01658	48 8d 49 10	 lea	 rcx, QWORD PTR [rcx+16]
  0165c	48 63 c2	 movsxd	 rax, edx
  0165f	48 c1 e0 04	 shl	 rax, 4
  01663	48 03 c7	 add	 rax, rdi
  01666	0f 11 41 f0	 movups	 XMMWORD PTR [rcx-16], xmm0
  0166a	48 3b c3	 cmp	 rax, rbx
  0166d	72 e2		 jb	 SHORT $LL45@luaV_execu
$LN43@luaV_execu:
; Line 1147
  0166f	48 8b 46 20	 mov	 rax, QWORD PTR [rsi+32]
  01673	48 2b c7	 sub	 rax, rdi
  01676	48 83 e0 f0	 and	 rax, -16
  0167a	49 03 c6	 add	 rax, r14
  0167d	49 89 44 24 20	 mov	 QWORD PTR [r12+32], rax
; Line 1148
  01682	49 8b 45 10	 mov	 rax, QWORD PTR [r13+16]
  01686	48 2b c7	 sub	 rax, rdi
  01689	48 83 e0 f0	 and	 rax, -16
  0168d	49 03 c6	 add	 rax, r14
  01690	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
  01694	49 89 44 24 08	 mov	 QWORD PTR [r12+8], rax
; Line 1149
  01699	48 8b 46 28	 mov	 rax, QWORD PTR [rsi+40]
; Line 1150
  0169d	41 80 4c 24 42
	20		 or	 BYTE PTR [r12+66], 32	; 00000020H
  016a3	49 89 44 24 28	 mov	 QWORD PTR [r12+40], rax
; Line 1151
  016a8	4d 89 65 20	 mov	 QWORD PTR [r13+32], r12
; Line 1153
  016ac	e9 9f e9 ff ff	 jmp	 $newframe$598
$LN39@luaV_execu:
; Line 1172
  016b1	41 83 7e 08 13	 cmp	 DWORD PTR [r14+8], 19
; Line 1176
  016b6	41 8b c3	 mov	 eax, r11d
  016b9	75 4e		 jne	 SHORT $LN36@luaV_execu
; Line 1174
  016bb	49 8b 4e 20	 mov	 rcx, QWORD PTR [r14+32]
  016bf	49 8b 16	 mov	 rdx, QWORD PTR [r14]
; Line 1175
  016c2	4d 8b 46 10	 mov	 r8, QWORD PTR [r14+16]
  016c6	48 03 d1	 add	 rdx, rcx
; Line 1176
  016c9	48 85 c9	 test	 rcx, rcx
  016cc	7e 05		 jle	 SHORT $LN365@luaV_execu
  016ce	49 3b d0	 cmp	 rdx, r8
  016d1	eb 03		 jmp	 SHORT $LN591@luaV_execu
$LN365@luaV_execu:
  016d3	4c 3b c2	 cmp	 r8, rdx
$LN591@luaV_execu:
  016d6	0f 9e c0	 setle	 al
  016d9	85 c0		 test	 eax, eax
  016db	0f 84 9f e9 ff
	ff		 je	 $LL169@luaV_execu
; Line 1177
  016e1	c1 ef 0e	 shr	 edi, 14
  016e4	8d 87 01 00 fe
	ff		 lea	 eax, DWORD PTR [rdi-131071]
  016ea	48 98		 cdqe
  016ec	48 c1 e0 02	 shl	 rax, 2
  016f0	49 01 44 24 28	 add	 QWORD PTR [r12+40], rax
; Line 1178
  016f5	49 89 16	 mov	 QWORD PTR [r14], rdx
; Line 1179
  016f8	49 89 56 30	 mov	 QWORD PTR [r14+48], rdx
  016fc	41 c7 46 38 13
	00 00 00	 mov	 DWORD PTR [r14+56], 19
; Line 1182
  01704	e9 77 e9 ff ff	 jmp	 $LL169@luaV_execu
$LN36@luaV_execu:
; Line 1183
  01709	f2 41 0f 10 46
	20		 movsdx	 xmm0, QWORD PTR [r14+32]
; Line 1185
  0170f	f2 41 0f 10 56
	10		 movsdx	 xmm2, QWORD PTR [r14+16]
; Line 1187
  01715	66 41 0f 2f c0	 comisd	 xmm0, xmm8
  0171a	0f 28 c8	 movaps	 xmm1, xmm0
  0171d	f2 41 0f 58 0e	 addsd	 xmm1, QWORD PTR [r14]
  01722	76 06		 jbe	 SHORT $LN367@luaV_execu
  01724	66 0f 2f d1	 comisd	 xmm2, xmm1
  01728	eb 04		 jmp	 SHORT $LN592@luaV_execu
$LN367@luaV_execu:
  0172a	66 0f 2f ca	 comisd	 xmm1, xmm2
$LN592@luaV_execu:
  0172e	0f 93 c0	 setae	 al
  01731	85 c0		 test	 eax, eax
  01733	0f 84 47 e9 ff
	ff		 je	 $LL169@luaV_execu
; Line 1188
  01739	c1 ef 0e	 shr	 edi, 14
  0173c	8d 87 01 00 fe
	ff		 lea	 eax, DWORD PTR [rdi-131071]
  01742	48 98		 cdqe
  01744	48 c1 e0 02	 shl	 rax, 2
  01748	49 01 44 24 28	 add	 QWORD PTR [r12+40], rax
; Line 1189
  0174d	f2 41 0f 11 0e	 movsdx	 QWORD PTR [r14], xmm1
; Line 1190
  01752	f2 41 0f 11 4e
	30		 movsdx	 QWORD PTR [r14+48], xmm1
  01758	41 c7 46 38 03
	00 00 00	 mov	 DWORD PTR [r14+56], 3
; Line 1193
  01760	e9 1b e9 ff ff	 jmp	 $LL169@luaV_execu
$LN32@luaV_execu:
; Line 1202
  01765	41 83 7e 08 13	 cmp	 DWORD PTR [r14+8], 19
  0176a	0f 85 c2 00 00
	00		 jne	 $LN31@luaV_execu
  01770	41 83 7e 28 13	 cmp	 DWORD PTR [r14+40], 19
  01775	0f 85 b7 00 00
	00		 jne	 $LN31@luaV_execu
  0177b	4d 8b 7e 20	 mov	 r15, QWORD PTR [r14+32]
  0177f	45 8b c3	 mov	 r8d, r11d
  01782	48 8d 95 08 01
	00 00		 lea	 rdx, QWORD PTR ilimit$31[rbp-256]
  01789	4d 85 ff	 test	 r15, r15
  0178c	49 8d 4e 10	 lea	 rcx, QWORD PTR [r14+16]
  01790	41 0f 98 c0	 sets	 r8b
  01794	41 ff c0	 inc	 r8d
  01797	e8 00 00 00 00	 call	 luaV_tointeger
  0179c	85 c0		 test	 eax, eax
  0179e	75 68		 jne	 SHORT $LN572@luaV_execu
  017a0	41 83 7e 18 03	 cmp	 DWORD PTR [r14+24], 3
  017a5	75 0e		 jne	 SHORT $LN486@luaV_execu
  017a7	f2 41 0f 10 46
	10		 movsdx	 xmm0, QWORD PTR [r14+16]
  017ad	f2 0f 11 44 24
	78		 movsdx	 QWORD PTR n$10[rsp], xmm0
  017b3	eb 18		 jmp	 SHORT $LN482@luaV_execu
$LN486@luaV_execu:
  017b5	48 8d 54 24 78	 lea	 rdx, QWORD PTR n$10[rsp]
  017ba	49 8d 4e 10	 lea	 rcx, QWORD PTR [r14+16]
  017be	e8 00 00 00 00	 call	 luaV_tonumber_
  017c3	85 c0		 test	 eax, eax
  017c5	74 6b		 je	 SHORT $LN31@luaV_execu
  017c7	f2 0f 10 44 24
	78		 movsdx	 xmm0, QWORD PTR n$10[rsp]
$LN482@luaV_execu:
  017cd	66 41 0f 2f c0	 comisd	 xmm0, xmm8
  017d2	76 1a		 jbe	 SHORT $LN481@luaV_execu
  017d4	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  017de	48 89 85 08 01
	00 00		 mov	 QWORD PTR ilimit$31[rbp-256], rax
  017e5	4d 85 ff	 test	 r15, r15
  017e8	79 25		 jns	 SHORT $LN369@luaV_execu
; Line 1204
  017ea	33 c9		 xor	 ecx, ecx
  017ec	eb 24		 jmp	 SHORT $LN370@luaV_execu
; Line 1202
$LN481@luaV_execu:
  017ee	48 b8 00 00 00
	00 00 00 00 80	 mov	 rax, -9223372036854775808 ; 8000000000000000H
  017f8	48 89 85 08 01
	00 00		 mov	 QWORD PTR ilimit$31[rbp-256], rax
  017ff	4d 85 ff	 test	 r15, r15
  01802	78 0b		 js	 SHORT $LN369@luaV_execu
; Line 1204
  01804	33 c9		 xor	 ecx, ecx
  01806	eb 0a		 jmp	 SHORT $LN370@luaV_execu
$LN572@luaV_execu:
  01808	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR ilimit$31[rbp-256]
$LN369@luaV_execu:
  0180f	49 8b 0e	 mov	 rcx, QWORD PTR [r14]
$LN370@luaV_execu:
; Line 1205
  01812	49 89 46 10	 mov	 QWORD PTR [r14+16], rax
  01816	41 c7 46 18 13
	00 00 00	 mov	 DWORD PTR [r14+24], 19
; Line 1206
  0181e	49 2b 4e 20	 sub	 rcx, QWORD PTR [r14+32]
  01822	49 89 0e	 mov	 QWORD PTR [r14], rcx
  01825	41 c7 46 08 13
	00 00 00	 mov	 DWORD PTR [r14+8], 19
; Line 1208
  0182d	e9 f6 00 00 00	 jmp	 $LN30@luaV_execu
$LN31@luaV_execu:
; Line 1210
  01832	41 8b 46 18	 mov	 eax, DWORD PTR [r14+24]
  01836	83 f8 03	 cmp	 eax, 3
  01839	75 08		 jne	 SHORT $LN371@luaV_execu
  0183b	f2 41 0f 10 46
	10		 movsdx	 xmm0, QWORD PTR [r14+16]
  01841	eb 5e		 jmp	 SHORT $LN497@luaV_execu
$LN371@luaV_execu:
  01843	83 f8 13	 cmp	 eax, 19
  01846	75 0b		 jne	 SHORT $LN491@luaV_execu
  01848	0f 57 c0	 xorps	 xmm0, xmm0
  0184b	f2 49 0f 2a 46
	10		 cvtsi2sd xmm0, QWORD PTR [r14+16]
  01851	eb 4e		 jmp	 SHORT $LN497@luaV_execu
$LN491@luaV_execu:
  01853	24 0f		 and	 al, 15
  01855	3c 04		 cmp	 al, 4
  01857	0f 85 de 04 00
	00		 jne	 $LN511@luaV_execu
  0185d	49 8b 4e 10	 mov	 rcx, QWORD PTR [r14+16]
  01861	38 41 08	 cmp	 BYTE PTR [rcx+8], al
  01864	75 07		 jne	 SHORT $LN494@luaV_execu
  01866	44 0f b6 79 0b	 movzx	 r15d, BYTE PTR [rcx+11]
  0186b	eb 04		 jmp	 SHORT $LN495@luaV_execu
$LN494@luaV_execu:
  0186d	4c 8b 79 10	 mov	 r15, QWORD PTR [rcx+16]
$LN495@luaV_execu:
  01871	48 8d 55 50	 lea	 rdx, QWORD PTR v$30[rbp-256]
  01875	48 83 c1 18	 add	 rcx, 24
  01879	e8 00 00 00 00	 call	 luaO_str2num
  0187e	49 8d 4f 01	 lea	 rcx, QWORD PTR [r15+1]
  01882	48 3b c1	 cmp	 rax, rcx
  01885	0f 85 b0 04 00
	00		 jne	 $LN511@luaV_execu
  0188b	83 7d 58 13	 cmp	 DWORD PTR v$30[rbp-248], 19
  0188f	75 0b		 jne	 SHORT $LN496@luaV_execu
  01891	0f 57 c0	 xorps	 xmm0, xmm0
  01894	f2 48 0f 2a 45
	50		 cvtsi2sd xmm0, QWORD PTR v$30[rbp-256]
  0189a	eb 05		 jmp	 SHORT $LN497@luaV_execu
$LN496@luaV_execu:
  0189c	f2 0f 10 45 50	 movsdx	 xmm0, QWORD PTR v$30[rbp-256]
$LN497@luaV_execu:
; Line 1212
  018a1	f2 41 0f 11 46
	10		 movsdx	 QWORD PTR [r14+16], xmm0
  018a7	41 c7 46 18 03
	00 00 00	 mov	 DWORD PTR [r14+24], 3
; Line 1213
  018af	41 83 7e 28 03	 cmp	 DWORD PTR [r14+40], 3
  018b4	75 0d		 jne	 SHORT $LN373@luaV_execu
  018b6	f2 41 0f 10 76
	20		 movsdx	 xmm6, QWORD PTR [r14+32]
  018bc	f2 0f 11 75 88	 movsdx	 QWORD PTR nstep$12[rbp-256], xmm6
  018c1	eb 1a		 jmp	 SHORT $LN568@luaV_execu
$LN373@luaV_execu:
  018c3	48 8d 55 88	 lea	 rdx, QWORD PTR nstep$12[rbp-256]
  018c7	49 8d 4e 20	 lea	 rcx, QWORD PTR [r14+32]
  018cb	e8 00 00 00 00	 call	 luaV_tonumber_
  018d0	85 c0		 test	 eax, eax
  018d2	0f 84 53 04 00
	00		 je	 $LN512@luaV_execu
  018d8	f2 0f 10 75 88	 movsdx	 xmm6, QWORD PTR nstep$12[rbp-256]
$LN568@luaV_execu:
; Line 1215
  018dd	f2 41 0f 11 76
	20		 movsdx	 QWORD PTR [r14+32], xmm6
  018e3	41 c7 46 28 03
	00 00 00	 mov	 DWORD PTR [r14+40], 3
; Line 1216
  018eb	41 83 7e 08 03	 cmp	 DWORD PTR [r14+8], 3
  018f0	75 0c		 jne	 SHORT $LN375@luaV_execu
  018f2	f2 41 0f 10 06	 movsdx	 xmm0, QWORD PTR [r14]
  018f7	f2 0f 11 45 98	 movsdx	 QWORD PTR ninit$14[rbp-256], xmm0
  018fc	eb 19		 jmp	 SHORT $LN569@luaV_execu
$LN375@luaV_execu:
  018fe	48 8d 55 98	 lea	 rdx, QWORD PTR ninit$14[rbp-256]
  01902	49 8b ce	 mov	 rcx, r14
  01905	e8 00 00 00 00	 call	 luaV_tonumber_
  0190a	85 c0		 test	 eax, eax
  0190c	0f 84 09 04 00
	00		 je	 $LN513@luaV_execu
  01912	f2 0f 10 45 98	 movsdx	 xmm0, QWORD PTR ninit$14[rbp-256]
$LN569@luaV_execu:
; Line 1218
  01917	f2 0f 5c c6	 subsd	 xmm0, xmm6
  0191b	41 c7 46 08 03
	00 00 00	 mov	 DWORD PTR [r14+8], 3
  01923	f2 41 0f 11 06	 movsdx	 QWORD PTR [r14], xmm0
$LN30@luaV_execu:
; Line 1221
  01928	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  0192f	4c 8b bd 00 01
	00 00		 mov	 r15, QWORD PTR cl$1$[rbp-256]
  01936	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  0193d	c1 ef 0e	 shr	 edi, 14
  01940	8d 87 01 00 fe
	ff		 lea	 eax, DWORD PTR [rdi-131071]
  01946	48 98		 cdqe
  01948	48 c1 e0 02	 shl	 rax, 2
  0194c	49 01 44 24 28	 add	 QWORD PTR [r12+40], rax
  01951	45 33 db	 xor	 r11d, r11d
  01954	e9 27 e7 ff ff	 jmp	 $LL169@luaV_execu
$LN26@luaV_execu:
; Line 1225
  01959	41 0f 10 46 20	 movups	 xmm0, XMMWORD PTR [r14+32]
  0195e	49 8d 56 30	 lea	 rdx, QWORD PTR [r14+48]
; Line 1229
  01962	c1 ef 0e	 shr	 edi, 14
  01965	48 8d 42 30	 lea	 rax, QWORD PTR [rdx+48]
  01969	81 e7 ff 01 00
	00		 and	 edi, 511		; 000001ffH
  0196f	49 8b cd	 mov	 rcx, r13
  01972	0f 11 42 20	 movups	 XMMWORD PTR [rdx+32], xmm0
  01976	41 0f 10 46 10	 movups	 xmm0, XMMWORD PTR [r14+16]
  0197b	44 8b c7	 mov	 r8d, edi
  0197e	0f 11 42 10	 movups	 XMMWORD PTR [rdx+16], xmm0
  01982	41 0f 10 06	 movups	 xmm0, XMMWORD PTR [r14]
  01986	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
  01989	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
  0198d	e8 00 00 00 00	 call	 luaD_call
  01992	4d 8b 4c 24 20	 mov	 r9, QWORD PTR [r12+32]
; Line 1230
  01997	49 8b 44 24 08	 mov	 rax, QWORD PTR [r12+8]
  0199c	4c 89 8d f0 00
	00 00		 mov	 QWORD PTR base$1$[rbp-256], r9
  019a3	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
; Line 1231
  019a7	49 8b 44 24 28	 mov	 rax, QWORD PTR [r12+40]
  019ac	8b 38		 mov	 edi, DWORD PTR [rax]
  019ae	48 83 c0 04	 add	 rax, 4
  019b2	49 89 44 24 28	 mov	 QWORD PTR [r12+40], rax
; Line 1232
  019b7	8b c7		 mov	 eax, edi
  019b9	c1 e8 06	 shr	 eax, 6
  019bc	44 0f b6 f0	 movzx	 r14d, al
  019c0	49 c1 e6 04	 shl	 r14, 4
  019c4	4d 03 f1	 add	 r14, r9
$l_tforloop$599:
; Line 1238
  019c7	41 83 7e 18 00	 cmp	 DWORD PTR [r14+24], 0
  019cc	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  019d3	41 bb 00 00 00
	00		 mov	 r11d, 0
  019d9	0f 84 a1 e6 ff
	ff		 je	 $LL169@luaV_execu
; Line 1239
  019df	41 0f 10 46 10	 movups	 xmm0, XMMWORD PTR [r14+16]
; Line 1240
  019e4	c1 ef 0e	 shr	 edi, 14
  019e7	8d 87 01 00 fe
	ff		 lea	 eax, DWORD PTR [rdi-131071]
  019ed	48 98		 cdqe
  019ef	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0
  019f3	48 c1 e0 02	 shl	 rax, 2
  019f7	49 01 44 24 28	 add	 QWORD PTR [r12+40], rax
; Line 1242
  019fc	e9 7f e6 ff ff	 jmp	 $LL169@luaV_execu
$LN23@luaV_execu:
; Line 1245
  01a01	8b df		 mov	 ebx, edi
; Line 1246
  01a03	c1 ef 0e	 shr	 edi, 14
  01a06	c1 eb 17	 shr	 ebx, 23
  01a09	81 e7 ff 01 00
	00		 and	 edi, 511		; 000001ffH
; Line 1249
  01a0f	85 db		 test	 ebx, ebx
  01a11	75 0d		 jne	 SHORT $LN22@luaV_execu
  01a13	49 8b 5d 10	 mov	 rbx, QWORD PTR [r13+16]
  01a17	49 2b de	 sub	 rbx, r14
  01a1a	48 c1 fb 04	 sar	 rbx, 4
  01a1e	ff cb		 dec	 ebx
$LN22@luaV_execu:
; Line 1250
  01a20	85 ff		 test	 edi, edi
  01a22	75 13		 jne	 SHORT $LN21@luaV_execu
; Line 1252
  01a24	49 8b 44 24 28	 mov	 rax, QWORD PTR [r12+40]
  01a29	8b 38		 mov	 edi, DWORD PTR [rax]
  01a2b	c1 ef 06	 shr	 edi, 6
  01a2e	48 83 c0 04	 add	 rax, 4
  01a32	49 89 44 24 28	 mov	 QWORD PTR [r12+40], rax
$LN21@luaV_execu:
; Line 1254
  01a37	49 8b 36	 mov	 rsi, QWORD PTR [r14]
; Line 1255
  01a3a	8d 47 ff	 lea	 eax, DWORD PTR [rdi-1]
  01a3d	44 6b f8 32	 imul	 r15d, eax, 50		; 00000032H
  01a41	44 03 fb	 add	 r15d, ebx
; Line 1256
  01a44	44 3b 7e 0c	 cmp	 r15d, DWORD PTR [rsi+12]
  01a48	76 0e		 jbe	 SHORT $LN20@luaV_execu
; Line 1257
  01a4a	45 8b c7	 mov	 r8d, r15d
  01a4d	48 8b d6	 mov	 rdx, rsi
  01a50	49 8b cd	 mov	 rcx, r13
  01a53	e8 00 00 00 00	 call	 luaH_resizearray
$LN20@luaV_execu:
; Line 1258
  01a58	48 63 fb	 movsxd	 rdi, ebx
  01a5b	85 db		 test	 ebx, ebx
  01a5d	7e 51		 jle	 SHORT $LN17@luaV_execu
  01a5f	48 8b df	 mov	 rbx, rdi
  01a62	48 c1 e3 04	 shl	 rbx, 4
  01a66	49 03 de	 add	 rbx, r14
  01a69	0f 1f 80 00 00
	00 00		 npad	 7
$LL19@luaV_execu:
; Line 1260
  01a70	45 8b c7	 mov	 r8d, r15d
  01a73	4c 8b cb	 mov	 r9, rbx
  01a76	48 8b d6	 mov	 rdx, rsi
  01a79	49 8b cd	 mov	 rcx, r13
  01a7c	e8 00 00 00 00	 call	 luaH_setint
  01a81	41 ff cf	 dec	 r15d
; Line 1261
  01a84	f6 43 08 40	 test	 BYTE PTR [rbx+8], 64	; 00000040H
  01a88	74 1a		 je	 SHORT $LN18@luaV_execu
  01a8a	f6 46 09 04	 test	 BYTE PTR [rsi+9], 4
  01a8e	74 14		 je	 SHORT $LN18@luaV_execu
  01a90	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  01a93	f6 40 09 03	 test	 BYTE PTR [rax+9], 3
  01a97	74 0b		 je	 SHORT $LN18@luaV_execu
  01a99	48 8b d6	 mov	 rdx, rsi
  01a9c	49 8b cd	 mov	 rcx, r13
  01a9f	e8 00 00 00 00	 call	 luaC_barrierback_
$LN18@luaV_execu:
; Line 1258
  01aa4	48 ff cf	 dec	 rdi
  01aa7	48 83 eb 10	 sub	 rbx, 16
  01aab	48 85 ff	 test	 rdi, rdi
  01aae	7f c0		 jg	 SHORT $LL19@luaV_execu
$LN17@luaV_execu:
; Line 1263
  01ab0	49 8b 44 24 08	 mov	 rax, QWORD PTR [r12+8]
; Line 1264
  01ab5	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  01abc	4c 8b bd 00 01
	00 00		 mov	 r15, QWORD PTR cl$1$[rbp-256]
  01ac3	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  01aca	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
  01ace	45 33 db	 xor	 r11d, r11d
  01ad1	e9 aa e5 ff ff	 jmp	 $LL169@luaV_execu
$LN16@luaV_execu:
; Line 1267
  01ad6	49 8b 47 18	 mov	 rax, QWORD PTR [r15+24]
  01ada	c1 ef 0e	 shr	 edi, 14
; Line 1268
  01add	49 8d 57 20	 lea	 rdx, QWORD PTR [r15+32]
  01ae1	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  01ae5	4d 8b c1	 mov	 r8, r9
  01ae8	48 8b 1c f9	 mov	 rbx, QWORD PTR [rcx+rdi*8]
  01aec	48 8b cb	 mov	 rcx, rbx
  01aef	e8 00 00 00 00	 call	 getcached
; Line 1269
  01af4	48 85 c0	 test	 rax, rax
  01af7	75 1c		 jne	 SHORT $LN15@luaV_execu
; Line 1270
  01af9	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  01b00	4c 8b c2	 mov	 r8, rdx
  01b03	49 8b cd	 mov	 rcx, r13
  01b06	48 8b d3	 mov	 rdx, rbx
  01b09	4c 89 74 24 20	 mov	 QWORD PTR [rsp+32], r14
  01b0e	e8 00 00 00 00	 call	 pushclosure
; Line 1271
  01b13	eb 0b		 jmp	 SHORT $LN14@luaV_execu
$LN15@luaV_execu:
; Line 1272
  01b15	49 89 06	 mov	 QWORD PTR [r14], rax
  01b18	41 c7 46 08 46
	00 00 00	 mov	 DWORD PTR [r14+8], 70	; 00000046H
$LN14@luaV_execu:
; Line 1273
  01b20	49 8b 45 18	 mov	 rax, QWORD PTR [r13+24]
  01b24	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  01b2b	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  01b32	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  01b37	41 bb 00 00 00
	00		 mov	 r11d, 0
  01b3d	0f 8e 3d e5 ff
	ff		 jle	 $LL169@luaV_execu
  01b43	49 8d 46 10	 lea	 rax, QWORD PTR [r14+16]
  01b47	49 8b cd	 mov	 rcx, r13
  01b4a	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
  01b4e	e8 00 00 00 00	 call	 luaC_step
  01b53	49 8b 44 24 08	 mov	 rax, QWORD PTR [r12+8]
  01b58	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
; Line 1274
  01b5c	e9 c6 e6 ff ff	 jmp	 $LN574@luaV_execu
$LN12@luaV_execu:
; Line 1279
  01b61	49 8b 47 18	 mov	 rax, QWORD PTR [r15+24]
  01b65	c1 ef 17	 shr	 edi, 23
  01b68	49 8b d9	 mov	 rbx, r9
  01b6b	49 2b 1c 24	 sub	 rbx, QWORD PTR [r12]
  01b6f	0f b6 48 0a	 movzx	 ecx, BYTE PTR [rax+10]
  01b73	48 c1 fb 04	 sar	 rbx, 4
  01b77	2b d9		 sub	 ebx, ecx
  01b79	ff cb		 dec	 ebx
; Line 1280
  01b7b	41 0f 48 db	 cmovs	 ebx, r11d
  01b7f	ff cf		 dec	 edi
; Line 1282
  01b81	79 45		 jns	 SHORT $LN10@luaV_execu
; Line 1284
  01b83	49 8b 45 30	 mov	 rax, QWORD PTR [r13+48]
  01b87	4c 63 fb	 movsxd	 r15, ebx
  01b8a	8b fb		 mov	 edi, ebx
  01b8c	49 2b 45 10	 sub	 rax, QWORD PTR [r13+16]
  01b90	48 c1 f8 04	 sar	 rax, 4
  01b94	49 3b c7	 cmp	 rax, r15
  01b97	7f 0d		 jg	 SHORT $LN9@luaV_execu
  01b99	8b d3		 mov	 edx, ebx
  01b9b	49 8b cd	 mov	 rcx, r13
  01b9e	e8 00 00 00 00	 call	 luaD_growstack
  01ba3	45 33 db	 xor	 r11d, r11d
$LN9@luaV_execu:
  01ba6	4d 8b 4c 24 20	 mov	 r9, QWORD PTR [r12+32]
; Line 1286
  01bab	49 c1 e7 04	 shl	 r15, 4
  01baf	4d 8d 34 f1	 lea	 r14, QWORD PTR [r9+rsi*8]
  01bb3	4c 89 8d f0 00
	00 00		 mov	 QWORD PTR base$1$[rbp-256], r9
  01bba	4d 03 fe	 add	 r15, r14
  01bbd	4d 89 7d 10	 mov	 QWORD PTR [r13+16], r15
  01bc1	4c 8b bd 00 01
	00 00		 mov	 r15, QWORD PTR cl$1$[rbp-256]
$LN10@luaV_execu:
; Line 1288
  01bc8	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  01bcf	49 8b cb	 mov	 rcx, r11
  01bd2	4c 63 c7	 movsxd	 r8, edi
  01bd5	85 ff		 test	 edi, edi
  01bd7	0f 8e a3 e4 ff
	ff		 jle	 $LL169@luaV_execu
  01bdd	4c 63 d3	 movsxd	 r10, ebx
  01be0	49 8b d6	 mov	 rdx, r14
  01be3	49 8b c2	 mov	 rax, r10
  01be6	48 c1 e0 04	 shl	 rax, 4
  01bea	4c 2b c8	 sub	 r9, rax
  01bed	4d 2b ce	 sub	 r9, r14
$LL7@luaV_execu:
  01bf0	49 3b ca	 cmp	 rcx, r10
  01bf3	7d 28		 jge	 SHORT $LN5@luaV_execu
; Line 1289
  01bf5	41 0f 10 04 11	 movups	 xmm0, XMMWORD PTR [r9+rdx]
  01bfa	48 ff c1	 inc	 rcx
  01bfd	48 83 c2 10	 add	 rdx, 16
  01c01	0f 11 42 f0	 movups	 XMMWORD PTR [rdx-16], xmm0
  01c05	49 3b c8	 cmp	 rcx, r8
  01c08	7c e6		 jl	 SHORT $LL7@luaV_execu
; Line 1290
  01c0a	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  01c11	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  01c18	e9 63 e4 ff ff	 jmp	 $LL169@luaV_execu
$LN5@luaV_execu:
  01c1d	4c 8b 8d f0 00
	00 00		 mov	 r9, QWORD PTR base$1$[rbp-256]
  01c24	4c 8b 95 f8 00
	00 00		 mov	 r10, QWORD PTR k$1$[rbp-256]
  01c2b	49 3b c8	 cmp	 rcx, r8
  01c2e	0f 8d 4c e4 ff
	ff		 jge	 $LL169@luaV_execu
  01c34	48 8b c1	 mov	 rax, rcx
  01c37	49 8d 56 08	 lea	 rdx, QWORD PTR [r14+8]
  01c3b	48 c1 e0 04	 shl	 rax, 4
  01c3f	48 03 d0	 add	 rdx, rax
  01c42	4c 2b c1	 sub	 r8, rcx
  01c45	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL4@luaV_execu:
; Line 1291
  01c50	44 89 1a	 mov	 DWORD PTR [rdx], r11d
  01c53	48 8d 52 10	 lea	 rdx, QWORD PTR [rdx+16]
  01c57	49 ff c8	 dec	 r8
  01c5a	75 f4		 jne	 SHORT $LL4@luaV_execu
; Line 1299
  01c5c	e9 1f e4 ff ff	 jmp	 $LL169@luaV_execu
$LN53@luaV_execu:
; Line 1121
  01c61	4d 8b 65 20	 mov	 r12, QWORD PTR [r13+32]
; Line 1122
  01c65	e9 e2 e3 ff ff	 jmp	 $LN593@luaV_execu
$LN42@luaV_execu:
; Line 1159
  01c6a	49 8b 47 18	 mov	 rax, QWORD PTR [r15+24]
  01c6e	c1 ef 17	 shr	 edi, 23
  01c71	83 78 20 00	 cmp	 DWORD PTR [rax+32], 0
  01c75	7e 0b		 jle	 SHORT $LN41@luaV_execu
  01c77	49 8b d1	 mov	 rdx, r9
  01c7a	49 8b cd	 mov	 rcx, r13
  01c7d	e8 00 00 00 00	 call	 luaF_close
$LN41@luaV_execu:
; Line 1160
  01c82	85 ff		 test	 edi, edi
  01c84	74 05		 je	 SHORT $LN363@luaV_execu
  01c86	8d 47 ff	 lea	 eax, DWORD PTR [rdi-1]
  01c89	eb 0b		 jmp	 SHORT $LN364@luaV_execu
$LN363@luaV_execu:
  01c8b	49 8b 45 10	 mov	 rax, QWORD PTR [r13+16]
  01c8f	49 2b c6	 sub	 rax, r14
  01c92	48 c1 f8 04	 sar	 rax, 4
$LN364@luaV_execu:
  01c96	44 8b c8	 mov	 r9d, eax
  01c99	4d 8b c6	 mov	 r8, r14
  01c9c	49 8b d4	 mov	 rdx, r12
  01c9f	49 8b cd	 mov	 rcx, r13
  01ca2	e8 00 00 00 00	 call	 luaD_poscall
; Line 1161
  01ca7	41 f6 44 24 42
	08		 test	 BYTE PTR [r12+66], 8
  01cad	75 20		 jne	 SHORT $LN168@luaV_execu
; Line 1164
  01caf	4d 8b 65 20	 mov	 r12, QWORD PTR [r13+32]
; Line 1165
  01cb3	41 bb 00 00 00
	00		 mov	 r11d, 0
  01cb9	85 c0		 test	 eax, eax
  01cbb	0f 84 8f e3 ff
	ff		 je	 $newframe$598
  01cc1	49 8b 44 24 08	 mov	 rax, QWORD PTR [r12+8]
  01cc6	49 89 45 10	 mov	 QWORD PTR [r13+16], rax
  01cca	e9 81 e3 ff ff	 jmp	 $newframe$598
$LN168@luaV_execu:
; Line 1300
  01ccf	4c 8d 9c 24 a8
	01 00 00	 lea	 r11, QWORD PTR [rsp+424]
  01cd7	41 0f 28 73 e8	 movaps	 xmm6, XMMWORD PTR [r11-24]
  01cdc	41 0f 28 7b d8	 movaps	 xmm7, XMMWORD PTR [r11-40]
  01ce1	45 0f 28 43 c8	 movaps	 xmm8, XMMWORD PTR [r11-56]
  01ce6	45 0f 28 4b b8	 movaps	 xmm9, XMMWORD PTR [r11-72]
  01ceb	49 8b e3	 mov	 rsp, r11
  01cee	41 5f		 pop	 r15
  01cf0	41 5e		 pop	 r14
  01cf2	41 5d		 pop	 r13
  01cf4	41 5c		 pop	 r12
  01cf6	5f		 pop	 rdi
  01cf7	5e		 pop	 rsi
  01cf8	5b		 pop	 rbx
  01cf9	5d		 pop	 rbp
  01cfa	c3		 ret	 0
$LN596@luaV_execu:
; Line 978
  01cfb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BK@HHICHKCC@attempt?5to?5perform?5?8n?$CF?$CF0?8?$AA@
  01d02	49 8b cd	 mov	 rcx, r13
  01d05	e8 00 00 00 00	 call	 luaG_runerror
  01d0a	cc		 int	 3
$LN510@luaV_execu:
; Line 994
  01d0b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BK@KPCDLNKD@attempt?5to?5divide?5by?5zero?$AA@
  01d12	49 8b cd	 mov	 rcx, r13
  01d15	e8 00 00 00 00	 call	 luaG_runerror
  01d1a	cc		 int	 3
$LN513@luaV_execu:
; Line 1217
  01d1b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CF@JJFDEONC@?8for?8?5initial?5value?5must?5be?5a?5nu@
  01d22	49 8b cd	 mov	 rcx, r13
  01d25	e8 00 00 00 00	 call	 luaG_runerror
  01d2a	cc		 int	 3
$LN512@luaV_execu:
; Line 1214
  01d2b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BM@EGCFKNIJ@?8for?8?5step?5must?5be?5a?5number?$AA@
  01d32	49 8b cd	 mov	 rcx, r13
  01d35	e8 00 00 00 00	 call	 luaG_runerror
  01d3a	cc		 int	 3
$LN511@luaV_execu:
; Line 1211
  01d3b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BN@GHPMJMPH@?8for?8?5limit?5must?5be?5a?5number?$AA@
  01d42	49 8b cd	 mov	 rcx, r13
  01d45	e8 00 00 00 00	 call	 luaG_runerror
  01d4a	cc		 int	 3
$LN573@luaV_execu:
  01d4b	90		 npad	 1
$LN571@luaV_execu:
; Line 1300
  01d4c	00 00 00 00	 DD	 $LN164@luaV_execu
  01d50	00 00 00 00	 DD	 $LN163@luaV_execu
  01d54	00 00 00 00	 DD	 $LN162@luaV_execu
  01d58	00 00 00 00	 DD	 $LN161@luaV_execu
  01d5c	00 00 00 00	 DD	 $LN159@luaV_execu
  01d60	00 00 00 00	 DD	 $LN155@luaV_execu
  01d64	00 00 00 00	 DD	 $LN154@luaV_execu
  01d68	00 00 00 00	 DD	 $LN151@luaV_execu
  01d6c	00 00 00 00	 DD	 $LN148@luaV_execu
  01d70	00 00 00 00	 DD	 $LN146@luaV_execu
  01d74	00 00 00 00	 DD	 $LN145@luaV_execu
  01d78	00 00 00 00	 DD	 $LN143@luaV_execu
  01d7c	00 00 00 00	 DD	 $LN139@luaV_execu
  01d80	00 00 00 00	 DD	 $LN136@luaV_execu
  01d84	00 00 00 00	 DD	 $LN131@luaV_execu
  01d88	00 00 00 00	 DD	 $LN126@luaV_execu
  01d8c	00 00 00 00	 DD	 $LN103@luaV_execu
  01d90	00 00 00 00	 DD	 $LN92@luaV_execu
  01d94	00 00 00 00	 DD	 $LN121@luaV_execu
  01d98	00 00 00 00	 DD	 $LN97@luaV_execu
  01d9c	00 00 00 00	 DD	 $LN118@luaV_execu
  01da0	00 00 00 00	 DD	 $LN115@luaV_execu
  01da4	00 00 00 00	 DD	 $LN112@luaV_execu
  01da8	00 00 00 00	 DD	 $LN109@luaV_execu
  01dac	00 00 00 00	 DD	 $LN106@luaV_execu
  01db0	00 00 00 00	 DD	 $LN89@luaV_execu
  01db4	00 00 00 00	 DD	 $LN84@luaV_execu
  01db8	00 00 00 00	 DD	 $LN81@luaV_execu
  01dbc	00 00 00 00	 DD	 $LN80@luaV_execu
  01dc0	00 00 00 00	 DD	 $LN79@luaV_execu
  01dc4	00 00 00 00	 DD	 $LN77@luaV_execu
  01dc8	00 00 00 00	 DD	 $LN75@luaV_execu
  01dcc	00 00 00 00	 DD	 $LN71@luaV_execu
  01dd0	00 00 00 00	 DD	 $LN67@luaV_execu
  01dd4	00 00 00 00	 DD	 $LN63@luaV_execu
  01dd8	00 00 00 00	 DD	 $LN59@luaV_execu
  01ddc	00 00 00 00	 DD	 $LN55@luaV_execu
  01de0	00 00 00 00	 DD	 $LN50@luaV_execu
  01de4	00 00 00 00	 DD	 $LN42@luaV_execu
  01de8	00 00 00 00	 DD	 $LN39@luaV_execu
  01dec	00 00 00 00	 DD	 $LN32@luaV_execu
  01df0	00 00 00 00	 DD	 $LN26@luaV_execu
  01df4	00 00 00 00	 DD	 $l_tforloop$599
  01df8	00 00 00 00	 DD	 $LN23@luaV_execu
  01dfc	00 00 00 00	 DD	 $LN16@luaV_execu
  01e00	00 00 00 00	 DD	 $LN12@luaV_execu
luaV_execute ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaV_finishOp
_TEXT	SEGMENT
L$ = 48
luaV_finishOp PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 642
$LN23:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 643
  0000f	48 8b 71 20	 mov	 rsi, QWORD PTR [rcx+32]
  00013	48 8b f9	 mov	 rdi, rcx
; Line 645
  00016	48 8b 46 28	 mov	 rax, QWORD PTR [rsi+40]
  0001a	4c 8b 4e 20	 mov	 r9, QWORD PTR [rsi+32]
  0001e	8b 58 fc	 mov	 ebx, DWORD PTR [rax-4]
; Line 646
  00021	8b c3		 mov	 eax, ebx
  00023	83 e0 3f	 and	 eax, 63			; 0000003fH
; Line 647
  00026	83 c0 fa	 add	 eax, -6
  00029	83 f8 23	 cmp	 eax, 35			; 00000023H
  0002c	0f 87 13 01 00
	00		 ja	 $LN3@luaV_finis
  00032	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:__ImageBase
  00039	48 98		 cdqe
  0003b	0f b6 84 02 00
	00 00 00	 movzx	 eax, BYTE PTR $LN19@luaV_finis[rdx+rax]
  00043	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR $LN20@luaV_finis[rdx+rax*4]
  0004a	48 03 ca	 add	 rcx, rdx
  0004d	ff e1		 jmp	 rcx
$LN11@luaV_finis:
; Line 653
  0004f	48 83 47 10 f0	 add	 QWORD PTR [rdi+16], -16
  00054	48 8b 57 10	 mov	 rdx, QWORD PTR [rdi+16]
  00058	c1 eb 06	 shr	 ebx, 6
  0005b	0f b6 cb	 movzx	 ecx, bl
  0005e	48 03 c9	 add	 rcx, rcx
  00061	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  00064	41 0f 11 04 c9	 movups	 XMMWORD PTR [r9+rcx*8], xmm0
; Line 697
  00069	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006e	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00073	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00077	5f		 pop	 rdi
  00078	c3		 ret	 0
$LN10@luaV_finis:
; Line 657
  00079	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
  0007d	33 d2		 xor	 edx, edx
  0007f	8b 48 f8	 mov	 ecx, DWORD PTR [rax-8]
  00082	85 c9		 test	 ecx, ecx
  00084	74 11		 je	 SHORT $LN17@luaV_finis
  00086	83 f9 01	 cmp	 ecx, 1
  00089	75 05		 jne	 SHORT $LN16@luaV_finis
  0008b	39 50 f0	 cmp	 DWORD PTR [rax-16], edx
  0008e	74 07		 je	 SHORT $LN17@luaV_finis
$LN16@luaV_finis:
  00090	b9 01 00 00 00	 mov	 ecx, 1
  00095	eb 02		 jmp	 SHORT $LN18@luaV_finis
$LN17@luaV_finis:
  00097	8b ca		 mov	 ecx, edx
$LN18@luaV_finis:
; Line 658
  00099	48 83 c0 f0	 add	 rax, -16
  0009d	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax
; Line 659
  000a1	0f b6 46 42	 movzx	 eax, BYTE PTR [rsi+66]
  000a5	84 c0		 test	 al, al
  000a7	79 0c		 jns	 SHORT $LN9@luaV_finis
; Line 661
  000a9	34 80		 xor	 al, 128			; 00000080H
; Line 662
  000ab	85 c9		 test	 ecx, ecx
  000ad	0f 94 c2	 sete	 dl
  000b0	88 46 42	 mov	 BYTE PTR [rsi+66], al
  000b3	8b ca		 mov	 ecx, edx
$LN9@luaV_finis:
; Line 665
  000b5	c1 eb 06	 shr	 ebx, 6
  000b8	0f b6 c3	 movzx	 eax, bl
  000bb	3b c8		 cmp	 ecx, eax
  000bd	0f 84 82 00 00
	00		 je	 $LN3@luaV_finis
; Line 666
  000c3	48 83 46 28 04	 add	 QWORD PTR [rsi+40], 4
; Line 697
  000c8	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000cd	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000d2	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000d6	5f		 pop	 rdi
  000d7	c3		 ret	 0
$LN7@luaV_finis:
; Line 670
  000d8	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
; Line 671
  000dc	8b cb		 mov	 ecx, ebx
  000de	c1 e9 17	 shr	 ecx, 23
; Line 672
  000e1	49 8d 50 f0	 lea	 rdx, QWORD PTR [r8-16]
  000e5	48 ff c1	 inc	 rcx
; Line 673
  000e8	41 0f 10 40 f0	 movups	 xmm0, XMMWORD PTR [r8-16]
  000ed	48 c1 e1 04	 shl	 rcx, 4
  000f1	48 2b d1	 sub	 rdx, rcx
  000f4	49 2b d1	 sub	 rdx, r9
  000f7	41 0f 11 40 d0	 movups	 XMMWORD PTR [r8-48], xmm0
  000fc	48 c1 fa 04	 sar	 rdx, 4
; Line 674
  00100	83 fa 01	 cmp	 edx, 1
  00103	7e 10		 jle	 SHORT $LN6@luaV_finis
; Line 675
  00105	49 8d 40 e0	 lea	 rax, QWORD PTR [r8-32]
; Line 676
  00109	48 8b cf	 mov	 rcx, rdi
  0010c	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax
  00110	e8 00 00 00 00	 call	 luaV_concat
$LN6@luaV_finis:
; Line 679
  00115	48 8b 57 10	 mov	 rdx, QWORD PTR [rdi+16]
  00119	48 8b 46 20	 mov	 rax, QWORD PTR [rsi+32]
  0011d	c1 eb 06	 shr	 ebx, 6
  00120	0f b6 cb	 movzx	 ecx, bl
  00123	48 03 c9	 add	 rcx, rcx
  00126	0f 10 42 f0	 movups	 xmm0, XMMWORD PTR [rdx-16]
  0012a	0f 11 04 c8	 movups	 XMMWORD PTR [rax+rcx*8], xmm0
; Line 681
  0012e	eb 0d		 jmp	 SHORT $LN21@luaV_finis
$LN4@luaV_finis:
; Line 689
  00130	c1 eb 0e	 shr	 ebx, 14
  00133	81 e3 ff 01 00
	00		 and	 ebx, 511		; 000001ffH
  00139	ff cb		 dec	 ebx
  0013b	78 08		 js	 SHORT $LN3@luaV_finis
$LN21@luaV_finis:
; Line 690
  0013d	48 8b 46 08	 mov	 rax, QWORD PTR [rsi+8]
  00141	48 89 47 10	 mov	 QWORD PTR [rdi+16], rax
$LN3@luaV_finis:
; Line 697
  00145	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0014a	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0014f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00153	5f		 pop	 rdi
  00154	c3		 ret	 0
  00155	0f 1f 00	 npad	 3
$LN20@luaV_finis:
  00158	00 00 00 00	 DD	 $LN11@luaV_finis
  0015c	00 00 00 00	 DD	 $LN7@luaV_finis
  00160	00 00 00 00	 DD	 $LN10@luaV_finis
  00164	00 00 00 00	 DD	 $LN4@luaV_finis
  00168	00 00 00 00	 DD	 $LN21@luaV_finis
  0016c	00 00 00 00	 DD	 $LN3@luaV_finis
$LN19@luaV_finis:
  00170	00		 DB	 0
  00171	00		 DB	 0
  00172	05		 DB	 5
  00173	05		 DB	 5
  00174	05		 DB	 5
  00175	05		 DB	 5
  00176	00		 DB	 0
  00177	00		 DB	 0
  00178	00		 DB	 0
  00179	00		 DB	 0
  0017a	00		 DB	 0
  0017b	00		 DB	 0
  0017c	00		 DB	 0
  0017d	00		 DB	 0
  0017e	00		 DB	 0
  0017f	00		 DB	 0
  00180	00		 DB	 0
  00181	00		 DB	 0
  00182	00		 DB	 0
  00183	00		 DB	 0
  00184	00		 DB	 0
  00185	05		 DB	 5
  00186	00		 DB	 0
  00187	01		 DB	 1
  00188	05		 DB	 5
  00189	02		 DB	 2
  0018a	02		 DB	 2
  0018b	02		 DB	 2
  0018c	05		 DB	 5
  0018d	05		 DB	 5
  0018e	03		 DB	 3
  0018f	05		 DB	 5
  00190	05		 DB	 5
  00191	05		 DB	 5
  00192	05		 DB	 5
  00193	04		 DB	 4
luaV_finishOp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaV_finishset
_TEXT	SEGMENT
L$ = 80
t$ = 88
key$ = 96
val$ = 104
oldval$ = 112
luaV_finishset PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 188
$LN40:
  00000	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  0000f	41 54		 push	 r12
  00011	41 56		 push	 r14
  00013	41 57		 push	 r15
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 190
  00019	48 8b 7c 24 70	 mov	 rdi, QWORD PTR oldval$[rsp]
  0001e	4d 8b f9	 mov	 r15, r9
  00021	4d 8b e0	 mov	 r12, r8
  00024	48 8b f2	 mov	 rsi, rdx
  00027	4c 8b f1	 mov	 r14, rcx
  0002a	33 ed		 xor	 ebp, ebp
  0002c	48 89 5c 24 50	 mov	 QWORD PTR [rsp+80], rbx
$LL10@luaV_finis:
; Line 192
  00031	48 85 ff	 test	 rdi, rdi
  00034	0f 84 9e 00 00
	00		 je	 $LN7@luaV_finis
; Line 200
  0003a	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  0003d	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00041	48 85 c9	 test	 rcx, rcx
  00044	74 27		 je	 SHORT $LN26@luaV_finis
  00046	f6 41 0a 02	 test	 BYTE PTR [rcx+10], 2
  0004a	75 21		 jne	 SHORT $LN26@luaV_finis
  0004c	4d 8b 46 18	 mov	 r8, QWORD PTR [r14+24]
  00050	ba 01 00 00 00	 mov	 edx, 1
  00055	4d 8b 80 e8 00
	00 00		 mov	 r8, QWORD PTR [r8+232]
  0005c	e8 00 00 00 00	 call	 luaT_gettm
  00061	48 8b d8	 mov	 rbx, rax
  00064	48 85 c0	 test	 rax, rax
  00067	0f 85 89 00 00
	00		 jne	 $LN3@luaV_finis
$LN26@luaV_finis:
  0006d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:luaO_nilobject_
  00074	48 3b f8	 cmp	 rdi, rax
  00077	75 11		 jne	 SHORT $LN5@luaV_finis
  00079	48 8b 16	 mov	 rdx, QWORD PTR [rsi]
  0007c	4d 8b c4	 mov	 r8, r12
  0007f	49 8b ce	 mov	 rcx, r14
  00082	e8 00 00 00 00	 call	 luaH_newkey
  00087	48 8b f8	 mov	 rdi, rax
$LN5@luaV_finis:
; Line 202
  0008a	41 0f 10 07	 movups	 xmm0, XMMWORD PTR [r15]
  0008e	0f 11 07	 movups	 XMMWORD PTR [rdi], xmm0
; Line 203
  00091	48 8b 06	 mov	 rax, QWORD PTR [rsi]
  00094	c6 40 0a 00	 mov	 BYTE PTR [rax+10], 0
; Line 204
  00098	41 f6 47 08 40	 test	 BYTE PTR [r15+8], 64	; 00000040H
  0009d	74 1a		 je	 SHORT $LN11@luaV_finis
  0009f	48 8b 16	 mov	 rdx, QWORD PTR [rsi]
  000a2	f6 42 09 04	 test	 BYTE PTR [rdx+9], 4
  000a6	74 11		 je	 SHORT $LN11@luaV_finis
  000a8	49 8b 07	 mov	 rax, QWORD PTR [r15]
  000ab	f6 40 09 03	 test	 BYTE PTR [rax+9], 3
  000af	74 08		 je	 SHORT $LN11@luaV_finis
  000b1	49 8b ce	 mov	 rcx, r14
  000b4	e8 00 00 00 00	 call	 luaC_barrierback_
$LN11@luaV_finis:
; Line 224
  000b9	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  000be	48 8b 6c 24 58	 mov	 rbp, QWORD PTR [rsp+88]
  000c3	48 8b 74 24 60	 mov	 rsi, QWORD PTR [rsp+96]
  000c8	48 8b 7c 24 68	 mov	 rdi, QWORD PTR [rsp+104]
  000cd	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d1	41 5f		 pop	 r15
  000d3	41 5e		 pop	 r14
  000d5	41 5c		 pop	 r12
  000d7	c3		 ret	 0
$LN7@luaV_finis:
; Line 210
  000d8	41 b8 01 00 00
	00		 mov	 r8d, 1
  000de	48 8b d6	 mov	 rdx, rsi
  000e1	49 8b ce	 mov	 rcx, r14
  000e4	e8 00 00 00 00	 call	 luaT_gettmbyobj
  000e9	48 8b d8	 mov	 rbx, rax
  000ec	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  000f0	0f 84 9c 00 00
	00		 je	 $LN27@luaV_finis
$LN3@luaV_finis:
; Line 214
  000f6	8b 4b 08	 mov	 ecx, DWORD PTR [rbx+8]
  000f9	8b c1		 mov	 eax, ecx
  000fb	83 e0 0f	 and	 eax, 15
  000fe	3c 06		 cmp	 al, 6
  00100	74 5d		 je	 SHORT $LN28@luaV_finis
; Line 218
  00102	48 8b f3	 mov	 rsi, rbx
; Line 219
  00105	83 f9 45	 cmp	 ecx, 69			; 00000045H
  00108	74 04		 je	 SHORT $LN23@luaV_finis
  0010a	33 ff		 xor	 edi, edi
  0010c	eb 14		 jmp	 SHORT $LN33@luaV_finis
$LN23@luaV_finis:
  0010e	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00111	49 8b d4	 mov	 rdx, r12
  00114	e8 00 00 00 00	 call	 luaH_get
  00119	48 8b f8	 mov	 rdi, rax
  0011c	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00120	75 10		 jne	 SHORT $LN21@luaV_finis
$LN33@luaV_finis:
; Line 190
  00122	ff c5		 inc	 ebp
  00124	81 fd d0 07 00
	00		 cmp	 ebp, 2000		; 000007d0H
  0012a	0f 8c 01 ff ff
	ff		 jl	 $LL10@luaV_finis
  00130	eb 50		 jmp	 SHORT $LN38@luaV_finis
$LN21@luaV_finis:
; Line 219
  00132	41 f6 47 08 40	 test	 BYTE PTR [r15+8], 64	; 00000040H
  00137	74 1a		 je	 SHORT $LN19@luaV_finis
  00139	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  0013c	f6 42 09 04	 test	 BYTE PTR [rdx+9], 4
  00140	74 11		 je	 SHORT $LN19@luaV_finis
  00142	49 8b 07	 mov	 rax, QWORD PTR [r15]
  00145	f6 40 09 03	 test	 BYTE PTR [rax+9], 3
  00149	74 08		 je	 SHORT $LN19@luaV_finis
  0014b	49 8b ce	 mov	 rcx, r14
  0014e	e8 00 00 00 00	 call	 luaC_barrierback_
$LN19@luaV_finis:
  00153	41 0f 10 07	 movups	 xmm0, XMMWORD PTR [r15]
  00157	0f 11 07	 movups	 XMMWORD PTR [rdi], xmm0
  0015a	e9 5a ff ff ff	 jmp	 $LN11@luaV_finis
$LN28@luaV_finis:
; Line 215
  0015f	4d 8b cc	 mov	 r9, r12
  00162	4c 8b c6	 mov	 r8, rsi
  00165	48 8b d3	 mov	 rdx, rbx
  00168	49 8b ce	 mov	 rcx, r14
  0016b	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR [rsp+40], 0
  00173	4c 89 7c 24 20	 mov	 QWORD PTR [rsp+32], r15
  00178	e8 00 00 00 00	 call	 luaT_callTM
; Line 216
  0017d	e9 37 ff ff ff	 jmp	 $LN11@luaV_finis
$LN38@luaV_finis:
; Line 223
  00182	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CH@OBFLNBKM@settable?5chain?5too?5long?$DL?5possibl@
  00189	49 8b ce	 mov	 rcx, r14
  0018c	e8 00 00 00 00	 call	 luaG_runerror
  00191	cc		 int	 3
$LN27@luaV_finis:
; Line 211
  00192	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_05FKHKFDID@index?$AA@
  00199	48 8b d6	 mov	 rdx, rsi
  0019c	49 8b ce	 mov	 rcx, r14
  0019f	e8 00 00 00 00	 call	 luaG_typeerror
  001a4	cc		 int	 3
$LN37@luaV_finis:
luaV_finishset ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaV_finishget
_TEXT	SEGMENT
L$ = 64
t$ = 72
key$ = 80
val$ = 88
tm$ = 96
luaV_finishget PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 160
$LN35:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00014	41 56		 push	 r14
  00016	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 163
  0001a	48 8b 44 24 60	 mov	 rax, QWORD PTR tm$[rsp]
  0001f	4d 8b f1	 mov	 r14, r9
  00022	49 8b e8	 mov	 rbp, r8
  00025	48 8b da	 mov	 rbx, rdx
  00028	48 8b f1	 mov	 rsi, rcx
  0002b	33 ff		 xor	 edi, edi
  0002d	0f 1f 00	 npad	 3
$LL7@luaV_finis:
; Line 164
  00030	48 85 c0	 test	 rax, rax
  00033	75 18		 jne	 SHORT $LN3@luaV_finis
; Line 165
  00035	45 33 c0	 xor	 r8d, r8d
  00038	48 8b d3	 mov	 rdx, rbx
  0003b	48 8b ce	 mov	 rcx, rsi
  0003e	e8 00 00 00 00	 call	 luaT_gettmbyobj
  00043	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00047	0f 84 b8 00 00
	00		 je	 $LN21@luaV_finis
$LN3@luaV_finis:
; Line 168
  0004d	8b 50 08	 mov	 edx, DWORD PTR [rax+8]
  00050	8b ca		 mov	 ecx, edx
  00052	83 e1 0f	 and	 ecx, 15
  00055	80 f9 06	 cmp	 cl, 6
  00058	74 62		 je	 SHORT $LN22@luaV_finis
; Line 172
  0005a	48 8b d8	 mov	 rbx, rax
; Line 173
  0005d	83 fa 45	 cmp	 edx, 69			; 00000045H
  00060	74 04		 je	 SHORT $LN18@luaV_finis
  00062	33 c0		 xor	 eax, eax
  00064	eb 3a		 jmp	 SHORT $LN27@luaV_finis
$LN18@luaV_finis:
  00066	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00069	48 8b d5	 mov	 rdx, rbp
  0006c	e8 00 00 00 00	 call	 luaH_get
  00071	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00075	75 3c		 jne	 SHORT $LN23@luaV_finis
  00077	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0007a	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  0007e	48 85 c9	 test	 rcx, rcx
  00081	74 29		 je	 SHORT $LN31@luaV_finis
  00083	f6 41 0a 01	 test	 BYTE PTR [rcx+10], 1
  00087	75 23		 jne	 SHORT $LN31@luaV_finis
  00089	4c 8b 46 18	 mov	 r8, QWORD PTR [rsi+24]
  0008d	33 d2		 xor	 edx, edx
  0008f	4d 8b 80 e0 00
	00 00		 mov	 r8, QWORD PTR [r8+224]
  00096	e8 00 00 00 00	 call	 luaT_gettm
  0009b	48 85 c0	 test	 rax, rax
  0009e	74 0c		 je	 SHORT $LN31@luaV_finis
$LN27@luaV_finis:
; Line 163
  000a0	ff c7		 inc	 edi
  000a2	81 ff d0 07 00
	00		 cmp	 edi, 2000		; 000007d0H
  000a8	7c 86		 jl	 SHORT $LL7@luaV_finis
  000aa	eb 49		 jmp	 SHORT $LN33@luaV_finis
$LN31@luaV_finis:
; Line 173
  000ac	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:luaO_nilobject_
$LN23@luaV_finis:
; Line 174
  000b3	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  000b6	41 0f 11 06	 movups	 XMMWORD PTR [r14], xmm0
; Line 175
  000ba	eb 1e		 jmp	 SHORT $LN8@luaV_finis
$LN22@luaV_finis:
; Line 169
  000bc	4c 8b cd	 mov	 r9, rbp
  000bf	4c 8b c3	 mov	 r8, rbx
  000c2	48 8b d0	 mov	 rdx, rax
  000c5	48 8b ce	 mov	 rcx, rsi
  000c8	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR [rsp+40], 1
  000d0	4c 89 74 24 20	 mov	 QWORD PTR [rsp+32], r14
  000d5	e8 00 00 00 00	 call	 luaT_callTM
$LN8@luaV_finis:
; Line 180
  000da	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000df	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  000e4	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  000e9	48 8b 7c 24 58	 mov	 rdi, QWORD PTR [rsp+88]
  000ee	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000f2	41 5e		 pop	 r14
  000f4	c3		 ret	 0
$LN33@luaV_finis:
; Line 179
  000f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CH@DDLIFGFP@gettable?5chain?5too?5long?$DL?5possibl@
  000fc	48 8b ce	 mov	 rcx, rsi
  000ff	e8 00 00 00 00	 call	 luaG_runerror
  00104	cc		 int	 3
$LN21@luaV_finis:
; Line 166
  00105	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_05FKHKFDID@index?$AA@
  0010c	48 8b d3	 mov	 rdx, rbx
  0010f	48 8b ce	 mov	 rcx, rsi
  00112	e8 00 00 00 00	 call	 luaG_typeerror
  00117	cc		 int	 3
$LN32@luaV_finis:
luaV_finishget ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaV_tointeger
_TEXT	SEGMENT
v$ = 32
obj$ = 80
p$ = 88
mode$ = 96
luaV_tointeger PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 94
$LN24:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
; Line 97
  0000f	83 79 08 03	 cmp	 DWORD PTR [rcx+8], 3
  00013	41 8b f8	 mov	 edi, r8d
  00016	48 8b f2	 mov	 rsi, rdx
  00019	74 54		 je	 SHORT $LN17@luaV_toint
  0001b	0f 1f 44 00 00	 npad	 5
$again$25:
; Line 107
  00020	8b 41 08	 mov	 eax, DWORD PTR [rcx+8]
  00023	83 f8 13	 cmp	 eax, 19
  00026	0f 84 aa 00 00
	00		 je	 $LN18@luaV_toint
; Line 112
  0002c	24 0f		 and	 al, 15
  0002e	3c 04		 cmp	 al, 4
  00030	0f 85 bb 00 00
	00		 jne	 $LN12@luaV_toint
  00036	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00039	38 41 08	 cmp	 BYTE PTR [rcx+8], al
  0003c	75 06		 jne	 SHORT $LN14@luaV_toint
  0003e	0f b6 59 0b	 movzx	 ebx, BYTE PTR [rcx+11]
  00042	eb 04		 jmp	 SHORT $LN15@luaV_toint
$LN14@luaV_toint:
  00044	48 8b 59 10	 mov	 rbx, QWORD PTR [rcx+16]
$LN15@luaV_toint:
  00048	48 8d 54 24 20	 lea	 rdx, QWORD PTR v$[rsp]
  0004d	48 83 c1 18	 add	 rcx, 24
  00051	e8 00 00 00 00	 call	 luaO_str2num
  00056	48 8d 4b 01	 lea	 rcx, QWORD PTR [rbx+1]
  0005a	48 3b c1	 cmp	 rax, rcx
  0005d	0f 85 8e 00 00
	00		 jne	 $LN12@luaV_toint
; Line 113
  00063	83 7c 24 28 03	 cmp	 DWORD PTR v$[rsp+8], 3
  00068	48 8d 4c 24 20	 lea	 rcx, QWORD PTR v$[rsp]
  0006d	75 b1		 jne	 SHORT $again$25
$LN17@luaV_toint:
  0006f	0f 29 74 24 30	 movaps	 XMMWORD PTR [rsp+48], xmm6
; Line 98
  00074	f2 0f 10 31	 movsdx	 xmm6, QWORD PTR [rcx]
; Line 99
  00078	0f 28 c6	 movaps	 xmm0, xmm6
  0007b	e8 00 00 00 00	 call	 floor
; Line 100
  00080	66 0f 2e f0	 ucomisd xmm6, xmm0
  00084	0f 28 74 24 30	 movaps	 xmm6, XMMWORD PTR [rsp+48]
  00089	0f 28 c8	 movaps	 xmm1, xmm0
  0008c	7a 02		 jp	 SHORT $LN22@luaV_toint
  0008e	74 11		 je	 SHORT $LN5@luaV_toint
$LN22@luaV_toint:
; Line 101
  00090	85 ff		 test	 edi, edi
  00092	74 5d		 je	 SHORT $LN12@luaV_toint
; Line 102
  00094	83 ff 01	 cmp	 edi, 1
  00097	7e 08		 jle	 SHORT $LN5@luaV_toint
; Line 103
  00099	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@3ff0000000000000
$LN5@luaV_toint:
; Line 105
  000a1	66 0f 2f 0d 00
	00 00 00	 comisd	 xmm1, QWORD PTR __real@c3e0000000000000
  000a9	72 46		 jb	 SHORT $LN12@luaV_toint
  000ab	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@43e0000000000000
  000b3	66 0f 2f c1	 comisd	 xmm0, xmm1
  000b7	76 38		 jbe	 SHORT $LN12@luaV_toint
  000b9	f2 48 0f 2c c1	 cvttsd2si rax, xmm1
  000be	48 89 06	 mov	 QWORD PTR [rsi], rax
  000c1	b8 01 00 00 00	 mov	 eax, 1
; Line 117
  000c6	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  000cb	48 8b 74 24 58	 mov	 rsi, QWORD PTR [rsp+88]
  000d0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
$LN18@luaV_toint:
; Line 108
  000d6	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  000d9	48 89 06	 mov	 QWORD PTR [rsi], rax
; Line 109
  000dc	b8 01 00 00 00	 mov	 eax, 1
; Line 117
  000e1	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  000e6	48 8b 74 24 58	 mov	 rsi, QWORD PTR [rsp+88]
  000eb	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ef	5f		 pop	 rdi
  000f0	c3		 ret	 0
$LN12@luaV_toint:
  000f1	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  000f6	48 8b 74 24 58	 mov	 rsi, QWORD PTR [rsp+88]
  000fb	33 c0		 xor	 eax, eax
  000fd	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00101	5f		 pop	 rdi
  00102	c3		 ret	 0
luaV_tointeger ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaV_tonumber_
_TEXT	SEGMENT
v$ = 32
obj$ = 64
n$ = 72
luaV_tonumber_ PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 72
$LN12:
  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 74
  00006	8b 41 08	 mov	 eax, DWORD PTR [rcx+8]
  00009	48 8b fa	 mov	 rdi, rdx
  0000c	83 f8 13	 cmp	 eax, 19
  0000f	75 17		 jne	 SHORT $LN4@luaV_tonum
; Line 76
  00011	0f 57 c0	 xorps	 xmm0, xmm0
  00014	b8 01 00 00 00	 mov	 eax, 1
  00019	f2 48 0f 2a 01	 cvtsi2sd xmm0, QWORD PTR [rcx]
  0001e	f2 0f 11 02	 movsdx	 QWORD PTR [rdx], xmm0
; Line 85
  00022	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00026	5f		 pop	 rdi
  00027	c3		 ret	 0
$LN4@luaV_tonum:
; Line 79
  00028	24 0f		 and	 al, 15
  0002a	3c 04		 cmp	 al, 4
  0002c	75 68		 jne	 SHORT $LN2@luaV_tonum
  0002e	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00031	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00036	38 41 08	 cmp	 BYTE PTR [rcx+8], al
  00039	75 06		 jne	 SHORT $LN7@luaV_tonum
  0003b	0f b6 59 0b	 movzx	 ebx, BYTE PTR [rcx+11]
  0003f	eb 04		 jmp	 SHORT $LN8@luaV_tonum
$LN7@luaV_tonum:
  00041	48 8b 59 10	 mov	 rbx, QWORD PTR [rcx+16]
$LN8@luaV_tonum:
  00045	48 8d 54 24 20	 lea	 rdx, QWORD PTR v$[rsp]
  0004a	48 83 c1 18	 add	 rcx, 24
  0004e	e8 00 00 00 00	 call	 luaO_str2num
  00053	48 8d 4b 01	 lea	 rcx, QWORD PTR [rbx+1]
  00057	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0005c	48 3b c1	 cmp	 rax, rcx
  0005f	75 35		 jne	 SHORT $LN2@luaV_tonum
; Line 80
  00061	83 7c 24 28 13	 cmp	 DWORD PTR v$[rsp+8], 19
  00066	75 19		 jne	 SHORT $LN9@luaV_tonum
; Line 81
  00068	0f 57 c0	 xorps	 xmm0, xmm0
  0006b	b8 01 00 00 00	 mov	 eax, 1
  00070	f2 48 0f 2a 44
	24 20		 cvtsi2sd xmm0, QWORD PTR v$[rsp]
  00077	f2 0f 11 07	 movsdx	 QWORD PTR [rdi], xmm0
; Line 85
  0007b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007f	5f		 pop	 rdi
  00080	c3		 ret	 0
$LN9@luaV_tonum:
; Line 80
  00081	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR v$[rsp]
; Line 81
  00087	b8 01 00 00 00	 mov	 eax, 1
  0008c	f2 0f 11 07	 movsdx	 QWORD PTR [rdi], xmm0
; Line 85
  00090	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00094	5f		 pop	 rdi
  00095	c3		 ret	 0
$LN2@luaV_tonum:
; Line 84
  00096	33 c0		 xor	 eax, eax
; Line 85
  00098	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0009c	5f		 pop	 rdi
  0009d	c3		 ret	 0
luaV_tonumber_ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaV_lessequal
_TEXT	SEGMENT
L$ = 48
l$ = 56
r$ = 64
luaV_lessequal PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 370
$LN24:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b d8	 mov	 rbx, r8
  00012	48 8b f1	 mov	 rsi, rcx
; Line 372
  00015	8b 4a 08	 mov	 ecx, DWORD PTR [rdx+8]
  00018	44 8b c1	 mov	 r8d, ecx
  0001b	48 8b fa	 mov	 rdi, rdx
  0001e	41 83 e0 0f	 and	 r8d, 15
  00022	41 83 f8 03	 cmp	 r8d, 3
  00026	0f 85 ba 00 00
	00		 jne	 $LN7@luaV_lesse
  0002c	8b 53 08	 mov	 edx, DWORD PTR [rbx+8]
  0002f	8b c2		 mov	 eax, edx
  00031	83 e0 0f	 and	 eax, 15
  00034	41 3a c0	 cmp	 al, r8b
  00037	0f 85 a9 00 00
	00		 jne	 $LN7@luaV_lesse
; Line 373
  0003d	83 f9 13	 cmp	 ecx, 19
  00040	75 3f		 jne	 SHORT $LN17@luaV_lesse
  00042	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00045	3b d1		 cmp	 edx, ecx
  00047	75 1a		 jne	 SHORT $LN16@luaV_lesse
  00049	33 c9		 xor	 ecx, ecx
  0004b	48 3b 03	 cmp	 rax, QWORD PTR [rbx]
  0004e	0f 9e c1	 setle	 cl
; Line 384
  00051	8b c1		 mov	 eax, ecx
; Line 386
  00053	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00058	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0005d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
; Line 373
$LN16@luaV_lesse:
  00063	f2 0f 10 0b	 movsdx	 xmm1, QWORD PTR [rbx]
  00067	48 8b c8	 mov	 rcx, rax
  0006a	e8 00 00 00 00	 call	 LEintfloat
  0006f	8b c8		 mov	 ecx, eax
; Line 386
  00071	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00076	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0007b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007f	5f		 pop	 rdi
  00080	c3		 ret	 0
; Line 373
$LN17@luaV_lesse:
  00081	f2 0f 10 0f	 movsdx	 xmm1, QWORD PTR [rdi]
  00085	83 fa 03	 cmp	 edx, 3
  00088	75 1f		 jne	 SHORT $LN13@luaV_lesse
  0008a	f2 0f 10 03	 movsdx	 xmm0, QWORD PTR [rbx]
  0008e	33 c9		 xor	 ecx, ecx
  00090	66 0f 2f c1	 comisd	 xmm0, xmm1
  00094	0f 93 c1	 setae	 cl
; Line 384
  00097	8b c1		 mov	 eax, ecx
; Line 386
  00099	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0009e	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000a3	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a7	5f		 pop	 rdi
  000a8	c3		 ret	 0
; Line 373
$LN13@luaV_lesse:
  000a9	66 0f 2e c9	 ucomisd xmm1, xmm1
  000ad	7a 23		 jp	 SHORT $LN20@luaV_lesse
  000af	75 21		 jne	 SHORT $LN20@luaV_lesse
  000b1	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  000b4	e8 00 00 00 00	 call	 LTintfloat
$LN1@luaV_lesse:
; Line 384
  000b9	33 c9		 xor	 ecx, ecx
  000bb	85 c0		 test	 eax, eax
  000bd	0f 94 c1	 sete	 cl
  000c0	8b c1		 mov	 eax, ecx
$LN2@luaV_lesse:
; Line 386
  000c2	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000c7	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000cc	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000d0	5f		 pop	 rdi
  000d1	c3		 ret	 0
$LN20@luaV_lesse:
; Line 373
  000d2	33 c9		 xor	 ecx, ecx
; Line 384
  000d4	8b c1		 mov	 eax, ecx
; Line 386
  000d6	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000db	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000e0	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000e4	5f		 pop	 rdi
  000e5	c3		 ret	 0
$LN7@luaV_lesse:
; Line 374
  000e6	41 83 f8 04	 cmp	 r8d, 4
  000ea	75 2e		 jne	 SHORT $LN5@luaV_lesse
  000ec	8b 43 08	 mov	 eax, DWORD PTR [rbx+8]
  000ef	24 0f		 and	 al, 15
  000f1	41 3a c0	 cmp	 al, r8b
  000f4	75 24		 jne	 SHORT $LN5@luaV_lesse
; Line 375
  000f6	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  000f9	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  000fc	e8 00 00 00 00	 call	 l_strcmp
; Line 386
  00101	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00106	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0010b	33 c9		 xor	 ecx, ecx
  0010d	85 c0		 test	 eax, eax
  0010f	0f 9e c1	 setle	 cl
  00112	8b c1		 mov	 eax, ecx
  00114	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00118	5f		 pop	 rdi
  00119	c3		 ret	 0
$LN5@luaV_lesse:
; Line 376
  0011a	41 b9 15 00 00
	00		 mov	 r9d, 21
  00120	4c 8b c3	 mov	 r8, rbx
  00123	48 8b d7	 mov	 rdx, rdi
  00126	48 8b ce	 mov	 rcx, rsi
  00129	e8 00 00 00 00	 call	 luaT_callorderTM
  0012e	85 c0		 test	 eax, eax
  00130	79 90		 jns	 SHORT $LN2@luaV_lesse
; Line 379
  00132	48 8b 46 20	 mov	 rax, QWORD PTR [rsi+32]
; Line 380
  00136	41 b9 14 00 00
	00		 mov	 r9d, 20
  0013c	4c 8b c7	 mov	 r8, rdi
  0013f	80 48 42 80	 or	 BYTE PTR [rax+66], 128	; 00000080H
  00143	48 8b d3	 mov	 rdx, rbx
  00146	48 8b ce	 mov	 rcx, rsi
  00149	e8 00 00 00 00	 call	 luaT_callorderTM
; Line 381
  0014e	48 8b 4e 20	 mov	 rcx, QWORD PTR [rsi+32]
  00152	80 71 42 80	 xor	 BYTE PTR [rcx+66], 128	; 00000080H
; Line 382
  00156	85 c0		 test	 eax, eax
  00158	0f 89 5b ff ff
	ff		 jns	 $LN1@luaV_lesse
; Line 383
  0015e	4c 8b c3	 mov	 r8, rbx
  00161	48 8b d7	 mov	 rdx, rdi
  00164	48 8b ce	 mov	 rcx, rsi
  00167	e8 00 00 00 00	 call	 luaG_ordererror
  0016c	cc		 int	 3
$LN21@luaV_lesse:
luaV_lessequal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaV_lessthan
_TEXT	SEGMENT
L$ = 48
l$ = 56
r$ = 64
luaV_lessthan PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 350
$LN22:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 352
  0000f	44 8b 4a 08	 mov	 r9d, DWORD PTR [rdx+8]
  00013	49 8b d8	 mov	 rbx, r8
  00016	48 8b fa	 mov	 rdi, rdx
  00019	45 8b c1	 mov	 r8d, r9d
  0001c	48 8b f1	 mov	 rsi, rcx
  0001f	41 83 e0 0f	 and	 r8d, 15
  00023	41 83 f8 03	 cmp	 r8d, 3
  00027	0f 85 bc 00 00
	00		 jne	 $LN5@luaV_lesst
  0002d	8b 53 08	 mov	 edx, DWORD PTR [rbx+8]
  00030	8b c2		 mov	 eax, edx
  00032	83 e0 0f	 and	 eax, 15
  00035	41 3a c0	 cmp	 al, r8b
  00038	0f 85 ab 00 00
	00		 jne	 $LN5@luaV_lesst
; Line 353
  0003e	41 83 f9 13	 cmp	 r9d, 19
  00042	75 40		 jne	 SHORT $LN15@luaV_lesst
  00044	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00047	41 3b d1	 cmp	 edx, r9d
  0004a	75 1a		 jne	 SHORT $LN14@luaV_lesst
  0004c	33 c9		 xor	 ecx, ecx
  0004e	48 3b 03	 cmp	 rax, QWORD PTR [rbx]
  00051	0f 9c c1	 setl	 cl
; Line 355
  00054	8b c1		 mov	 eax, ecx
$LN1@luaV_lesst:
; Line 359
  00056	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0005b	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00060	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
; Line 353
$LN14@luaV_lesst:
  00066	f2 0f 10 0b	 movsdx	 xmm1, QWORD PTR [rbx]
  0006a	48 8b c8	 mov	 rcx, rax
  0006d	e8 00 00 00 00	 call	 LTintfloat
  00072	8b c8		 mov	 ecx, eax
; Line 359
  00074	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00079	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0007e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00082	5f		 pop	 rdi
  00083	c3		 ret	 0
; Line 353
$LN15@luaV_lesst:
  00084	f2 0f 10 0f	 movsdx	 xmm1, QWORD PTR [rdi]
  00088	83 fa 03	 cmp	 edx, 3
  0008b	75 1f		 jne	 SHORT $LN11@luaV_lesst
  0008d	f2 0f 10 03	 movsdx	 xmm0, QWORD PTR [rbx]
  00091	33 c9		 xor	 ecx, ecx
  00093	66 0f 2f c1	 comisd	 xmm0, xmm1
  00097	0f 97 c1	 seta	 cl
; Line 355
  0009a	8b c1		 mov	 eax, ecx
; Line 359
  0009c	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000a1	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000a6	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
; Line 353
$LN11@luaV_lesst:
  000ac	66 0f 2e c9	 ucomisd xmm1, xmm1
  000b0	7a 23		 jp	 SHORT $LN18@luaV_lesst
  000b2	75 21		 jne	 SHORT $LN18@luaV_lesst
  000b4	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  000b7	e8 00 00 00 00	 call	 LEintfloat
  000bc	33 c9		 xor	 ecx, ecx
  000be	85 c0		 test	 eax, eax
  000c0	0f 94 c1	 sete	 cl
; Line 355
  000c3	8b c1		 mov	 eax, ecx
; Line 359
  000c5	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000ca	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000cf	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000d3	5f		 pop	 rdi
  000d4	c3		 ret	 0
$LN18@luaV_lesst:
; Line 353
  000d5	33 c9		 xor	 ecx, ecx
; Line 355
  000d7	8b c1		 mov	 eax, ecx
; Line 359
  000d9	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000de	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000e3	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000e7	5f		 pop	 rdi
  000e8	c3		 ret	 0
$LN5@luaV_lesst:
; Line 354
  000e9	41 83 f8 04	 cmp	 r8d, 4
  000ed	75 2e		 jne	 SHORT $LN3@luaV_lesst
  000ef	8b 43 08	 mov	 eax, DWORD PTR [rbx+8]
  000f2	24 0f		 and	 al, 15
  000f4	41 3a c0	 cmp	 al, r8b
  000f7	75 24		 jne	 SHORT $LN3@luaV_lesst
; Line 355
  000f9	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  000fc	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  000ff	e8 00 00 00 00	 call	 l_strcmp
; Line 359
  00104	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00109	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0010e	33 c9		 xor	 ecx, ecx
  00110	85 c0		 test	 eax, eax
  00112	0f 98 c1	 sets	 cl
  00115	8b c1		 mov	 eax, ecx
  00117	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0011b	5f		 pop	 rdi
  0011c	c3		 ret	 0
$LN3@luaV_lesst:
; Line 356
  0011d	41 b9 14 00 00
	00		 mov	 r9d, 20
  00123	4c 8b c3	 mov	 r8, rbx
  00126	48 8b d7	 mov	 rdx, rdi
  00129	e8 00 00 00 00	 call	 luaT_callorderTM
  0012e	85 c0		 test	 eax, eax
  00130	0f 89 20 ff ff
	ff		 jns	 $LN1@luaV_lesst
; Line 357
  00136	4c 8b c3	 mov	 r8, rbx
  00139	48 8b d7	 mov	 rdx, rdi
  0013c	48 8b ce	 mov	 rcx, rsi
  0013f	e8 00 00 00 00	 call	 luaG_ordererror
  00144	cc		 int	 3
$LN19@luaV_lesst:
luaV_lessthan ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaV_equalobj
_TEXT	SEGMENT
L$ = 64
i2$1 = 72
i1$2 = 72
t1$ = 72
t2$ = 80
luaV_equalobj PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lvm.c
; Line 393
$LN69:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	49 8b f8	 mov	 rdi, r8
; Line 395
  00017	44 8b 42 08	 mov	 r8d, DWORD PTR [rdx+8]
  0001b	48 8b e9	 mov	 rbp, rcx
  0001e	48 8b f2	 mov	 rsi, rdx
  00021	8b 57 08	 mov	 edx, DWORD PTR [rdi+8]
  00024	41 8b c8	 mov	 ecx, r8d
  00027	8b c2		 mov	 eax, edx
  00029	83 e1 3f	 and	 ecx, 63			; 0000003fH
  0002c	83 e0 3f	 and	 eax, 63			; 0000003fH
  0002f	3b c8		 cmp	 ecx, eax
  00031	74 7c		 je	 SHORT $LN23@luaV_equal
; Line 396
  00033	41 8b c0	 mov	 eax, r8d
  00036	83 e2 0f	 and	 edx, 15
  00039	83 e0 0f	 and	 eax, 15
  0003c	3b c2		 cmp	 eax, edx
  0003e	75 68		 jne	 SHORT $LN24@luaV_equal
  00040	83 f8 03	 cmp	 eax, 3
  00043	75 63		 jne	 SHORT $LN24@luaV_equal
; Line 400
  00045	41 83 f8 13	 cmp	 r8d, 19
  00049	75 05		 jne	 SHORT $LN29@luaV_equal
  0004b	48 8b 1e	 mov	 rbx, QWORD PTR [rsi]
  0004e	eb 1d		 jmp	 SHORT $LN56@luaV_equal
$LN29@luaV_equal:
  00050	48 8d 54 24 48	 lea	 rdx, QWORD PTR i1$2[rsp]
  00055	45 33 c0	 xor	 r8d, r8d
  00058	48 8b ce	 mov	 rcx, rsi
  0005b	e8 00 00 00 00	 call	 luaV_tointeger
  00060	85 c0		 test	 eax, eax
  00062	0f 84 9e 01 00
	00		 je	 $LN33@luaV_equal
  00068	48 8b 5c 24 48	 mov	 rbx, QWORD PTR i1$2[rsp]
$LN56@luaV_equal:
  0006d	83 7f 08 13	 cmp	 DWORD PTR [rdi+8], 19
  00071	75 05		 jne	 SHORT $LN31@luaV_equal
  00073	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00076	eb 1d		 jmp	 SHORT $LN57@luaV_equal
$LN31@luaV_equal:
  00078	48 8d 54 24 48	 lea	 rdx, QWORD PTR i2$1[rsp]
  0007d	45 33 c0	 xor	 r8d, r8d
  00080	48 8b cf	 mov	 rcx, rdi
  00083	e8 00 00 00 00	 call	 luaV_tointeger
  00088	85 c0		 test	 eax, eax
  0008a	0f 84 76 01 00
	00		 je	 $LN33@luaV_equal
  00090	48 8b 44 24 48	 mov	 rax, QWORD PTR i2$1[rsp]
$LN57@luaV_equal:
  00095	48 3b d8	 cmp	 rbx, rax
$LN67@luaV_equal:
  00098	0f 85 68 01 00
	00		 jne	 $LN33@luaV_equal
  0009e	bb 01 00 00 00	 mov	 ebx, 1
  000a3	e9 6d 01 00 00	 jmp	 $LN34@luaV_equal
$LN24@luaV_equal:
; Line 397
  000a8	33 c0		 xor	 eax, eax
  000aa	e9 68 01 00 00	 jmp	 $LN27@luaV_equal
$LN23@luaV_equal:
; Line 404
  000af	83 f9 16	 cmp	 ecx, 22
  000b2	0f 87 52 01 00
	00		 ja	 $LN2@luaV_equal
  000b8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:__ImageBase
  000bf	48 63 c1	 movsxd	 rax, ecx
  000c2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR $LN61@luaV_equal[rdx+rax*4]
  000c9	48 03 ca	 add	 rcx, rdx
  000cc	ff e1		 jmp	 rcx
$LN20@luaV_equal:
; Line 405
  000ce	b8 01 00 00 00	 mov	 eax, 1
  000d3	e9 3f 01 00 00	 jmp	 $LN27@luaV_equal
$LN19@luaV_equal:
; Line 406
  000d8	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  000db	33 db		 xor	 ebx, ebx
  000dd	48 39 06	 cmp	 QWORD PTR [rsi], rax
  000e0	e9 2d 01 00 00	 jmp	 $LN62@luaV_equal
$LN18@luaV_equal:
; Line 407
  000e5	f2 0f 10 06	 movsdx	 xmm0, QWORD PTR [rsi]
  000e9	66 0f 2e 07	 ucomisd xmm0, QWORD PTR [rdi]
  000ed	0f 8a 13 01 00
	00		 jp	 $LN33@luaV_equal
  000f3	eb a3		 jmp	 SHORT $LN67@luaV_equal
$LN17@luaV_equal:
; Line 408
  000f5	8b 07		 mov	 eax, DWORD PTR [rdi]
  000f7	33 db		 xor	 ebx, ebx
  000f9	39 06		 cmp	 DWORD PTR [rsi], eax
  000fb	e9 12 01 00 00	 jmp	 $LN62@luaV_equal
$LN13@luaV_equal:
; Line 412
  00100	48 8b 17	 mov	 rdx, QWORD PTR [rdi]
  00103	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00106	e8 00 00 00 00	 call	 luaS_eqlngstr
  0010b	e9 07 01 00 00	 jmp	 $LN27@luaV_equal
$LN12@luaV_equal:
; Line 414
  00110	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00113	48 3b 0f	 cmp	 rcx, QWORD PTR [rdi]
  00116	74 b6		 je	 SHORT $LN20@luaV_equal
; Line 415
  00118	48 85 ed	 test	 rbp, rbp
  0011b	74 8b		 je	 SHORT $LN24@luaV_equal
; Line 416
  0011d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00121	48 85 c9	 test	 rcx, rcx
  00124	74 27		 je	 SHORT $LN58@luaV_equal
  00126	f6 41 0a 20	 test	 BYTE PTR [rcx+10], 32	; 00000020H
  0012a	75 21		 jne	 SHORT $LN58@luaV_equal
  0012c	4c 8b 45 18	 mov	 r8, QWORD PTR [rbp+24]
  00130	ba 05 00 00 00	 mov	 edx, 5
  00135	4d 8b 80 08 01
	00 00		 mov	 r8, QWORD PTR [r8+264]
  0013c	e8 00 00 00 00	 call	 luaT_gettm
  00141	48 8b d0	 mov	 rdx, rax
; Line 417
  00144	48 85 c0	 test	 rax, rax
  00147	0f 85 85 00 00
	00		 jne	 $LN1@luaV_equal
$LN58@luaV_equal:
; Line 418
  0014d	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00150	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
; Line 419
  00154	eb 48		 jmp	 SHORT $LN65@luaV_equal
$LN7@luaV_equal:
; Line 422
  00156	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00159	48 3b 0f	 cmp	 rcx, QWORD PTR [rdi]
  0015c	0f 84 6c ff ff
	ff		 je	 $LN20@luaV_equal
; Line 423
  00162	48 85 ed	 test	 rbp, rbp
  00165	0f 84 3d ff ff
	ff		 je	 $LN24@luaV_equal
; Line 424
  0016b	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0016f	48 85 c9	 test	 rcx, rcx
  00172	74 23		 je	 SHORT $LN60@luaV_equal
  00174	f6 41 0a 20	 test	 BYTE PTR [rcx+10], 32	; 00000020H
  00178	75 1d		 jne	 SHORT $LN60@luaV_equal
  0017a	4c 8b 45 18	 mov	 r8, QWORD PTR [rbp+24]
  0017e	ba 05 00 00 00	 mov	 edx, 5
  00183	4d 8b 80 08 01
	00 00		 mov	 r8, QWORD PTR [r8+264]
  0018a	e8 00 00 00 00	 call	 luaT_gettm
  0018f	48 8b d0	 mov	 rdx, rax
; Line 425
  00192	48 85 c0	 test	 rax, rax
  00195	75 3b		 jne	 SHORT $LN1@luaV_equal
$LN60@luaV_equal:
; Line 426
  00197	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  0019a	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
$LN65@luaV_equal:
  0019e	48 85 c9	 test	 rcx, rcx
  001a1	0f 84 01 ff ff
	ff		 je	 $LN24@luaV_equal
  001a7	f6 41 0a 20	 test	 BYTE PTR [rcx+10], 32	; 00000020H
  001ab	0f 85 f7 fe ff
	ff		 jne	 $LN24@luaV_equal
  001b1	4c 8b 45 18	 mov	 r8, QWORD PTR [rbp+24]
  001b5	ba 05 00 00 00	 mov	 edx, 5
  001ba	4d 8b 80 08 01
	00 00		 mov	 r8, QWORD PTR [r8+264]
  001c1	e8 00 00 00 00	 call	 luaT_gettm
  001c6	48 8b d0	 mov	 rdx, rax
; Line 432
  001c9	48 85 c0	 test	 rax, rax
  001cc	0f 84 d6 fe ff
	ff		 je	 $LN24@luaV_equal
$LN1@luaV_equal:
; Line 434
  001d2	48 8b 45 10	 mov	 rax, QWORD PTR [rbp+16]
  001d6	bb 01 00 00 00	 mov	 ebx, 1
  001db	4c 8b cf	 mov	 r9, rdi
  001de	4c 8b c6	 mov	 r8, rsi
  001e1	48 8b cd	 mov	 rcx, rbp
  001e4	89 5c 24 28	 mov	 DWORD PTR [rsp+40], ebx
  001e8	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001ed	e8 00 00 00 00	 call	 luaT_callTM
; Line 435
  001f2	48 8b 45 10	 mov	 rax, QWORD PTR [rbp+16]
  001f6	8b 48 08	 mov	 ecx, DWORD PTR [rax+8]
  001f9	85 c9		 test	 ecx, ecx
  001fb	74 09		 je	 SHORT $LN33@luaV_equal
  001fd	3b cb		 cmp	 ecx, ebx
  001ff	75 14		 jne	 SHORT $LN34@luaV_equal
  00201	83 38 00	 cmp	 DWORD PTR [rax], 0
  00204	75 0f		 jne	 SHORT $LN34@luaV_equal
$LN33@luaV_equal:
  00206	33 db		 xor	 ebx, ebx
  00208	eb 0b		 jmp	 SHORT $LN34@luaV_equal
$LN2@luaV_equal:
; Line 430
  0020a	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  0020d	33 db		 xor	 ebx, ebx
  0020f	48 39 0e	 cmp	 QWORD PTR [rsi], rcx
$LN62@luaV_equal:
  00212	0f 94 c3	 sete	 bl
$LN34@luaV_equal:
  00215	8b c3		 mov	 eax, ebx
$LN27@luaV_equal:
; Line 436
  00217	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0021c	48 8b 6c 24 50	 mov	 rbp, QWORD PTR [rsp+80]
  00221	48 8b 74 24 58	 mov	 rsi, QWORD PTR [rsp+88]
  00226	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0022a	5f		 pop	 rdi
  0022b	c3		 ret	 0
$LN61@luaV_equal:
  0022c	00 00 00 00	 DD	 $LN20@luaV_equal
  00230	00 00 00 00	 DD	 $LN17@luaV_equal
  00234	00 00 00 00	 DD	 $LN19@luaV_equal
  00238	00 00 00 00	 DD	 $LN18@luaV_equal
  0023c	00 00 00 00	 DD	 $LN19@luaV_equal
  00240	00 00 00 00	 DD	 $LN7@luaV_equal
  00244	00 00 00 00	 DD	 $LN2@luaV_equal
  00248	00 00 00 00	 DD	 $LN12@luaV_equal
  0024c	00 00 00 00	 DD	 $LN2@luaV_equal
  00250	00 00 00 00	 DD	 $LN2@luaV_equal
  00254	00 00 00 00	 DD	 $LN2@luaV_equal
  00258	00 00 00 00	 DD	 $LN2@luaV_equal
  0025c	00 00 00 00	 DD	 $LN2@luaV_equal
  00260	00 00 00 00	 DD	 $LN2@luaV_equal
  00264	00 00 00 00	 DD	 $LN2@luaV_equal
  00268	00 00 00 00	 DD	 $LN2@luaV_equal
  0026c	00 00 00 00	 DD	 $LN2@luaV_equal
  00270	00 00 00 00	 DD	 $LN2@luaV_equal
  00274	00 00 00 00	 DD	 $LN2@luaV_equal
  00278	00 00 00 00	 DD	 $LN19@luaV_equal
  0027c	00 00 00 00	 DD	 $LN13@luaV_equal
  00280	00 00 00 00	 DD	 $LN2@luaV_equal
  00284	00 00 00 00	 DD	 $LN19@luaV_equal
luaV_equalobj ENDP
_TEXT	ENDS
END
