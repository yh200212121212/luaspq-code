; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	luaU_undump
PUBLIC	??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@ ; `string'
PUBLIC	??_C@_09IDFJECNO@truncated?$AA@			; `string'
PUBLIC	??_C@_0BE@FMPNPBIC@?$CFs?5size?5mismatch?5in?$AA@ ; `string'
PUBLIC	??_C@_05MHFHPLCH@not?5a?$AA@			; `string'
PUBLIC	??_C@_04NBPDLJKJ@?$BLLua?$AA@			; `string'
PUBLIC	??_C@_0BE@BNDNKLA@version?5mismatch?5in?$AA@	; `string'
PUBLIC	??_C@_0BD@OLNACCKD@format?5mismatch?5in?$AA@	; `string'
PUBLIC	??_C@_09DJBANNHO@corrupted?$AA@			; `string'
PUBLIC	??_C@_06HHFEHHII@?$BJ?$JD?$AN?6?$BK?6?$AA@	; `string'
PUBLIC	??_C@_03JBIPMCLC@int?$AA@			; `string'
PUBLIC	??_C@_06DMBJOIF@size_t?$AA@			; `string'
PUBLIC	??_C@_0M@LHLPIFKK@Instruction?$AA@		; `string'
PUBLIC	??_C@_0M@GMBHIDNA@lua_Integer?$AA@		; `string'
PUBLIC	??_C@_0L@PFILHMCA@lua_Number?$AA@		; `string'
PUBLIC	??_C@_0BH@CNGMPKEP@endianness?5mismatch?5in?$AA@ ; `string'
PUBLIC	??_C@_0BJ@NPNAMPHP@float?5format?5mismatch?5in?$AA@ ; `string'
PUBLIC	??_C@_0O@CNJIDMJE@binary?5string?$AA@		; `string'
PUBLIC	__real@4077280000000000
EXTRN	luaO_pushfstring:PROC
EXTRN	luaM_realloc_:PROC
EXTRN	luaZ_read:PROC
EXTRN	luaD_inctop:PROC
EXTRN	luaD_throw:PROC
EXTRN	luaF_newproto:PROC
EXTRN	luaF_newLclosure:PROC
EXTRN	luaS_newlstr:PROC
EXTRN	luaS_createlngstrobj:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	memcmp:PROC
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaU_undump DD imagerel $LN22
	DD	imagerel $LN22+105
	DD	imagerel $unwind$luaU_undump
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$luaU_undump DD imagerel $LN22+105
	DD	imagerel $LN22+182
	DD	imagerel $chain$0$luaU_undump
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$luaU_undump DD imagerel $LN22+182
	DD	imagerel $LN22+227
	DD	imagerel $chain$1$luaU_undump
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$error DD	imagerel error
	DD	imagerel error+45
	DD	imagerel $unwind$error
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$LoadBlock DD imagerel LoadBlock
	DD	imagerel LoadBlock+69
	DD	imagerel $unwind$LoadBlock
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$LoadByte DD imagerel LoadByte
	DD	imagerel LoadByte+85
	DD	imagerel $unwind$LoadByte
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$LoadInt DD imagerel LoadInt
	DD	imagerel LoadInt+84
	DD	imagerel $unwind$LoadInt
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$LoadNumber DD imagerel LoadNumber
	DD	imagerel LoadNumber+86
	DD	imagerel $unwind$LoadNumber
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$LoadInteger DD imagerel LoadInteger
	DD	imagerel LoadInteger+85
	DD	imagerel $unwind$LoadInteger
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$LoadString DD imagerel LoadString
	DD	imagerel LoadString+210
	DD	imagerel $unwind$LoadString
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$LoadString DD imagerel LoadString+210
	DD	imagerel LoadString+277
	DD	imagerel $chain$0$LoadString
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$LoadString DD imagerel LoadString+277
	DD	imagerel LoadString+394
	DD	imagerel $chain$1$LoadString
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$LoadString DD imagerel LoadString+394
	DD	imagerel LoadString+434
	DD	imagerel $chain$2$LoadString
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$LoadCode DD imagerel LoadCode
	DD	imagerel LoadCode+44
	DD	imagerel $unwind$LoadCode
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$LoadCode DD imagerel LoadCode+44
	DD	imagerel LoadCode+116
	DD	imagerel $chain$1$LoadCode
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$LoadCode DD imagerel LoadCode+116
	DD	imagerel LoadCode+204
	DD	imagerel $chain$2$LoadCode
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$LoadFunction DD imagerel LoadFunction
	DD	imagerel LoadFunction+493
	DD	imagerel $unwind$LoadFunction
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$LoadConstants DD imagerel LoadConstants
	DD	imagerel LoadConstants+46
	DD	imagerel $unwind$LoadConstants
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$LoadConstants DD imagerel LoadConstants+46
	DD	imagerel LoadConstants+141
	DD	imagerel $chain$3$LoadConstants
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$LoadConstants DD imagerel LoadConstants+141
	DD	imagerel LoadConstants+446
	DD	imagerel $chain$5$LoadConstants
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$LoadConstants DD imagerel LoadConstants+446
	DD	imagerel LoadConstants+474
	DD	imagerel $chain$6$LoadConstants
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$7$LoadConstants DD imagerel LoadConstants+474
	DD	imagerel LoadConstants+511
	DD	imagerel $chain$7$LoadConstants
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$8$LoadConstants DD imagerel LoadConstants+511
	DD	imagerel LoadConstants+717
	DD	imagerel $chain$8$LoadConstants
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$LoadProtos DD imagerel LoadProtos
	DD	imagerel LoadProtos+49
	DD	imagerel $unwind$LoadProtos
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$LoadProtos DD imagerel LoadProtos+49
	DD	imagerel LoadProtos+200
	DD	imagerel $chain$1$LoadProtos
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$LoadProtos DD imagerel LoadProtos+200
	DD	imagerel LoadProtos+237
	DD	imagerel $chain$2$LoadProtos
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$LoadUpvalues DD imagerel LoadUpvalues
	DD	imagerel LoadUpvalues+45
	DD	imagerel $unwind$LoadUpvalues
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$LoadUpvalues DD imagerel LoadUpvalues+45
	DD	imagerel LoadUpvalues+135
	DD	imagerel $chain$1$LoadUpvalues
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$LoadUpvalues DD imagerel LoadUpvalues+135
	DD	imagerel LoadUpvalues+241
	DD	imagerel $chain$2$LoadUpvalues
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$LoadUpvalues DD imagerel LoadUpvalues+241
	DD	imagerel LoadUpvalues+258
	DD	imagerel $chain$3$LoadUpvalues
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$LoadUpvalues DD imagerel LoadUpvalues+258
	DD	imagerel LoadUpvalues+295
	DD	imagerel $chain$4$LoadUpvalues
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$LoadUpvalues DD imagerel LoadUpvalues+295
	DD	imagerel LoadUpvalues+375
	DD	imagerel $chain$5$LoadUpvalues
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$LoadDebug DD imagerel LoadDebug
	DD	imagerel LoadDebug+45
	DD	imagerel $unwind$LoadDebug
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$LoadDebug DD imagerel LoadDebug+45
	DD	imagerel LoadDebug+442
	DD	imagerel $chain$3$LoadDebug
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$LoadDebug DD imagerel LoadDebug+442
	DD	imagerel LoadDebug+479
	DD	imagerel $chain$4$LoadDebug
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$LoadDebug DD imagerel LoadDebug+479
	DD	imagerel LoadDebug+556
	DD	imagerel $chain$5$LoadDebug
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$LoadDebug DD imagerel LoadDebug+556
	DD	imagerel LoadDebug+676
	DD	imagerel $chain$6$LoadDebug
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$checkliteral DD imagerel checkliteral
	DD	imagerel checkliteral+201
	DD	imagerel $unwind$checkliteral
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$fchecksize DD imagerel fchecksize
	DD	imagerel fchecksize+169
	DD	imagerel $unwind$fchecksize
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$checkHeader DD imagerel checkHeader
	DD	imagerel checkHeader+521
	DD	imagerel $unwind$checkHeader
pdata	ENDS
;	COMDAT __real@4077280000000000
CONST	SEGMENT
__real@4077280000000000 DQ 04077280000000000r	; 370.5
CONST	ENDS
;	COMDAT ??_C@_0O@CNJIDMJE@binary?5string?$AA@
CONST	SEGMENT
??_C@_0O@CNJIDMJE@binary?5string?$AA@ DB 'binary string', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NPNAMPHP@float?5format?5mismatch?5in?$AA@
CONST	SEGMENT
??_C@_0BJ@NPNAMPHP@float?5format?5mismatch?5in?$AA@ DB 'float format mism'
	DB	'atch in', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CNGMPKEP@endianness?5mismatch?5in?$AA@
CONST	SEGMENT
??_C@_0BH@CNGMPKEP@endianness?5mismatch?5in?$AA@ DB 'endianness mismatch '
	DB	'in', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PFILHMCA@lua_Number?$AA@
CONST	SEGMENT
??_C@_0L@PFILHMCA@lua_Number?$AA@ DB 'lua_Number', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GMBHIDNA@lua_Integer?$AA@
CONST	SEGMENT
??_C@_0M@GMBHIDNA@lua_Integer?$AA@ DB 'lua_Integer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LHLPIFKK@Instruction?$AA@
CONST	SEGMENT
??_C@_0M@LHLPIFKK@Instruction?$AA@ DB 'Instruction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06DMBJOIF@size_t?$AA@
CONST	SEGMENT
??_C@_06DMBJOIF@size_t?$AA@ DB 'size_t', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBIPMCLC@int?$AA@
CONST	SEGMENT
??_C@_03JBIPMCLC@int?$AA@ DB 'int', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06HHFEHHII@?$BJ?$JD?$AN?6?$BK?6?$AA@
CONST	SEGMENT
??_C@_06HHFEHHII@?$BJ?$JD?$AN?6?$BK?6?$AA@ DB 019H, 093H, 0dH, 0aH, 01aH, 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_09DJBANNHO@corrupted?$AA@
CONST	SEGMENT
??_C@_09DJBANNHO@corrupted?$AA@ DB 'corrupted', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLNACCKD@format?5mismatch?5in?$AA@
CONST	SEGMENT
??_C@_0BD@OLNACCKD@format?5mismatch?5in?$AA@ DB 'format mismatch in', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BNDNKLA@version?5mismatch?5in?$AA@
CONST	SEGMENT
??_C@_0BE@BNDNKLA@version?5mismatch?5in?$AA@ DB 'version mismatch in', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04NBPDLJKJ@?$BLLua?$AA@
CONST	SEGMENT
??_C@_04NBPDLJKJ@?$BLLua?$AA@ DB 01bH, 'Lua', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05MHFHPLCH@not?5a?$AA@
CONST	SEGMENT
??_C@_05MHFHPLCH@not?5a?$AA@ DB 'not a', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FMPNPBIC@?$CFs?5size?5mismatch?5in?$AA@
CONST	SEGMENT
??_C@_0BE@FMPNPBIC@?$CFs?5size?5mismatch?5in?$AA@ DB '%s size mismatch in'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_09IDFJECNO@truncated?$AA@
CONST	SEGMENT
??_C@_09IDFJECNO@truncated?$AA@ DB 'truncated', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
CONST	SEGMENT
??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@ DB '%s: %s pre'
	DB	'compiled chunk', 00H			; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$checkHeader DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$fchecksize DD 060f01H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$checkliteral DD 061b19H
	DD	0f340cH
	DD	07008720cH
	DD	050066007H
	DD	imagerel __GSHandlerCheck
	DD	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$LoadDebug DD 080021H
	DD	04f400H
	DD	05e400H
	DD	067400H
	DD	0b3400H
	DD	imagerel LoadDebug
	DD	imagerel LoadDebug+45
	DD	imagerel $unwind$LoadDebug
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$LoadDebug DD 040021H
	DD	067400H
	DD	0b3400H
	DD	imagerel LoadDebug
	DD	imagerel LoadDebug+45
	DD	imagerel $unwind$LoadDebug
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$LoadDebug DD 021H
	DD	imagerel LoadDebug
	DD	imagerel LoadDebug+45
	DD	imagerel $unwind$LoadDebug
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$LoadDebug DD 087721H
	DD	04f477H
	DD	05e46aH
	DD	06740fH
	DD	0b3405H
	DD	imagerel LoadDebug
	DD	imagerel LoadDebug+45
	DD	imagerel $unwind$LoadDebug
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LoadDebug DD 030701H
	DD	060036207H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$LoadUpvalues DD 060021H
	DD	04e400H
	DD	0b7400H
	DD	093400H
	DD	imagerel LoadUpvalues
	DD	imagerel LoadUpvalues+45
	DD	imagerel $unwind$LoadUpvalues
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$LoadUpvalues DD 021H
	DD	imagerel LoadUpvalues
	DD	imagerel LoadUpvalues+45
	DD	imagerel $unwind$LoadUpvalues
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$LoadUpvalues DD 021H
	DD	imagerel LoadUpvalues+45
	DD	imagerel LoadUpvalues+135
	DD	imagerel $chain$1$LoadUpvalues
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$LoadUpvalues DD 020521H
	DD	0b7405H
	DD	imagerel LoadUpvalues+45
	DD	imagerel LoadUpvalues+135
	DD	imagerel $chain$1$LoadUpvalues
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$LoadUpvalues DD 041721H
	DD	04e417H
	DD	093405H
	DD	imagerel LoadUpvalues
	DD	imagerel LoadUpvalues+45
	DD	imagerel $unwind$LoadUpvalues
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LoadUpvalues DD 030701H
	DD	060034207H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$LoadProtos DD 021H
	DD	imagerel LoadProtos
	DD	imagerel LoadProtos+49
	DD	imagerel $unwind$LoadProtos
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$LoadProtos DD 041c21H
	DD	08641cH
	DD	073405H
	DD	imagerel LoadProtos
	DD	imagerel LoadProtos+49
	DD	imagerel $unwind$LoadProtos
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LoadProtos DD 040b01H
	DD	09740bH
	DD	0e007320bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$8$LoadConstants DD 0c0021H
	DD	06f400H
	DD	07d400H
	DD	08c400H
	DD	096400H
	DD	0a5400H
	DD	0f3400H
	DD	imagerel LoadConstants
	DD	imagerel LoadConstants+46
	DD	imagerel $unwind$LoadConstants
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$7$LoadConstants DD 021H
	DD	imagerel LoadConstants
	DD	imagerel LoadConstants+46
	DD	imagerel $unwind$LoadConstants
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$LoadConstants DD 021H
	DD	imagerel LoadConstants+46
	DD	imagerel LoadConstants+141
	DD	imagerel $chain$3$LoadConstants
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$LoadConstants DD 040a21H
	DD	07d40aH
	DD	0a5405H
	DD	imagerel LoadConstants+46
	DD	imagerel LoadConstants+141
	DD	imagerel $chain$3$LoadConstants
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$LoadConstants DD 082521H
	DD	06f425H
	DD	08c417H
	DD	09640fH
	DD	0f3405H
	DD	imagerel LoadConstants
	DD	imagerel LoadConstants+46
	DD	imagerel $unwind$LoadConstants
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LoadConstants DD 030801H
	DD	0e004a208H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LoadFunction DD 060f01H
	DD	08640fH
	DD	07340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$LoadCode DD 021H
	DD	imagerel LoadCode
	DD	imagerel LoadCode+44
	DD	imagerel $unwind$LoadCode
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$LoadCode DD 040f21H
	DD	08740fH
	DD	073405H
	DD	imagerel LoadCode
	DD	imagerel LoadCode+44
	DD	imagerel $unwind$LoadCode
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LoadCode DD 040a01H
	DD	09540aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$LoadString DD 020021H
	DD	0f7400H
	DD	imagerel LoadString
	DD	imagerel LoadString+210
	DD	imagerel $unwind$LoadString
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$LoadString DD 021H
	DD	imagerel LoadString
	DD	imagerel LoadString+210
	DD	imagerel $unwind$LoadString
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$LoadString DD 020521H
	DD	0f7405H
	DD	imagerel LoadString
	DD	imagerel LoadString+210
	DD	imagerel $unwind$LoadString
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LoadString DD 021519H
	DD	03002b206H
	DD	imagerel __GSHandlerCheck
	DD	058H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LoadInteger DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LoadNumber DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LoadInt DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LoadByte DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$LoadBlock DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$error DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$luaU_undump DD 021H
	DD	imagerel $LN22
	DD	imagerel $LN22+105
	DD	imagerel $unwind$luaU_undump
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$luaU_undump DD 020521H
	DD	0b3405H
	DD	imagerel $LN22
	DD	imagerel $LN22+105
	DD	imagerel $unwind$luaU_undump
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaU_undump DD 020601H
	DD	070027206H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT checkHeader
_TEXT	SEGMENT
x$1 = 48
x$2 = 48
S$ = 48
checkHeader PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 236
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 237
  00006	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_05MHFHPLCH@not?5a?$AA@
  0000d	48 8d 15 01 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04NBPDLJKJ@?$BLLua?$AA@+1
  00014	48 8b d9	 mov	 rbx, rcx
  00017	e8 00 00 00 00	 call	 checkliteral
; Line 238
  0001c	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  00020	48 8d 54 24 30	 lea	 rdx, QWORD PTR x$2[rsp]
  00025	41 b8 01 00 00
	00		 mov	 r8d, 1
  0002b	e8 00 00 00 00	 call	 luaZ_read
  00030	48 85 c0	 test	 rax, rax
  00033	0f 85 e0 00 00
	00		 jne	 $LN36@checkHeade
  00039	80 7c 24 30 11	 cmp	 BYTE PTR x$2[rsp], 17
  0003e	0f 85 fd 00 00
	00		 jne	 $LN38@checkHeade
; Line 240
  00044	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  00048	44 8d 40 01	 lea	 r8d, QWORD PTR [rax+1]
  0004c	48 8d 54 24 30	 lea	 rdx, QWORD PTR x$1[rsp]
  00051	e8 00 00 00 00	 call	 luaZ_read
  00056	48 85 c0	 test	 rax, rax
  00059	0f 85 0a 01 00
	00		 jne	 $LN39@checkHeade
  0005f	38 44 24 30	 cmp	 BYTE PTR x$1[rsp], al
  00063	0f 85 28 01 00
	00		 jne	 $LN40@checkHeade
; Line 242
  00069	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_09DJBANNHO@corrupted?$AA@
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06HHFEHHII@?$BJ?$JD?$AN?6?$BK?6?$AA@
  00077	48 8b cb	 mov	 rcx, rbx
  0007a	e8 00 00 00 00	 call	 checkliteral
; Line 243
  0007f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_03JBIPMCLC@int?$AA@
  00086	ba 04 00 00 00	 mov	 edx, 4
  0008b	48 8b cb	 mov	 rcx, rbx
  0008e	e8 00 00 00 00	 call	 fchecksize
; Line 244
  00093	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_06DMBJOIF@size_t?$AA@
  0009a	ba 08 00 00 00	 mov	 edx, 8
  0009f	48 8b cb	 mov	 rcx, rbx
  000a2	e8 00 00 00 00	 call	 fchecksize
; Line 245
  000a7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0M@LHLPIFKK@Instruction?$AA@
  000ae	ba 04 00 00 00	 mov	 edx, 4
  000b3	48 8b cb	 mov	 rcx, rbx
  000b6	e8 00 00 00 00	 call	 fchecksize
; Line 246
  000bb	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0M@GMBHIDNA@lua_Integer?$AA@
  000c2	ba 08 00 00 00	 mov	 edx, 8
  000c7	48 8b cb	 mov	 rcx, rbx
  000ca	e8 00 00 00 00	 call	 fchecksize
; Line 247
  000cf	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0L@PFILHMCA@lua_Number?$AA@
  000d6	ba 08 00 00 00	 mov	 edx, 8
  000db	48 8b cb	 mov	 rcx, rbx
  000de	e8 00 00 00 00	 call	 fchecksize
; Line 248
  000e3	48 8b cb	 mov	 rcx, rbx
  000e6	e8 00 00 00 00	 call	 LoadInteger
  000eb	48 3d 78 56 00
	00		 cmp	 rax, 22136		; 00005678H
  000f1	0f 85 c2 00 00
	00		 jne	 $LN41@checkHeade
; Line 250
  000f7	48 8b cb	 mov	 rcx, rbx
  000fa	e8 00 00 00 00	 call	 LoadNumber
  000ff	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@4077280000000000
  00107	0f 8a d4 00 00
	00		 jp	 $LN42@checkHeade
  0010d	0f 85 ce 00 00
	00		 jne	 $LN42@checkHeade
; Line 252
  00113	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00117	5b		 pop	 rbx
  00118	c3		 ret	 0
$LN36@checkHeade:
; Line 238
  00119	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  0011d	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00120	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  00127	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  0012e	e8 00 00 00 00	 call	 luaO_pushfstring
  00133	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00136	ba 03 00 00 00	 mov	 edx, 3
  0013b	e8 00 00 00 00	 call	 luaD_throw
  00140	cc		 int	 3
$LN38@checkHeade:
; Line 239
  00141	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00145	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00148	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0BE@BNDNKLA@version?5mismatch?5in?$AA@
  0014f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00156	e8 00 00 00 00	 call	 luaO_pushfstring
  0015b	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0015e	ba 03 00 00 00	 mov	 edx, 3
  00163	e8 00 00 00 00	 call	 luaD_throw
  00168	cc		 int	 3
$LN39@checkHeade:
; Line 240
  00169	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  0016d	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00170	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  00177	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  0017e	e8 00 00 00 00	 call	 luaO_pushfstring
  00183	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00186	ba 03 00 00 00	 mov	 edx, 3
  0018b	e8 00 00 00 00	 call	 luaD_throw
  00190	cc		 int	 3
$LN40@checkHeade:
; Line 241
  00191	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00195	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00198	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0BD@OLNACCKD@format?5mismatch?5in?$AA@
  0019f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  001a6	e8 00 00 00 00	 call	 luaO_pushfstring
  001ab	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  001ae	ba 03 00 00 00	 mov	 edx, 3
  001b3	e8 00 00 00 00	 call	 luaD_throw
  001b8	cc		 int	 3
$LN41@checkHeade:
; Line 249
  001b9	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  001bd	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  001c0	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0BH@CNGMPKEP@endianness?5mismatch?5in?$AA@
  001c7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  001ce	e8 00 00 00 00	 call	 luaO_pushfstring
  001d3	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  001d6	ba 03 00 00 00	 mov	 edx, 3
  001db	e8 00 00 00 00	 call	 luaD_throw
  001e0	cc		 int	 3
$LN42@checkHeade:
; Line 251
  001e1	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  001e5	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  001e8	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_0BJ@NPNAMPHP@float?5format?5mismatch?5in?$AA@
  001ef	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  001f6	e8 00 00 00 00	 call	 luaO_pushfstring
  001fb	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  001fe	ba 03 00 00 00	 mov	 edx, 3
  00203	e8 00 00 00 00	 call	 luaD_throw
  00208	cc		 int	 3
$LN35@checkHeade:
checkHeader ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT fchecksize
_TEXT	SEGMENT
x$1 = 48
S$ = 48
size$ = 56
tname$ = 64
fchecksize PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 228
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b d9	 mov	 rbx, rcx
; Line 229
  00012	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00016	48 8b fa	 mov	 rdi, rdx
  00019	49 8b f0	 mov	 rsi, r8
  0001c	48 8d 54 24 30	 lea	 rdx, QWORD PTR x$1[rsp]
  00021	41 b8 01 00 00
	00		 mov	 r8d, 1
  00027	e8 00 00 00 00	 call	 luaZ_read
  0002c	48 85 c0	 test	 rax, rax
  0002f	75 1a		 jne	 SHORT $LN17@fchecksize
  00031	0f b6 44 24 30	 movzx	 eax, BYTE PTR x$1[rsp]
  00036	48 3b c7	 cmp	 rax, rdi
  00039	75 38		 jne	 SHORT $LN19@fchecksize
; Line 231
  0003b	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00040	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
$LN17@fchecksize:
; Line 229
  0004b	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  0004f	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00052	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  00059	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00060	e8 00 00 00 00	 call	 luaO_pushfstring
  00065	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00068	ba 03 00 00 00	 mov	 edx, 3
  0006d	e8 00 00 00 00	 call	 luaD_throw
  00072	cc		 int	 3
$LN19@fchecksize:
; Line 230
  00073	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00076	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BE@FMPNPBIC@?$CFs?5size?5mismatch?5in?$AA@
  0007d	4c 8b c6	 mov	 r8, rsi
  00080	e8 00 00 00 00	 call	 luaO_pushfstring
  00085	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00089	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0008c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00093	4c 8b c8	 mov	 r9, rax
  00096	e8 00 00 00 00	 call	 luaO_pushfstring
  0009b	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0009e	ba 03 00 00 00	 mov	 edx, 3
  000a3	e8 00 00 00 00	 call	 luaD_throw
  000a8	cc		 int	 3
$LN16@fchecksize:
fchecksize ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT checkliteral
_TEXT	SEGMENT
buff$ = 32
__$ArrayPad$ = 48
S$ = 96
s$ = 104
msg$ = 112
checkliteral PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 219
  00000	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00013	48 33 c4	 xor	 rax, rsp
  00016	48 89 44 24 30	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0001b	49 8b e8	 mov	 rbp, r8
  0001e	48 8b fa	 mov	 rdi, rdx
  00021	48 8b f1	 mov	 rsi, rcx
; Line 221
  00024	48 83 cb ff	 or	 rbx, -1
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL13@checkliter:
  00030	48 ff c3	 inc	 rbx
  00033	80 3c 1a 00	 cmp	 BYTE PTR [rdx+rbx], 0
  00037	75 f7		 jne	 SHORT $LL13@checkliter
; Line 222
  00039	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003d	48 8d 54 24 20	 lea	 rdx, QWORD PTR buff$[rsp]
  00042	4c 8b c3	 mov	 r8, rbx
  00045	e8 00 00 00 00	 call	 luaZ_read
  0004a	48 85 c0	 test	 rax, rax
  0004d	75 2e		 jne	 SHORT $LN15@checkliter
; Line 223
  0004f	48 8d 54 24 20	 lea	 rdx, QWORD PTR buff$[rsp]
  00054	4c 8b c3	 mov	 r8, rbx
  00057	48 8b cf	 mov	 rcx, rdi
  0005a	e8 00 00 00 00	 call	 memcmp
  0005f	85 c0		 test	 eax, eax
  00061	75 42		 jne	 SHORT $LN17@checkliter
; Line 225
  00063	48 8b 4c 24 30	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00068	48 33 cc	 xor	 rcx, rsp
  0006b	e8 00 00 00 00	 call	 __security_check_cookie
  00070	48 8b 5c 24 78	 mov	 rbx, QWORD PTR [rsp+120]
  00075	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00079	5f		 pop	 rdi
  0007a	5e		 pop	 rsi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
$LN15@checkliter:
; Line 222
  0007d	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  00081	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00084	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0008b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00092	e8 00 00 00 00	 call	 luaO_pushfstring
  00097	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  0009a	ba 03 00 00 00	 mov	 edx, 3
  0009f	e8 00 00 00 00	 call	 luaD_throw
  000a4	cc		 int	 3
$LN17@checkliter:
; Line 224
  000a5	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  000a9	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  000ac	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  000b3	4c 8b cd	 mov	 r9, rbp
  000b6	e8 00 00 00 00	 call	 luaO_pushfstring
  000bb	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  000be	ba 03 00 00 00	 mov	 edx, 3
  000c3	e8 00 00 00 00	 call	 luaD_throw
  000c8	cc		 int	 3
$LN14@checkliter:
checkliteral ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LoadDebug
_TEXT	SEGMENT
x$1 = 80
x$2 = 80
x$3 = 80
x$4 = 80
S$ = 80
f$ = 88
x$5 = 96
LoadDebug PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 180
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00007	48 8b f1	 mov	 rsi, rcx
; Line 182
  0000a	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0000e	48 8b ea	 mov	 rbp, rdx
  00011	48 8d 54 24 50	 lea	 rdx, QWORD PTR x$4[rsp]
  00016	41 b8 04 00 00
	00		 mov	 r8d, 4
  0001c	e8 00 00 00 00	 call	 luaZ_read
  00021	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00024	48 85 c0	 test	 rax, rax
  00027	0f 85 8d 01 00
	00		 jne	 $LN83@LoadDebug
; Line 183
  0002d	48 89 5c 24 58	 mov	 QWORD PTR [rsp+88], rbx
  00032	48 63 5c 24 50	 movsxd	 rbx, DWORD PTR x$4[rsp]
  00037	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  0003c	48 8b fb	 mov	 rdi, rbx
  0003f	45 33 c0	 xor	 r8d, r8d
  00042	33 d2		 xor	 edx, edx
  00044	48 c1 e7 02	 shl	 rdi, 2
  00048	4c 8b cf	 mov	 r9, rdi
  0004b	e8 00 00 00 00	 call	 luaM_realloc_
; Line 184
  00050	89 5d 1c	 mov	 DWORD PTR [rbp+28], ebx
; Line 185
  00053	4c 8b c7	 mov	 r8, rdi
  00056	48 89 45 48	 mov	 QWORD PTR [rbp+72], rax
  0005a	48 8b 4e 08	 mov	 rcx, QWORD PTR [rsi+8]
  0005e	48 8b d0	 mov	 rdx, rax
  00061	e8 00 00 00 00	 call	 luaZ_read
  00066	48 85 c0	 test	 rax, rax
  00069	0f 85 70 01 00
	00		 jne	 $LN85@LoadDebug
; Line 186
  0006f	48 8b 4e 08	 mov	 rcx, QWORD PTR [rsi+8]
  00073	44 8d 40 04	 lea	 r8d, QWORD PTR [rax+4]
  00077	48 8d 54 24 50	 lea	 rdx, QWORD PTR x$3[rsp]
  0007c	e8 00 00 00 00	 call	 luaZ_read
  00081	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00084	48 85 c0	 test	 rax, rax
  00087	0f 85 7a 01 00
	00		 jne	 $LN86@LoadDebug
; Line 187
  0008d	48 63 5c 24 50	 movsxd	 rbx, DWORD PTR x$3[rsp]
  00092	4c 89 74 24 28	 mov	 QWORD PTR [rsp+40], r14
  00097	45 33 c0	 xor	 r8d, r8d
  0009a	4c 8b cb	 mov	 r9, rbx
  0009d	33 d2		 xor	 edx, edx
  0009f	4c 89 7c 24 20	 mov	 QWORD PTR [rsp+32], r15
  000a4	49 c1 e1 04	 shl	 r9, 4
  000a8	4c 8b fb	 mov	 r15, rbx
  000ab	e8 00 00 00 00	 call	 luaM_realloc_
; Line 188
  000b0	89 5d 24	 mov	 DWORD PTR [rbp+36], ebx
; Line 189
  000b3	33 db		 xor	 ebx, ebx
  000b5	48 89 45 50	 mov	 QWORD PTR [rbp+80], rax
  000b9	4d 85 ff	 test	 r15, r15
  000bc	7e 24		 jle	 SHORT $LN7@LoadDebug
; Line 187
  000be	8b cb		 mov	 ecx, ebx
  000c0	49 8b d7	 mov	 rdx, r15
  000c3	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL9@LoadDebug:
; Line 190
  000d0	48 8b 45 50	 mov	 rax, QWORD PTR [rbp+80]
  000d4	48 8d 49 10	 lea	 rcx, QWORD PTR [rcx+16]
  000d8	48 89 5c 01 f0	 mov	 QWORD PTR [rcx+rax-16], rbx
  000dd	48 ff ca	 dec	 rdx
  000e0	75 ee		 jne	 SHORT $LL9@LoadDebug
$LN7@LoadDebug:
; Line 191
  000e2	4c 8b f3	 mov	 r14, rbx
  000e5	4d 85 ff	 test	 r15, r15
  000e8	7e 74		 jle	 SHORT $LN4@LoadDebug
  000ea	48 8b fb	 mov	 rdi, rbx
  000ed	0f 1f 00	 npad	 3
$LL6@LoadDebug:
; Line 192
  000f0	48 8b ce	 mov	 rcx, rsi
  000f3	e8 00 00 00 00	 call	 LoadString
  000f8	48 8b 4d 50	 mov	 rcx, QWORD PTR [rbp+80]
; Line 193
  000fc	48 8d 54 24 50	 lea	 rdx, QWORD PTR x$2[rsp]
  00101	48 89 04 0f	 mov	 QWORD PTR [rdi+rcx], rax
  00105	48 8b 4e 08	 mov	 rcx, QWORD PTR [rsi+8]
  00109	41 b8 04 00 00
	00		 mov	 r8d, 4
  0010f	e8 00 00 00 00	 call	 luaZ_read
  00114	48 85 c0	 test	 rax, rax
  00117	0f 85 5f 01 00
	00		 jne	 $LN67@LoadDebug
  0011d	48 8b 4d 50	 mov	 rcx, QWORD PTR [rbp+80]
  00121	8b 44 24 50	 mov	 eax, DWORD PTR x$2[rsp]
; Line 194
  00125	48 8d 54 24 60	 lea	 rdx, QWORD PTR x$5[rsp]
  0012a	89 44 39 08	 mov	 DWORD PTR [rcx+rdi+8], eax
  0012e	48 8b 4e 08	 mov	 rcx, QWORD PTR [rsi+8]
  00132	41 b8 04 00 00
	00		 mov	 r8d, 4
  00138	e8 00 00 00 00	 call	 luaZ_read
  0013d	48 85 c0	 test	 rax, rax
  00140	0f 85 0e 01 00
	00		 jne	 $LN68@LoadDebug
  00146	48 8b 4d 50	 mov	 rcx, QWORD PTR [rbp+80]
  0014a	8b 44 24 60	 mov	 eax, DWORD PTR x$5[rsp]
  0014e	49 ff c6	 inc	 r14
  00151	89 44 39 0c	 mov	 DWORD PTR [rcx+rdi+12], eax
  00155	48 83 c7 10	 add	 rdi, 16
  00159	4d 3b f7	 cmp	 r14, r15
  0015c	7c 92		 jl	 SHORT $LL6@LoadDebug
$LN4@LoadDebug:
; Line 196
  0015e	48 8b 4e 08	 mov	 rcx, QWORD PTR [rsi+8]
  00162	48 8d 54 24 50	 lea	 rdx, QWORD PTR x$1[rsp]
  00167	41 b8 04 00 00
	00		 mov	 r8d, 4
  0016d	e8 00 00 00 00	 call	 luaZ_read
  00172	48 85 c0	 test	 rax, rax
  00175	0f 85 b1 00 00
	00		 jne	 $LN87@LoadDebug
$LN57@LoadDebug:
; Line 197
  0017b	48 63 7c 24 50	 movsxd	 rdi, DWORD PTR x$1[rsp]
  00180	48 85 ff	 test	 rdi, rdi
  00183	7e 1a		 jle	 SHORT $LN81@LoadDebug
$LL3@LoadDebug:
; Line 198
  00185	48 8b ce	 mov	 rcx, rsi
  00188	e8 00 00 00 00	 call	 LoadString
  0018d	48 8b 4d 58	 mov	 rcx, QWORD PTR [rbp+88]
  00191	48 8d 5b 10	 lea	 rbx, QWORD PTR [rbx+16]
  00195	48 89 44 0b f0	 mov	 QWORD PTR [rbx+rcx-16], rax
  0019a	48 ff cf	 dec	 rdi
  0019d	75 e6		 jne	 SHORT $LL3@LoadDebug
$LN81@LoadDebug:
  0019f	4c 8b 74 24 28	 mov	 r14, QWORD PTR [rsp+40]
  001a4	4c 8b 7c 24 20	 mov	 r15, QWORD PTR [rsp+32]
  001a9	48 8b 5c 24 58	 mov	 rbx, QWORD PTR [rsp+88]
  001ae	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
; Line 199
  001b3	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001b7	5e		 pop	 rsi
  001b8	5d		 pop	 rbp
  001b9	c3		 ret	 0
$LN83@LoadDebug:
; Line 182
  001ba	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  001be	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  001c5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  001cc	e8 00 00 00 00	 call	 luaO_pushfstring
  001d1	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  001d4	ba 03 00 00 00	 mov	 edx, 3
  001d9	e8 00 00 00 00	 call	 luaD_throw
  001de	cc		 int	 3
$LN85@LoadDebug:
; Line 185
  001df	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  001e3	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  001e6	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  001ed	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  001f4	e8 00 00 00 00	 call	 luaO_pushfstring
  001f9	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  001fc	ba 03 00 00 00	 mov	 edx, 3
  00201	e8 00 00 00 00	 call	 luaD_throw
  00206	cc		 int	 3
$LN86@LoadDebug:
; Line 186
  00207	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  0020b	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  00212	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00219	e8 00 00 00 00	 call	 luaO_pushfstring
  0021e	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00221	ba 03 00 00 00	 mov	 edx, 3
  00226	e8 00 00 00 00	 call	 luaD_throw
  0022b	cc		 int	 3
$LN87@LoadDebug:
; Line 196
  0022c	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  00230	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00233	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0023a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00241	e8 00 00 00 00	 call	 luaO_pushfstring
  00246	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00249	ba 03 00 00 00	 mov	 edx, 3
  0024e	e8 00 00 00 00	 call	 luaD_throw
  00253	cc		 int	 3
$LN68@LoadDebug:
; Line 194
  00254	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  00258	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  0025b	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  00262	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00269	e8 00 00 00 00	 call	 luaO_pushfstring
  0026e	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00271	ba 03 00 00 00	 mov	 edx, 3
  00276	e8 00 00 00 00	 call	 luaD_throw
  0027b	cc		 int	 3
$LN67@LoadDebug:
; Line 193
  0027c	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  00280	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00283	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0028a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00291	e8 00 00 00 00	 call	 luaO_pushfstring
  00296	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00299	ba 03 00 00 00	 mov	 edx, 3
  0029e	e8 00 00 00 00	 call	 luaD_throw
  002a3	cc		 int	 3
$LN82@LoadDebug:
LoadDebug ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LoadUpvalues
_TEXT	SEGMENT
x$1 = 64
x$2 = 64
S$ = 64
f$ = 72
x$3 = 80
LoadUpvalues PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 166
  00000	40 55		 push	 rbp
  00002	56		 push	 rsi
  00003	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00007	48 8b f1	 mov	 rsi, rcx
; Line 168
  0000a	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0000e	48 8b ea	 mov	 rbp, rdx
  00011	48 8d 54 24 40	 lea	 rdx, QWORD PTR x$2[rsp]
  00016	41 b8 04 00 00
	00		 mov	 r8d, 4
  0001c	e8 00 00 00 00	 call	 luaZ_read
  00021	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00024	48 85 c0	 test	 rax, rax
  00027	0f 85 d5 00 00
	00		 jne	 $LN52@LoadUpvalu
; Line 169
  0002d	48 89 5c 24 48	 mov	 QWORD PTR [rsp+72], rbx
  00032	48 63 5c 24 40	 movsxd	 rbx, DWORD PTR x$2[rsp]
  00037	45 33 c0	 xor	 r8d, r8d
  0003a	4c 8b cb	 mov	 r9, rbx
  0003d	33 d2		 xor	 edx, edx
  0003f	4c 89 74 24 20	 mov	 QWORD PTR [rsp+32], r14
  00044	49 c1 e1 04	 shl	 r9, 4
  00048	4c 8b f3	 mov	 r14, rbx
  0004b	e8 00 00 00 00	 call	 luaM_realloc_
; Line 170
  00050	89 5d 10	 mov	 DWORD PTR [rbp+16], ebx
; Line 171
  00053	33 db		 xor	 ebx, ebx
  00055	48 89 45 58	 mov	 QWORD PTR [rbp+88], rax
  00059	4d 85 f6	 test	 r14, r14
  0005c	0f 8e 8f 00 00
	00		 jle	 $LN48@LoadUpvalu
; Line 169
  00062	8b cb		 mov	 ecx, ebx
  00064	49 8b d6	 mov	 rdx, r14
  00067	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL6@LoadUpvalu:
; Line 172
  00070	48 8b 45 58	 mov	 rax, QWORD PTR [rbp+88]
  00074	48 8d 49 10	 lea	 rcx, QWORD PTR [rcx+16]
  00078	48 89 5c 01 f0	 mov	 QWORD PTR [rcx+rax-16], rbx
  0007d	48 ff ca	 dec	 rdx
  00080	75 ee		 jne	 SHORT $LL6@LoadUpvalu
; Line 173
  00082	4d 85 f6	 test	 r14, r14
  00085	7e 6a		 jle	 SHORT $LN48@LoadUpvalu
  00087	48 89 7c 24 58	 mov	 QWORD PTR [rsp+88], rdi
  0008c	48 8b fb	 mov	 rdi, rbx
  0008f	90		 npad	 1
$LL3@LoadUpvalu:
; Line 174
  00090	48 8b 4e 08	 mov	 rcx, QWORD PTR [rsi+8]
  00094	48 8d 54 24 40	 lea	 rdx, QWORD PTR x$1[rsp]
  00099	41 b8 01 00 00
	00		 mov	 r8d, 1
  0009f	e8 00 00 00 00	 call	 luaZ_read
  000a4	48 85 c0	 test	 rax, rax
  000a7	0f 85 a2 00 00
	00		 jne	 $LN39@LoadUpvalu
  000ad	48 8b 4d 58	 mov	 rcx, QWORD PTR [rbp+88]
  000b1	0f b6 44 24 40	 movzx	 eax, BYTE PTR x$1[rsp]
; Line 175
  000b6	48 8d 54 24 50	 lea	 rdx, QWORD PTR x$3[rsp]
  000bb	88 44 39 08	 mov	 BYTE PTR [rcx+rdi+8], al
  000bf	48 8b 4e 08	 mov	 rcx, QWORD PTR [rsi+8]
  000c3	41 b8 01 00 00
	00		 mov	 r8d, 1
  000c9	e8 00 00 00 00	 call	 luaZ_read
  000ce	48 85 c0	 test	 rax, rax
  000d1	75 54		 jne	 SHORT $LN40@LoadUpvalu
  000d3	48 8b 4d 58	 mov	 rcx, QWORD PTR [rbp+88]
  000d7	0f b6 44 24 50	 movzx	 eax, BYTE PTR x$3[rsp]
  000dc	48 ff c3	 inc	 rbx
  000df	88 44 39 09	 mov	 BYTE PTR [rcx+rdi+9], al
  000e3	48 83 c7 10	 add	 rdi, 16
  000e7	49 3b de	 cmp	 rbx, r14
  000ea	7c a4		 jl	 SHORT $LL3@LoadUpvalu
  000ec	48 8b 7c 24 58	 mov	 rdi, QWORD PTR [rsp+88]
$LN48@LoadUpvalu:
  000f1	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  000f6	4c 8b 74 24 20	 mov	 r14, QWORD PTR [rsp+32]
; Line 177
  000fb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000ff	5e		 pop	 rsi
  00100	5d		 pop	 rbp
  00101	c3		 ret	 0
$LN52@LoadUpvalu:
; Line 168
  00102	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  00106	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0010d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00114	e8 00 00 00 00	 call	 luaO_pushfstring
  00119	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  0011c	ba 03 00 00 00	 mov	 edx, 3
  00121	e8 00 00 00 00	 call	 luaD_throw
  00126	cc		 int	 3
$LN40@LoadUpvalu:
; Line 175
  00127	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  0012b	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  0012e	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  00135	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  0013c	e8 00 00 00 00	 call	 luaO_pushfstring
  00141	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00144	ba 03 00 00 00	 mov	 edx, 3
  00149	e8 00 00 00 00	 call	 luaD_throw
  0014e	cc		 int	 3
$LN39@LoadUpvalu:
; Line 174
  0014f	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  00153	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00156	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0015d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00164	e8 00 00 00 00	 call	 luaO_pushfstring
  00169	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  0016c	ba 03 00 00 00	 mov	 edx, 3
  00171	e8 00 00 00 00	 call	 luaD_throw
  00176	cc		 int	 3
$LN50@LoadUpvalu:
LoadUpvalues ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LoadProtos
_TEXT	SEGMENT
x$1 = 48
S$ = 48
f$ = 56
LoadProtos PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 152
  00000	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00005	41 56		 push	 r14
  00007	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000b	4c 8b f1	 mov	 r14, rcx
; Line 154
  0000e	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00012	48 8b fa	 mov	 rdi, rdx
  00015	48 8d 54 24 30	 lea	 rdx, QWORD PTR x$1[rsp]
  0001a	41 b8 04 00 00
	00		 mov	 r8d, 4
  00020	e8 00 00 00 00	 call	 luaZ_read
  00025	49 8b 0e	 mov	 rcx, QWORD PTR [r14]
  00028	48 85 c0	 test	 rax, rax
  0002b	0f 85 97 00 00
	00		 jne	 $LN231@LoadProtos
; Line 155
  00031	48 89 5c 24 38	 mov	 QWORD PTR [rsp+56], rbx
  00036	48 63 5c 24 30	 movsxd	 rbx, DWORD PTR x$1[rsp]
  0003b	45 33 c0	 xor	 r8d, r8d
  0003e	4c 8d 0c dd 00
	00 00 00	 lea	 r9, QWORD PTR [rbx*8]
  00046	33 d2		 xor	 edx, edx
  00048	48 89 74 24 40	 mov	 QWORD PTR [rsp+64], rsi
  0004d	48 8b f3	 mov	 rsi, rbx
  00050	e8 00 00 00 00	 call	 luaM_realloc_
; Line 156
  00055	89 5f 20	 mov	 DWORD PTR [rdi+32], ebx
; Line 157
  00058	33 db		 xor	 ebx, ebx
  0005a	48 89 47 40	 mov	 QWORD PTR [rdi+64], rax
  0005e	8b c3		 mov	 eax, ebx
  00060	48 85 f6	 test	 rsi, rsi
  00063	7e 4d		 jle	 SHORT $LN228@LoadProtos
  00065	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL6@LoadProtos:
; Line 158
  00070	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00074	48 ff c0	 inc	 rax
  00077	48 89 5c c1 f8	 mov	 QWORD PTR [rcx+rax*8-8], rbx
  0007c	48 3b c6	 cmp	 rax, rsi
  0007f	7c ef		 jl	 SHORT $LL6@LoadProtos
; Line 159
  00081	48 85 f6	 test	 rsi, rsi
  00084	7e 2c		 jle	 SHORT $LN228@LoadProtos
$LL3@LoadProtos:
; Line 160
  00086	49 8b 0e	 mov	 rcx, QWORD PTR [r14]
  00089	e8 00 00 00 00	 call	 luaF_newproto
  0008e	48 8b 4f 40	 mov	 rcx, QWORD PTR [rdi+64]
  00092	48 89 04 d9	 mov	 QWORD PTR [rcx+rbx*8], rax
; Line 161
  00096	48 8b 57 40	 mov	 rdx, QWORD PTR [rdi+64]
  0009a	4c 8b 47 68	 mov	 r8, QWORD PTR [rdi+104]
  0009e	48 8b 14 da	 mov	 rdx, QWORD PTR [rdx+rbx*8]
  000a2	49 8b ce	 mov	 rcx, r14
  000a5	e8 00 00 00 00	 call	 LoadFunction
  000aa	48 ff c3	 inc	 rbx
  000ad	48 3b de	 cmp	 rbx, rsi
  000b0	7c d4		 jl	 SHORT $LL3@LoadProtos
$LN228@LoadProtos:
  000b2	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  000b7	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
; Line 163
  000bc	48 8b 7c 24 48	 mov	 rdi, QWORD PTR [rsp+72]
  000c1	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000c5	41 5e		 pop	 r14
  000c7	c3		 ret	 0
$LN231@LoadProtos:
; Line 154
  000c8	4d 8b 46 10	 mov	 r8, QWORD PTR [r14+16]
  000cc	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  000d3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  000da	e8 00 00 00 00	 call	 luaO_pushfstring
  000df	49 8b 0e	 mov	 rcx, QWORD PTR [r14]
  000e2	ba 03 00 00 00	 mov	 edx, 3
  000e7	e8 00 00 00 00	 call	 luaD_throw
  000ec	cc		 int	 3
$LN229@LoadProtos:
LoadProtos ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LoadConstants
_TEXT	SEGMENT
x$1 = 32
x$2 = 112
x$3 = 112
S$ = 112
f$ = 120
x$4 = 128
x$5 = 136
LoadConstants PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 118
  00000	40 57		 push	 rdi
  00002	41 56		 push	 r14
  00004	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  00008	48 8b f9	 mov	 rdi, rcx
; Line 120
  0000b	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0000f	4c 8b f2	 mov	 r14, rdx
  00012	48 8d 54 24 70	 lea	 rdx, QWORD PTR x$3[rsp]
  00017	41 b8 04 00 00
	00		 mov	 r8d, 4
  0001d	e8 00 00 00 00	 call	 luaZ_read
  00022	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00025	48 85 c0	 test	 rax, rax
  00028	0f 85 ac 01 00
	00		 jne	 $LN85@LoadConsta
; Line 121
  0002e	48 89 5c 24 78	 mov	 QWORD PTR [rsp+120], rbx
  00033	48 63 5c 24 70	 movsxd	 rbx, DWORD PTR x$3[rsp]
  00038	48 89 74 24 48	 mov	 QWORD PTR [rsp+72], rsi
  0003d	4c 8b cb	 mov	 r9, rbx
  00040	4c 89 64 24 40	 mov	 QWORD PTR [rsp+64], r12
  00045	45 33 c0	 xor	 r8d, r8d
  00048	49 c1 e1 04	 shl	 r9, 4
  0004c	33 d2		 xor	 edx, edx
  0004e	4c 89 7c 24 30	 mov	 QWORD PTR [rsp+48], r15
  00053	4c 8b fb	 mov	 r15, rbx
  00056	e8 00 00 00 00	 call	 luaM_realloc_
; Line 123
  0005b	45 33 e4	 xor	 r12d, r12d
  0005e	41 89 5e 14	 mov	 DWORD PTR [r14+20], ebx
  00062	49 89 46 30	 mov	 QWORD PTR [r14+48], rax
  00066	85 db		 test	 ebx, ebx
  00068	7e 18		 jle	 SHORT $LN12@LoadConsta
; Line 121
  0006a	41 8b cc	 mov	 ecx, r12d
  0006d	48 8b d3	 mov	 rdx, rbx
$LL14@LoadConsta:
; Line 124
  00070	49 8b 46 30	 mov	 rax, QWORD PTR [r14+48]
  00074	48 8d 49 10	 lea	 rcx, QWORD PTR [rcx+16]
  00078	44 89 64 08 f8	 mov	 DWORD PTR [rax+rcx-8], r12d
  0007d	48 ff ca	 dec	 rdx
  00080	75 ee		 jne	 SHORT $LL14@LoadConsta
$LN12@LoadConsta:
; Line 125
  00082	49 8b f4	 mov	 rsi, r12
  00085	85 db		 test	 ebx, ebx
  00087	0f 8e 31 01 00
	00		 jle	 $LN81@LoadConsta
  0008d	48 89 6c 24 50	 mov	 QWORD PTR [rsp+80], rbp
  00092	4c 89 6c 24 38	 mov	 QWORD PTR [rsp+56], r13
  00097	49 8b dc	 mov	 rbx, r12
  0009a	4c 8d 2d 00 00
	00 00		 lea	 r13, OFFSET FLAT:__ImageBase
$LL11@LoadConsta:
; Line 127
  000a1	48 8b 4f 08	 mov	 rcx, QWORD PTR [rdi+8]
  000a5	49 8b 6e 30	 mov	 rbp, QWORD PTR [r14+48]
  000a9	48 8d 54 24 70	 lea	 rdx, QWORD PTR x$2[rsp]
  000ae	41 b8 01 00 00
	00		 mov	 r8d, 1
  000b4	e8 00 00 00 00	 call	 luaZ_read
  000b9	48 85 c0	 test	 rax, rax
  000bc	0f 85 b5 01 00
	00		 jne	 $LN65@LoadConsta
  000c2	0f b6 44 24 70	 movzx	 eax, BYTE PTR x$2[rsp]
; Line 128
  000c7	83 f8 14	 cmp	 eax, 20
  000ca	0f 87 d4 00 00
	00		 ja	 $LN10@LoadConsta
  000d0	41 0f b6 84 05
	00 00 00 00	 movzx	 eax, BYTE PTR $LN76@LoadConsta[r13+rax]
  000d9	41 8b 8c 85 00
	00 00 00	 mov	 ecx, DWORD PTR $LN77@LoadConsta[r13+rax*4]
  000e1	49 03 cd	 add	 rcx, r13
  000e4	ff e1		 jmp	 rcx
$LN6@LoadConsta:
; Line 130
  000e6	44 89 64 2b 08	 mov	 DWORD PTR [rbx+rbp+8], r12d
; Line 131
  000eb	e9 b4 00 00 00	 jmp	 $LN10@LoadConsta
$LN5@LoadConsta:
; Line 133
  000f0	48 8b 4f 08	 mov	 rcx, QWORD PTR [rdi+8]
  000f4	48 8d 94 24 80
	00 00 00	 lea	 rdx, QWORD PTR x$4[rsp]
  000fc	41 b8 01 00 00
	00		 mov	 r8d, 1
  00102	e8 00 00 00 00	 call	 luaZ_read
  00107	48 85 c0	 test	 rax, rax
  0010a	0f 85 ef 00 00
	00		 jne	 $LN66@LoadConsta
  00110	0f b6 84 24 80
	00 00 00	 movzx	 eax, BYTE PTR x$4[rsp]
  00118	c7 44 2b 08 01
	00 00 00	 mov	 DWORD PTR [rbx+rbp+8], 1
  00120	89 04 2b	 mov	 DWORD PTR [rbx+rbp], eax
; Line 134
  00123	eb 7f		 jmp	 SHORT $LN10@LoadConsta
$LN4@LoadConsta:
; Line 136
  00125	48 8b 4f 08	 mov	 rcx, QWORD PTR [rdi+8]
  00129	48 8d 94 24 88
	00 00 00	 lea	 rdx, QWORD PTR x$5[rsp]
  00131	41 b8 08 00 00
	00		 mov	 r8d, 8
  00137	e8 00 00 00 00	 call	 luaZ_read
  0013c	48 85 c0	 test	 rax, rax
  0013f	0f 85 e2 00 00
	00		 jne	 $LN67@LoadConsta
  00145	f2 0f 10 84 24
	88 00 00 00	 movsdx	 xmm0, QWORD PTR x$5[rsp]
  0014e	c7 44 2b 08 03
	00 00 00	 mov	 DWORD PTR [rbx+rbp+8], 3
  00156	f2 0f 11 04 2b	 movsdx	 QWORD PTR [rbx+rbp], xmm0
; Line 137
  0015b	eb 47		 jmp	 SHORT $LN10@LoadConsta
$LN3@LoadConsta:
; Line 139
  0015d	48 8b 4f 08	 mov	 rcx, QWORD PTR [rdi+8]
  00161	48 8d 54 24 20	 lea	 rdx, QWORD PTR x$1[rsp]
  00166	41 b8 08 00 00
	00		 mov	 r8d, 8
  0016c	e8 00 00 00 00	 call	 luaZ_read
  00171	48 85 c0	 test	 rax, rax
  00174	0f 85 d5 00 00
	00		 jne	 $LN68@LoadConsta
  0017a	48 8b 44 24 20	 mov	 rax, QWORD PTR x$1[rsp]
  0017f	c7 44 2b 08 13
	00 00 00	 mov	 DWORD PTR [rbx+rbp+8], 19
  00187	48 89 04 2b	 mov	 QWORD PTR [rbx+rbp], rax
; Line 140
  0018b	eb 17		 jmp	 SHORT $LN10@LoadConsta
$LN2@LoadConsta:
; Line 143
  0018d	48 8b cf	 mov	 rcx, rdi
  00190	e8 00 00 00 00	 call	 LoadString
  00195	48 89 04 2b	 mov	 QWORD PTR [rbx+rbp], rax
  00199	0f b6 48 08	 movzx	 ecx, BYTE PTR [rax+8]
  0019d	83 c9 40	 or	 ecx, 64			; 00000040H
  001a0	89 4c 2b 08	 mov	 DWORD PTR [rbx+rbp+8], ecx
$LN10@LoadConsta:
; Line 125
  001a4	48 ff c6	 inc	 rsi
  001a7	48 83 c3 10	 add	 rbx, 16
  001ab	49 3b f7	 cmp	 rsi, r15
  001ae	0f 8c ed fe ff
	ff		 jl	 $LL11@LoadConsta
  001b4	4c 8b 6c 24 38	 mov	 r13, QWORD PTR [rsp+56]
  001b9	48 8b 6c 24 50	 mov	 rbp, QWORD PTR [rsp+80]
$LN81@LoadConsta:
  001be	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  001c3	4c 8b 64 24 40	 mov	 r12, QWORD PTR [rsp+64]
  001c8	48 8b 5c 24 78	 mov	 rbx, QWORD PTR [rsp+120]
  001cd	4c 8b 7c 24 30	 mov	 r15, QWORD PTR [rsp+48]
; Line 149
  001d2	48 83 c4 58	 add	 rsp, 88			; 00000058H
  001d6	41 5e		 pop	 r14
  001d8	5f		 pop	 rdi
  001d9	c3		 ret	 0
$LN85@LoadConsta:
; Line 120
  001da	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  001de	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  001e5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  001ec	e8 00 00 00 00	 call	 luaO_pushfstring
  001f1	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  001f4	ba 03 00 00 00	 mov	 edx, 3
  001f9	e8 00 00 00 00	 call	 luaD_throw
  001fe	cc		 int	 3
$LN66@LoadConsta:
; Line 133
  001ff	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  00203	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00206	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0020d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00214	e8 00 00 00 00	 call	 luaO_pushfstring
  00219	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  0021c	ba 03 00 00 00	 mov	 edx, 3
  00221	e8 00 00 00 00	 call	 luaD_throw
  00226	cc		 int	 3
$LN67@LoadConsta:
; Line 136
  00227	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  0022b	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  0022e	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  00235	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  0023c	e8 00 00 00 00	 call	 luaO_pushfstring
  00241	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00244	ba 03 00 00 00	 mov	 edx, 3
  00249	e8 00 00 00 00	 call	 luaD_throw
  0024e	cc		 int	 3
$LN68@LoadConsta:
; Line 139
  0024f	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  00253	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00256	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0025d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00264	e8 00 00 00 00	 call	 luaO_pushfstring
  00269	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  0026c	ba 03 00 00 00	 mov	 edx, 3
  00271	e8 00 00 00 00	 call	 luaD_throw
  00276	cc		 int	 3
$LN65@LoadConsta:
; Line 127
  00277	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  0027b	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  0027e	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  00285	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  0028c	e8 00 00 00 00	 call	 luaO_pushfstring
  00291	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00294	ba 03 00 00 00	 mov	 edx, 3
  00299	e8 00 00 00 00	 call	 luaD_throw
  0029e	cc		 int	 3
$LN84@LoadConsta:
  0029f	90		 npad	 1
$LN77@LoadConsta:
; Line 149
  002a0	00 00 00 00	 DD	 $LN6@LoadConsta
  002a4	00 00 00 00	 DD	 $LN5@LoadConsta
  002a8	00 00 00 00	 DD	 $LN4@LoadConsta
  002ac	00 00 00 00	 DD	 $LN2@LoadConsta
  002b0	00 00 00 00	 DD	 $LN3@LoadConsta
  002b4	00 00 00 00	 DD	 $LN10@LoadConsta
$LN76@LoadConsta:
  002b8	00		 DB	 0
  002b9	01		 DB	 1
  002ba	05		 DB	 5
  002bb	02		 DB	 2
  002bc	03		 DB	 3
  002bd	05		 DB	 5
  002be	05		 DB	 5
  002bf	05		 DB	 5
  002c0	05		 DB	 5
  002c1	05		 DB	 5
  002c2	05		 DB	 5
  002c3	05		 DB	 5
  002c4	05		 DB	 5
  002c5	05		 DB	 5
  002c6	05		 DB	 5
  002c7	05		 DB	 5
  002c8	05		 DB	 5
  002c9	05		 DB	 5
  002ca	05		 DB	 5
  002cb	04		 DB	 4
  002cc	03		 DB	 3
LoadConstants ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LoadFunction
_TEXT	SEGMENT
x$1 = 48
x$2 = 48
x$3 = 48
x$4 = 48
x$5 = 48
S$ = 48
f$ = 56
psource$ = 64
LoadFunction PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 202
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b d8	 mov	 rbx, r8
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b f9	 mov	 rdi, rcx
; Line 203
  00018	e8 00 00 00 00	 call	 LoadString
; Line 206
  0001d	48 8d 54 24 30	 lea	 rdx, QWORD PTR x$5[rsp]
  00022	41 b8 04 00 00
	00		 mov	 r8d, 4
  00028	48 85 c0	 test	 rax, rax
  0002b	48 0f 44 c3	 cmove	 rax, rbx
  0002f	48 89 46 68	 mov	 QWORD PTR [rsi+104], rax
  00033	48 8b 4f 08	 mov	 rcx, QWORD PTR [rdi+8]
  00037	e8 00 00 00 00	 call	 luaZ_read
  0003c	48 85 c0	 test	 rax, rax
  0003f	0f 85 e0 00 00
	00		 jne	 $LN51@LoadFuncti
  00045	8b 44 24 30	 mov	 eax, DWORD PTR x$5[rsp]
; Line 207
  00049	48 8d 54 24 30	 lea	 rdx, QWORD PTR x$4[rsp]
  0004e	41 b8 04 00 00
	00		 mov	 r8d, 4
  00054	89 46 28	 mov	 DWORD PTR [rsi+40], eax
  00057	48 8b 4f 08	 mov	 rcx, QWORD PTR [rdi+8]
  0005b	e8 00 00 00 00	 call	 luaZ_read
  00060	48 85 c0	 test	 rax, rax
  00063	0f 85 e4 00 00
	00		 jne	 $LN53@LoadFuncti
  00069	8b 44 24 30	 mov	 eax, DWORD PTR x$4[rsp]
; Line 208
  0006d	48 8d 54 24 30	 lea	 rdx, QWORD PTR x$3[rsp]
  00072	41 b8 01 00 00
	00		 mov	 r8d, 1
  00078	89 46 2c	 mov	 DWORD PTR [rsi+44], eax
  0007b	48 8b 4f 08	 mov	 rcx, QWORD PTR [rdi+8]
  0007f	e8 00 00 00 00	 call	 luaZ_read
  00084	48 85 c0	 test	 rax, rax
  00087	0f 85 e8 00 00
	00		 jne	 $LN54@LoadFuncti
  0008d	0f b6 44 24 30	 movzx	 eax, BYTE PTR x$3[rsp]
; Line 209
  00092	48 8d 54 24 30	 lea	 rdx, QWORD PTR x$2[rsp]
  00097	41 b8 01 00 00
	00		 mov	 r8d, 1
  0009d	88 46 0a	 mov	 BYTE PTR [rsi+10], al
  000a0	48 8b 4f 08	 mov	 rcx, QWORD PTR [rdi+8]
  000a4	e8 00 00 00 00	 call	 luaZ_read
  000a9	48 85 c0	 test	 rax, rax
  000ac	0f 85 eb 00 00
	00		 jne	 $LN55@LoadFuncti
  000b2	0f b6 44 24 30	 movzx	 eax, BYTE PTR x$2[rsp]
; Line 210
  000b7	48 8d 54 24 30	 lea	 rdx, QWORD PTR x$1[rsp]
  000bc	41 b8 01 00 00
	00		 mov	 r8d, 1
  000c2	88 46 0b	 mov	 BYTE PTR [rsi+11], al
  000c5	48 8b 4f 08	 mov	 rcx, QWORD PTR [rdi+8]
  000c9	e8 00 00 00 00	 call	 luaZ_read
  000ce	48 85 c0	 test	 rax, rax
  000d1	0f 85 ee 00 00
	00		 jne	 $LN56@LoadFuncti
  000d7	0f b6 44 24 30	 movzx	 eax, BYTE PTR x$1[rsp]
; Line 211
  000dc	48 8b d6	 mov	 rdx, rsi
  000df	48 8b cf	 mov	 rcx, rdi
  000e2	88 46 0c	 mov	 BYTE PTR [rsi+12], al
  000e5	e8 00 00 00 00	 call	 LoadCode
; Line 212
  000ea	48 8b d6	 mov	 rdx, rsi
  000ed	48 8b cf	 mov	 rcx, rdi
  000f0	e8 00 00 00 00	 call	 LoadConstants
; Line 213
  000f5	48 8b d6	 mov	 rdx, rsi
  000f8	48 8b cf	 mov	 rcx, rdi
  000fb	e8 00 00 00 00	 call	 LoadUpvalues
; Line 214
  00100	48 8b d6	 mov	 rdx, rsi
  00103	48 8b cf	 mov	 rcx, rdi
  00106	e8 00 00 00 00	 call	 LoadProtos
; Line 215
  0010b	48 8b d6	 mov	 rdx, rsi
  0010e	48 8b cf	 mov	 rcx, rdi
; Line 216
  00111	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00116	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  0011b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0011f	5f		 pop	 rdi
; Line 215
  00120	e9 00 00 00 00	 jmp	 LoadDebug
$LN51@LoadFuncti:
; Line 206
  00125	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  00129	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  0012c	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  00133	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  0013a	e8 00 00 00 00	 call	 luaO_pushfstring
  0013f	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00142	ba 03 00 00 00	 mov	 edx, 3
  00147	e8 00 00 00 00	 call	 luaD_throw
  0014c	cc		 int	 3
$LN53@LoadFuncti:
; Line 207
  0014d	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  00151	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00154	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0015b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00162	e8 00 00 00 00	 call	 luaO_pushfstring
  00167	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  0016a	ba 03 00 00 00	 mov	 edx, 3
  0016f	e8 00 00 00 00	 call	 luaD_throw
  00174	cc		 int	 3
$LN54@LoadFuncti:
; Line 208
  00175	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  00179	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  0017c	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  00183	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  0018a	e8 00 00 00 00	 call	 luaO_pushfstring
  0018f	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00192	ba 03 00 00 00	 mov	 edx, 3
  00197	e8 00 00 00 00	 call	 luaD_throw
  0019c	cc		 int	 3
$LN55@LoadFuncti:
; Line 209
  0019d	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  001a1	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  001a4	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  001ab	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  001b2	e8 00 00 00 00	 call	 luaO_pushfstring
  001b7	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  001ba	ba 03 00 00 00	 mov	 edx, 3
  001bf	e8 00 00 00 00	 call	 luaD_throw
  001c4	cc		 int	 3
$LN56@LoadFuncti:
; Line 210
  001c5	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  001c9	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  001cc	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  001d3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  001da	e8 00 00 00 00	 call	 luaO_pushfstring
  001df	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  001e2	ba 03 00 00 00	 mov	 edx, 3
  001e7	e8 00 00 00 00	 call	 luaD_throw
  001ec	cc		 int	 3
$LN50@LoadFuncti:
LoadFunction ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LoadCode
_TEXT	SEGMENT
x$1 = 48
S$ = 48
f$ = 56
LoadCode PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 107
  00000	48 89 6c 24 20	 mov	 QWORD PTR [rsp+32], rbp
  00005	56		 push	 rsi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b f1	 mov	 rsi, rcx
; Line 108
  0000d	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00011	48 8b ea	 mov	 rbp, rdx
  00014	48 8d 54 24 30	 lea	 rdx, QWORD PTR x$1[rsp]
  00019	41 b8 04 00 00
	00		 mov	 r8d, 4
  0001f	e8 00 00 00 00	 call	 luaZ_read
  00024	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00027	48 85 c0	 test	 rax, rax
  0002a	75 53		 jne	 SHORT $LN20@LoadCode
; Line 109
  0002c	48 89 5c 24 38	 mov	 QWORD PTR [rsp+56], rbx
  00031	48 63 5c 24 30	 movsxd	 rbx, DWORD PTR x$1[rsp]
  00036	48 89 7c 24 40	 mov	 QWORD PTR [rsp+64], rdi
  0003b	48 8b fb	 mov	 rdi, rbx
  0003e	45 33 c0	 xor	 r8d, r8d
  00041	33 d2		 xor	 edx, edx
  00043	48 c1 e7 02	 shl	 rdi, 2
  00047	4c 8b cf	 mov	 r9, rdi
  0004a	e8 00 00 00 00	 call	 luaM_realloc_
; Line 110
  0004f	89 5d 18	 mov	 DWORD PTR [rbp+24], ebx
; Line 111
  00052	4c 8b c7	 mov	 r8, rdi
  00055	48 89 45 38	 mov	 QWORD PTR [rbp+56], rax
  00059	48 8b 4e 08	 mov	 rcx, QWORD PTR [rsi+8]
  0005d	48 8b d0	 mov	 rdx, rax
  00060	e8 00 00 00 00	 call	 luaZ_read
  00065	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]
  0006a	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  0006f	48 85 c0	 test	 rax, rax
  00072	75 30		 jne	 SHORT $LN22@LoadCode
; Line 112
  00074	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  00079	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007d	5e		 pop	 rsi
  0007e	c3		 ret	 0
$LN20@LoadCode:
; Line 108
  0007f	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  00083	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0008a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00091	e8 00 00 00 00	 call	 luaO_pushfstring
  00096	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00099	ba 03 00 00 00	 mov	 edx, 3
  0009e	e8 00 00 00 00	 call	 luaD_throw
  000a3	cc		 int	 3
$LN22@LoadCode:
; Line 111
  000a4	4c 8b 46 10	 mov	 r8, QWORD PTR [rsi+16]
  000a8	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  000ab	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  000b2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  000b9	e8 00 00 00 00	 call	 luaO_pushfstring
  000be	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  000c1	ba 03 00 00 00	 mov	 edx, 3
  000c6	e8 00 00 00 00	 call	 luaD_throw
  000cb	cc		 int	 3
$LN19@LoadCode:
LoadCode ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LoadString
_TEXT	SEGMENT
x$1 = 32
size$ = 40
buff$2 = 48
__$ArrayPad$ = 88
S$ = 112
LoadString PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 88
  00000	40 53		 push	 rbx
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0000d	48 33 c4	 xor	 rax, rsp
  00010	48 89 44 24 58	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00015	48 8b d9	 mov	 rbx, rcx
; Line 89
  00018	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0001c	48 8d 54 24 20	 lea	 rdx, QWORD PTR x$1[rsp]
  00021	41 b8 01 00 00
	00		 mov	 r8d, 1
  00027	e8 00 00 00 00	 call	 luaZ_read
  0002c	48 85 c0	 test	 rax, rax
  0002f	0f 85 e0 00 00
	00		 jne	 $LN39@LoadString
  00035	0f b6 54 24 20	 movzx	 edx, BYTE PTR x$1[rsp]
  0003a	48 89 54 24 28	 mov	 QWORD PTR size$[rsp], rdx
; Line 90
  0003f	48 81 fa ff 00
	00 00		 cmp	 rdx, 255		; 000000ffH
  00046	75 20		 jne	 SHORT $LN18@LoadString
; Line 91
  00048	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  0004c	44 8d 40 08	 lea	 r8d, QWORD PTR [rax+8]
  00050	48 8d 54 24 28	 lea	 rdx, QWORD PTR size$[rsp]
  00055	e8 00 00 00 00	 call	 luaZ_read
  0005a	48 85 c0	 test	 rax, rax
  0005d	0f 85 da 00 00
	00		 jne	 $LN41@LoadString
  00063	48 8b 54 24 28	 mov	 rdx, QWORD PTR size$[rsp]
$LN18@LoadString:
; Line 92
  00068	48 85 d2	 test	 rdx, rdx
  0006b	75 15		 jne	 SHORT $LN4@LoadString
; Line 93
  0006d	33 c0		 xor	 eax, eax
; Line 104
  0006f	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00074	48 33 cc	 xor	 rcx, rsp
  00077	e8 00 00 00 00	 call	 __security_check_cookie
  0007c	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00080	5b		 pop	 rbx
  00081	c3		 ret	 0
$LN4@LoadString:
; Line 94
  00082	48 ff ca	 dec	 rdx
  00085	48 89 54 24 28	 mov	 QWORD PTR size$[rsp], rdx
  0008a	48 83 fa 28	 cmp	 rdx, 40			; 00000028H
  0008e	77 3f		 ja	 SHORT $LN2@LoadString
; Line 96
  00090	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  00094	4c 8b c2	 mov	 r8, rdx
  00097	48 8d 54 24 30	 lea	 rdx, QWORD PTR buff$2[rsp]
  0009c	e8 00 00 00 00	 call	 luaZ_read
  000a1	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  000a4	48 85 c0	 test	 rax, rax
  000a7	0f 85 b8 00 00
	00		 jne	 $LN42@LoadString
; Line 97
  000ad	4c 8b 44 24 28	 mov	 r8, QWORD PTR size$[rsp]
  000b2	48 8d 54 24 30	 lea	 rdx, QWORD PTR buff$2[rsp]
  000b7	e8 00 00 00 00	 call	 luaS_newlstr
; Line 104
  000bc	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000c1	48 33 cc	 xor	 rcx, rsp
  000c4	e8 00 00 00 00	 call	 __security_check_cookie
  000c9	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000cd	5b		 pop	 rbx
  000ce	c3		 ret	 0
$LN2@LoadString:
; Line 100
  000cf	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  000d2	48 89 7c 24 78	 mov	 QWORD PTR [rsp+120], rdi
  000d7	e8 00 00 00 00	 call	 luaS_createlngstrobj
; Line 101
  000dc	4c 8b 44 24 28	 mov	 r8, QWORD PTR size$[rsp]
  000e1	48 8b 4b 08	 mov	 rcx, QWORD PTR [rbx+8]
  000e5	48 8d 50 18	 lea	 rdx, QWORD PTR [rax+24]
  000e9	48 8b f8	 mov	 rdi, rax
  000ec	e8 00 00 00 00	 call	 luaZ_read
  000f1	48 85 c0	 test	 rax, rax
  000f4	0f 85 90 00 00
	00		 jne	 $LN43@LoadString
; Line 102
  000fa	48 8b c7	 mov	 rax, rdi
  000fd	48 8b 7c 24 78	 mov	 rdi, QWORD PTR [rsp+120]
; Line 104
  00102	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00107	48 33 cc	 xor	 rcx, rsp
  0010a	e8 00 00 00 00	 call	 __security_check_cookie
  0010f	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00113	5b		 pop	 rbx
  00114	c3		 ret	 0
$LN39@LoadString:
; Line 89
  00115	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00119	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0011c	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  00123	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  0012a	e8 00 00 00 00	 call	 luaO_pushfstring
  0012f	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00132	ba 03 00 00 00	 mov	 edx, 3
  00137	e8 00 00 00 00	 call	 luaD_throw
  0013c	cc		 int	 3
$LN41@LoadString:
; Line 91
  0013d	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00141	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00144	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0014b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00152	e8 00 00 00 00	 call	 luaO_pushfstring
  00157	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0015a	ba 03 00 00 00	 mov	 edx, 3
  0015f	e8 00 00 00 00	 call	 luaD_throw
  00164	cc		 int	 3
$LN42@LoadString:
; Line 96
  00165	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00169	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  00170	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00177	e8 00 00 00 00	 call	 luaO_pushfstring
  0017c	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0017f	ba 03 00 00 00	 mov	 edx, 3
  00184	e8 00 00 00 00	 call	 luaD_throw
  00189	cc		 int	 3
$LN43@LoadString:
; Line 101
  0018a	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  0018e	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00191	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  00198	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  0019f	e8 00 00 00 00	 call	 luaO_pushfstring
  001a4	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  001a7	ba 03 00 00 00	 mov	 edx, 3
  001ac	e8 00 00 00 00	 call	 luaD_throw
  001b1	cc		 int	 3
$LN38@LoadString:
LoadString ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LoadInteger
_TEXT	SEGMENT
x$ = 48
S$ = 48
LoadInteger PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 81
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
; Line 83
  00009	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0000d	48 8d 54 24 30	 lea	 rdx, QWORD PTR x$[rsp]
  00012	41 b8 08 00 00
	00		 mov	 r8d, 8
  00018	e8 00 00 00 00	 call	 luaZ_read
  0001d	48 85 c0	 test	 rax, rax
  00020	75 0b		 jne	 SHORT $LN11@LoadIntege
; Line 84
  00022	48 8b 44 24 30	 mov	 rax, QWORD PTR x$[rsp]
; Line 85
  00027	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002b	5b		 pop	 rbx
  0002c	c3		 ret	 0
$LN11@LoadIntege:
; Line 83
  0002d	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00031	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00034	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0003b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00042	e8 00 00 00 00	 call	 luaO_pushfstring
  00047	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0004a	ba 03 00 00 00	 mov	 edx, 3
  0004f	e8 00 00 00 00	 call	 luaD_throw
  00054	cc		 int	 3
$LN10@LoadIntege:
LoadInteger ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LoadNumber
_TEXT	SEGMENT
x$ = 48
S$ = 48
LoadNumber PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 74
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
; Line 76
  00009	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0000d	48 8d 54 24 30	 lea	 rdx, QWORD PTR x$[rsp]
  00012	41 b8 08 00 00
	00		 mov	 r8d, 8
  00018	e8 00 00 00 00	 call	 luaZ_read
  0001d	48 85 c0	 test	 rax, rax
  00020	75 0c		 jne	 SHORT $LN11@LoadNumber
; Line 77
  00022	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR x$[rsp]
; Line 78
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5b		 pop	 rbx
  0002d	c3		 ret	 0
$LN11@LoadNumber:
; Line 76
  0002e	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00032	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00035	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0003c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00043	e8 00 00 00 00	 call	 luaO_pushfstring
  00048	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0004b	ba 03 00 00 00	 mov	 edx, 3
  00050	e8 00 00 00 00	 call	 luaD_throw
  00055	cc		 int	 3
$LN10@LoadNumber:
LoadNumber ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LoadInt
_TEXT	SEGMENT
x$ = 48
S$ = 48
LoadInt	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 67
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
; Line 69
  00009	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0000d	48 8d 54 24 30	 lea	 rdx, QWORD PTR x$[rsp]
  00012	41 b8 04 00 00
	00		 mov	 r8d, 4
  00018	e8 00 00 00 00	 call	 luaZ_read
  0001d	48 85 c0	 test	 rax, rax
  00020	75 0a		 jne	 SHORT $LN11@LoadInt
; Line 70
  00022	8b 44 24 30	 mov	 eax, DWORD PTR x$[rsp]
; Line 71
  00026	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002a	5b		 pop	 rbx
  0002b	c3		 ret	 0
$LN11@LoadInt:
; Line 69
  0002c	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00030	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00033	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0003a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00041	e8 00 00 00 00	 call	 luaO_pushfstring
  00046	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00049	ba 03 00 00 00	 mov	 edx, 3
  0004e	e8 00 00 00 00	 call	 luaD_throw
  00053	cc		 int	 3
$LN10@LoadInt:
LoadInt	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LoadByte
_TEXT	SEGMENT
x$ = 48
S$ = 48
LoadByte PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 60
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
; Line 62
  00009	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0000d	48 8d 54 24 30	 lea	 rdx, QWORD PTR x$[rsp]
  00012	41 b8 01 00 00
	00		 mov	 r8d, 1
  00018	e8 00 00 00 00	 call	 luaZ_read
  0001d	48 85 c0	 test	 rax, rax
  00020	75 0b		 jne	 SHORT $LN11@LoadByte
; Line 63
  00022	0f b6 44 24 30	 movzx	 eax, BYTE PTR x$[rsp]
; Line 64
  00027	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002b	5b		 pop	 rbx
  0002c	c3		 ret	 0
$LN11@LoadByte:
; Line 62
  0002d	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00031	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00034	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0003b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00042	e8 00 00 00 00	 call	 luaO_pushfstring
  00047	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0004a	ba 03 00 00 00	 mov	 edx, 3
  0004f	e8 00 00 00 00	 call	 luaD_throw
  00054	cc		 int	 3
$LN10@LoadByte:
LoadByte ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT LoadBlock
_TEXT	SEGMENT
S$ = 48
b$ = 56
size$ = 64
LoadBlock PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 51
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
; Line 52
  00009	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0000d	e8 00 00 00 00	 call	 luaZ_read
  00012	48 85 c0	 test	 rax, rax
  00015	75 06		 jne	 SHORT $LN8@LoadBlock
; Line 54
  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5b		 pop	 rbx
  0001c	c3		 ret	 0
$LN8@LoadBlock:
; Line 53
  0001d	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00021	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00024	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  0002b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  00032	e8 00 00 00 00	 call	 luaO_pushfstring
  00037	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0003a	ba 03 00 00 00	 mov	 edx, 3
  0003f	e8 00 00 00 00	 call	 luaD_throw
  00044	cc		 int	 3
$LN7@LoadBlock:
LoadBlock ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT error
_TEXT	SEGMENT
S$ = 48
why$ = 56
error	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 39
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 40
  00006	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  0000a	48 8b d9	 mov	 rbx, rcx
  0000d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00010	4c 8b ca	 mov	 r9, rdx
  00013	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  0001a	e8 00 00 00 00	 call	 luaO_pushfstring
; Line 41
  0001f	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00022	ba 03 00 00 00	 mov	 edx, 3
  00027	e8 00 00 00 00	 call	 luaD_throw
  0002c	cc		 int	 3
$LN3@error:
error	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaU_undump
_TEXT	SEGMENT
S$ = 32
x$1 = 80
L$ = 80
Z$ = 88
name$ = 96
luaU_undump PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lundump.c
; Line 258
$LN22:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
; Line 261
  00006	45 0f b6 08	 movzx	 r9d, BYTE PTR [r8]
  0000a	48 8b f9	 mov	 rdi, rcx
  0000d	41 80 f9 40	 cmp	 r9b, 64			; 00000040H
  00011	74 17		 je	 SHORT $LN4@luaU_undum
  00013	41 80 f9 3d	 cmp	 r9b, 61			; 0000003dH
  00017	74 11		 je	 SHORT $LN4@luaU_undum
; Line 263
  00019	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0O@CNJIDMJE@binary?5string?$AA@
  00020	41 80 f9 1b	 cmp	 r9b, 27
  00024	49 0f 45 c0	 cmovne	 rax, r8
; Line 266
  00028	eb 04		 jmp	 SHORT $LN19@luaU_undum
$LN4@luaU_undum:
; Line 262
  0002a	49 8d 40 01	 lea	 rax, QWORD PTR [r8+1]
$LN19@luaU_undum:
; Line 267
  0002e	48 89 4c 24 20	 mov	 QWORD PTR S$[rsp], rcx
; Line 269
  00033	48 8d 4c 24 20	 lea	 rcx, QWORD PTR S$[rsp]
  00038	48 89 44 24 30	 mov	 QWORD PTR S$[rsp+16], rax
  0003d	48 89 54 24 28	 mov	 QWORD PTR S$[rsp+8], rdx
  00042	e8 00 00 00 00	 call	 checkHeader
; Line 270
  00047	48 8b 4c 24 28	 mov	 rcx, QWORD PTR S$[rsp+8]
  0004c	48 8d 54 24 50	 lea	 rdx, QWORD PTR x$1[rsp]
  00051	41 b8 01 00 00
	00		 mov	 r8d, 1
  00057	e8 00 00 00 00	 call	 luaZ_read
  0005c	48 85 c0	 test	 rax, rax
  0005f	75 55		 jne	 SHORT $LN20@luaU_undum
  00061	0f b6 54 24 50	 movzx	 edx, BYTE PTR x$1[rsp]
  00066	48 8b cf	 mov	 rcx, rdi
  00069	48 89 5c 24 58	 mov	 QWORD PTR [rsp+88], rbx
  0006e	e8 00 00 00 00	 call	 luaF_newLclosure
; Line 271
  00073	48 8b 4f 10	 mov	 rcx, QWORD PTR [rdi+16]
  00077	48 89 01	 mov	 QWORD PTR [rcx], rax
  0007a	c7 41 08 46 00
	00 00		 mov	 DWORD PTR [rcx+8], 70	; 00000046H
; Line 272
  00081	48 8b cf	 mov	 rcx, rdi
  00084	48 8b d8	 mov	 rbx, rax
  00087	e8 00 00 00 00	 call	 luaD_inctop
; Line 273
  0008c	48 8b cf	 mov	 rcx, rdi
  0008f	e8 00 00 00 00	 call	 luaF_newproto
; Line 274
  00094	48 8d 4c 24 20	 lea	 rcx, QWORD PTR S$[rsp]
  00099	45 33 c0	 xor	 r8d, r8d
  0009c	48 8b d0	 mov	 rdx, rax
  0009f	48 89 43 18	 mov	 QWORD PTR [rbx+24], rax
  000a3	e8 00 00 00 00	 call	 LoadFunction
; Line 277
  000a8	48 8b c3	 mov	 rax, rbx
  000ab	48 8b 5c 24 58	 mov	 rbx, QWORD PTR [rsp+88]
; Line 278
  000b0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b4	5f		 pop	 rdi
  000b5	c3		 ret	 0
$LN20@luaU_undum:
; Line 270
  000b6	4c 8b 44 24 30	 mov	 r8, QWORD PTR S$[rsp+16]
  000bb	48 8b 4c 24 20	 mov	 rcx, QWORD PTR S$[rsp]
  000c0	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09IDFJECNO@truncated?$AA@
  000c7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@DBDKBCFJ@?$CFs?3?5?$CFs?5precompiled?5chunk?$AA@
  000ce	e8 00 00 00 00	 call	 luaO_pushfstring
  000d3	48 8b 4c 24 20	 mov	 rcx, QWORD PTR S$[rsp]
  000d8	ba 03 00 00 00	 mov	 edx, 3
  000dd	e8 00 00 00 00	 call	 luaD_throw
  000e2	cc		 int	 3
$LN18@luaU_undum:
luaU_undump ENDP
_TEXT	ENDS
END
