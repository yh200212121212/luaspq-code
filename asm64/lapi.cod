; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	lua_ident
CONST	SEGMENT
?version@?1??lua_version@@9@9 DQ 0405bc00000000000r ; 111 ; `lua_version'::`2'::version
	ORG $+8
lua_ident DB	'$LuaVersion: Lua spq 1.1.1  Copyright (C) 1994-2017 Lua.'
	DB	'org, PUC-Rio $$LuaAuthors: R. Ierusalimschy, L. H. de Figueir'
	DB	'edo, W. Celes,Q. John $', 00H
CONST	ENDS
PUBLIC	lua_atpanic
PUBLIC	lua_version
PUBLIC	lua_absindex
PUBLIC	lua_gettop
PUBLIC	lua_settop
PUBLIC	lua_pushvalue
PUBLIC	lua_rotate
PUBLIC	lua_copy
PUBLIC	lua_checkstack
PUBLIC	lua_xmove
PUBLIC	lua_isnumber
PUBLIC	lua_isstring
PUBLIC	lua_iscfunction
PUBLIC	lua_isinteger
PUBLIC	lua_isuserdata
PUBLIC	lua_type
PUBLIC	lua_typename
PUBLIC	lua_tonumberx
PUBLIC	lua_tointegerx
PUBLIC	lua_toboolean
PUBLIC	lua_tolstring
PUBLIC	lua_rawlen
PUBLIC	lua_tocfunction
PUBLIC	lua_touserdata
PUBLIC	lua_tothread
PUBLIC	lua_topointer
PUBLIC	lua_arith
PUBLIC	lua_rawequal
PUBLIC	lua_compare
PUBLIC	lua_pushnil
PUBLIC	lua_pushnumber
PUBLIC	lua_pushinteger
PUBLIC	lua_pushlstring
PUBLIC	lua_pushstring
PUBLIC	lua_pushvfstring
PUBLIC	lua_pushfstring
PUBLIC	lua_pushcclosure
PUBLIC	lua_pushboolean
PUBLIC	lua_pushlightuserdata
PUBLIC	lua_pushthread
PUBLIC	lua_getglobal
PUBLIC	lua_gettable
PUBLIC	lua_getfield
PUBLIC	lua_geti
PUBLIC	lua_rawget
PUBLIC	lua_rawgeti
PUBLIC	lua_rawgetp
PUBLIC	lua_createtable
PUBLIC	lua_newuserdata
PUBLIC	lua_getmetatable
PUBLIC	lua_getuservalue
PUBLIC	lua_setglobal
PUBLIC	lua_settable
PUBLIC	lua_setfield
PUBLIC	lua_seti
PUBLIC	lua_rawset
PUBLIC	lua_rawseti
PUBLIC	lua_rawsetp
PUBLIC	lua_setmetatable
PUBLIC	lua_setuservalue
PUBLIC	lua_callk
PUBLIC	lua_pcallk
PUBLIC	lua_load
PUBLIC	lua_dump
PUBLIC	lua_status
PUBLIC	lua_gc
PUBLIC	lua_error
PUBLIC	lua_next
PUBLIC	lua_concat
PUBLIC	lua_len
PUBLIC	lua_stringtonumber
PUBLIC	lua_getallocf
PUBLIC	lua_setallocf
PUBLIC	lua_getupvalue
PUBLIC	lua_setupvalue
PUBLIC	lua_upvalueid
PUBLIC	lua_upvaluejoin
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_01OGPIMHDM@?$DP?$AA@			; `string'
PUBLIC	??_C@_0L@PHDFOLAM@?$CI?$CKno?5name?$CJ?$AA@	; `string'
EXTRN	luaO_arith:PROC
EXTRN	luaO_str2num:PROC
EXTRN	luaO_tostring:PROC
EXTRN	luaO_pushvfstring:PROC
EXTRN	luaT_gettm:PROC
EXTRN	luaZ_init:PROC
EXTRN	luaE_setdebt:PROC
EXTRN	luaG_errormsg:PROC
EXTRN	luaD_protectedparser:PROC
EXTRN	luaD_call:PROC
EXTRN	luaD_callnoyield:PROC
EXTRN	luaD_pcall:PROC
EXTRN	luaD_growstack:PROC
EXTRN	luaD_rawrunprotected:PROC
EXTRN	luaF_newCclosure:PROC
EXTRN	luaC_step:PROC
EXTRN	luaC_fullgc:PROC
EXTRN	luaC_barrier_:PROC
EXTRN	luaC_barrierback_:PROC
EXTRN	luaC_upvalbarrier_:PROC
EXTRN	luaC_checkfinalizer:PROC
EXTRN	luaC_upvdeccount:PROC
EXTRN	luaS_newudata:PROC
EXTRN	luaS_newlstr:PROC
EXTRN	luaS_new:PROC
EXTRN	luaH_getint:PROC
EXTRN	luaH_setint:PROC
EXTRN	luaH_getstr:PROC
EXTRN	luaH_get:PROC
EXTRN	luaH_set:PROC
EXTRN	luaH_new:PROC
EXTRN	luaH_resize:PROC
EXTRN	luaH_next:PROC
EXTRN	luaH_getn:PROC
EXTRN	luaU_dump:PROC
EXTRN	luaV_equalobj:PROC
EXTRN	luaV_lessthan:PROC
EXTRN	luaV_lessequal:PROC
EXTRN	luaV_tonumber_:PROC
EXTRN	luaV_tointeger:PROC
EXTRN	luaV_finishget:PROC
EXTRN	luaV_finishset:PROC
EXTRN	luaV_concat:PROC
EXTRN	luaV_objlen:PROC
EXTRN	luaO_nilobject_:BYTE
EXTRN	luaT_typenames_:BYTE
EXTRN	__ImageBase:BYTE
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_copy DD imagerel $LN37
	DD	imagerel $LN37+305
	DD	imagerel $unwind$lua_copy
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_checkstack DD imagerel $LN12
	DD	imagerel $LN12+158
	DD	imagerel $unwind$lua_checkstack
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_isnumber DD imagerel $LN21
	DD	imagerel $LN21+155
	DD	imagerel $unwind$lua_isnumber
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_tonumberx DD imagerel $LN25
	DD	imagerel $LN25+184
	DD	imagerel $unwind$lua_tonumberx
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_tointegerx DD imagerel $LN24
	DD	imagerel $LN24+186
	DD	imagerel $unwind$lua_tointegerx
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_tolstring DD imagerel $LN26
	DD	imagerel $LN26+278
	DD	imagerel $unwind$lua_tolstring
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_rawlen DD imagerel $LN26
	DD	imagerel $LN26+207
	DD	imagerel $unwind$lua_rawlen
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_arith DD imagerel $LN7
	DD	imagerel $LN7+66
	DD	imagerel $unwind$lua_arith
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_rawequal DD imagerel $LN37
	DD	imagerel $LN37+100
	DD	imagerel $unwind$lua_rawequal
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$lua_rawequal DD imagerel $LN37+100
	DD	imagerel $LN37+145
	DD	imagerel $chain$0$lua_rawequal
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$lua_rawequal DD imagerel $LN37+145
	DD	imagerel $LN37+280
	DD	imagerel $chain$1$lua_rawequal
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_compare DD imagerel $LN46
	DD	imagerel $LN46+6
	DD	imagerel $unwind$lua_compare
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$lua_compare DD imagerel $LN46+6
	DD	imagerel $LN46+105
	DD	imagerel $chain$0$lua_compare
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$lua_compare DD imagerel $LN46+105
	DD	imagerel $LN46+150
	DD	imagerel $chain$1$lua_compare
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$lua_compare DD imagerel $LN46+150
	DD	imagerel $LN46+267
	DD	imagerel $chain$2$lua_compare
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$lua_compare DD imagerel $LN46+267
	DD	imagerel $LN46+325
	DD	imagerel $chain$3$lua_compare
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_pushlstring DD imagerel $LN8
	DD	imagerel $LN8+118
	DD	imagerel $unwind$lua_pushlstring
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_pushstring DD imagerel $LN7
	DD	imagerel $LN7+111
	DD	imagerel $unwind$lua_pushstring
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_pushvfstring DD imagerel $LN5
	DD	imagerel $LN5+69
	DD	imagerel $unwind$lua_pushvfstring
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_pushfstring DD imagerel $LN5
	DD	imagerel $LN5+63
	DD	imagerel $unwind$lua_pushfstring
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_pushcclosure DD imagerel $LN14
	DD	imagerel $LN14+168
	DD	imagerel $unwind$lua_pushcclosure
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_getglobal DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$lua_getglobal
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_gettable DD imagerel $LN32
	DD	imagerel $LN32+279
	DD	imagerel $unwind$lua_gettable
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_geti DD imagerel $LN32
	DD	imagerel $LN32+310
	DD	imagerel $unwind$lua_geti
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_rawget DD imagerel $LN19
	DD	imagerel $LN19+174
	DD	imagerel $unwind$lua_rawget
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_rawgeti DD imagerel $LN19
	DD	imagerel $LN19+177
	DD	imagerel $unwind$lua_rawgeti
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_rawgetp DD imagerel $LN19
	DD	imagerel $LN19+192
	DD	imagerel $unwind$lua_rawgetp
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_createtable DD imagerel $LN7
	DD	imagerel $LN7+107
	DD	imagerel $unwind$lua_createtable
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_newuserdata DD imagerel $LN5
	DD	imagerel $LN5+77
	DD	imagerel $unwind$lua_newuserdata
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_setglobal DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$lua_setglobal
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_settable DD imagerel $LN28
	DD	imagerel $LN28+267
	DD	imagerel $unwind$lua_settable
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_seti DD imagerel $LN28
	DD	imagerel $LN28+302
	DD	imagerel $unwind$lua_seti
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_rawset DD imagerel $LN24
	DD	imagerel $LN24+220
	DD	imagerel $unwind$lua_rawset
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_rawseti DD imagerel $LN24
	DD	imagerel $LN24+202
	DD	imagerel $unwind$lua_rawseti
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_rawsetp DD imagerel $LN24
	DD	imagerel $LN24+223
	DD	imagerel $unwind$lua_rawsetp
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_setmetatable DD imagerel $LN37
	DD	imagerel $LN37+275
	DD	imagerel $unwind$lua_setmetatable
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_setuservalue DD imagerel $LN24
	DD	imagerel $LN24+197
	DD	imagerel $unwind$lua_setuservalue
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_callk DD imagerel $LN7
	DD	imagerel $LN7+127
	DD	imagerel $unwind$lua_callk
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_pcallk DD imagerel $LN12
	DD	imagerel $LN12+12
	DD	imagerel $unwind$lua_pcallk
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$lua_pcallk DD imagerel $LN12+12
	DD	imagerel $LN12+93
	DD	imagerel $chain$0$lua_pcallk
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$lua_pcallk DD imagerel $LN12+93
	DD	imagerel $LN12+205
	DD	imagerel $chain$1$lua_pcallk
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$lua_pcallk DD imagerel $LN12+205
	DD	imagerel $LN12+250
	DD	imagerel $chain$2$lua_pcallk
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$lua_pcallk DD imagerel $LN12+250
	DD	imagerel $LN12+281
	DD	imagerel $chain$3$lua_pcallk
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_load DD imagerel $LN14
	DD	imagerel $LN14+77
	DD	imagerel $unwind$lua_load
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$lua_load DD imagerel $LN14+77
	DD	imagerel $LN14+158
	DD	imagerel $chain$0$lua_load
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$lua_load DD imagerel $LN14+158
	DD	imagerel $LN14+169
	DD	imagerel $chain$1$lua_load
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_dump DD imagerel $LN6
	DD	imagerel $LN6+56
	DD	imagerel $unwind$lua_dump
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_gc DD imagerel $LN23
	DD	imagerel $LN23+197
	DD	imagerel $unwind$lua_gc
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$lua_gc DD imagerel $LN23+197
	DD	imagerel $LN23+303
	DD	imagerel $chain$1$lua_gc
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$lua_gc DD imagerel $LN23+303
	DD	imagerel $LN23+492
	DD	imagerel $chain$2$lua_gc
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_error DD imagerel $LN4
	DD	imagerel $LN4+10
	DD	imagerel $unwind$lua_error
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_next DD imagerel $LN21
	DD	imagerel $LN21+173
	DD	imagerel $unwind$lua_next
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_concat DD imagerel $LN8
	DD	imagerel $LN8+108
	DD	imagerel $unwind$lua_concat
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_len DD imagerel $LN19
	DD	imagerel $LN19+149
	DD	imagerel $unwind$lua_len
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_stringtonumber DD imagerel $LN6
	DD	imagerel $LN6+40
	DD	imagerel $unwind$lua_stringtonumber
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_setupvalue DD imagerel $LN43
	DD	imagerel $LN43+400
	DD	imagerel $unwind$lua_setupvalue
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_upvalueid DD imagerel $LN42
	DD	imagerel $LN42+363
	DD	imagerel $unwind$lua_upvalueid
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_upvaluejoin DD imagerel $LN43
	DD	imagerel $LN43+352
	DD	imagerel $unwind$lua_upvaluejoin
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$auxgetstr DD imagerel auxgetstr
	DD	imagerel auxgetstr+202
	DD	imagerel $unwind$auxgetstr
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$auxsetstr DD imagerel auxsetstr
	DD	imagerel auxsetstr+199
	DD	imagerel $unwind$auxsetstr
pdata	ENDS
;	COMDAT ??_C@_0L@PHDFOLAM@?$CI?$CKno?5name?$CJ?$AA@
CONST	SEGMENT
??_C@_0L@PHDFOLAM@?$CI?$CKno?5name?$CJ?$AA@ DB '(*no name)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01OGPIMHDM@?$DP?$AA@
CONST	SEGMENT
??_C@_01OGPIMHDM@?$DP?$AA@ DB '?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$auxsetstr DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$auxgetstr DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_upvaluejoin DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_upvalueid DD 040a01H
	DD	02740aH
	DD	013405H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_setupvalue DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_stringtonumber DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_len DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_concat DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_next DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_error DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$lua_gc DD 021H
	DD	imagerel $LN23
	DD	imagerel $LN23+197
	DD	imagerel $unwind$lua_gc
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$lua_gc DD 040f21H
	DD	07e40fH
	DD	065405H
	DD	imagerel $LN23
	DD	imagerel $LN23+197
	DD	imagerel $unwind$lua_gc
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_gc DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_dump DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$lua_load DD 021H
	DD	imagerel $LN14
	DD	imagerel $LN14+77
	DD	imagerel $unwind$lua_load
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$lua_load DD 020521H
	DD	0c6405H
	DD	imagerel $LN14
	DD	imagerel $LN14+77
	DD	imagerel $unwind$lua_load
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_load DD 040a01H
	DD	0d340aH
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$lua_pcallk DD 021H
	DD	imagerel $LN12
	DD	imagerel $LN12+12
	DD	imagerel $unwind$lua_pcallk
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$lua_pcallk DD 021H
	DD	imagerel $LN12+12
	DD	imagerel $LN12+93
	DD	imagerel $chain$0$lua_pcallk
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$lua_pcallk DD 020521H
	DD	0a3405H
	DD	imagerel $LN12+12
	DD	imagerel $LN12+93
	DD	imagerel $chain$0$lua_pcallk
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$lua_pcallk DD 020521H
	DD	0b5405H
	DD	imagerel $LN12
	DD	imagerel $LN12+12
	DD	imagerel $unwind$lua_pcallk
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_pcallk DD 040a01H
	DD	0c640aH
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_callk DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_setuservalue DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_setmetatable DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_rawsetp DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_rawseti DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_rawset DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_seti DD 089301H
	DD	086493H
	DD	0a540fH
	DD	09340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_settable DD 068b01H
	DD	08648bH
	DD	09340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_setglobal DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_newuserdata DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_createtable DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_rawgetp DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_rawgeti DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_rawget DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_geti DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_gettable DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_getglobal DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_pushcclosure DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_pushfstring DD 021401H
	DD	030103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_pushvfstring DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_pushstring DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_pushlstring DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$lua_compare DD 021H
	DD	imagerel $LN46
	DD	imagerel $LN46+6
	DD	imagerel $unwind$lua_compare
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$lua_compare DD 021H
	DD	imagerel $LN46+6
	DD	imagerel $LN46+105
	DD	imagerel $chain$0$lua_compare
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$lua_compare DD 020521H
	DD	063405H
	DD	imagerel $LN46+6
	DD	imagerel $LN46+105
	DD	imagerel $chain$0$lua_compare
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$lua_compare DD 020521H
	DD	077405H
	DD	imagerel $LN46
	DD	imagerel $LN46+6
	DD	imagerel $unwind$lua_compare
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_compare DD 020601H
	DD	060023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$lua_rawequal DD 021H
	DD	imagerel $LN37
	DD	imagerel $LN37+100
	DD	imagerel $unwind$lua_rawequal
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$lua_rawequal DD 020521H
	DD	063405H
	DD	imagerel $LN37
	DD	imagerel $LN37+100
	DD	imagerel $unwind$lua_rawequal
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_rawequal DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_arith DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_rawlen DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_tolstring DD 081501H
	DD	087415H
	DD	076415H
	DD	063415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_tointegerx DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_tonumberx DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_isnumber DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_checkstack DD 040e01H
	DD	06340eH
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_copy DD 020601H
	DD	030023206H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT getupvalref
_TEXT	SEGMENT
L$ = 8
fidx$ = 16
n$ = 24
pf$ = 32
getupvalref PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1256
  00000	45 8b d8	 mov	 r11d, r8d
; Line 1258
  00003	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  00007	4c 8b d1	 mov	 r10, rcx
  0000a	85 d2		 test	 edx, edx
  0000c	7e 1b		 jle	 SHORT $LN13@getupvalre
  0000e	48 63 c2	 movsxd	 rax, edx
  00011	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00018	48 c1 e0 04	 shl	 rax, 4
  0001c	49 03 00	 add	 rax, QWORD PTR [r8]
  0001f	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00023	48 0f 42 d0	 cmovb	 rdx, rax
  00027	eb 54		 jmp	 SHORT $LN17@getupvalre
$LN13@getupvalre:
  00029	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0002e	3b d1		 cmp	 edx, ecx
  00030	7e 0d		 jle	 SHORT $LN18@getupvalre
  00032	48 63 d2	 movsxd	 rdx, edx
  00035	48 c1 e2 04	 shl	 rdx, 4
  00039	49 03 52 10	 add	 rdx, QWORD PTR [r10+16]
  0003d	eb 3e		 jmp	 SHORT $LN17@getupvalre
$LN18@getupvalre:
  0003f	75 0a		 jne	 SHORT $LN7@getupvalre
  00041	49 8b 52 18	 mov	 rdx, QWORD PTR [r10+24]
  00045	48 83 c2 40	 add	 rdx, 64			; 00000040H
  00049	eb 32		 jmp	 SHORT $LN17@getupvalre
$LN7@getupvalre:
  0004b	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  0004e	2b ca		 sub	 ecx, edx
  00050	41 83 78 08 16	 cmp	 DWORD PTR [r8+8], 22
  00055	74 1f		 je	 SHORT $LN16@getupvalre
  00057	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  0005a	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  0005f	3b c8		 cmp	 ecx, eax
  00061	7f 13		 jg	 SHORT $LN16@getupvalre
  00063	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00066	48 63 d0	 movsxd	 rdx, eax
  00069	48 83 c2 02	 add	 rdx, 2
  0006d	48 c1 e2 04	 shl	 rdx, 4
  00071	49 03 d0	 add	 rdx, r8
  00074	eb 07		 jmp	 SHORT $LN17@getupvalre
$LN16@getupvalre:
  00076	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
$LN17@getupvalre:
; Line 1260
  0007d	4c 8b 02	 mov	 r8, QWORD PTR [rdx]
; Line 1262
  00080	4d 85 c9	 test	 r9, r9
  00083	74 03		 je	 SHORT $LN1@getupvalre
  00085	4d 89 01	 mov	 QWORD PTR [r9], r8
$LN1@getupvalre:
; Line 1263
  00088	41 8d 43 ff	 lea	 eax, DWORD PTR [r11-1]
  0008c	48 98		 cdqe
  0008e	48 83 c0 04	 add	 rax, 4
  00092	49 8d 04 c0	 lea	 rax, QWORD PTR [r8+rax*8]
; Line 1264
  00096	c3		 ret	 0
getupvalref ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT aux_upvalue
_TEXT	SEGMENT
fi$ = 8
n$ = 16
val$ = 24
owner$ = 32
uv$ = 40
aux_upvalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1198
  00000	8b 41 08	 mov	 eax, DWORD PTR [rcx+8]
  00003	4d 8b d0	 mov	 r10, r8
  00006	83 e0 3f	 and	 eax, 63			; 0000003fH
  00009	83 f8 06	 cmp	 eax, 6
  0000c	74 42		 je	 SHORT $LN5@aux_upvalu
  0000e	83 f8 26	 cmp	 eax, 38			; 00000026H
  00011	0f 85 8c 00 00
	00		 jne	 $LN3@aux_upvalu
; Line 1200
  00017	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
; Line 1201
  0001a	83 fa 01	 cmp	 edx, 1
  0001d	0f 8c 80 00 00
	00		 jl	 $LN3@aux_upvalu
  00023	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  00028	3b d0		 cmp	 edx, eax
  0002a	7f 77		 jg	 SHORT $LN3@aux_upvalu
; Line 1202
  0002c	8d 42 ff	 lea	 eax, DWORD PTR [rdx-1]
  0002f	48 63 c8	 movsxd	 rcx, eax
  00032	48 83 c1 02	 add	 rcx, 2
  00036	48 c1 e1 04	 shl	 rcx, 4
  0003a	49 03 c8	 add	 rcx, r8
  0003d	49 89 0a	 mov	 QWORD PTR [r10], rcx
; Line 1203
  00040	4d 85 c9	 test	 r9, r9
  00043	74 03		 je	 SHORT $LN6@aux_upvalu
  00045	4d 89 01	 mov	 QWORD PTR [r9], r8
$LN6@aux_upvalu:
; Line 1204
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
; Line 1218
  0004f	c3		 ret	 0
$LN5@aux_upvalu:
; Line 1207
  00050	48 8b 01	 mov	 rax, QWORD PTR [rcx]
; Line 1209
  00053	4c 8b 48 18	 mov	 r9, QWORD PTR [rax+24]
; Line 1210
  00057	83 fa 01	 cmp	 edx, 1
  0005a	7c 47		 jl	 SHORT $LN3@aux_upvalu
  0005c	41 3b 51 10	 cmp	 edx, DWORD PTR [r9+16]
  00060	7f 41		 jg	 SHORT $LN3@aux_upvalu
; Line 1211
  00062	4c 63 c2	 movsxd	 r8, edx
  00065	4a 8d 14 c0	 lea	 rdx, QWORD PTR [rax+r8*8]
  00069	4a 8b 44 c0 18	 mov	 rax, QWORD PTR [rax+r8*8+24]
  0006e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00071	49 89 0a	 mov	 QWORD PTR [r10], rcx
; Line 1212
  00074	48 8b 4c 24 28	 mov	 rcx, QWORD PTR uv$[rsp]
  00079	48 85 c9	 test	 rcx, rcx
  0007c	74 07		 je	 SHORT $LN2@aux_upvalu
  0007e	48 8b 42 18	 mov	 rax, QWORD PTR [rdx+24]
  00082	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN2@aux_upvalu:
; Line 1213
  00085	49 8b 41 58	 mov	 rax, QWORD PTR [r9+88]
  00089	4d 03 c0	 add	 r8, r8
  0008c	4a 8b 44 c0 f0	 mov	 rax, QWORD PTR [rax+r8*8-16]
; Line 1214
  00091	48 85 c0	 test	 rax, rax
  00094	75 08		 jne	 SHORT $LN14@aux_upvalu
  00096	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0L@PHDFOLAM@?$CI?$CKno?5name?$CJ?$AA@
; Line 1218
  0009d	c3		 ret	 0
$LN14@aux_upvalu:
; Line 1214
  0009e	48 83 c0 18	 add	 rax, 24
; Line 1218
  000a2	c3		 ret	 0
$LN3@aux_upvalu:
; Line 1210
  000a3	33 c0		 xor	 eax, eax
; Line 1218
  000a5	c3		 ret	 0
aux_upvalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT f_call
_TEXT	SEGMENT
L$ = 8
ud$ = 16
f_call	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 942
  00000	44 8b 42 08	 mov	 r8d, DWORD PTR [rdx+8]
  00004	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00007	e9 00 00 00 00	 jmp	 luaD_callnoyield
f_call	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT auxsetstr
_TEXT	SEGMENT
L$ = 64
t$ = 72
k$ = 80
auxsetstr PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 742
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b f2	 mov	 rsi, rdx
; Line 744
  00017	49 8b d0	 mov	 rdx, r8
  0001a	48 8b d9	 mov	 rbx, rcx
  0001d	e8 00 00 00 00	 call	 luaS_new
; Line 746
  00022	83 7e 08 45	 cmp	 DWORD PTR [rsi+8], 69	; 00000045H
  00026	48 8b e8	 mov	 rbp, rax
  00029	74 51		 je	 SHORT $LN9@auxsetstr
  0002b	33 ff		 xor	 edi, edi
$LN2@auxsetstr:
; Line 749
  0002d	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]
; Line 751
  00031	48 8b d6	 mov	 rdx, rsi
  00034	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00039	48 89 29	 mov	 QWORD PTR [rcx], rbp
  0003c	0f b6 45 08	 movzx	 eax, BYTE PTR [rbp+8]
  00040	83 c8 40	 or	 eax, 64			; 00000040H
  00043	89 41 08	 mov	 DWORD PTR [rcx+8], eax
  00046	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  0004a	48 8b cb	 mov	 rcx, rbx
  0004d	49 83 c0 10	 add	 r8, 16
  00051	4c 89 43 10	 mov	 QWORD PTR [rbx+16], r8
  00055	4d 8d 48 e0	 lea	 r9, QWORD PTR [r8-32]
  00059	49 83 c0 f0	 add	 r8, -16
  0005d	e8 00 00 00 00	 call	 luaV_finishset
; Line 752
  00062	48 83 43 10 e0	 add	 QWORD PTR [rbx+16], -32	; ffffffffffffffe0H
$LN1@auxsetstr:
; Line 755
  00067	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0006c	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  00071	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  00076	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007a	5f		 pop	 rdi
  0007b	c3		 ret	 0
$LN9@auxsetstr:
; Line 746
  0007c	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  0007f	48 8b d0	 mov	 rdx, rax
  00082	e8 00 00 00 00	 call	 luaH_getstr
  00087	48 8b f8	 mov	 rdi, rax
  0008a	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  0008e	74 9d		 je	 SHORT $LN2@auxsetstr
  00090	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  00094	f6 40 f8 40	 test	 BYTE PTR [rax-8], 64	; 00000040H
  00098	74 1b		 je	 SHORT $LN5@auxsetstr
  0009a	48 8b 16	 mov	 rdx, QWORD PTR [rsi]
  0009d	f6 42 09 04	 test	 BYTE PTR [rdx+9], 4
  000a1	74 12		 je	 SHORT $LN5@auxsetstr
  000a3	48 8b 40 f0	 mov	 rax, QWORD PTR [rax-16]
  000a7	f6 40 09 03	 test	 BYTE PTR [rax+9], 3
  000ab	74 08		 je	 SHORT $LN5@auxsetstr
  000ad	48 8b cb	 mov	 rcx, rbx
  000b0	e8 00 00 00 00	 call	 luaC_barrierback_
$LN5@auxsetstr:
  000b5	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  000b9	0f 10 40 f0	 movups	 xmm0, XMMWORD PTR [rax-16]
  000bd	0f 11 07	 movups	 XMMWORD PTR [rdi], xmm0
; Line 747
  000c0	48 83 43 10 f0	 add	 QWORD PTR [rbx+16], -16
; Line 748
  000c5	eb a0		 jmp	 SHORT $LN1@auxsetstr
auxsetstr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT auxgetstr
_TEXT	SEGMENT
L$ = 64
t$ = 72
k$ = 80
auxgetstr PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 587
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fa	 mov	 rdi, rdx
; Line 589
  00012	49 8b d0	 mov	 rdx, r8
  00015	48 8b d9	 mov	 rbx, rcx
  00018	e8 00 00 00 00	 call	 luaS_new
; Line 590
  0001d	83 7f 08 45	 cmp	 DWORD PTR [rdi+8], 69	; 00000045H
  00021	48 8b f0	 mov	 rsi, rax
  00024	74 04		 je	 SHORT $LN13@auxgetstr
  00026	33 c0		 xor	 eax, eax
  00028	eb 3d		 jmp	 SHORT $LN2@auxgetstr
$LN13@auxgetstr:
  0002a	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 luaH_getstr
  00035	48 8b c8	 mov	 rcx, rax
  00038	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  0003c	75 63		 jne	 SHORT $LN15@auxgetstr
  0003e	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00041	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00045	48 85 c9	 test	 rcx, rcx
  00048	74 50		 je	 SHORT $LN9@auxgetstr
  0004a	f6 41 0a 01	 test	 BYTE PTR [rcx+10], 1
  0004e	75 4a		 jne	 SHORT $LN9@auxgetstr
  00050	4c 8b 43 18	 mov	 r8, QWORD PTR [rbx+24]
  00054	33 d2		 xor	 edx, edx
  00056	4d 8b 80 e0 00
	00 00		 mov	 r8, QWORD PTR [r8+224]
  0005d	e8 00 00 00 00	 call	 luaT_gettm
  00062	48 85 c0	 test	 rax, rax
  00065	74 33		 je	 SHORT $LN9@auxgetstr
$LN2@auxgetstr:
; Line 595
  00067	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
; Line 597
  0006b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00070	48 89 32	 mov	 QWORD PTR [rdx], rsi
  00073	0f b6 4e 08	 movzx	 ecx, BYTE PTR [rsi+8]
  00077	83 c9 40	 or	 ecx, 64			; 00000040H
  0007a	89 4a 08	 mov	 DWORD PTR [rdx+8], ecx
  0007d	48 83 43 10 10	 add	 QWORD PTR [rbx+16], 16
  00082	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00086	49 83 c0 f0	 add	 r8, -16
  0008a	48 8b d7	 mov	 rdx, rdi
  0008d	48 8b cb	 mov	 rcx, rbx
  00090	4d 8b c8	 mov	 r9, r8
  00093	e8 00 00 00 00	 call	 luaV_finishget
  00098	eb 16		 jmp	 SHORT $LN1@auxgetstr
$LN9@auxgetstr:
; Line 590
  0009a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
$LN15@auxgetstr:
; Line 591
  000a1	0f 10 01	 movups	 xmm0, XMMWORD PTR [rcx]
  000a4	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  000a8	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0
; Line 592
  000ab	48 83 43 10 10	 add	 QWORD PTR [rbx+16], 16
$LN1@auxgetstr:
; Line 600
  000b0	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
; Line 601
  000b4	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000b9	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000be	8b 40 f8	 mov	 eax, DWORD PTR [rax-8]
  000c1	83 e0 0f	 and	 eax, 15
  000c4	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c8	5f		 pop	 rdi
  000c9	c3		 ret	 0
auxgetstr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT reverse
_TEXT	SEGMENT
L$ = 8
from$ = 16
to$ = 24
reverse	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 194
  00000	49 3b d0	 cmp	 rdx, r8
  00003	73 28		 jae	 SHORT $LN1@reverse
  00005	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL3@reverse:
; Line 197
  00010	41 0f 10 00	 movups	 xmm0, XMMWORD PTR [r8]
  00014	0f 10 0a	 movups	 xmm1, XMMWORD PTR [rdx]
  00017	49 83 e8 10	 sub	 r8, 16
  0001b	48 83 c2 10	 add	 rdx, 16
  0001f	0f 11 42 f0	 movups	 XMMWORD PTR [rdx-16], xmm0
; Line 198
  00023	41 0f 11 48 10	 movups	 XMMWORD PTR [r8+16], xmm1
  00028	49 3b d0	 cmp	 rdx, r8
  0002b	72 e3		 jb	 SHORT $LL3@reverse
$LN1@reverse:
; Line 200
  0002d	c3		 ret	 0
reverse	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT growstack
_TEXT	SEGMENT
L$ = 8
ud$ = 16
growstack PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 93
  00000	8b 12		 mov	 edx, DWORD PTR [rdx]
  00002	e9 00 00 00 00	 jmp	 luaD_growstack
growstack ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT index2addr
_TEXT	SEGMENT
L$ = 8
idx$ = 16
index2addr PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 61
  00000	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00004	4c 8b c1	 mov	 r8, rcx
; Line 62
  00007	85 d2		 test	 edx, edx
  00009	7e 18		 jle	 SHORT $LN10@index2addr
; Line 63
  0000b	48 63 c2	 movsxd	 rax, edx
  0000e	48 c1 e0 04	 shl	 rax, 4
  00012	49 03 01	 add	 rax, QWORD PTR [r9]
; Line 65
  00015	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00019	72 07		 jb	 SHORT $LN14@index2addr
$LN13@index2addr:
; Line 81
  0001b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:luaO_nilobject_
$LN14@index2addr:
; Line 84
  00022	c3		 ret	 0
$LN10@index2addr:
; Line 68
  00023	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00028	3b d1		 cmp	 edx, ecx
  0002a	7e 0c		 jle	 SHORT $LN15@index2addr
; Line 70
  0002c	48 63 c2	 movsxd	 rax, edx
  0002f	48 c1 e0 04	 shl	 rax, 4
  00033	49 03 40 10	 add	 rax, QWORD PTR [r8+16]
; Line 84
  00037	c3		 ret	 0
$LN15@index2addr:
; Line 72
  00038	75 09		 jne	 SHORT $LN4@index2addr
; Line 73
  0003a	49 8b 40 18	 mov	 rax, QWORD PTR [r8+24]
  0003e	48 83 c0 40	 add	 rax, 64			; 00000040H
; Line 84
  00042	c3		 ret	 0
$LN4@index2addr:
; Line 75
  00043	2b ca		 sub	 ecx, edx
; Line 77
  00045	49 8b 11	 mov	 rdx, QWORD PTR [r9]
  00048	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  0004c	74 cd		 je	 SHORT $LN13@index2addr
; Line 80
  0004e	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
; Line 81
  00051	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00055	3b c8		 cmp	 ecx, eax
  00057	7f c2		 jg	 SHORT $LN13@index2addr
  00059	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0005c	48 98		 cdqe
  0005e	48 83 c0 02	 add	 rax, 2
  00062	48 c1 e0 04	 shl	 rax, 4
  00066	48 03 c2	 add	 rax, rdx
; Line 84
  00069	c3		 ret	 0
index2addr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_upvaluejoin
_TEXT	SEGMENT
L$ = 48
fidx1$ = 56
n1$ = 64
fidx2$ = 72
n2$ = 80
lua_upvaluejoin PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1287
$LN43:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 1289
  0000f	4c 8b 59 20	 mov	 r11, QWORD PTR [rcx+32]
  00013	41 8b f0	 mov	 esi, r8d
  00016	48 8b f9	 mov	 rdi, rcx
  00019	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
  00020	41 ba d8 b9 f0
	ff		 mov	 r10d, -1001000		; fffffffffff0b9d8H
  00026	85 d2		 test	 edx, edx
  00028	7e 17		 jle	 SHORT $LN18@lua_upvalu
  0002a	48 63 c2	 movsxd	 rax, edx
  0002d	48 8b d3	 mov	 rdx, rbx
  00030	48 c1 e0 04	 shl	 rax, 4
  00034	49 03 03	 add	 rax, QWORD PTR [r11]
  00037	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  0003b	48 0f 42 d0	 cmovb	 rdx, rax
  0003f	eb 4e		 jmp	 SHORT $LN22@lua_upvalu
$LN18@lua_upvalu:
  00041	41 3b d2	 cmp	 edx, r10d
  00044	7e 0d		 jle	 SHORT $LN40@lua_upvalu
  00046	48 63 d2	 movsxd	 rdx, edx
  00049	48 c1 e2 04	 shl	 rdx, 4
  0004d	48 03 51 10	 add	 rdx, QWORD PTR [rcx+16]
  00051	eb 3c		 jmp	 SHORT $LN22@lua_upvalu
$LN40@lua_upvalu:
  00053	75 0a		 jne	 SHORT $LN12@lua_upvalu
  00055	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  00059	48 83 c2 40	 add	 rdx, 64			; 00000040H
  0005d	eb 30		 jmp	 SHORT $LN22@lua_upvalu
$LN12@lua_upvalu:
  0005f	49 8b 03	 mov	 rax, QWORD PTR [r11]
  00062	41 8b ca	 mov	 ecx, r10d
  00065	2b ca		 sub	 ecx, edx
  00067	83 78 08 16	 cmp	 DWORD PTR [rax+8], 22
  0006b	74 1f		 je	 SHORT $LN21@lua_upvalu
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  00075	3b c8		 cmp	 ecx, eax
  00077	7f 13		 jg	 SHORT $LN21@lua_upvalu
  00079	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0007c	48 63 d0	 movsxd	 rdx, eax
  0007f	48 83 c2 02	 add	 rdx, 2
  00083	48 c1 e2 04	 shl	 rdx, 4
  00087	49 03 d0	 add	 rdx, r8
  0008a	eb 03		 jmp	 SHORT $LN22@lua_upvalu
$LN21@lua_upvalu:
  0008c	48 8b d3	 mov	 rdx, rbx
$LN22@lua_upvalu:
  0008f	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00092	8d 46 ff	 lea	 eax, DWORD PTR [rsi-1]
  00095	48 63 c8	 movsxd	 rcx, eax
  00098	48 8d 34 ca	 lea	 rsi, QWORD PTR [rdx+rcx*8]
; Line 1290
  0009c	45 85 c9	 test	 r9d, r9d
  0009f	7e 14		 jle	 SHORT $LN35@lua_upvalu
  000a1	49 63 c1	 movsxd	 rax, r9d
  000a4	48 c1 e0 04	 shl	 rax, 4
  000a8	49 03 03	 add	 rax, QWORD PTR [r11]
  000ab	48 3b 47 10	 cmp	 rax, QWORD PTR [rdi+16]
  000af	48 0f 42 d8	 cmovb	 rbx, rax
  000b3	eb 48		 jmp	 SHORT $LN38@lua_upvalu
$LN35@lua_upvalu:
  000b5	45 3b ca	 cmp	 r9d, r10d
  000b8	7e 0d		 jle	 SHORT $LN41@lua_upvalu
  000ba	49 63 d9	 movsxd	 rbx, r9d
  000bd	48 c1 e3 04	 shl	 rbx, 4
  000c1	48 03 5f 10	 add	 rbx, QWORD PTR [rdi+16]
  000c5	eb 36		 jmp	 SHORT $LN38@lua_upvalu
$LN41@lua_upvalu:
  000c7	75 0a		 jne	 SHORT $LN29@lua_upvalu
  000c9	48 8b 5f 18	 mov	 rbx, QWORD PTR [rdi+24]
  000cd	48 83 c3 40	 add	 rbx, 64			; 00000040H
  000d1	eb 2a		 jmp	 SHORT $LN38@lua_upvalu
$LN29@lua_upvalu:
  000d3	49 8b 0b	 mov	 rcx, QWORD PTR [r11]
  000d6	45 2b d1	 sub	 r10d, r9d
  000d9	83 79 08 16	 cmp	 DWORD PTR [rcx+8], 22
  000dd	74 1e		 je	 SHORT $LN38@lua_upvalu
  000df	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000e2	0f b6 41 0a	 movzx	 eax, BYTE PTR [rcx+10]
  000e6	44 3b d0	 cmp	 r10d, eax
  000e9	7f 12		 jg	 SHORT $LN38@lua_upvalu
  000eb	41 8d 42 ff	 lea	 eax, DWORD PTR [r10-1]
  000ef	48 63 d8	 movsxd	 rbx, eax
  000f2	48 83 c3 02	 add	 rbx, 2
  000f6	48 c1 e3 04	 shl	 rbx, 4
  000fa	48 03 d9	 add	 rbx, rcx
$LN38@lua_upvalu:
; Line 1291
  000fd	48 8b 56 20	 mov	 rdx, QWORD PTR [rsi+32]
  00101	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
  00104	48 8b cf	 mov	 rcx, rdi
  00107	e8 00 00 00 00	 call	 luaC_upvdeccount
; Line 1292
  0010c	48 63 44 24 50	 movsxd	 rax, DWORD PTR n2$[rsp]
  00111	48 8b 4c c3 18	 mov	 rcx, QWORD PTR [rbx+rax*8+24]
  00116	48 89 4e 20	 mov	 QWORD PTR [rsi+32], rcx
; Line 1293
  0011a	48 ff 41 08	 inc	 QWORD PTR [rcx+8]
; Line 1294
  0011e	48 8b 4e 20	 mov	 rcx, QWORD PTR [rsi+32]
  00122	48 8d 41 10	 lea	 rax, QWORD PTR [rcx+16]
  00126	48 39 01	 cmp	 QWORD PTR [rcx], rax
  00129	74 07		 je	 SHORT $LN1@lua_upvalu
  0012b	c7 41 18 01 00
	00 00		 mov	 DWORD PTR [rcx+24], 1
$LN1@lua_upvalu:
; Line 1295
  00132	48 8b 56 20	 mov	 rdx, QWORD PTR [rsi+32]
  00136	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00139	f6 41 08 40	 test	 BYTE PTR [rcx+8], 64	; 00000040H
  0013d	74 11		 je	 SHORT $LN4@lua_upvalu
  0013f	48 8d 42 10	 lea	 rax, QWORD PTR [rdx+16]
  00143	48 3b c8	 cmp	 rcx, rax
  00146	75 08		 jne	 SHORT $LN4@lua_upvalu
  00148	48 8b cf	 mov	 rcx, rdi
  0014b	e8 00 00 00 00	 call	 luaC_upvalbarrier_
$LN4@lua_upvalu:
; Line 1296
  00150	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00155	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0015a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0015e	5f		 pop	 rdi
  0015f	c3		 ret	 0
lua_upvaluejoin ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_upvalueid
_TEXT	SEGMENT
L$ = 8
fidx$ = 16
n$ = 24
lua_upvalueid PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1267
$LN42:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 7c 24 10	 mov	 QWORD PTR [rsp+16], rdi
; Line 1268
  0000a	48 8b 59 20	 mov	 rbx, QWORD PTR [rcx+32]
  0000e	49 63 f8	 movsxd	 rdi, r8d
  00011	4c 63 d2	 movsxd	 r10, edx
  00014	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:luaO_nilobject_
  0001b	41 bb d8 b9 f0
	ff		 mov	 r11d, -1001000		; fffffffffff0b9d8H
  00021	85 d2		 test	 edx, edx
  00023	7e 17		 jle	 SHORT $LN17@lua_upvalu
  00025	49 8b c2	 mov	 rax, r10
  00028	49 8b d1	 mov	 rdx, r9
  0002b	48 c1 e0 04	 shl	 rax, 4
  0002f	48 03 03	 add	 rax, QWORD PTR [rbx]
  00032	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00036	48 0f 42 d0	 cmovb	 rdx, rax
  0003a	eb 4f		 jmp	 SHORT $LN21@lua_upvalu
$LN17@lua_upvalu:
  0003c	45 3b d3	 cmp	 r10d, r11d
  0003f	7e 0d		 jle	 SHORT $LN39@lua_upvalu
  00041	49 8b d2	 mov	 rdx, r10
  00044	48 c1 e2 04	 shl	 rdx, 4
  00048	48 03 51 10	 add	 rdx, QWORD PTR [rcx+16]
  0004c	eb 3d		 jmp	 SHORT $LN21@lua_upvalu
$LN39@lua_upvalu:
  0004e	75 0a		 jne	 SHORT $LN11@lua_upvalu
  00050	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  00054	48 83 c2 40	 add	 rdx, 64			; 00000040H
  00058	eb 31		 jmp	 SHORT $LN21@lua_upvalu
$LN11@lua_upvalu:
  0005a	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  0005d	41 8b d3	 mov	 edx, r11d
  00060	41 2b d2	 sub	 edx, r10d
  00063	83 78 08 16	 cmp	 DWORD PTR [rax+8], 22
  00067	74 1f		 je	 SHORT $LN20@lua_upvalu
  00069	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0006c	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  00071	3b d0		 cmp	 edx, eax
  00073	7f 13		 jg	 SHORT $LN20@lua_upvalu
  00075	8d 42 ff	 lea	 eax, DWORD PTR [rdx-1]
  00078	48 63 d0	 movsxd	 rdx, eax
  0007b	48 83 c2 02	 add	 rdx, 2
  0007f	48 c1 e2 04	 shl	 rdx, 4
  00083	49 03 d0	 add	 rdx, r8
  00086	eb 03		 jmp	 SHORT $LN21@lua_upvalu
$LN20@lua_upvalu:
  00088	49 8b d1	 mov	 rdx, r9
$LN21@lua_upvalu:
; Line 1269
  0008b	8b 42 08	 mov	 eax, DWORD PTR [rdx+8]
  0008e	83 e0 3f	 and	 eax, 63			; 0000003fH
  00091	83 f8 06	 cmp	 eax, 6
  00094	74 2d		 je	 SHORT $LN3@lua_upvalu
  00096	83 f8 26	 cmp	 eax, 38			; 00000026H
  00099	74 0d		 je	 SHORT $LN2@lua_upvalu
; Line 1280
  0009b	33 c0		 xor	 eax, eax
; Line 1283
  0009d	48 8b 5c 24 08	 mov	 rbx, QWORD PTR [rsp+8]
  000a2	48 8b 7c 24 10	 mov	 rdi, QWORD PTR [rsp+16]
  000a7	c3		 ret	 0
$LN2@lua_upvalu:
; Line 1276
  000a8	8d 47 ff	 lea	 eax, DWORD PTR [rdi-1]
  000ab	48 98		 cdqe
  000ad	48 83 c0 02	 add	 rax, 2
  000b1	48 c1 e0 04	 shl	 rax, 4
  000b5	48 03 02	 add	 rax, QWORD PTR [rdx]
; Line 1283
  000b8	48 8b 5c 24 08	 mov	 rbx, QWORD PTR [rsp+8]
  000bd	48 8b 7c 24 10	 mov	 rdi, QWORD PTR [rsp+16]
  000c2	c3		 ret	 0
$LN3@lua_upvalu:
; Line 1271
  000c3	45 85 d2	 test	 r10d, r10d
  000c6	7e 25		 jle	 SHORT $LN34@lua_upvalu
  000c8	49 8b c2	 mov	 rax, r10
  000cb	48 c1 e0 04	 shl	 rax, 4
  000cf	48 03 03	 add	 rax, QWORD PTR [rbx]
  000d2	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  000d6	4c 0f 42 c8	 cmovb	 r9, rax
  000da	49 8b 01	 mov	 rax, QWORD PTR [r9]
  000dd	48 8b 44 f8 18	 mov	 rax, QWORD PTR [rax+rdi*8+24]
; Line 1283
  000e2	48 8b 5c 24 08	 mov	 rbx, QWORD PTR [rsp+8]
  000e7	48 8b 7c 24 10	 mov	 rdi, QWORD PTR [rsp+16]
  000ec	c3		 ret	 0
; Line 1271
$LN34@lua_upvalu:
  000ed	45 3b d3	 cmp	 r10d, r11d
  000f0	7e 1e		 jle	 SHORT $LN40@lua_upvalu
  000f2	4d 8b ca	 mov	 r9, r10
  000f5	49 c1 e1 04	 shl	 r9, 4
  000f9	4c 03 49 10	 add	 r9, QWORD PTR [rcx+16]
  000fd	49 8b 01	 mov	 rax, QWORD PTR [r9]
  00100	48 8b 44 f8 18	 mov	 rax, QWORD PTR [rax+rdi*8+24]
; Line 1283
  00105	48 8b 5c 24 08	 mov	 rbx, QWORD PTR [rsp+8]
  0010a	48 8b 7c 24 10	 mov	 rdi, QWORD PTR [rsp+16]
  0010f	c3		 ret	 0
$LN40@lua_upvalu:
; Line 1271
  00110	75 1c		 jne	 SHORT $LN28@lua_upvalu
  00112	4c 8b 49 18	 mov	 r9, QWORD PTR [rcx+24]
  00116	49 8b 41 40	 mov	 rax, QWORD PTR [r9+64]
  0011a	49 83 c1 40	 add	 r9, 64			; 00000040H
  0011e	48 8b 44 f8 18	 mov	 rax, QWORD PTR [rax+rdi*8+24]
; Line 1283
  00123	48 8b 5c 24 08	 mov	 rbx, QWORD PTR [rsp+8]
  00128	48 8b 7c 24 10	 mov	 rdi, QWORD PTR [rsp+16]
  0012d	c3		 ret	 0
; Line 1271
$LN28@lua_upvalu:
  0012e	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00131	45 2b da	 sub	 r11d, r10d
  00134	83 79 08 16	 cmp	 DWORD PTR [rcx+8], 22
  00138	74 1e		 je	 SHORT $LN37@lua_upvalu
  0013a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0013d	0f b6 41 0a	 movzx	 eax, BYTE PTR [rcx+10]
  00141	44 3b d8	 cmp	 r11d, eax
  00144	7f 12		 jg	 SHORT $LN37@lua_upvalu
  00146	41 8d 43 ff	 lea	 eax, DWORD PTR [r11-1]
  0014a	4c 63 c8	 movsxd	 r9, eax
  0014d	49 83 c1 02	 add	 r9, 2
  00151	49 c1 e1 04	 shl	 r9, 4
  00155	4c 03 c9	 add	 r9, rcx
$LN37@lua_upvalu:
  00158	49 8b 01	 mov	 rax, QWORD PTR [r9]
; Line 1283
  0015b	48 8b 5c 24 08	 mov	 rbx, QWORD PTR [rsp+8]
  00160	48 8b 44 f8 18	 mov	 rax, QWORD PTR [rax+rdi*8+24]
  00165	48 8b 7c 24 10	 mov	 rdi, QWORD PTR [rsp+16]
  0016a	c3		 ret	 0
lua_upvalueid ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_setupvalue
_TEXT	SEGMENT
L$ = 48
funcindex$ = 56
n$ = 64
lua_setupvalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1235
$LN43:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 1242
  00006	48 8b 59 20	 mov	 rbx, QWORD PTR [rcx+32]
  0000a	45 33 c9	 xor	 r9d, r9d
  0000d	4c 8b d1	 mov	 r10, rcx
  00010	45 8b d9	 mov	 r11d, r9d
  00013	85 d2		 test	 edx, edx
  00015	7e 1b		 jle	 SHORT $LN20@lua_setupv
  00017	48 63 c2	 movsxd	 rax, edx
  0001a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00021	48 c1 e0 04	 shl	 rax, 4
  00025	48 03 03	 add	 rax, QWORD PTR [rbx]
  00028	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  0002c	48 0f 42 d0	 cmovb	 rdx, rax
  00030	eb 52		 jmp	 SHORT $LN24@lua_setupv
$LN20@lua_setupv:
  00032	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00037	3b d1		 cmp	 edx, ecx
  00039	7e 0d		 jle	 SHORT $LN41@lua_setupv
  0003b	48 63 d2	 movsxd	 rdx, edx
  0003e	48 c1 e2 04	 shl	 rdx, 4
  00042	49 03 52 10	 add	 rdx, QWORD PTR [r10+16]
  00046	eb 3c		 jmp	 SHORT $LN24@lua_setupv
$LN41@lua_setupv:
  00048	75 0a		 jne	 SHORT $LN14@lua_setupv
  0004a	49 8b 52 18	 mov	 rdx, QWORD PTR [r10+24]
  0004e	48 83 c2 40	 add	 rdx, 64			; 00000040H
  00052	eb 30		 jmp	 SHORT $LN24@lua_setupv
$LN14@lua_setupv:
  00054	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
  00057	2b ca		 sub	 ecx, edx
  00059	83 7b 08 16	 cmp	 DWORD PTR [rbx+8], 22
  0005d	74 1e		 je	 SHORT $LN23@lua_setupv
  0005f	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
  00062	0f b6 43 0a	 movzx	 eax, BYTE PTR [rbx+10]
  00066	3b c8		 cmp	 ecx, eax
  00068	7f 13		 jg	 SHORT $LN23@lua_setupv
  0006a	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0006d	48 63 d0	 movsxd	 rdx, eax
  00070	48 83 c2 02	 add	 rdx, 2
  00074	48 c1 e2 04	 shl	 rdx, 4
  00078	48 03 d3	 add	 rdx, rbx
  0007b	eb 07		 jmp	 SHORT $LN24@lua_setupv
$LN23@lua_setupv:
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
$LN24@lua_setupv:
; Line 1244
  00084	8b 42 08	 mov	 eax, DWORD PTR [rdx+8]
  00087	83 e0 3f	 and	 eax, 63			; 0000003fH
  0008a	83 f8 06	 cmp	 eax, 6
  0008d	74 41		 je	 SHORT $LN29@lua_setupv
  0008f	83 f8 26	 cmp	 eax, 38			; 00000026H
  00092	0f 85 ec 00 00
	00		 jne	 $LN27@lua_setupv
  00098	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  0009b	41 83 f8 01	 cmp	 r8d, 1
  0009f	0f 8c df 00 00
	00		 jl	 $LN27@lua_setupv
  000a5	0f b6 41 0a	 movzx	 eax, BYTE PTR [rcx+10]
  000a9	44 3b c0	 cmp	 r8d, eax
  000ac	0f 8f d2 00 00
	00		 jg	 $LN27@lua_setupv
  000b2	41 8d 40 ff	 lea	 eax, DWORD PTR [r8-1]
  000b6	4c 8b c9	 mov	 r9, rcx
  000b9	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  000c0	48 63 d0	 movsxd	 rdx, eax
  000c3	48 83 c2 02	 add	 rdx, 2
  000c7	48 c1 e2 04	 shl	 rdx, 4
  000cb	48 03 d1	 add	 rdx, rcx
  000ce	eb 46		 jmp	 SHORT $LN40@lua_setupv
$LN29@lua_setupv:
  000d0	4c 8b 1a	 mov	 r11, QWORD PTR [rdx]
  000d3	49 8b 43 18	 mov	 rax, QWORD PTR [r11+24]
  000d7	41 83 f8 01	 cmp	 r8d, 1
  000db	0f 8c a3 00 00
	00		 jl	 $LN27@lua_setupv
  000e1	44 3b 40 10	 cmp	 r8d, DWORD PTR [rax+16]
  000e5	0f 8f 99 00 00
	00		 jg	 $LN27@lua_setupv
  000eb	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  000ef	49 63 c8	 movsxd	 rcx, r8d
  000f2	4d 8b 5c cb 18	 mov	 r11, QWORD PTR [r11+rcx*8+24]
  000f7	48 03 c9	 add	 rcx, rcx
  000fa	48 8b 5c c8 f0	 mov	 rbx, QWORD PTR [rax+rcx*8-16]
  000ff	49 8b 13	 mov	 rdx, QWORD PTR [r11]
  00102	48 85 db	 test	 rbx, rbx
  00105	75 09		 jne	 SHORT $LN38@lua_setupv
  00107	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:??_C@_0L@PHDFOLAM@?$CI?$CKno?5name?$CJ?$AA@
  0010e	eb 06		 jmp	 SHORT $LN40@lua_setupv
$LN38@lua_setupv:
  00110	48 83 c3 18	 add	 rbx, 24
; Line 1245
  00114	74 71		 je	 SHORT $LN9@lua_setupv
$LN40@lua_setupv:
  00116	49 83 42 10 f0	 add	 QWORD PTR [r10+16], -16
  0011b	49 8b 42 10	 mov	 rax, QWORD PTR [r10+16]
; Line 1247
  0011f	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00122	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
; Line 1248
  00125	4d 85 c9	 test	 r9, r9
  00128	74 2f		 je	 SHORT $LN3@lua_setupv
  0012a	49 8b 42 10	 mov	 rax, QWORD PTR [r10+16]
  0012e	f6 40 08 40	 test	 BYTE PTR [rax+8], 64	; 00000040H
  00132	74 53		 je	 SHORT $LN9@lua_setupv
  00134	41 f6 41 09 04	 test	 BYTE PTR [r9+9], 4
  00139	74 4c		 je	 SHORT $LN9@lua_setupv
  0013b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0013e	41 f6 40 09 03	 test	 BYTE PTR [r8+9], 3
  00143	74 42		 je	 SHORT $LN9@lua_setupv
  00145	49 8b d1	 mov	 rdx, r9
  00148	49 8b ca	 mov	 rcx, r10
  0014b	e8 00 00 00 00	 call	 luaC_barrier_
; Line 1252
  00150	48 8b c3	 mov	 rax, rbx
; Line 1253
  00153	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00157	5b		 pop	 rbx
  00158	c3		 ret	 0
$LN3@lua_setupv:
; Line 1249
  00159	4d 85 db	 test	 r11, r11
  0015c	74 29		 je	 SHORT $LN9@lua_setupv
  0015e	49 8b 0b	 mov	 rcx, QWORD PTR [r11]
  00161	f6 41 08 40	 test	 BYTE PTR [rcx+8], 64	; 00000040H
  00165	74 20		 je	 SHORT $LN9@lua_setupv
  00167	49 8d 43 10	 lea	 rax, QWORD PTR [r11+16]
  0016b	48 3b c8	 cmp	 rcx, rax
  0016e	75 17		 jne	 SHORT $LN9@lua_setupv
  00170	49 8b d3	 mov	 rdx, r11
  00173	49 8b ca	 mov	 rcx, r10
  00176	e8 00 00 00 00	 call	 luaC_upvalbarrier_
; Line 1252
  0017b	48 8b c3	 mov	 rax, rbx
; Line 1253
  0017e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00182	5b		 pop	 rbx
  00183	c3		 ret	 0
; Line 1244
$LN27@lua_setupv:
  00184	49 8b d9	 mov	 rbx, r9
$LN9@lua_setupv:
; Line 1252
  00187	48 8b c3	 mov	 rax, rbx
; Line 1253
  0018a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0018e	5b		 pop	 rbx
  0018f	c3		 ret	 0
lua_setupvalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_getupvalue
_TEXT	SEGMENT
L$ = 8
funcindex$ = 16
n$ = 24
lua_getupvalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1225
  00000	4c 8b 51 20	 mov	 r10, QWORD PTR [rcx+32]
  00004	4c 8b c9	 mov	 r9, rcx
  00007	85 d2		 test	 edx, edx
  00009	7e 1b		 jle	 SHORT $LN13@lua_getupv
  0000b	48 63 c2	 movsxd	 rax, edx
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00015	48 c1 e0 04	 shl	 rax, 4
  00019	49 03 02	 add	 rax, QWORD PTR [r10]
  0001c	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00020	48 0f 42 d0	 cmovb	 rdx, rax
  00024	eb 54		 jmp	 SHORT $LN17@lua_getupv
$LN13@lua_getupv:
  00026	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0002b	3b d1		 cmp	 edx, ecx
  0002d	7e 0d		 jle	 SHORT $LN35@lua_getupv
  0002f	48 63 d2	 movsxd	 rdx, edx
  00032	48 c1 e2 04	 shl	 rdx, 4
  00036	49 03 51 10	 add	 rdx, QWORD PTR [r9+16]
  0003a	eb 3e		 jmp	 SHORT $LN17@lua_getupv
$LN35@lua_getupv:
  0003c	75 0a		 jne	 SHORT $LN7@lua_getupv
  0003e	49 8b 51 18	 mov	 rdx, QWORD PTR [r9+24]
  00042	48 83 c2 40	 add	 rdx, 64			; 00000040H
  00046	eb 32		 jmp	 SHORT $LN17@lua_getupv
$LN7@lua_getupv:
  00048	4d 8b 12	 mov	 r10, QWORD PTR [r10]
  0004b	2b ca		 sub	 ecx, edx
  0004d	41 83 7a 08 16	 cmp	 DWORD PTR [r10+8], 22
  00052	74 1f		 je	 SHORT $LN16@lua_getupv
  00054	4d 8b 12	 mov	 r10, QWORD PTR [r10]
  00057	41 0f b6 42 0a	 movzx	 eax, BYTE PTR [r10+10]
  0005c	3b c8		 cmp	 ecx, eax
  0005e	7f 13		 jg	 SHORT $LN16@lua_getupv
  00060	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00063	48 63 d0	 movsxd	 rdx, eax
  00066	48 83 c2 02	 add	 rdx, 2
  0006a	48 c1 e2 04	 shl	 rdx, 4
  0006e	49 03 d2	 add	 rdx, r10
  00071	eb 07		 jmp	 SHORT $LN17@lua_getupv
$LN16@lua_getupv:
  00073	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
$LN17@lua_getupv:
  0007a	8b 42 08	 mov	 eax, DWORD PTR [rdx+8]
  0007d	83 e0 3f	 and	 eax, 63			; 0000003fH
  00080	83 f8 06	 cmp	 eax, 6
  00083	74 4c		 je	 SHORT $LN22@lua_getupv
  00085	83 f8 26	 cmp	 eax, 38			; 00000026H
  00088	0f 85 9f 00 00
	00		 jne	 $LN20@lua_getupv
  0008e	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00091	41 83 f8 01	 cmp	 r8d, 1
  00095	0f 8c 92 00 00
	00		 jl	 $LN20@lua_getupv
  0009b	0f b6 41 0a	 movzx	 eax, BYTE PTR [rcx+10]
  0009f	44 3b c0	 cmp	 r8d, eax
  000a2	0f 8f 85 00 00
	00		 jg	 $LN20@lua_getupv
  000a8	41 8d 40 ff	 lea	 eax, DWORD PTR [r8-1]
  000ac	48 63 d0	 movsxd	 rdx, eax
  000af	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  000b6	48 83 c2 02	 add	 rdx, 2
  000ba	48 c1 e2 04	 shl	 rdx, 4
  000be	48 03 d1	 add	 rdx, rcx
; Line 1227
  000c1	49 8b 49 10	 mov	 rcx, QWORD PTR [r9+16]
  000c5	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  000c8	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0
; Line 1228
  000cb	49 83 41 10 10	 add	 QWORD PTR [r9+16], 16
; Line 1232
  000d0	c3		 ret	 0
; Line 1225
$LN22@lua_getupv:
  000d1	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  000d4	4c 8b 50 18	 mov	 r10, QWORD PTR [rax+24]
  000d8	41 83 f8 01	 cmp	 r8d, 1
  000dc	7c 4f		 jl	 SHORT $LN20@lua_getupv
  000de	45 3b 42 10	 cmp	 r8d, DWORD PTR [r10+16]
  000e2	7f 49		 jg	 SHORT $LN20@lua_getupv
  000e4	49 63 c8	 movsxd	 rcx, r8d
  000e7	48 8b 44 c8 18	 mov	 rax, QWORD PTR [rax+rcx*8+24]
  000ec	48 03 c9	 add	 rcx, rcx
  000ef	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000f2	49 8b 42 58	 mov	 rax, QWORD PTR [r10+88]
  000f6	48 8b 44 c8 f0	 mov	 rax, QWORD PTR [rax+rcx*8-16]
  000fb	48 85 c0	 test	 rax, rax
  000fe	75 17		 jne	 SHORT $LN31@lua_getupv
; Line 1227
  00100	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  00103	49 8b 49 10	 mov	 rcx, QWORD PTR [r9+16]
  00107	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0L@PHDFOLAM@?$CI?$CKno?5name?$CJ?$AA@
  0010e	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0
; Line 1228
  00111	49 83 41 10 10	 add	 QWORD PTR [r9+16], 16
; Line 1232
  00116	c3		 ret	 0
; Line 1225
$LN31@lua_getupv:
  00117	48 83 c0 18	 add	 rax, 24
; Line 1226
  0011b	74 12		 je	 SHORT $LN1@lua_getupv
; Line 1227
  0011d	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  00120	49 8b 49 10	 mov	 rcx, QWORD PTR [r9+16]
  00124	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0
; Line 1228
  00127	49 83 41 10 10	 add	 QWORD PTR [r9+16], 16
; Line 1232
  0012c	c3		 ret	 0
; Line 1225
$LN20@lua_getupv:
; Line 1231
  0012d	33 c0		 xor	 eax, eax
$LN1@lua_getupv:
; Line 1232
  0012f	c3		 ret	 0
lua_getupvalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_setallocf
_TEXT	SEGMENT
L$ = 8
f$ = 16
ud$ = 24
lua_setallocf PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1177
  00000	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00004	4c 89 40 08	 mov	 QWORD PTR [rax+8], r8
; Line 1178
  00008	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  0000c	48 89 10	 mov	 QWORD PTR [rax], rdx
; Line 1180
  0000f	c3		 ret	 0
lua_setallocf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_getallocf
_TEXT	SEGMENT
L$ = 8
ud$ = 16
lua_getallocf PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1168
  00000	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00004	48 85 d2	 test	 rdx, rdx
  00007	74 0b		 je	 SHORT $LN4@lua_getall
  00009	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  0000d	4c 89 02	 mov	 QWORD PTR [rdx], r8
; Line 1169
  00010	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
$LN4@lua_getall:
; Line 1171
  00014	48 8b 00	 mov	 rax, QWORD PTR [rax]
; Line 1172
  00017	c3		 ret	 0
lua_getallocf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_stringtonumber
_TEXT	SEGMENT
L$ = 48
s$ = 56
lua_stringtonumber PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 337
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b c2	 mov	 rax, rdx
; Line 338
  00009	48 8b 51 10	 mov	 rdx, QWORD PTR [rcx+16]
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 8b c8	 mov	 rcx, rax
  00013	e8 00 00 00 00	 call	 luaO_str2num
; Line 339
  00018	48 85 c0	 test	 rax, rax
  0001b	74 05		 je	 SHORT $LN4@lua_string
; Line 340
  0001d	48 83 43 10 10	 add	 QWORD PTR [rbx+16], 16
$LN4@lua_string:
; Line 342
  00022	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00026	5b		 pop	 rbx
  00027	c3		 ret	 0
lua_stringtonumber ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_len
_TEXT	SEGMENT
L$ = 48
idx$ = 56
lua_len	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1155
$LN19:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 1158
  00006	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  0000a	48 8b d9	 mov	 rbx, rcx
  0000d	85 d2		 test	 edx, edx
  0000f	7e 1b		 jle	 SHORT $LN12@lua_len
  00011	48 63 c2	 movsxd	 rax, edx
  00014	48 c1 e0 04	 shl	 rax, 4
  00018	49 03 00	 add	 rax, QWORD PTR [r8]
  0001b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:luaO_nilobject_
  00022	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00026	4c 0f 42 c0	 cmovb	 r8, rax
  0002a	eb 52		 jmp	 SHORT $LN16@lua_len
$LN12@lua_len:
  0002c	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00031	3b d1		 cmp	 edx, ecx
  00033	7e 0d		 jle	 SHORT $LN17@lua_len
  00035	4c 63 c2	 movsxd	 r8, edx
  00038	49 c1 e0 04	 shl	 r8, 4
  0003c	4c 03 43 10	 add	 r8, QWORD PTR [rbx+16]
  00040	eb 3c		 jmp	 SHORT $LN16@lua_len
$LN17@lua_len:
  00042	75 0a		 jne	 SHORT $LN6@lua_len
  00044	4c 8b 43 18	 mov	 r8, QWORD PTR [rbx+24]
  00048	49 83 c0 40	 add	 r8, 64			; 00000040H
  0004c	eb 30		 jmp	 SHORT $LN16@lua_len
$LN6@lua_len:
  0004e	2b ca		 sub	 ecx, edx
  00050	49 8b 10	 mov	 rdx, QWORD PTR [r8]
  00053	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  00057	74 1e		 je	 SHORT $LN15@lua_len
  00059	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  0005c	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00060	3b c8		 cmp	 ecx, eax
  00062	7f 13		 jg	 SHORT $LN15@lua_len
  00064	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00067	4c 63 c0	 movsxd	 r8, eax
  0006a	49 83 c0 02	 add	 r8, 2
  0006e	49 c1 e0 04	 shl	 r8, 4
  00072	4c 03 c2	 add	 r8, rdx
  00075	eb 07		 jmp	 SHORT $LN16@lua_len
$LN15@lua_len:
  00077	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:luaO_nilobject_
$LN16@lua_len:
; Line 1159
  0007e	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00082	48 8b cb	 mov	 rcx, rbx
  00085	e8 00 00 00 00	 call	 luaV_objlen
; Line 1160
  0008a	48 83 43 10 10	 add	 QWORD PTR [rbx+16], 16
; Line 1162
  0008f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00093	5b		 pop	 rbx
  00094	c3		 ret	 0
lua_len	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_concat
_TEXT	SEGMENT
L$ = 48
n$ = 56
lua_concat PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1139
$LN8:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	8b da		 mov	 ebx, edx
  0000c	48 8b f9	 mov	 rdi, rcx
; Line 1142
  0000f	83 fa 02	 cmp	 edx, 2
  00012	7c 24		 jl	 SHORT $LN4@lua_concat
; Line 1143
  00014	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00018	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  0001d	7e 05		 jle	 SHORT $LN3@lua_concat
  0001f	e8 00 00 00 00	 call	 luaC_step
$LN3@lua_concat:
; Line 1144
  00024	8b d3		 mov	 edx, ebx
  00026	48 8b cf	 mov	 rcx, rdi
; Line 1152
  00029	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5f		 pop	 rdi
; Line 1144
  00033	e9 00 00 00 00	 jmp	 luaV_concat
$LN4@lua_concat:
; Line 1146
  00038	85 d2		 test	 edx, edx
  0003a	75 25		 jne	 SHORT $LN1@lua_concat
; Line 1147
  0003c	48 8b 59 10	 mov	 rbx, QWORD PTR [rcx+16]
  00040	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00047	45 33 c0	 xor	 r8d, r8d
  0004a	e8 00 00 00 00	 call	 luaS_newlstr
  0004f	48 89 03	 mov	 QWORD PTR [rbx], rax
  00052	0f b6 48 08	 movzx	 ecx, BYTE PTR [rax+8]
  00056	83 c9 40	 or	 ecx, 64			; 00000040H
  00059	89 4b 08	 mov	 DWORD PTR [rbx+8], ecx
; Line 1148
  0005c	48 83 47 10 10	 add	 QWORD PTR [rdi+16], 16
$LN1@lua_concat:
; Line 1152
  00061	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00066	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006a	5f		 pop	 rdi
  0006b	c3		 ret	 0
lua_concat ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_next
_TEXT	SEGMENT
L$ = 48
idx$ = 56
lua_next PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1122
$LN21:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 1126
  00006	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  0000a	48 8b d9	 mov	 rbx, rcx
  0000d	85 d2		 test	 edx, edx
  0000f	7e 1b		 jle	 SHORT $LN14@lua_next
  00011	48 63 c2	 movsxd	 rax, edx
  00014	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  0001b	48 c1 e0 04	 shl	 rax, 4
  0001f	49 03 00	 add	 rax, QWORD PTR [r8]
  00022	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00026	48 0f 42 d0	 cmovb	 rdx, rax
  0002a	eb 54		 jmp	 SHORT $LN18@lua_next
$LN14@lua_next:
  0002c	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00031	3b d1		 cmp	 edx, ecx
  00033	7e 0d		 jle	 SHORT $LN19@lua_next
  00035	48 63 d2	 movsxd	 rdx, edx
  00038	48 c1 e2 04	 shl	 rdx, 4
  0003c	48 03 53 10	 add	 rdx, QWORD PTR [rbx+16]
  00040	eb 3e		 jmp	 SHORT $LN18@lua_next
$LN19@lua_next:
  00042	75 0a		 jne	 SHORT $LN8@lua_next
  00044	48 8b 53 18	 mov	 rdx, QWORD PTR [rbx+24]
  00048	48 83 c2 40	 add	 rdx, 64			; 00000040H
  0004c	eb 32		 jmp	 SHORT $LN18@lua_next
$LN8@lua_next:
  0004e	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00051	2b ca		 sub	 ecx, edx
  00053	41 83 78 08 16	 cmp	 DWORD PTR [r8+8], 22
  00058	74 1f		 je	 SHORT $LN17@lua_next
  0005a	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  0005d	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  00062	3b c8		 cmp	 ecx, eax
  00064	7f 13		 jg	 SHORT $LN17@lua_next
  00066	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00069	48 63 d0	 movsxd	 rdx, eax
  0006c	48 83 c2 02	 add	 rdx, 2
  00070	48 c1 e2 04	 shl	 rdx, 4
  00074	49 03 d0	 add	 rdx, r8
  00077	eb 07		 jmp	 SHORT $LN18@lua_next
$LN17@lua_next:
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
$LN18@lua_next:
; Line 1128
  00080	4c 8b 43 10	 mov	 r8, QWORD PTR [rbx+16]
  00084	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00087	48 8b cb	 mov	 rcx, rbx
  0008a	49 83 e8 10	 sub	 r8, 16
  0008e	e8 00 00 00 00	 call	 luaH_next
; Line 1129
  00093	85 c0		 test	 eax, eax
  00095	74 0b		 je	 SHORT $LN2@lua_next
; Line 1130
  00097	48 83 43 10 10	 add	 QWORD PTR [rbx+16], 16
; Line 1136
  0009c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a0	5b		 pop	 rbx
  000a1	c3		 ret	 0
$LN2@lua_next:
; Line 1133
  000a2	48 83 43 10 f0	 add	 QWORD PTR [rbx+16], -16
; Line 1136
  000a7	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ab	5b		 pop	 rbx
  000ac	c3		 ret	 0
lua_next ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_error
_TEXT	SEGMENT
L$ = 48
lua_error PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1113
$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 1116
  00004	e8 00 00 00 00	 call	 luaG_errormsg
  00009	cc		 int	 3
$LN3@lua_error:
lua_error ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_gc
_TEXT	SEGMENT
L$ = 48
what$ = 56
data$ = 64
lua_gc	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1039
$LN23:
  00000	48 89 5c 24 18	 mov	 QWORD PTR [rsp+24], rbx
  00005	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 1043
  0000f	48 8b 59 18	 mov	 rbx, QWORD PTR [rcx+24]
  00013	33 ff		 xor	 edi, edi
  00015	48 8b f1	 mov	 rsi, rcx
; Line 1044
  00018	83 fa 09	 cmp	 edx, 9
  0001b	0f 87 8b 01 00
	00		 ja	 $LN1@lua_gc
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  00028	48 63 c2	 movsxd	 rax, edx
  0002b	8b 94 81 00 00
	00 00		 mov	 edx, DWORD PTR $LN20@lua_gc[rcx+rax*4]
  00032	48 03 d1	 add	 rdx, rcx
  00035	ff e2		 jmp	 rdx
$LN15@lua_gc:
; Line 1046
  00037	40 88 7b 57	 mov	 BYTE PTR [rbx+87], dil
; Line 1103
  0003b	8b c7		 mov	 eax, edi
; Line 1104
  0003d	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00042	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
$LN14@lua_gc:
; Line 1050
  0004d	33 d2		 xor	 edx, edx
  0004f	48 8b cb	 mov	 rcx, rbx
  00052	e8 00 00 00 00	 call	 luaE_setdebt
; Line 1051
  00057	c6 43 57 01	 mov	 BYTE PTR [rbx+87], 1
; Line 1103
  0005b	8b c7		 mov	 eax, edi
; Line 1104
  0005d	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00062	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
$LN13@lua_gc:
; Line 1055
  0006d	33 d2		 xor	 edx, edx
  0006f	48 8b ce	 mov	 rcx, rsi
  00072	e8 00 00 00 00	 call	 luaC_fullgc
; Line 1103
  00077	8b c7		 mov	 eax, edi
; Line 1104
  00079	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0007e	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00083	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00087	5f		 pop	 rdi
  00088	c3		 ret	 0
$LN12@lua_gc:
; Line 1060
  00089	48 8b 7b 18	 mov	 rdi, QWORD PTR [rbx+24]
  0008d	48 03 7b 10	 add	 rdi, QWORD PTR [rbx+16]
  00091	48 c1 ef 0a	 shr	 rdi, 10
; Line 1103
  00095	8b c7		 mov	 eax, edi
; Line 1104
  00097	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0009c	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000a1	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a5	5f		 pop	 rdi
  000a6	c3		 ret	 0
$LN11@lua_gc:
; Line 1064
  000a7	8b 7b 18	 mov	 edi, DWORD PTR [rbx+24]
  000aa	03 7b 10	 add	 edi, DWORD PTR [rbx+16]
  000ad	81 e7 ff 03 00
	00		 and	 edi, 1023		; 000003ffH
; Line 1103
  000b3	8b c7		 mov	 eax, edi
; Line 1104
  000b5	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000ba	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000bf	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000c3	5f		 pop	 rdi
  000c4	c3		 ret	 0
$LN10@lua_gc:
  000c5	48 89 6c 24 30	 mov	 QWORD PTR [rsp+48], rbp
; Line 1068
  000ca	bd 01 00 00 00	 mov	 ebp, 1
  000cf	4c 89 74 24 38	 mov	 QWORD PTR [rsp+56], r14
; Line 1069
  000d4	44 0f b6 73 57	 movzx	 r14d, BYTE PTR [rbx+87]
; Line 1072
  000d9	48 8b cb	 mov	 rcx, rbx
  000dc	40 88 6b 57	 mov	 BYTE PTR [rbx+87], bpl
  000e0	45 85 c0	 test	 r8d, r8d
  000e3	75 0e		 jne	 SHORT $LN9@lua_gc
  000e5	48 c7 c2 a0 f6
	ff ff		 mov	 rdx, -2400		; fffffffffffff6a0H
  000ec	e8 00 00 00 00	 call	 luaE_setdebt
; Line 1075
  000f1	eb 1d		 jmp	 SHORT $LN21@lua_gc
$LN9@lua_gc:
; Line 1076
  000f3	49 63 e8	 movsxd	 rbp, r8d
  000f6	48 c1 e5 0a	 shl	 rbp, 10
  000fa	48 03 6b 18	 add	 rbp, QWORD PTR [rbx+24]
; Line 1077
  000fe	48 8b d5	 mov	 rdx, rbp
  00101	e8 00 00 00 00	 call	 luaE_setdebt
; Line 1078
  00106	48 8b 46 18	 mov	 rax, QWORD PTR [rsi+24]
  0010a	48 39 78 18	 cmp	 QWORD PTR [rax+24], rdi
  0010e	7e 08		 jle	 SHORT $LN7@lua_gc
$LN21@lua_gc:
  00110	48 8b ce	 mov	 rcx, rsi
  00113	e8 00 00 00 00	 call	 luaC_step
$LN7@lua_gc:
; Line 1080
  00118	44 88 73 57	 mov	 BYTE PTR [rbx+87], r14b
  0011c	4c 8b 74 24 38	 mov	 r14, QWORD PTR [rsp+56]
; Line 1081
  00121	48 85 ed	 test	 rbp, rbp
  00124	48 8b 6c 24 30	 mov	 rbp, QWORD PTR [rsp+48]
  00129	0f 8e 80 00 00
	00		 jle	 $LN16@lua_gc
  0012f	80 7b 55 07	 cmp	 BYTE PTR [rbx+85], 7
  00133	75 7a		 jne	 SHORT $LN16@lua_gc
; Line 1082
  00135	bf 01 00 00 00	 mov	 edi, 1
; Line 1103
  0013a	8b c7		 mov	 eax, edi
; Line 1104
  0013c	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00141	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00146	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0014a	5f		 pop	 rdi
  0014b	c3		 ret	 0
$LN5@lua_gc:
; Line 1086
  0014c	8b bb b4 00 00
	00		 mov	 edi, DWORD PTR [rbx+180]
; Line 1087
  00152	44 89 83 b4 00
	00 00		 mov	 DWORD PTR [rbx+180], r8d
; Line 1103
  00159	8b c7		 mov	 eax, edi
; Line 1104
  0015b	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00160	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00165	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00169	5f		 pop	 rdi
  0016a	c3		 ret	 0
$LN4@lua_gc:
; Line 1091
  0016b	8b bb b8 00 00
	00		 mov	 edi, DWORD PTR [rbx+184]
; Line 1092
  00171	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  00176	44 3b c0	 cmp	 r8d, eax
  00179	44 0f 4c c0	 cmovl	 r8d, eax
; Line 1103
  0017d	8b c7		 mov	 eax, edi
  0017f	44 89 83 b8 00
	00 00		 mov	 DWORD PTR [rbx+184], r8d
; Line 1104
  00186	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0018b	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00190	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00194	5f		 pop	 rdi
  00195	c3		 ret	 0
$LN2@lua_gc:
; Line 1097
  00196	0f b6 7b 57	 movzx	 edi, BYTE PTR [rbx+87]
; Line 1103
  0019a	8b c7		 mov	 eax, edi
; Line 1104
  0019c	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  001a1	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  001a6	48 83 c4 20	 add	 rsp, 32			; 00000020H
  001aa	5f		 pop	 rdi
  001ab	c3		 ret	 0
$LN1@lua_gc:
; Line 1100
  001ac	83 cf ff	 or	 edi, -1
$LN16@lua_gc:
; Line 1104
  001af	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  001b4	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  001b9	8b c7		 mov	 eax, edi
  001bb	48 83 c4 20	 add	 rsp, 32			; 00000020H
  001bf	5f		 pop	 rdi
  001c0	c3		 ret	 0
  001c1	0f 1f 00	 npad	 3
$LN20@lua_gc:
  001c4	00 00 00 00	 DD	 $LN15@lua_gc
  001c8	00 00 00 00	 DD	 $LN14@lua_gc
  001cc	00 00 00 00	 DD	 $LN13@lua_gc
  001d0	00 00 00 00	 DD	 $LN12@lua_gc
  001d4	00 00 00 00	 DD	 $LN11@lua_gc
  001d8	00 00 00 00	 DD	 $LN10@lua_gc
  001dc	00 00 00 00	 DD	 $LN5@lua_gc
  001e0	00 00 00 00	 DD	 $LN4@lua_gc
  001e4	00 00 00 00	 DD	 $LN1@lua_gc
  001e8	00 00 00 00	 DD	 $LN2@lua_gc
lua_gc	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_status
_TEXT	SEGMENT
L$ = 8
lua_status PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1031
  00000	0f b6 41 0c	 movzx	 eax, BYTE PTR [rcx+12]
; Line 1032
  00004	c3		 ret	 0
lua_status ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_dump
_TEXT	SEGMENT
L$ = 64
writer$ = 72
data$ = 80
strip$ = 88
lua_dump PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1015
$LN6:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00004	48 8b c2	 mov	 rax, rdx
; Line 1020
  00007	48 8b 51 10	 mov	 rdx, QWORD PTR [rcx+16]
; Line 1021
  0000b	83 7a f8 46	 cmp	 DWORD PTR [rdx-8], 70	; 00000046H
  0000f	75 1d		 jne	 SHORT $LN2@lua_dump
; Line 1022
  00011	48 8b 52 f0	 mov	 rdx, QWORD PTR [rdx-16]
  00015	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  0001a	4d 8b c8	 mov	 r9, r8
  0001d	48 8b 52 18	 mov	 rdx, QWORD PTR [rdx+24]
  00021	4c 8b c0	 mov	 r8, rax
  00024	e8 00 00 00 00	 call	 luaU_dump
; Line 1027
  00029	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0002d	c3		 ret	 0
$LN2@lua_dump:
; Line 1026
  0002e	b8 01 00 00 00	 mov	 eax, 1
; Line 1027
  00033	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00037	c3		 ret	 0
lua_dump ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_load
_TEXT	SEGMENT
z$ = 32
L$ = 96
reader$ = 104
data$ = 112
chunkname$ = 120
mode$ = 128
lua_load PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 992
$LN14:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
; Line 996
  0000a	4d 85 c9	 test	 r9, r9
  0000d	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:??_C@_01OGPIMHDM@?$DP?$AA@
  00014	48 8b f9	 mov	 rdi, rcx
  00017	49 0f 45 d9	 cmovne	 rbx, r9
; Line 997
  0001b	4d 8b c8	 mov	 r9, r8
  0001e	4c 8b c2	 mov	 r8, rdx
  00021	48 8d 54 24 20	 lea	 rdx, QWORD PTR z$[rsp]
  00026	e8 00 00 00 00	 call	 luaZ_init
; Line 998
  0002b	4c 8b 8c 24 80
	00 00 00	 mov	 r9, QWORD PTR mode$[rsp]
  00033	48 8d 54 24 20	 lea	 rdx, QWORD PTR z$[rsp]
  00038	4c 8b c3	 mov	 r8, rbx
  0003b	48 8b cf	 mov	 rcx, rdi
  0003e	e8 00 00 00 00	 call	 luaD_protectedparser
  00043	8b d8		 mov	 ebx, eax
; Line 999
  00045	85 c0		 test	 eax, eax
  00047	75 55		 jne	 SHORT $LN6@lua_load
; Line 1000
  00049	48 8b 4f 10	 mov	 rcx, QWORD PTR [rdi+16]
  0004d	48 89 74 24 60	 mov	 QWORD PTR [rsp+96], rsi
  00052	48 8b 71 f0	 mov	 rsi, QWORD PTR [rcx-16]
; Line 1001
  00056	80 7e 0a 01	 cmp	 BYTE PTR [rsi+10], 1
  0005a	72 3d		 jb	 SHORT $LN12@lua_load
; Line 1003
  0005c	48 8b 4f 18	 mov	 rcx, QWORD PTR [rdi+24]
; Line 1004
  00060	8d 50 02	 lea	 edx, QWORD PTR [rax+2]
  00063	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00067	e8 00 00 00 00	 call	 luaH_getint
; Line 1006
  0006c	48 8b 4e 20	 mov	 rcx, QWORD PTR [rsi+32]
  00070	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00073	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00076	0f 11 02	 movups	 XMMWORD PTR [rdx], xmm0
; Line 1007
  00079	48 8b 56 20	 mov	 rdx, QWORD PTR [rsi+32]
  0007d	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00080	f6 41 08 40	 test	 BYTE PTR [rcx+8], 64	; 00000040H
  00084	74 11		 je	 SHORT $LN8@lua_load
  00086	48 8d 42 10	 lea	 rax, QWORD PTR [rdx+16]
  0008a	48 3b c8	 cmp	 rcx, rax
  0008d	75 08		 jne	 SHORT $LN8@lua_load
  0008f	48 8b cf	 mov	 rcx, rdi
  00092	e8 00 00 00 00	 call	 luaC_upvalbarrier_
$LN8@lua_load:
; Line 1011
  00097	8b c3		 mov	 eax, ebx
$LN12@lua_load:
  00099	48 8b 74 24 60	 mov	 rsi, QWORD PTR [rsp+96]
$LN6@lua_load:
; Line 1012
  0009e	48 8b 5c 24 68	 mov	 rbx, QWORD PTR [rsp+104]
  000a3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000a7	5f		 pop	 rdi
  000a8	c3		 ret	 0
lua_load ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_pcallk
_TEXT	SEGMENT
c$ = 48
L$ = 80
nargs$ = 88
nresults$ = 96
errfunc$ = 104
ctx$ = 112
k$ = 120
lua_pcallk PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 948
$LN12:
  00000	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
; Line 958
  0000a	33 f6		 xor	 esi, esi
  0000c	48 89 6c 24 58	 mov	 QWORD PTR [rsp+88], rbp
  00011	44 8b da	 mov	 r11d, edx
  00014	41 8b e8	 mov	 ebp, r8d
  00017	48 8b f9	 mov	 rdi, rcx
  0001a	45 85 c9	 test	 r9d, r9d
  0001d	75 05		 jne	 SHORT $LN6@lua_pcallk
; Line 959
  0001f	44 8b d6	 mov	 r10d, esi
; Line 960
  00022	eb 0f		 jmp	 SHORT $LN5@lua_pcallk
$LN6@lua_pcallk:
; Line 961
  00024	41 8b d1	 mov	 edx, r9d
  00027	e8 00 00 00 00	 call	 index2addr
  0002c	4c 8b d0	 mov	 r10, rax
; Line 963
  0002f	4c 2b 57 38	 sub	 r10, QWORD PTR [rdi+56]
$LN5@lua_pcallk:
; Line 965
  00033	4c 8b 4f 10	 mov	 r9, QWORD PTR [rdi+16]
  00037	41 8d 43 01	 lea	 eax, DWORD PTR [r11+1]
  0003b	48 63 c8	 movsxd	 rcx, eax
; Line 966
  0003e	48 8b 44 24 78	 mov	 rax, QWORD PTR k$[rsp]
  00043	48 c1 e1 04	 shl	 rcx, 4
  00047	4c 2b c9	 sub	 r9, rcx
  0004a	4c 89 4c 24 30	 mov	 QWORD PTR c$[rsp], r9
  0004f	48 85 c0	 test	 rax, rax
  00052	74 79		 je	 SHORT $LN3@lua_pcallk
  00054	66 39 b7 c4 00
	00 00		 cmp	 WORD PTR [rdi+196], si
  0005b	77 70		 ja	 SHORT $LN3@lua_pcallk
; Line 971
  0005d	48 89 5c 24 50	 mov	 QWORD PTR [rsp+80], rbx
  00062	48 8b 5f 20	 mov	 rbx, QWORD PTR [rdi+32]
; Line 980
  00066	44 8b c5	 mov	 r8d, ebp
  00069	48 89 43 20	 mov	 QWORD PTR [rbx+32], rax
  0006d	48 8b 44 24 70	 mov	 rax, QWORD PTR ctx$[rsp]
  00072	48 89 43 30	 mov	 QWORD PTR [rbx+48], rax
  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR c$[rsp]
  0007b	48 2b 47 38	 sub	 rax, QWORD PTR [rdi+56]
  0007f	48 89 43 38	 mov	 QWORD PTR [rbx+56], rax
  00083	48 8b 87 b0 00
	00 00		 mov	 rax, QWORD PTR [rdi+176]
  0008a	48 89 43 28	 mov	 QWORD PTR [rbx+40], rax
  0008e	0f b6 8f c9 00
	00 00		 movzx	 ecx, BYTE PTR [rdi+201]
  00095	4c 89 97 b0 00
	00 00		 mov	 QWORD PTR [rdi+176], r10
  0009c	0f b6 43 42	 movzx	 eax, BYTE PTR [rbx+66]
  000a0	24 fe		 and	 al, 254			; 000000feH
  000a2	0a c8		 or	 cl, al
  000a4	80 c9 10	 or	 cl, 16
  000a7	88 4b 42	 mov	 BYTE PTR [rbx+66], cl
  000aa	48 8b 54 24 30	 mov	 rdx, QWORD PTR c$[rsp]
  000af	48 8b cf	 mov	 rcx, rdi
  000b2	e8 00 00 00 00	 call	 luaD_call
; Line 982
  000b7	48 8b 43 28	 mov	 rax, QWORD PTR [rbx+40]
  000bb	80 63 42 ef	 and	 BYTE PTR [rbx+66], 239	; 000000efH
  000bf	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  000c4	48 89 87 b0 00
	00 00		 mov	 QWORD PTR [rdi+176], rax
; Line 983
  000cb	eb 23		 jmp	 SHORT $LN2@lua_pcallk
$LN3@lua_pcallk:
; Line 968
  000cd	4c 2b 4f 38	 sub	 r9, QWORD PTR [rdi+56]
  000d1	4c 8d 44 24 30	 lea	 r8, QWORD PTR c$[rsp]
  000d6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:f_call
  000dd	48 8b cf	 mov	 rcx, rdi
  000e0	89 6c 24 38	 mov	 DWORD PTR c$[rsp+8], ebp
  000e4	4c 89 54 24 20	 mov	 QWORD PTR [rsp+32], r10
  000e9	e8 00 00 00 00	 call	 luaD_pcall
  000ee	8b f0		 mov	 esi, eax
$LN2@lua_pcallk:
; Line 985
  000f0	83 fd ff	 cmp	 ebp, -1
  000f3	48 8b 6c 24 58	 mov	 rbp, QWORD PTR [rsp+88]
  000f8	75 12		 jne	 SHORT $LN9@lua_pcallk
  000fa	48 8b 47 20	 mov	 rax, QWORD PTR [rdi+32]
  000fe	48 8b 4f 10	 mov	 rcx, QWORD PTR [rdi+16]
  00102	48 39 48 08	 cmp	 QWORD PTR [rax+8], rcx
  00106	73 04		 jae	 SHORT $LN9@lua_pcallk
  00108	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
$LN9@lua_pcallk:
; Line 987
  0010c	8b c6		 mov	 eax, esi
; Line 988
  0010e	48 8b 74 24 60	 mov	 rsi, QWORD PTR [rsp+96]
  00113	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00117	5f		 pop	 rdi
  00118	c3		 ret	 0
lua_pcallk ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_callk
_TEXT	SEGMENT
L$ = 48
nargs$ = 56
nresults$ = 64
ctx$ = 72
k$ = 80
lua_callk PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 909
$LN7:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 917
  0000a	8d 42 01	 lea	 eax, DWORD PTR [rdx+1]
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00014	48 63 d0	 movsxd	 rdx, eax
  00017	41 8b f8	 mov	 edi, r8d
  0001a	48 c1 e2 04	 shl	 rdx, 4
  0001e	48 2b ca	 sub	 rcx, rdx
; Line 918
  00021	48 8b 54 24 50	 mov	 rdx, QWORD PTR k$[rsp]
  00026	48 85 d2	 test	 rdx, rdx
  00029	74 27		 je	 SHORT $LN3@lua_callk
  0002b	66 83 bb c4 00
	00 00 00	 cmp	 WORD PTR [rbx+196], 0
  00033	75 1d		 jne	 SHORT $LN3@lua_callk
; Line 919
  00035	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00039	48 89 50 20	 mov	 QWORD PTR [rax+32], rdx
; Line 920
  0003d	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
; Line 921
  00041	48 8b d1	 mov	 rdx, rcx
  00044	48 8b cb	 mov	 rcx, rbx
  00047	4c 89 48 30	 mov	 QWORD PTR [rax+48], r9
  0004b	e8 00 00 00 00	 call	 luaD_call
; Line 923
  00050	eb 0b		 jmp	 SHORT $LN2@lua_callk
$LN3@lua_callk:
; Line 924
  00052	48 8b d1	 mov	 rdx, rcx
  00055	48 8b cb	 mov	 rcx, rbx
  00058	e8 00 00 00 00	 call	 luaD_callnoyield
$LN2@lua_callk:
; Line 925
  0005d	83 ff ff	 cmp	 edi, -1
  00060	75 12		 jne	 SHORT $LN1@lua_callk
  00062	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00066	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]
  0006a	48 39 48 08	 cmp	 QWORD PTR [rax+8], rcx
  0006e	73 04		 jae	 SHORT $LN1@lua_callk
  00070	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
$LN1@lua_callk:
; Line 927
  00074	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00079	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007d	5f		 pop	 rdi
  0007e	c3		 ret	 0
lua_callk ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_setuservalue
_TEXT	SEGMENT
L$ = 48
idx$ = 56
lua_setuservalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 885
$LN24:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 889
  00006	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  0000a	48 8b d9	 mov	 rbx, rcx
  0000d	85 d2		 test	 edx, edx
  0000f	7e 1b		 jle	 SHORT $LN14@lua_setuse
  00011	48 63 c2	 movsxd	 rax, edx
  00014	48 c1 e0 04	 shl	 rax, 4
  00018	49 03 00	 add	 rax, QWORD PTR [r8]
  0001b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:luaO_nilobject_
  00022	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00026	4c 0f 42 c0	 cmovb	 r8, rax
  0002a	eb 52		 jmp	 SHORT $LN18@lua_setuse
$LN14@lua_setuse:
  0002c	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00031	3b d1		 cmp	 edx, ecx
  00033	7e 0d		 jle	 SHORT $LN22@lua_setuse
  00035	4c 63 c2	 movsxd	 r8, edx
  00038	49 c1 e0 04	 shl	 r8, 4
  0003c	4c 03 43 10	 add	 r8, QWORD PTR [rbx+16]
  00040	eb 3c		 jmp	 SHORT $LN18@lua_setuse
$LN22@lua_setuse:
  00042	75 0a		 jne	 SHORT $LN8@lua_setuse
  00044	4c 8b 43 18	 mov	 r8, QWORD PTR [rbx+24]
  00048	49 83 c0 40	 add	 r8, 64			; 00000040H
  0004c	eb 30		 jmp	 SHORT $LN18@lua_setuse
$LN8@lua_setuse:
  0004e	2b ca		 sub	 ecx, edx
  00050	49 8b 10	 mov	 rdx, QWORD PTR [r8]
  00053	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  00057	74 1e		 je	 SHORT $LN17@lua_setuse
  00059	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  0005c	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00060	3b c8		 cmp	 ecx, eax
  00062	7f 13		 jg	 SHORT $LN17@lua_setuse
  00064	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00067	4c 63 c0	 movsxd	 r8, eax
  0006a	49 83 c0 02	 add	 r8, 2
  0006e	49 c1 e0 04	 shl	 r8, 4
  00072	4c 03 c2	 add	 r8, rdx
  00075	eb 07		 jmp	 SHORT $LN18@lua_setuse
$LN17@lua_setuse:
  00077	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:luaO_nilobject_
$LN18@lua_setuse:
; Line 891
  0007e	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00082	49 8b 08	 mov	 rcx, QWORD PTR [r8]
  00085	48 8b 42 f0	 mov	 rax, QWORD PTR [rdx-16]
  00089	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
  0008d	0f b6 42 f8	 movzx	 eax, BYTE PTR [rdx-8]
  00091	88 41 0a	 mov	 BYTE PTR [rcx+10], al
; Line 892
  00094	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  00098	f6 40 f8 40	 test	 BYTE PTR [rax-8], 64	; 00000040H
  0009c	74 1c		 je	 SHORT $LN19@lua_setuse
  0009e	49 8b 10	 mov	 rdx, QWORD PTR [r8]
  000a1	f6 42 09 04	 test	 BYTE PTR [rdx+9], 4
  000a5	74 13		 je	 SHORT $LN19@lua_setuse
  000a7	4c 8b 40 f0	 mov	 r8, QWORD PTR [rax-16]
  000ab	41 f6 40 09 03	 test	 BYTE PTR [r8+9], 3
  000b0	74 08		 je	 SHORT $LN19@lua_setuse
  000b2	48 8b cb	 mov	 rcx, rbx
  000b5	e8 00 00 00 00	 call	 luaC_barrier_
$LN19@lua_setuse:
; Line 893
  000ba	48 83 43 10 f0	 add	 QWORD PTR [rbx+16], -16
; Line 895
  000bf	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000c3	5b		 pop	 rbx
  000c4	c3		 ret	 0
lua_setuservalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_setmetatable
_TEXT	SEGMENT
L$ = 48
objindex$ = 56
lua_setmetatable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 845
$LN37:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 850
  0000f	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  00013	48 8b f1	 mov	 rsi, rcx
  00016	85 d2		 test	 edx, edx
  00018	7e 1b		 jle	 SHORT $LN25@lua_setmet
  0001a	48 63 c2	 movsxd	 rax, edx
  0001d	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
  00024	48 c1 e0 04	 shl	 rax, 4
  00028	49 03 00	 add	 rax, QWORD PTR [r8]
  0002b	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  0002f	48 0f 42 d8	 cmovb	 rbx, rax
  00033	eb 52		 jmp	 SHORT $LN29@lua_setmet
$LN25@lua_setmet:
  00035	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0003a	3b d1		 cmp	 edx, ecx
  0003c	7e 0d		 jle	 SHORT $LN30@lua_setmet
  0003e	48 63 da	 movsxd	 rbx, edx
  00041	48 c1 e3 04	 shl	 rbx, 4
  00045	48 03 5e 10	 add	 rbx, QWORD PTR [rsi+16]
  00049	eb 3c		 jmp	 SHORT $LN29@lua_setmet
$LN30@lua_setmet:
  0004b	75 0a		 jne	 SHORT $LN19@lua_setmet
  0004d	48 8b 5e 18	 mov	 rbx, QWORD PTR [rsi+24]
  00051	48 83 c3 40	 add	 rbx, 64			; 00000040H
  00055	eb 30		 jmp	 SHORT $LN29@lua_setmet
$LN19@lua_setmet:
  00057	2b ca		 sub	 ecx, edx
  00059	49 8b 10	 mov	 rdx, QWORD PTR [r8]
  0005c	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  00060	74 1e		 je	 SHORT $LN28@lua_setmet
  00062	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00065	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00069	3b c8		 cmp	 ecx, eax
  0006b	7f 13		 jg	 SHORT $LN28@lua_setmet
  0006d	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00070	48 63 d8	 movsxd	 rbx, eax
  00073	48 83 c3 02	 add	 rbx, 2
  00077	48 c1 e3 04	 shl	 rbx, 4
  0007b	48 03 da	 add	 rbx, rdx
  0007e	eb 07		 jmp	 SHORT $LN29@lua_setmet
$LN28@lua_setmet:
  00080	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
$LN29@lua_setmet:
; Line 851
  00087	48 8b 7e 10	 mov	 rdi, QWORD PTR [rsi+16]
  0008b	83 7f f8 00	 cmp	 DWORD PTR [rdi-8], 0
  0008f	75 04		 jne	 SHORT $LN9@lua_setmet
; Line 852
  00091	33 ff		 xor	 edi, edi
; Line 853
  00093	eb 04		 jmp	 SHORT $LN8@lua_setmet
$LN9@lua_setmet:
; Line 855
  00095	48 8b 7f f0	 mov	 rdi, QWORD PTR [rdi-16]
$LN8@lua_setmet:
; Line 857
  00099	8b 4b 08	 mov	 ecx, DWORD PTR [rbx+8]
  0009c	8b c1		 mov	 eax, ecx
  0009e	83 e0 0f	 and	 eax, 15
  000a1	83 f8 05	 cmp	 eax, 5
  000a4	74 1f		 je	 SHORT $LN5@lua_setmet
  000a6	83 f8 07	 cmp	 eax, 7
  000a9	74 11		 je	 SHORT $LN3@lua_setmet
; Line 875
  000ab	48 8b 46 18	 mov	 rax, QWORD PTR [rsi+24]
  000af	83 e1 0f	 and	 ecx, 15
  000b2	48 89 bc c8 a0
	01 00 00	 mov	 QWORD PTR [rax+rcx*8+416], rdi
; Line 876
  000ba	eb 3d		 jmp	 SHORT $LN4@lua_setmet
$LN3@lua_setmet:
; Line 867
  000bc	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000bf	48 89 78 10	 mov	 QWORD PTR [rax+16], rdi
; Line 872
  000c3	eb 07		 jmp	 SHORT $LN35@lua_setmet
$LN5@lua_setmet:
; Line 859
  000c5	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000c8	48 89 78 28	 mov	 QWORD PTR [rax+40], rdi
$LN35@lua_setmet:
; Line 860
  000cc	48 85 ff	 test	 rdi, rdi
  000cf	74 28		 je	 SHORT $LN4@lua_setmet
; Line 861
  000d1	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  000d4	f6 42 09 04	 test	 BYTE PTR [rdx+9], 4
  000d8	74 11		 je	 SHORT $LN12@lua_setmet
  000da	f6 47 09 03	 test	 BYTE PTR [rdi+9], 3
  000de	74 0b		 je	 SHORT $LN12@lua_setmet
  000e0	4c 8b c7	 mov	 r8, rdi
  000e3	48 8b ce	 mov	 rcx, rsi
  000e6	e8 00 00 00 00	 call	 luaC_barrier_
$LN12@lua_setmet:
; Line 862
  000eb	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  000ee	4c 8b c7	 mov	 r8, rdi
  000f1	48 8b ce	 mov	 rcx, rsi
  000f4	e8 00 00 00 00	 call	 luaC_checkfinalizer
$LN4@lua_setmet:
; Line 879
  000f9	48 83 46 10 f0	 add	 QWORD PTR [rsi+16], -16
; Line 882
  000fe	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00103	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00108	b8 01 00 00 00	 mov	 eax, 1
  0010d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00111	5f		 pop	 rdi
  00112	c3		 ret	 0
lua_setmetatable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_rawsetp
_TEXT	SEGMENT
k$ = 32
L$ = 64
idx$ = 72
p$ = 80
lua_rawsetp PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 829
$LN24:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 834
  0000a	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  0000e	48 8b f9	 mov	 rdi, rcx
  00011	85 d2		 test	 edx, edx
  00013	7e 1b		 jle	 SHORT $LN14@lua_rawset
  00015	48 63 c2	 movsxd	 rax, edx
  00018	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
  0001f	48 c1 e0 04	 shl	 rax, 4
  00023	49 03 01	 add	 rax, QWORD PTR [r9]
  00026	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  0002a	48 0f 42 d8	 cmovb	 rbx, rax
  0002e	eb 52		 jmp	 SHORT $LN18@lua_rawset
$LN14@lua_rawset:
  00030	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00035	3b d1		 cmp	 edx, ecx
  00037	7e 0d		 jle	 SHORT $LN22@lua_rawset
  00039	48 63 da	 movsxd	 rbx, edx
  0003c	48 c1 e3 04	 shl	 rbx, 4
  00040	48 03 5f 10	 add	 rbx, QWORD PTR [rdi+16]
  00044	eb 3c		 jmp	 SHORT $LN18@lua_rawset
$LN22@lua_rawset:
  00046	75 0a		 jne	 SHORT $LN8@lua_rawset
  00048	48 8b 5f 18	 mov	 rbx, QWORD PTR [rdi+24]
  0004c	48 83 c3 40	 add	 rbx, 64			; 00000040H
  00050	eb 30		 jmp	 SHORT $LN18@lua_rawset
$LN8@lua_rawset:
  00052	2b ca		 sub	 ecx, edx
  00054	49 8b 11	 mov	 rdx, QWORD PTR [r9]
  00057	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  0005b	74 1e		 je	 SHORT $LN17@lua_rawset
  0005d	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00060	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00064	3b c8		 cmp	 ecx, eax
  00066	7f 13		 jg	 SHORT $LN17@lua_rawset
  00068	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0006b	48 63 d8	 movsxd	 rbx, eax
  0006e	48 83 c3 02	 add	 rbx, 2
  00072	48 c1 e3 04	 shl	 rbx, 4
  00076	48 03 da	 add	 rbx, rdx
  00079	eb 07		 jmp	 SHORT $LN18@lua_rawset
$LN17@lua_rawset:
  0007b	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
$LN18@lua_rawset:
; Line 836
  00082	4c 89 44 24 20	 mov	 QWORD PTR k$[rsp], r8
  00087	c7 44 24 28 02
	00 00 00	 mov	 DWORD PTR k$[rsp+8], 2
; Line 837
  0008f	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00092	4c 8d 44 24 20	 lea	 r8, QWORD PTR k$[rsp]
  00097	48 8b cf	 mov	 rcx, rdi
  0009a	e8 00 00 00 00	 call	 luaH_set
; Line 838
  0009f	48 8b 4f 10	 mov	 rcx, QWORD PTR [rdi+16]
  000a3	0f 10 41 f0	 movups	 xmm0, XMMWORD PTR [rcx-16]
  000a7	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0
; Line 839
  000aa	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
  000ae	f6 40 f8 40	 test	 BYTE PTR [rax-8], 64	; 00000040H
  000b2	74 1b		 je	 SHORT $LN19@lua_rawset
  000b4	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  000b7	f6 42 09 04	 test	 BYTE PTR [rdx+9], 4
  000bb	74 12		 je	 SHORT $LN19@lua_rawset
  000bd	48 8b 40 f0	 mov	 rax, QWORD PTR [rax-16]
  000c1	f6 40 09 03	 test	 BYTE PTR [rax+9], 3
  000c5	74 08		 je	 SHORT $LN19@lua_rawset
  000c7	48 8b cf	 mov	 rcx, rdi
  000ca	e8 00 00 00 00	 call	 luaC_barrierback_
$LN19@lua_rawset:
; Line 840
  000cf	48 83 47 10 f0	 add	 QWORD PTR [rdi+16], -16
; Line 842
  000d4	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000d9	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000dd	5f		 pop	 rdi
  000de	c3		 ret	 0
lua_rawsetp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_rawseti
_TEXT	SEGMENT
L$ = 48
idx$ = 56
n$ = 64
lua_rawseti PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 816
$LN24:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 820
  0000a	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  0000e	48 8b f9	 mov	 rdi, rcx
  00011	85 d2		 test	 edx, edx
  00013	7e 1b		 jle	 SHORT $LN14@lua_rawset
  00015	48 63 c2	 movsxd	 rax, edx
  00018	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
  0001f	48 c1 e0 04	 shl	 rax, 4
  00023	49 03 01	 add	 rax, QWORD PTR [r9]
  00026	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  0002a	48 0f 42 d8	 cmovb	 rbx, rax
  0002e	eb 52		 jmp	 SHORT $LN18@lua_rawset
$LN14@lua_rawset:
  00030	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00035	3b d1		 cmp	 edx, ecx
  00037	7e 0d		 jle	 SHORT $LN22@lua_rawset
  00039	48 63 da	 movsxd	 rbx, edx
  0003c	48 c1 e3 04	 shl	 rbx, 4
  00040	48 03 5f 10	 add	 rbx, QWORD PTR [rdi+16]
  00044	eb 3c		 jmp	 SHORT $LN18@lua_rawset
$LN22@lua_rawset:
  00046	75 0a		 jne	 SHORT $LN8@lua_rawset
  00048	48 8b 5f 18	 mov	 rbx, QWORD PTR [rdi+24]
  0004c	48 83 c3 40	 add	 rbx, 64			; 00000040H
  00050	eb 30		 jmp	 SHORT $LN18@lua_rawset
$LN8@lua_rawset:
  00052	2b ca		 sub	 ecx, edx
  00054	49 8b 11	 mov	 rdx, QWORD PTR [r9]
  00057	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  0005b	74 1e		 je	 SHORT $LN17@lua_rawset
  0005d	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00060	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00064	3b c8		 cmp	 ecx, eax
  00066	7f 13		 jg	 SHORT $LN17@lua_rawset
  00068	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0006b	48 63 d8	 movsxd	 rbx, eax
  0006e	48 83 c3 02	 add	 rbx, 2
  00072	48 c1 e3 04	 shl	 rbx, 4
  00076	48 03 da	 add	 rbx, rdx
  00079	eb 07		 jmp	 SHORT $LN18@lua_rawset
$LN17@lua_rawset:
  0007b	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
$LN18@lua_rawset:
; Line 822
  00082	4c 8b 4f 10	 mov	 r9, QWORD PTR [rdi+16]
  00086	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00089	48 8b cf	 mov	 rcx, rdi
  0008c	49 83 e9 10	 sub	 r9, 16
  00090	e8 00 00 00 00	 call	 luaH_setint
; Line 823
  00095	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
  00099	f6 40 f8 40	 test	 BYTE PTR [rax-8], 64	; 00000040H
  0009d	74 1b		 je	 SHORT $LN19@lua_rawset
  0009f	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  000a2	f6 42 09 04	 test	 BYTE PTR [rdx+9], 4
  000a6	74 12		 je	 SHORT $LN19@lua_rawset
  000a8	48 8b 40 f0	 mov	 rax, QWORD PTR [rax-16]
  000ac	f6 40 09 03	 test	 BYTE PTR [rax+9], 3
  000b0	74 08		 je	 SHORT $LN19@lua_rawset
  000b2	48 8b cf	 mov	 rcx, rdi
  000b5	e8 00 00 00 00	 call	 luaC_barrierback_
$LN19@lua_rawset:
; Line 824
  000ba	48 83 47 10 f0	 add	 QWORD PTR [rdi+16], -16
; Line 826
  000bf	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000c4	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000c8	5f		 pop	 rdi
  000c9	c3		 ret	 0
lua_rawseti ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_rawset
_TEXT	SEGMENT
L$ = 48
idx$ = 56
lua_rawset PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 800
$LN24:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 805
  0000a	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  0000e	48 8b f9	 mov	 rdi, rcx
  00011	85 d2		 test	 edx, edx
  00013	7e 1b		 jle	 SHORT $LN14@lua_rawset
  00015	48 63 c2	 movsxd	 rax, edx
  00018	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
  0001f	48 c1 e0 04	 shl	 rax, 4
  00023	49 03 00	 add	 rax, QWORD PTR [r8]
  00026	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  0002a	48 0f 42 d8	 cmovb	 rbx, rax
  0002e	eb 52		 jmp	 SHORT $LN18@lua_rawset
$LN14@lua_rawset:
  00030	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00035	3b d1		 cmp	 edx, ecx
  00037	7e 0d		 jle	 SHORT $LN22@lua_rawset
  00039	48 63 da	 movsxd	 rbx, edx
  0003c	48 c1 e3 04	 shl	 rbx, 4
  00040	48 03 5f 10	 add	 rbx, QWORD PTR [rdi+16]
  00044	eb 3c		 jmp	 SHORT $LN18@lua_rawset
$LN22@lua_rawset:
  00046	75 0a		 jne	 SHORT $LN8@lua_rawset
  00048	48 8b 5f 18	 mov	 rbx, QWORD PTR [rdi+24]
  0004c	48 83 c3 40	 add	 rbx, 64			; 00000040H
  00050	eb 30		 jmp	 SHORT $LN18@lua_rawset
$LN8@lua_rawset:
  00052	2b ca		 sub	 ecx, edx
  00054	49 8b 10	 mov	 rdx, QWORD PTR [r8]
  00057	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  0005b	74 1e		 je	 SHORT $LN17@lua_rawset
  0005d	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00060	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00064	3b c8		 cmp	 ecx, eax
  00066	7f 13		 jg	 SHORT $LN17@lua_rawset
  00068	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0006b	48 63 d8	 movsxd	 rbx, eax
  0006e	48 83 c3 02	 add	 rbx, 2
  00072	48 c1 e3 04	 shl	 rbx, 4
  00076	48 03 da	 add	 rbx, rdx
  00079	eb 07		 jmp	 SHORT $LN18@lua_rawset
$LN17@lua_rawset:
  0007b	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
$LN18@lua_rawset:
; Line 807
  00082	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  00086	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00089	48 8b cf	 mov	 rcx, rdi
  0008c	49 83 e8 20	 sub	 r8, 32			; 00000020H
  00090	e8 00 00 00 00	 call	 luaH_set
; Line 808
  00095	48 8b 4f 10	 mov	 rcx, QWORD PTR [rdi+16]
  00099	0f 10 41 f0	 movups	 xmm0, XMMWORD PTR [rcx-16]
  0009d	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0
; Line 809
  000a0	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000a3	c6 40 0a 00	 mov	 BYTE PTR [rax+10], 0
; Line 810
  000a7	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
  000ab	f6 40 f8 40	 test	 BYTE PTR [rax-8], 64	; 00000040H
  000af	74 1b		 je	 SHORT $LN19@lua_rawset
  000b1	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  000b4	f6 42 09 04	 test	 BYTE PTR [rdx+9], 4
  000b8	74 12		 je	 SHORT $LN19@lua_rawset
  000ba	48 8b 40 f0	 mov	 rax, QWORD PTR [rax-16]
  000be	f6 40 09 03	 test	 BYTE PTR [rax+9], 3
  000c2	74 08		 je	 SHORT $LN19@lua_rawset
  000c4	48 8b cf	 mov	 rcx, rdi
  000c7	e8 00 00 00 00	 call	 luaC_barrierback_
$LN19@lua_rawset:
; Line 811
  000cc	48 83 47 10 e0	 add	 QWORD PTR [rdi+16], -32	; ffffffffffffffe0H
; Line 813
  000d1	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000d6	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000da	5f		 pop	 rdi
  000db	c3		 ret	 0
lua_rawset ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_seti
_TEXT	SEGMENT
L$ = 64
idx$ = 72
n$ = 80
lua_seti PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 782
$LN28:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 787
  0000f	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00013	49 8b e8	 mov	 rbp, r8
  00016	48 8b f9	 mov	 rdi, rcx
  00019	85 d2		 test	 edx, edx
  0001b	7e 1b		 jle	 SHORT $LN20@lua_seti
  0001d	48 63 c2	 movsxd	 rax, edx
  00020	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
  00027	48 c1 e0 04	 shl	 rax, 4
  0002b	49 03 01	 add	 rax, QWORD PTR [r9]
  0002e	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00032	48 0f 42 d8	 cmovb	 rbx, rax
  00036	eb 52		 jmp	 SHORT $LN24@lua_seti
$LN20@lua_seti:
  00038	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0003d	3b d1		 cmp	 edx, ecx
  0003f	7e 0d		 jle	 SHORT $LN26@lua_seti
  00041	48 63 da	 movsxd	 rbx, edx
  00044	48 c1 e3 04	 shl	 rbx, 4
  00048	48 03 5f 10	 add	 rbx, QWORD PTR [rdi+16]
  0004c	eb 3c		 jmp	 SHORT $LN24@lua_seti
$LN26@lua_seti:
  0004e	75 0a		 jne	 SHORT $LN14@lua_seti
  00050	48 8b 5f 18	 mov	 rbx, QWORD PTR [rdi+24]
  00054	48 83 c3 40	 add	 rbx, 64			; 00000040H
  00058	eb 30		 jmp	 SHORT $LN24@lua_seti
$LN14@lua_seti:
  0005a	2b ca		 sub	 ecx, edx
  0005c	49 8b 11	 mov	 rdx, QWORD PTR [r9]
  0005f	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  00063	74 1e		 je	 SHORT $LN23@lua_seti
  00065	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00068	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  0006c	3b c8		 cmp	 ecx, eax
  0006e	7f 13		 jg	 SHORT $LN23@lua_seti
  00070	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00073	48 63 d8	 movsxd	 rbx, eax
  00076	48 83 c3 02	 add	 rbx, 2
  0007a	48 c1 e3 04	 shl	 rbx, 4
  0007e	48 03 da	 add	 rbx, rdx
  00081	eb 07		 jmp	 SHORT $LN24@lua_seti
$LN23@lua_seti:
  00083	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
$LN24@lua_seti:
; Line 788
  0008a	83 7b 08 45	 cmp	 DWORD PTR [rbx+8], 69	; 00000045H
  0008e	48 89 74 24 40	 mov	 QWORD PTR [rsp+64], rsi
  00093	74 4e		 je	 SHORT $LN9@lua_seti
  00095	33 f6		 xor	 esi, esi
$LN2@lua_seti:
; Line 791
  00097	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
; Line 793
  0009b	48 8b d3	 mov	 rdx, rbx
  0009e	48 8b cf	 mov	 rcx, rdi
  000a1	48 89 28	 mov	 QWORD PTR [rax], rbp
  000a4	c7 40 08 13 00
	00 00		 mov	 DWORD PTR [rax+8], 19
  000ab	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  000af	49 83 c0 10	 add	 r8, 16
  000b3	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  000b8	4d 8d 48 e0	 lea	 r9, QWORD PTR [r8-32]
  000bc	4c 89 47 10	 mov	 QWORD PTR [rdi+16], r8
  000c0	49 83 c0 f0	 add	 r8, -16
  000c4	e8 00 00 00 00	 call	 luaV_finishset
; Line 794
  000c9	48 83 47 10 e0	 add	 QWORD PTR [rdi+16], -32	; ffffffffffffffe0H
$LN1@lua_seti:
; Line 797
  000ce	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  000d3	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  000d8	48 8b 6c 24 50	 mov	 rbp, QWORD PTR [rsp+80]
  000dd	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000e1	5f		 pop	 rdi
  000e2	c3		 ret	 0
$LN9@lua_seti:
; Line 788
  000e3	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  000e6	49 8b d0	 mov	 rdx, r8
  000e9	e8 00 00 00 00	 call	 luaH_getint
  000ee	48 8b f0	 mov	 rsi, rax
  000f1	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  000f5	74 a0		 je	 SHORT $LN2@lua_seti
  000f7	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
  000fb	f6 40 f8 40	 test	 BYTE PTR [rax-8], 64	; 00000040H
  000ff	74 1b		 je	 SHORT $LN5@lua_seti
  00101	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  00104	f6 42 09 04	 test	 BYTE PTR [rdx+9], 4
  00108	74 12		 je	 SHORT $LN5@lua_seti
  0010a	48 8b 40 f0	 mov	 rax, QWORD PTR [rax-16]
  0010e	f6 40 09 03	 test	 BYTE PTR [rax+9], 3
  00112	74 08		 je	 SHORT $LN5@lua_seti
  00114	48 8b cf	 mov	 rcx, rdi
  00117	e8 00 00 00 00	 call	 luaC_barrierback_
$LN5@lua_seti:
  0011c	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
  00120	0f 10 40 f0	 movups	 xmm0, XMMWORD PTR [rax-16]
  00124	0f 11 06	 movups	 XMMWORD PTR [rsi], xmm0
; Line 789
  00127	48 83 47 10 f0	 add	 QWORD PTR [rdi+16], -16
; Line 790
  0012c	eb a0		 jmp	 SHORT $LN1@lua_seti
lua_seti ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_setfield
_TEXT	SEGMENT
L$ = 8
idx$ = 16
k$ = 24
lua_setfield PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 776
  00000	4d 8b d0	 mov	 r10, r8
; Line 778
  00003	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  00007	4c 8b c9	 mov	 r9, rcx
  0000a	85 d2		 test	 edx, edx
  0000c	7e 21		 jle	 SHORT $LN12@lua_setfie
  0000e	48 63 c2	 movsxd	 rax, edx
  00011	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00018	48 c1 e0 04	 shl	 rax, 4
  0001c	49 03 00	 add	 rax, QWORD PTR [r8]
  0001f	4d 8b c2	 mov	 r8, r10
  00022	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00026	48 0f 42 d0	 cmovb	 rdx, rax
  0002a	e9 00 00 00 00	 jmp	 auxsetstr
$LN12@lua_setfie:
  0002f	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00034	3b d1		 cmp	 edx, ecx
  00036	7e 16		 jle	 SHORT $LN17@lua_setfie
  00038	48 63 d2	 movsxd	 rdx, edx
  0003b	4d 8b c2	 mov	 r8, r10
  0003e	49 8b c9	 mov	 rcx, r9
  00041	48 c1 e2 04	 shl	 rdx, 4
  00045	49 03 51 10	 add	 rdx, QWORD PTR [r9+16]
  00049	e9 00 00 00 00	 jmp	 auxsetstr
$LN17@lua_setfie:
  0004e	75 13		 jne	 SHORT $LN6@lua_setfie
  00050	49 8b 51 18	 mov	 rdx, QWORD PTR [r9+24]
  00054	4d 8b c2	 mov	 r8, r10
  00057	49 8b c9	 mov	 rcx, r9
  0005a	48 83 c2 40	 add	 rdx, 64			; 00000040H
  0005e	e9 00 00 00 00	 jmp	 auxsetstr
$LN6@lua_setfie:
  00063	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00066	2b ca		 sub	 ecx, edx
  00068	41 83 78 08 16	 cmp	 DWORD PTR [r8+8], 22
  0006d	74 28		 je	 SHORT $LN15@lua_setfie
  0006f	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00072	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  00077	3b c8		 cmp	 ecx, eax
  00079	7f 1c		 jg	 SHORT $LN15@lua_setfie
  0007b	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0007e	49 8b c9	 mov	 rcx, r9
  00081	48 63 d0	 movsxd	 rdx, eax
  00084	48 83 c2 02	 add	 rdx, 2
  00088	48 c1 e2 04	 shl	 rdx, 4
  0008c	49 03 d0	 add	 rdx, r8
  0008f	4d 8b c2	 mov	 r8, r10
  00092	e9 00 00 00 00	 jmp	 auxsetstr
$LN15@lua_setfie:
  00097	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  0009e	4d 8b c2	 mov	 r8, r10
  000a1	49 8b c9	 mov	 rcx, r9
  000a4	e9 00 00 00 00	 jmp	 auxsetstr
lua_setfield ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_settable
_TEXT	SEGMENT
L$ = 64
idx$ = 72
lua_settable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 765
$LN28:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 769
  0000a	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  0000e	48 8b f9	 mov	 rdi, rcx
  00011	85 d2		 test	 edx, edx
  00013	7e 1b		 jle	 SHORT $LN19@lua_settab
  00015	48 63 c2	 movsxd	 rax, edx
  00018	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
  0001f	48 c1 e0 04	 shl	 rax, 4
  00023	49 03 00	 add	 rax, QWORD PTR [r8]
  00026	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  0002a	48 0f 42 d8	 cmovb	 rbx, rax
  0002e	eb 52		 jmp	 SHORT $LN23@lua_settab
$LN19@lua_settab:
  00030	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00035	3b d1		 cmp	 edx, ecx
  00037	7e 0d		 jle	 SHORT $LN25@lua_settab
  00039	48 63 da	 movsxd	 rbx, edx
  0003c	48 c1 e3 04	 shl	 rbx, 4
  00040	48 03 5f 10	 add	 rbx, QWORD PTR [rdi+16]
  00044	eb 3c		 jmp	 SHORT $LN23@lua_settab
$LN25@lua_settab:
  00046	75 0a		 jne	 SHORT $LN13@lua_settab
  00048	48 8b 5f 18	 mov	 rbx, QWORD PTR [rdi+24]
  0004c	48 83 c3 40	 add	 rbx, 64			; 00000040H
  00050	eb 30		 jmp	 SHORT $LN23@lua_settab
$LN13@lua_settab:
  00052	2b ca		 sub	 ecx, edx
  00054	49 8b 10	 mov	 rdx, QWORD PTR [r8]
  00057	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  0005b	74 1e		 je	 SHORT $LN22@lua_settab
  0005d	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00060	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00064	3b c8		 cmp	 ecx, eax
  00066	7f 13		 jg	 SHORT $LN22@lua_settab
  00068	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0006b	48 63 d8	 movsxd	 rbx, eax
  0006e	48 83 c3 02	 add	 rbx, 2
  00072	48 c1 e3 04	 shl	 rbx, 4
  00076	48 03 da	 add	 rbx, rdx
  00079	eb 07		 jmp	 SHORT $LN23@lua_settab
$LN22@lua_settab:
  0007b	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
$LN23@lua_settab:
; Line 770
  00082	83 7b 08 45	 cmp	 DWORD PTR [rbx+8], 69	; 00000045H
  00086	48 89 74 24 40	 mov	 QWORD PTR [rsp+64], rsi
  0008b	74 33		 je	 SHORT $LN8@lua_settab
  0008d	33 f6		 xor	 esi, esi
$LN24@lua_settab:
  0008f	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  00093	48 8b d3	 mov	 rdx, rbx
  00096	48 8b cf	 mov	 rcx, rdi
  00099	4d 8d 48 f0	 lea	 r9, QWORD PTR [r8-16]
  0009d	49 83 c0 e0	 add	 r8, -32			; ffffffffffffffe0H
  000a1	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  000a6	e8 00 00 00 00	 call	 luaV_finishset
$LN26@lua_settab:
; Line 771
  000ab	48 83 47 10 e0	 add	 QWORD PTR [rdi+16], -32	; ffffffffffffffe0H
  000b0	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
; Line 773
  000b5	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  000ba	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000be	5f		 pop	 rdi
  000bf	c3		 ret	 0
$LN8@lua_settab:
; Line 770
  000c0	48 8b 57 10	 mov	 rdx, QWORD PTR [rdi+16]
  000c4	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  000c7	48 83 ea 20	 sub	 rdx, 32			; 00000020H
  000cb	e8 00 00 00 00	 call	 luaH_get
  000d0	48 8b f0	 mov	 rsi, rax
  000d3	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  000d7	74 b6		 je	 SHORT $LN24@lua_settab
  000d9	48 8b 4f 10	 mov	 rcx, QWORD PTR [rdi+16]
  000dd	f6 41 f8 40	 test	 BYTE PTR [rcx-8], 64	; 00000040H
  000e1	74 1b		 je	 SHORT $LN4@lua_settab
  000e3	48 8b 13	 mov	 rdx, QWORD PTR [rbx]
  000e6	f6 42 09 04	 test	 BYTE PTR [rdx+9], 4
  000ea	74 12		 je	 SHORT $LN4@lua_settab
  000ec	48 8b 49 f0	 mov	 rcx, QWORD PTR [rcx-16]
  000f0	f6 41 09 03	 test	 BYTE PTR [rcx+9], 3
  000f4	74 08		 je	 SHORT $LN4@lua_settab
  000f6	48 8b cf	 mov	 rcx, rdi
  000f9	e8 00 00 00 00	 call	 luaC_barrierback_
$LN4@lua_settab:
  000fe	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
  00102	0f 10 40 f0	 movups	 xmm0, XMMWORD PTR [rax-16]
  00106	0f 11 06	 movups	 XMMWORD PTR [rsi], xmm0
  00109	eb a0		 jmp	 SHORT $LN26@lua_settab
lua_settable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_setglobal
_TEXT	SEGMENT
L$ = 48
name$ = 56
lua_setglobal PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 758
$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 759
  0000a	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  0000e	48 8b f9	 mov	 rdi, rcx
  00011	48 8b da	 mov	 rbx, rdx
; Line 761
  00014	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  00018	ba 02 00 00 00	 mov	 edx, 2
  0001d	e8 00 00 00 00	 call	 luaH_getint
  00022	4c 8b c3	 mov	 r8, rbx
  00025	48 8b cf	 mov	 rcx, rdi
  00028	48 8b d0	 mov	 rdx, rax
; Line 762
  0002b	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
; Line 761
  00035	e9 00 00 00 00	 jmp	 auxsetstr
lua_setglobal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_getuservalue
_TEXT	SEGMENT
L$ = 8
idx$ = 16
lua_getuservalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 726
  00000	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00004	4c 8b c1	 mov	 r8, rcx
  00007	85 d2		 test	 edx, edx
  00009	7e 1b		 jle	 SHORT $LN12@lua_getuse
  0000b	48 63 c2	 movsxd	 rax, edx
  0000e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
  00015	48 c1 e0 04	 shl	 rax, 4
  00019	49 03 01	 add	 rax, QWORD PTR [r9]
  0001c	49 3b 40 10	 cmp	 rax, QWORD PTR [r8+16]
  00020	48 0f 42 c8	 cmovb	 rcx, rax
  00024	eb 52		 jmp	 SHORT $LN16@lua_getuse
$LN12@lua_getuse:
  00026	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0002b	3b d1		 cmp	 edx, ecx
  0002d	7e 0d		 jle	 SHORT $LN17@lua_getuse
  0002f	48 63 ca	 movsxd	 rcx, edx
  00032	48 c1 e1 04	 shl	 rcx, 4
  00036	49 03 48 10	 add	 rcx, QWORD PTR [r8+16]
  0003a	eb 3c		 jmp	 SHORT $LN16@lua_getuse
$LN17@lua_getuse:
  0003c	75 0a		 jne	 SHORT $LN6@lua_getuse
  0003e	49 8b 48 18	 mov	 rcx, QWORD PTR [r8+24]
  00042	48 83 c1 40	 add	 rcx, 64			; 00000040H
  00046	eb 30		 jmp	 SHORT $LN16@lua_getuse
$LN6@lua_getuse:
  00048	2b ca		 sub	 ecx, edx
  0004a	49 8b 11	 mov	 rdx, QWORD PTR [r9]
  0004d	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  00051	74 1e		 je	 SHORT $LN15@lua_getuse
  00053	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00056	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  0005a	3b c8		 cmp	 ecx, eax
  0005c	7f 13		 jg	 SHORT $LN15@lua_getuse
  0005e	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00061	48 63 c8	 movsxd	 rcx, eax
  00064	48 83 c1 02	 add	 rcx, 2
  00068	48 c1 e1 04	 shl	 rcx, 4
  0006c	48 03 ca	 add	 rcx, rdx
  0006f	eb 07		 jmp	 SHORT $LN16@lua_getuse
$LN15@lua_getuse:
  00071	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
$LN16@lua_getuse:
; Line 728
  00078	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0007b	49 8b 50 10	 mov	 rdx, QWORD PTR [r8+16]
  0007f	48 8b 41 20	 mov	 rax, QWORD PTR [rcx+32]
  00083	48 89 02	 mov	 QWORD PTR [rdx], rax
  00086	0f b6 41 0a	 movzx	 eax, BYTE PTR [rcx+10]
  0008a	89 42 08	 mov	 DWORD PTR [rdx+8], eax
; Line 729
  0008d	49 83 40 10 10	 add	 QWORD PTR [r8+16], 16
  00092	49 8b 40 10	 mov	 rax, QWORD PTR [r8+16]
; Line 731
  00096	8b 40 f8	 mov	 eax, DWORD PTR [rax-8]
  00099	83 e0 0f	 and	 eax, 15
; Line 732
  0009c	c3		 ret	 0
lua_getuservalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_getmetatable
_TEXT	SEGMENT
L$ = 8
objindex$ = 16
lua_getmetatable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 701
  00000	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  00004	48 63 c2	 movsxd	 rax, edx
  00007	85 d2		 test	 edx, edx
  00009	7e 18		 jle	 SHORT $LN18@lua_getmet
  0000b	48 c1 e0 04	 shl	 rax, 4
  0000f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00016	49 03 00	 add	 rax, QWORD PTR [r8]
  00019	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  0001d	48 0f 42 d0	 cmovb	 rdx, rax
  00021	eb 54		 jmp	 SHORT $LN22@lua_getmet
$LN18@lua_getmet:
  00023	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  00028	3b c2		 cmp	 eax, edx
  0002a	7e 0d		 jle	 SHORT $LN24@lua_getmet
  0002c	48 8b d0	 mov	 rdx, rax
  0002f	48 c1 e2 04	 shl	 rdx, 4
  00033	48 03 51 10	 add	 rdx, QWORD PTR [rcx+16]
  00037	eb 3e		 jmp	 SHORT $LN22@lua_getmet
$LN24@lua_getmet:
  00039	75 0a		 jne	 SHORT $LN12@lua_getmet
  0003b	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  0003f	48 83 c2 40	 add	 rdx, 64			; 00000040H
  00043	eb 32		 jmp	 SHORT $LN22@lua_getmet
$LN12@lua_getmet:
  00045	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00048	2b d0		 sub	 edx, eax
  0004a	41 83 78 08 16	 cmp	 DWORD PTR [r8+8], 22
  0004f	74 1f		 je	 SHORT $LN21@lua_getmet
  00051	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00054	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  00059	3b d0		 cmp	 edx, eax
  0005b	7f 13		 jg	 SHORT $LN21@lua_getmet
  0005d	8d 42 ff	 lea	 eax, DWORD PTR [rdx-1]
  00060	48 63 d0	 movsxd	 rdx, eax
  00063	48 83 c2 02	 add	 rdx, 2
  00067	48 c1 e2 04	 shl	 rdx, 4
  0006b	49 03 d0	 add	 rdx, r8
  0006e	eb 07		 jmp	 SHORT $LN22@lua_getmet
$LN21@lua_getmet:
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
$LN22@lua_getmet:
; Line 702
  00077	44 8b 42 08	 mov	 r8d, DWORD PTR [rdx+8]
  0007b	41 8b c0	 mov	 eax, r8d
  0007e	83 e0 0f	 and	 eax, 15
  00081	83 f8 05	 cmp	 eax, 5
  00084	74 20		 je	 SHORT $LN4@lua_getmet
  00086	83 f8 07	 cmp	 eax, 7
  00089	74 12		 je	 SHORT $LN3@lua_getmet
; Line 710
  0008b	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  0008f	41 83 e0 0f	 and	 r8d, 15
  00093	4a 8b 94 c0 a0
	01 00 00	 mov	 rdx, QWORD PTR [rax+r8*8+416]
; Line 711
  0009b	eb 10		 jmp	 SHORT $LN5@lua_getmet
$LN3@lua_getmet:
; Line 707
  0009d	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  000a0	48 8b 50 10	 mov	 rdx, QWORD PTR [rax+16]
; Line 708
  000a4	eb 07		 jmp	 SHORT $LN5@lua_getmet
$LN4@lua_getmet:
; Line 704
  000a6	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  000a9	48 8b 50 28	 mov	 rdx, QWORD PTR [rax+40]
$LN5@lua_getmet:
; Line 713
  000ad	48 85 d2	 test	 rdx, rdx
  000b0	74 19		 je	 SHORT $LN23@lua_getmet
; Line 714
  000b2	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  000b6	48 89 10	 mov	 QWORD PTR [rax], rdx
  000b9	c7 40 08 45 00
	00 00		 mov	 DWORD PTR [rax+8], 69	; 00000045H
; Line 715
  000c0	48 83 41 10 10	 add	 QWORD PTR [rcx+16], 16
; Line 719
  000c5	b8 01 00 00 00	 mov	 eax, 1
; Line 720
  000ca	c3		 ret	 0
$LN23@lua_getmet:
; Line 719
  000cb	33 c0		 xor	 eax, eax
; Line 720
  000cd	c3		 ret	 0
lua_getmetatable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_newuserdata
_TEXT	SEGMENT
L$ = 48
size$ = 56
lua_newuserdata PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 1183
$LN5:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 1186
  0000a	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  0000e	48 8b fa	 mov	 rdi, rdx
  00011	48 8b d9	 mov	 rbx, rcx
  00014	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  00019	7e 05		 jle	 SHORT $LN1@lua_newuse
  0001b	e8 00 00 00 00	 call	 luaC_step
$LN1@lua_newuse:
; Line 1187
  00020	48 8b d7	 mov	 rdx, rdi
  00023	48 8b cb	 mov	 rcx, rbx
  00026	e8 00 00 00 00	 call	 luaS_newudata
; Line 1188
  0002b	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]
  0002f	48 89 01	 mov	 QWORD PTR [rcx], rax
  00032	c7 41 08 47 00
	00 00		 mov	 DWORD PTR [rcx+8], 71	; 00000047H
; Line 1189
  00039	48 83 43 10 10	 add	 QWORD PTR [rbx+16], 16
; Line 1192
  0003e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00043	48 83 c0 28	 add	 rax, 40			; 00000028H
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
lua_newuserdata ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_createtable
_TEXT	SEGMENT
L$ = 48
narray$ = 56
nrec$ = 64
lua_createtable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 683
$LN7:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 686
  0000f	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00013	41 8b f8	 mov	 edi, r8d
  00016	8b f2		 mov	 esi, edx
  00018	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  0001d	48 8b d9	 mov	 rbx, rcx
  00020	7e 05		 jle	 SHORT $LN3@lua_create
  00022	e8 00 00 00 00	 call	 luaC_step
$LN3@lua_create:
; Line 687
  00027	48 8b cb	 mov	 rcx, rbx
  0002a	e8 00 00 00 00	 call	 luaH_new
; Line 688
  0002f	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  00033	48 89 02	 mov	 QWORD PTR [rdx], rax
  00036	c7 42 08 45 00
	00 00		 mov	 DWORD PTR [rdx+8], 69	; 00000045H
; Line 689
  0003d	48 83 43 10 10	 add	 QWORD PTR [rbx+16], 16
; Line 690
  00042	85 f6		 test	 esi, esi
  00044	7f 04		 jg	 SHORT $LN1@lua_create
  00046	85 ff		 test	 edi, edi
  00048	7e 11		 jle	 SHORT $LN2@lua_create
$LN1@lua_create:
; Line 691
  0004a	44 8b cf	 mov	 r9d, edi
  0004d	44 8b c6	 mov	 r8d, esi
  00050	48 8b d0	 mov	 rdx, rax
  00053	48 8b cb	 mov	 rcx, rbx
  00056	e8 00 00 00 00	 call	 luaH_resize
$LN2@lua_create:
; Line 693
  0005b	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00060	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00065	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
lua_createtable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_rawgetp
_TEXT	SEGMENT
k$ = 32
L$ = 64
idx$ = 72
p$ = 80
lua_rawgetp PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 669
$LN19:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 673
  0000a	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  0000e	48 8b f9	 mov	 rdi, rcx
  00011	85 d2		 test	 edx, edx
  00013	7e 1b		 jle	 SHORT $LN12@lua_rawget
  00015	48 63 c2	 movsxd	 rax, edx
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
  0001f	48 c1 e0 04	 shl	 rax, 4
  00023	49 03 01	 add	 rax, QWORD PTR [r9]
  00026	48 3b 47 10	 cmp	 rax, QWORD PTR [rdi+16]
  0002a	48 0f 42 c8	 cmovb	 rcx, rax
  0002e	eb 52		 jmp	 SHORT $LN16@lua_rawget
$LN12@lua_rawget:
  00030	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00035	3b d1		 cmp	 edx, ecx
  00037	7e 0d		 jle	 SHORT $LN17@lua_rawget
  00039	48 63 ca	 movsxd	 rcx, edx
  0003c	48 c1 e1 04	 shl	 rcx, 4
  00040	48 03 4f 10	 add	 rcx, QWORD PTR [rdi+16]
  00044	eb 3c		 jmp	 SHORT $LN16@lua_rawget
$LN17@lua_rawget:
  00046	75 0a		 jne	 SHORT $LN6@lua_rawget
  00048	48 8b 4f 18	 mov	 rcx, QWORD PTR [rdi+24]
  0004c	48 83 c1 40	 add	 rcx, 64			; 00000040H
  00050	eb 30		 jmp	 SHORT $LN16@lua_rawget
$LN6@lua_rawget:
  00052	2b ca		 sub	 ecx, edx
  00054	49 8b 11	 mov	 rdx, QWORD PTR [r9]
  00057	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  0005b	74 1e		 je	 SHORT $LN15@lua_rawget
  0005d	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00060	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00064	3b c8		 cmp	 ecx, eax
  00066	7f 13		 jg	 SHORT $LN15@lua_rawget
  00068	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0006b	48 63 c8	 movsxd	 rcx, eax
  0006e	48 83 c1 02	 add	 rcx, 2
  00072	48 c1 e1 04	 shl	 rcx, 4
  00076	48 03 ca	 add	 rcx, rdx
  00079	eb 07		 jmp	 SHORT $LN16@lua_rawget
$LN15@lua_rawget:
  0007b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
$LN16@lua_rawget:
; Line 676
  00082	48 8b 5f 10	 mov	 rbx, QWORD PTR [rdi+16]
  00086	4c 89 44 24 20	 mov	 QWORD PTR k$[rsp], r8
  0008b	c7 44 24 28 02
	00 00 00	 mov	 DWORD PTR k$[rsp+8], 2
  00093	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00096	48 8d 54 24 20	 lea	 rdx, QWORD PTR k$[rsp]
  0009b	e8 00 00 00 00	 call	 luaH_get
  000a0	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  000a3	0f 11 03	 movups	 XMMWORD PTR [rbx], xmm0
  000a6	48 83 47 10 10	 add	 QWORD PTR [rdi+16], 16
  000ab	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
; Line 680
  000af	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000b4	8b 40 f8	 mov	 eax, DWORD PTR [rax-8]
  000b7	83 e0 0f	 and	 eax, 15
  000ba	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000be	5f		 pop	 rdi
  000bf	c3		 ret	 0
lua_rawgetp ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_rawgeti
_TEXT	SEGMENT
L$ = 48
idx$ = 56
n$ = 64
lua_rawgeti PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 657
$LN19:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 660
  0000a	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  0000e	48 8b f9	 mov	 rdi, rcx
  00011	85 d2		 test	 edx, edx
  00013	7e 1b		 jle	 SHORT $LN12@lua_rawget
  00015	48 63 c2	 movsxd	 rax, edx
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
  0001f	48 c1 e0 04	 shl	 rax, 4
  00023	49 03 01	 add	 rax, QWORD PTR [r9]
  00026	48 3b 47 10	 cmp	 rax, QWORD PTR [rdi+16]
  0002a	48 0f 42 c8	 cmovb	 rcx, rax
  0002e	eb 52		 jmp	 SHORT $LN16@lua_rawget
$LN12@lua_rawget:
  00030	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00035	3b d1		 cmp	 edx, ecx
  00037	7e 0d		 jle	 SHORT $LN17@lua_rawget
  00039	48 63 ca	 movsxd	 rcx, edx
  0003c	48 c1 e1 04	 shl	 rcx, 4
  00040	48 03 4f 10	 add	 rcx, QWORD PTR [rdi+16]
  00044	eb 3c		 jmp	 SHORT $LN16@lua_rawget
$LN17@lua_rawget:
  00046	75 0a		 jne	 SHORT $LN6@lua_rawget
  00048	48 8b 4f 18	 mov	 rcx, QWORD PTR [rdi+24]
  0004c	48 83 c1 40	 add	 rcx, 64			; 00000040H
  00050	eb 30		 jmp	 SHORT $LN16@lua_rawget
$LN6@lua_rawget:
  00052	2b ca		 sub	 ecx, edx
  00054	49 8b 11	 mov	 rdx, QWORD PTR [r9]
  00057	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  0005b	74 1e		 je	 SHORT $LN15@lua_rawget
  0005d	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00060	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00064	3b c8		 cmp	 ecx, eax
  00066	7f 13		 jg	 SHORT $LN15@lua_rawget
  00068	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0006b	48 63 c8	 movsxd	 rcx, eax
  0006e	48 83 c1 02	 add	 rcx, 2
  00072	48 c1 e1 04	 shl	 rcx, 4
  00076	48 03 ca	 add	 rcx, rdx
  00079	eb 07		 jmp	 SHORT $LN16@lua_rawget
$LN15@lua_rawget:
  0007b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
$LN16@lua_rawget:
; Line 662
  00082	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00085	48 8b 5f 10	 mov	 rbx, QWORD PTR [rdi+16]
  00089	49 8b d0	 mov	 rdx, r8
  0008c	e8 00 00 00 00	 call	 luaH_getint
  00091	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00094	0f 11 03	 movups	 XMMWORD PTR [rbx], xmm0
  00097	48 83 47 10 10	 add	 QWORD PTR [rdi+16], 16
  0009c	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
; Line 666
  000a0	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000a5	8b 40 f8	 mov	 eax, DWORD PTR [rax-8]
  000a8	83 e0 0f	 and	 eax, 15
  000ab	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000af	5f		 pop	 rdi
  000b0	c3		 ret	 0
lua_rawgeti ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_rawget
_TEXT	SEGMENT
L$ = 48
idx$ = 56
lua_rawget PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 646
$LN19:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 649
  0000a	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  0000e	48 8b f9	 mov	 rdi, rcx
  00011	85 d2		 test	 edx, edx
  00013	7e 1b		 jle	 SHORT $LN12@lua_rawget
  00015	48 63 c2	 movsxd	 rax, edx
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
  0001f	48 c1 e0 04	 shl	 rax, 4
  00023	49 03 00	 add	 rax, QWORD PTR [r8]
  00026	48 3b 47 10	 cmp	 rax, QWORD PTR [rdi+16]
  0002a	48 0f 42 c8	 cmovb	 rcx, rax
  0002e	eb 52		 jmp	 SHORT $LN16@lua_rawget
$LN12@lua_rawget:
  00030	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00035	3b d1		 cmp	 edx, ecx
  00037	7e 0d		 jle	 SHORT $LN17@lua_rawget
  00039	48 63 ca	 movsxd	 rcx, edx
  0003c	48 c1 e1 04	 shl	 rcx, 4
  00040	48 03 4f 10	 add	 rcx, QWORD PTR [rdi+16]
  00044	eb 3c		 jmp	 SHORT $LN16@lua_rawget
$LN17@lua_rawget:
  00046	75 0a		 jne	 SHORT $LN6@lua_rawget
  00048	48 8b 4f 18	 mov	 rcx, QWORD PTR [rdi+24]
  0004c	48 83 c1 40	 add	 rcx, 64			; 00000040H
  00050	eb 30		 jmp	 SHORT $LN16@lua_rawget
$LN6@lua_rawget:
  00052	2b ca		 sub	 ecx, edx
  00054	49 8b 10	 mov	 rdx, QWORD PTR [r8]
  00057	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  0005b	74 1e		 je	 SHORT $LN15@lua_rawget
  0005d	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00060	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00064	3b c8		 cmp	 ecx, eax
  00066	7f 13		 jg	 SHORT $LN15@lua_rawget
  00068	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0006b	48 63 c8	 movsxd	 rcx, eax
  0006e	48 83 c1 02	 add	 rcx, 2
  00072	48 c1 e1 04	 shl	 rcx, 4
  00076	48 03 ca	 add	 rcx, rdx
  00079	eb 07		 jmp	 SHORT $LN16@lua_rawget
$LN15@lua_rawget:
  0007b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
$LN16@lua_rawget:
; Line 651
  00082	48 8b 5f 10	 mov	 rbx, QWORD PTR [rdi+16]
  00086	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00089	48 8d 53 f0	 lea	 rdx, QWORD PTR [rbx-16]
  0008d	e8 00 00 00 00	 call	 luaH_get
  00092	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  00095	0f 11 43 f0	 movups	 XMMWORD PTR [rbx-16], xmm0
; Line 653
  00099	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
; Line 654
  0009d	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000a2	8b 40 f8	 mov	 eax, DWORD PTR [rax-8]
  000a5	83 e0 0f	 and	 eax, 15
  000a8	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ac	5f		 pop	 rdi
  000ad	c3		 ret	 0
lua_rawget ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_geti
_TEXT	SEGMENT
L$ = 64
idx$ = 72
n$ = 80
lua_geti PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 627
$LN32:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 631
  00014	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00018	49 8b f0	 mov	 rsi, r8
  0001b	48 8b f9	 mov	 rdi, rcx
  0001e	48 8d 2d 00 00
	00 00		 lea	 rbp, OFFSET FLAT:luaO_nilobject_
  00025	85 d2		 test	 edx, edx
  00027	7e 17		 jle	 SHORT $LN24@lua_geti
  00029	48 63 c2	 movsxd	 rax, edx
  0002c	48 8b dd	 mov	 rbx, rbp
  0002f	48 c1 e0 04	 shl	 rax, 4
  00033	49 03 01	 add	 rax, QWORD PTR [r9]
  00036	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  0003a	48 0f 42 d8	 cmovb	 rbx, rax
  0003e	eb 4e		 jmp	 SHORT $LN28@lua_geti
$LN24@lua_geti:
  00040	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00045	3b d1		 cmp	 edx, ecx
  00047	7e 0d		 jle	 SHORT $LN30@lua_geti
  00049	48 63 da	 movsxd	 rbx, edx
  0004c	48 c1 e3 04	 shl	 rbx, 4
  00050	48 03 5f 10	 add	 rbx, QWORD PTR [rdi+16]
  00054	eb 38		 jmp	 SHORT $LN28@lua_geti
$LN30@lua_geti:
  00056	75 0a		 jne	 SHORT $LN18@lua_geti
  00058	48 8b 5f 18	 mov	 rbx, QWORD PTR [rdi+24]
  0005c	48 83 c3 40	 add	 rbx, 64			; 00000040H
  00060	eb 2c		 jmp	 SHORT $LN28@lua_geti
$LN18@lua_geti:
  00062	2b ca		 sub	 ecx, edx
  00064	49 8b 11	 mov	 rdx, QWORD PTR [r9]
  00067	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  0006b	74 1e		 je	 SHORT $LN27@lua_geti
  0006d	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00070	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00074	3b c8		 cmp	 ecx, eax
  00076	7f 13		 jg	 SHORT $LN27@lua_geti
  00078	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0007b	48 63 d8	 movsxd	 rbx, eax
  0007e	48 83 c3 02	 add	 rbx, 2
  00082	48 c1 e3 04	 shl	 rbx, 4
  00086	48 03 da	 add	 rbx, rdx
  00089	eb 03		 jmp	 SHORT $LN28@lua_geti
$LN27@lua_geti:
  0008b	48 8b dd	 mov	 rbx, rbp
$LN28@lua_geti:
; Line 632
  0008e	83 7b 08 45	 cmp	 DWORD PTR [rbx+8], 69	; 00000045H
  00092	74 04		 je	 SHORT $LN13@lua_geti
  00094	33 c0		 xor	 eax, eax
  00096	eb 3d		 jmp	 SHORT $LN2@lua_geti
$LN13@lua_geti:
  00098	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0009b	49 8b d0	 mov	 rdx, r8
  0009e	e8 00 00 00 00	 call	 luaH_getint
  000a3	48 8b c8	 mov	 rcx, rax
  000a6	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  000aa	75 5c		 jne	 SHORT $LN29@lua_geti
  000ac	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000af	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  000b3	48 85 c9	 test	 rcx, rcx
  000b6	74 4d		 je	 SHORT $LN9@lua_geti
  000b8	f6 41 0a 01	 test	 BYTE PTR [rcx+10], 1
  000bc	75 47		 jne	 SHORT $LN9@lua_geti
  000be	4c 8b 47 18	 mov	 r8, QWORD PTR [rdi+24]
  000c2	33 d2		 xor	 edx, edx
  000c4	4d 8b 80 e0 00
	00 00		 mov	 r8, QWORD PTR [r8+224]
  000cb	e8 00 00 00 00	 call	 luaT_gettm
  000d0	48 85 c0	 test	 rax, rax
  000d3	74 30		 je	 SHORT $LN9@lua_geti
$LN2@lua_geti:
; Line 637
  000d5	48 8b 4f 10	 mov	 rcx, QWORD PTR [rdi+16]
; Line 639
  000d9	48 8b d3	 mov	 rdx, rbx
  000dc	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000e1	48 89 31	 mov	 QWORD PTR [rcx], rsi
  000e4	c7 41 08 13 00
	00 00		 mov	 DWORD PTR [rcx+8], 19
  000eb	48 83 47 10 10	 add	 QWORD PTR [rdi+16], 16
  000f0	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  000f4	48 8b cf	 mov	 rcx, rdi
  000f7	49 83 c0 f0	 add	 r8, -16
  000fb	4d 8b c8	 mov	 r9, r8
  000fe	e8 00 00 00 00	 call	 luaV_finishget
  00103	eb 12		 jmp	 SHORT $LN1@lua_geti
$LN9@lua_geti:
; Line 632
  00105	48 8b cd	 mov	 rcx, rbp
$LN29@lua_geti:
; Line 633
  00108	0f 10 01	 movups	 xmm0, XMMWORD PTR [rcx]
  0010b	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
  0010f	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0
; Line 634
  00112	48 83 47 10 10	 add	 QWORD PTR [rdi+16], 16
$LN1@lua_geti:
; Line 642
  00117	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
; Line 643
  0011b	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00120	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  00125	8b 40 f8	 mov	 eax, DWORD PTR [rax-8]
  00128	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  0012d	83 e0 0f	 and	 eax, 15
  00130	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00134	5f		 pop	 rdi
  00135	c3		 ret	 0
lua_geti ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_getfield
_TEXT	SEGMENT
L$ = 8
idx$ = 16
k$ = 24
lua_getfield PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 621
  00000	4d 8b d0	 mov	 r10, r8
; Line 623
  00003	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  00007	4c 8b c9	 mov	 r9, rcx
  0000a	85 d2		 test	 edx, edx
  0000c	7e 21		 jle	 SHORT $LN12@lua_getfie
  0000e	48 63 c2	 movsxd	 rax, edx
  00011	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00018	48 c1 e0 04	 shl	 rax, 4
  0001c	49 03 00	 add	 rax, QWORD PTR [r8]
  0001f	4d 8b c2	 mov	 r8, r10
  00022	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00026	48 0f 42 d0	 cmovb	 rdx, rax
  0002a	e9 00 00 00 00	 jmp	 auxgetstr
$LN12@lua_getfie:
  0002f	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00034	3b d1		 cmp	 edx, ecx
  00036	7e 16		 jle	 SHORT $LN17@lua_getfie
  00038	48 63 d2	 movsxd	 rdx, edx
  0003b	4d 8b c2	 mov	 r8, r10
  0003e	49 8b c9	 mov	 rcx, r9
  00041	48 c1 e2 04	 shl	 rdx, 4
  00045	49 03 51 10	 add	 rdx, QWORD PTR [r9+16]
  00049	e9 00 00 00 00	 jmp	 auxgetstr
$LN17@lua_getfie:
  0004e	75 13		 jne	 SHORT $LN6@lua_getfie
  00050	49 8b 51 18	 mov	 rdx, QWORD PTR [r9+24]
  00054	4d 8b c2	 mov	 r8, r10
  00057	49 8b c9	 mov	 rcx, r9
  0005a	48 83 c2 40	 add	 rdx, 64			; 00000040H
  0005e	e9 00 00 00 00	 jmp	 auxgetstr
$LN6@lua_getfie:
  00063	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00066	2b ca		 sub	 ecx, edx
  00068	41 83 78 08 16	 cmp	 DWORD PTR [r8+8], 22
  0006d	74 28		 je	 SHORT $LN15@lua_getfie
  0006f	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00072	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  00077	3b c8		 cmp	 ecx, eax
  00079	7f 1c		 jg	 SHORT $LN15@lua_getfie
  0007b	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0007e	49 8b c9	 mov	 rcx, r9
  00081	48 63 d0	 movsxd	 rdx, eax
  00084	48 83 c2 02	 add	 rdx, 2
  00088	48 c1 e2 04	 shl	 rdx, 4
  0008c	49 03 d0	 add	 rdx, r8
  0008f	4d 8b c2	 mov	 r8, r10
  00092	e9 00 00 00 00	 jmp	 auxgetstr
$LN15@lua_getfie:
  00097	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  0009e	4d 8b c2	 mov	 r8, r10
  000a1	49 8b c9	 mov	 rcx, r9
  000a4	e9 00 00 00 00	 jmp	 auxgetstr
lua_getfield ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_gettable
_TEXT	SEGMENT
L$ = 64
idx$ = 72
lua_gettable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 611
$LN32:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 614
  0000f	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  00013	48 8b f9	 mov	 rdi, rcx
  00016	48 8d 35 00 00
	00 00		 lea	 rsi, OFFSET FLAT:luaO_nilobject_
  0001d	85 d2		 test	 edx, edx
  0001f	7e 17		 jle	 SHORT $LN24@lua_gettab
  00021	48 63 c2	 movsxd	 rax, edx
  00024	48 8b de	 mov	 rbx, rsi
  00027	48 c1 e0 04	 shl	 rax, 4
  0002b	49 03 00	 add	 rax, QWORD PTR [r8]
  0002e	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00032	48 0f 42 d8	 cmovb	 rbx, rax
  00036	eb 4e		 jmp	 SHORT $LN28@lua_gettab
$LN24@lua_gettab:
  00038	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0003d	3b d1		 cmp	 edx, ecx
  0003f	7e 0d		 jle	 SHORT $LN30@lua_gettab
  00041	48 63 da	 movsxd	 rbx, edx
  00044	48 c1 e3 04	 shl	 rbx, 4
  00048	48 03 5f 10	 add	 rbx, QWORD PTR [rdi+16]
  0004c	eb 38		 jmp	 SHORT $LN28@lua_gettab
$LN30@lua_gettab:
  0004e	75 0a		 jne	 SHORT $LN18@lua_gettab
  00050	48 8b 5f 18	 mov	 rbx, QWORD PTR [rdi+24]
  00054	48 83 c3 40	 add	 rbx, 64			; 00000040H
  00058	eb 2c		 jmp	 SHORT $LN28@lua_gettab
$LN18@lua_gettab:
  0005a	2b ca		 sub	 ecx, edx
  0005c	49 8b 10	 mov	 rdx, QWORD PTR [r8]
  0005f	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  00063	74 1e		 je	 SHORT $LN27@lua_gettab
  00065	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00068	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  0006c	3b c8		 cmp	 ecx, eax
  0006e	7f 13		 jg	 SHORT $LN27@lua_gettab
  00070	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00073	48 63 d8	 movsxd	 rbx, eax
  00076	48 83 c3 02	 add	 rbx, 2
  0007a	48 c1 e3 04	 shl	 rbx, 4
  0007e	48 03 da	 add	 rbx, rdx
  00081	eb 03		 jmp	 SHORT $LN28@lua_gettab
$LN27@lua_gettab:
  00083	48 8b de	 mov	 rbx, rsi
$LN28@lua_gettab:
; Line 615
  00086	83 7b 08 45	 cmp	 DWORD PTR [rbx+8], 69	; 00000045H
  0008a	74 04		 je	 SHORT $LN13@lua_gettab
  0008c	33 c0		 xor	 eax, eax
  0008e	eb 42		 jmp	 SHORT $LN2@lua_gettab
$LN13@lua_gettab:
  00090	48 8b 57 10	 mov	 rdx, QWORD PTR [rdi+16]
  00094	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  00097	48 83 ea 10	 sub	 rdx, 16
  0009b	e8 00 00 00 00	 call	 luaH_get
  000a0	48 8b c8	 mov	 rcx, rax
  000a3	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  000a7	75 49		 jne	 SHORT $LN29@lua_gettab
  000a9	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000ac	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  000b0	48 85 c9	 test	 rcx, rcx
  000b3	74 3a		 je	 SHORT $LN9@lua_gettab
  000b5	f6 41 0a 01	 test	 BYTE PTR [rcx+10], 1
  000b9	75 34		 jne	 SHORT $LN9@lua_gettab
  000bb	4c 8b 47 18	 mov	 r8, QWORD PTR [rdi+24]
  000bf	33 d2		 xor	 edx, edx
  000c1	4d 8b 80 e0 00
	00 00		 mov	 r8, QWORD PTR [r8+224]
  000c8	e8 00 00 00 00	 call	 luaT_gettm
  000cd	48 85 c0	 test	 rax, rax
  000d0	74 1d		 je	 SHORT $LN9@lua_gettab
$LN2@lua_gettab:
  000d2	4c 8b 47 10	 mov	 r8, QWORD PTR [rdi+16]
  000d6	48 8b d3	 mov	 rdx, rbx
  000d9	48 8b cf	 mov	 rcx, rdi
  000dc	49 83 c0 f0	 add	 r8, -16
  000e0	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000e5	4d 8b c8	 mov	 r9, r8
  000e8	e8 00 00 00 00	 call	 luaV_finishget
  000ed	eb 0e		 jmp	 SHORT $LN1@lua_gettab
$LN9@lua_gettab:
  000ef	48 8b ce	 mov	 rcx, rsi
$LN29@lua_gettab:
  000f2	0f 10 01	 movups	 xmm0, XMMWORD PTR [rcx]
  000f5	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
  000f9	0f 11 40 f0	 movups	 XMMWORD PTR [rax-16], xmm0
$LN1@lua_gettab:
; Line 617
  000fd	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
; Line 618
  00101	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00106	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  0010b	8b 40 f8	 mov	 eax, DWORD PTR [rax-8]
  0010e	83 e0 0f	 and	 eax, 15
  00111	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
lua_gettable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_getglobal
_TEXT	SEGMENT
L$ = 48
name$ = 56
lua_getglobal PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 604
$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 605
  0000a	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  0000e	48 8b f9	 mov	 rdi, rcx
  00011	48 8b da	 mov	 rbx, rdx
; Line 607
  00014	48 8b 48 40	 mov	 rcx, QWORD PTR [rax+64]
  00018	ba 02 00 00 00	 mov	 edx, 2
  0001d	e8 00 00 00 00	 call	 luaH_getint
  00022	4c 8b c3	 mov	 r8, rbx
  00025	48 8b cf	 mov	 rcx, rdi
  00028	48 8b d0	 mov	 rdx, rax
; Line 608
  0002b	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
; Line 607
  00035	e9 00 00 00 00	 jmp	 auxgetstr
lua_getglobal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_pushthread
_TEXT	SEGMENT
L$ = 8
lua_pushthread PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 574
  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 89 08	 mov	 QWORD PTR [rax], rcx
  00007	c7 40 08 48 00
	00 00		 mov	 DWORD PTR [rax+8], 72	; 00000048H
; Line 577
  0000e	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  00012	48 83 41 10 10	 add	 QWORD PTR [rcx+16], 16
  00017	33 c0		 xor	 eax, eax
  00019	48 39 8a c8 00
	00 00		 cmp	 QWORD PTR [rdx+200], rcx
  00020	0f 94 c0	 sete	 al
; Line 578
  00023	c3		 ret	 0
lua_pushthread ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_pushlightuserdata
_TEXT	SEGMENT
L$ = 8
p$ = 16
lua_pushlightuserdata PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 566
  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 89 10	 mov	 QWORD PTR [rax], rdx
  00007	c7 40 08 02 00
	00 00		 mov	 DWORD PTR [rax+8], 2
; Line 567
  0000e	48 83 41 10 10	 add	 QWORD PTR [rcx+16], 16
; Line 569
  00013	c3		 ret	 0
lua_pushlightuserdata ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_pushboolean
_TEXT	SEGMENT
L$ = 8
b$ = 16
lua_pushboolean PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 558
  00000	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	0f 95 c0	 setne	 al
  0000b	41 c7 40 08 01
	00 00 00	 mov	 DWORD PTR [r8+8], 1
  00013	41 89 00	 mov	 DWORD PTR [r8], eax
; Line 559
  00016	48 83 41 10 10	 add	 QWORD PTR [rcx+16], 16
; Line 561
  0001b	c3		 ret	 0
lua_pushboolean ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_pushcclosure
_TEXT	SEGMENT
L$ = 48
fn$ = 56
n$ = 64
lua_pushcclosure PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 532
$LN14:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 63 f8	 movsxd	 rdi, r8d
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b d9	 mov	 rbx, rcx
; Line 534
  00018	45 85 c0	 test	 r8d, r8d
  0001b	75 23		 jne	 SHORT $LN5@lua_pushcc
; Line 535
  0001d	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00021	48 89 10	 mov	 QWORD PTR [rax], rdx
  00024	c7 40 08 16 00
	00 00		 mov	 DWORD PTR [rax+8], 22
; Line 551
  0002b	48 83 41 10 10	 add	 QWORD PTR [rcx+16], 16
; Line 553
  00030	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00035	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
$LN5@lua_pushcc:
; Line 541
  00040	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00044	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  00049	7e 05		 jle	 SHORT $LN3@lua_pushcc
  0004b	e8 00 00 00 00	 call	 luaC_step
$LN3@lua_pushcc:
; Line 542
  00050	8b d7		 mov	 edx, edi
  00052	48 8b cb	 mov	 rcx, rbx
  00055	e8 00 00 00 00	 call	 luaF_newCclosure
; Line 544
  0005a	48 8b cf	 mov	 rcx, rdi
  0005d	48 c1 e1 04	 shl	 rcx, 4
  00061	48 89 70 18	 mov	 QWORD PTR [rax+24], rsi
  00065	48 8b d0	 mov	 rdx, rax
  00068	48 29 4b 10	 sub	 QWORD PTR [rbx+16], rcx
  0006c	0f 1f 40 00	 npad	 4
$LL2@lua_pushcc:
; Line 546
  00070	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  00074	48 8d 49 f0	 lea	 rcx, QWORD PTR [rcx-16]
  00078	0f 10 04 08	 movups	 xmm0, XMMWORD PTR [rax+rcx]
  0007c	0f 11 44 0a 20	 movups	 XMMWORD PTR [rdx+rcx+32], xmm0
  00081	ff cf		 dec	 edi
  00083	75 eb		 jne	 SHORT $LL2@lua_pushcc
; Line 549
  00085	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
; Line 553
  00089	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0008e	48 89 10	 mov	 QWORD PTR [rax], rdx
  00091	c7 40 08 66 00
	00 00		 mov	 DWORD PTR [rax+8], 102	; 00000066H
  00098	48 83 43 10 10	 add	 QWORD PTR [rbx+16], 16
  0009d	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000a2	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a6	5f		 pop	 rdi
  000a7	c3		 ret	 0
lua_pushcclosure ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_pushfstring
_TEXT	SEGMENT
L$ = 48
fmt$ = 56
lua_pushfstring PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 519
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  0000f	53		 push	 rbx
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 523
  00014	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00018	48 8b d9	 mov	 rbx, rcx
  0001b	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  00020	7e 0a		 jle	 SHORT $LN1@lua_pushfs
  00022	e8 00 00 00 00	 call	 luaC_step
  00027	48 8b 54 24 38	 mov	 rdx, QWORD PTR fmt$[rsp]
$LN1@lua_pushfs:
; Line 524
  0002c	4c 8d 44 24 40	 lea	 r8, QWORD PTR fmt$[rsp+8]
; Line 525
  00031	48 8b cb	 mov	 rcx, rbx
  00034	e8 00 00 00 00	 call	 luaO_pushvfstring
; Line 529
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5b		 pop	 rbx
  0003e	c3		 ret	 0
lua_pushfstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_pushvfstring
_TEXT	SEGMENT
L$ = 48
fmt$ = 56
argp$ = 64
lua_pushvfstring PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 509
$LN5:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 512
  0000f	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00013	49 8b f8	 mov	 rdi, r8
  00016	48 8b f2	 mov	 rsi, rdx
  00019	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  0001e	48 8b d9	 mov	 rbx, rcx
  00021	7e 05		 jle	 SHORT $LN1@lua_pushvf
  00023	e8 00 00 00 00	 call	 luaC_step
$LN1@lua_pushvf:
; Line 513
  00028	4c 8b c7	 mov	 r8, rdi
  0002b	48 8b d6	 mov	 rdx, rsi
  0002e	48 8b cb	 mov	 rcx, rbx
; Line 516
  00031	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00036	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
; Line 513
  00040	e9 00 00 00 00	 jmp	 luaO_pushvfstring
lua_pushvfstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_pushstring
_TEXT	SEGMENT
L$ = 48
s$ = 56
lua_pushstring PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 491
$LN7:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fa	 mov	 rdi, rdx
  0000d	48 8b d9	 mov	 rbx, rcx
; Line 493
  00010	48 85 d2	 test	 rdx, rdx
  00013	75 1a		 jne	 SHORT $LN3@lua_pushst
; Line 494
  00015	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00019	89 50 08	 mov	 DWORD PTR [rax+8], edx
; Line 502
  0001c	48 83 41 10 10	 add	 QWORD PTR [rcx+16], 16
; Line 504
  00021	48 8b c2	 mov	 rax, rdx
; Line 505
  00024	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
$LN3@lua_pushst:
; Line 497
  0002f	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00033	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  00038	7e 05		 jle	 SHORT $LN1@lua_pushst
  0003a	e8 00 00 00 00	 call	 luaC_step
$LN1@lua_pushst:
; Line 498
  0003f	48 8b d7	 mov	 rdx, rdi
  00042	48 8b cb	 mov	 rcx, rbx
  00045	e8 00 00 00 00	 call	 luaS_new
; Line 499
  0004a	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  0004e	48 89 02	 mov	 QWORD PTR [rdx], rax
  00051	0f b6 48 08	 movzx	 ecx, BYTE PTR [rax+8]
; Line 500
  00055	48 83 c0 18	 add	 rax, 24
  00059	83 c9 40	 or	 ecx, 64			; 00000040H
  0005c	89 4a 08	 mov	 DWORD PTR [rdx+8], ecx
; Line 502
  0005f	48 83 43 10 10	 add	 QWORD PTR [rbx+16], 16
; Line 505
  00064	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00069	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006d	5f		 pop	 rdi
  0006e	c3		 ret	 0
lua_pushstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_pushlstring
_TEXT	SEGMENT
L$ = 48
s$ = 56
len$ = 64
lua_pushlstring PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 479
$LN8:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 482
  0000f	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00013	49 8b f8	 mov	 rdi, r8
  00016	48 8b f2	 mov	 rsi, rdx
  00019	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  0001e	48 8b d9	 mov	 rbx, rcx
  00021	7e 05		 jle	 SHORT $LN1@lua_pushls
  00023	e8 00 00 00 00	 call	 luaC_step
$LN1@lua_pushls:
; Line 483
  00028	48 8b cb	 mov	 rcx, rbx
  0002b	48 85 ff	 test	 rdi, rdi
  0002e	75 0e		 jne	 SHORT $LN4@lua_pushls
  00030	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00037	e8 00 00 00 00	 call	 luaS_new
  0003c	eb 0b		 jmp	 SHORT $LN6@lua_pushls
$LN4@lua_pushls:
  0003e	4c 8b c7	 mov	 r8, rdi
  00041	48 8b d6	 mov	 rdx, rsi
  00044	e8 00 00 00 00	 call	 luaS_newlstr
$LN6@lua_pushls:
; Line 484
  00049	48 8b 4b 10	 mov	 rcx, QWORD PTR [rbx+16]
; Line 488
  0004d	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00052	48 8b d0	 mov	 rdx, rax
  00055	48 89 01	 mov	 QWORD PTR [rcx], rax
  00058	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  0005c	83 c8 40	 or	 eax, 64			; 00000040H
  0005f	89 41 08	 mov	 DWORD PTR [rcx+8], eax
  00062	48 83 43 10 10	 add	 QWORD PTR [rbx+16], 16
  00067	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006c	48 8d 42 18	 lea	 rax, QWORD PTR [rdx+24]
  00070	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00074	5f		 pop	 rdi
  00075	c3		 ret	 0
lua_pushlstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_pushinteger
_TEXT	SEGMENT
L$ = 8
n$ = 16
lua_pushinteger PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 468
  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	48 89 10	 mov	 QWORD PTR [rax], rdx
  00007	c7 40 08 13 00
	00 00		 mov	 DWORD PTR [rax+8], 19
; Line 469
  0000e	48 83 41 10 10	 add	 QWORD PTR [rcx+16], 16
; Line 471
  00013	c3		 ret	 0
lua_pushinteger ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_pushnumber
_TEXT	SEGMENT
L$ = 8
n$ = 16
lua_pushnumber PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 460
  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	f2 0f 11 08	 movsdx	 QWORD PTR [rax], xmm1
  00008	c7 40 08 03 00
	00 00		 mov	 DWORD PTR [rax+8], 3
; Line 461
  0000f	48 83 41 10 10	 add	 QWORD PTR [rcx+16], 16
; Line 463
  00014	c3		 ret	 0
lua_pushnumber ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_pushnil
_TEXT	SEGMENT
L$ = 8
lua_pushnil PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 452
  00000	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00004	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0
; Line 453
  0000b	48 83 41 10 10	 add	 QWORD PTR [rcx+16], 16
; Line 455
  00010	c3		 ret	 0
lua_pushnil ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_compare
_TEXT	SEGMENT
L$ = 48
index1$ = 56
index2$ = 64
op$ = 72
lua_compare PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 318
$LN46:
  00000	40 56		 push	 rsi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 89 7c 24 38	 mov	 QWORD PTR [rsp+56], rdi
; Line 322
  0000b	48 8b 79 20	 mov	 rdi, QWORD PTR [rcx+32]
  0000f	48 8d 35 00 00
	00 00		 lea	 rsi, OFFSET FLAT:luaO_nilobject_
  00016	41 ba d8 b9 f0
	ff		 mov	 r10d, -1001000		; fffffffffff0b9d8H
  0001c	85 d2		 test	 edx, edx
  0001e	7e 17		 jle	 SHORT $LN19@lua_compar
  00020	48 63 c2	 movsxd	 rax, edx
  00023	48 8b d6	 mov	 rdx, rsi
  00026	48 c1 e0 04	 shl	 rax, 4
  0002a	48 03 07	 add	 rax, QWORD PTR [rdi]
  0002d	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00031	48 0f 42 d0	 cmovb	 rdx, rax
  00035	eb 5f		 jmp	 SHORT $LN23@lua_compar
$LN19@lua_compar:
  00037	41 3b d2	 cmp	 edx, r10d
  0003a	7e 0d		 jle	 SHORT $LN42@lua_compar
  0003c	48 63 d2	 movsxd	 rdx, edx
  0003f	48 c1 e2 04	 shl	 rdx, 4
  00043	48 03 51 10	 add	 rdx, QWORD PTR [rcx+16]
  00047	eb 4d		 jmp	 SHORT $LN23@lua_compar
$LN42@lua_compar:
  00049	75 0a		 jne	 SHORT $LN13@lua_compar
  0004b	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  0004f	48 83 c2 40	 add	 rdx, 64			; 00000040H
  00053	eb 41		 jmp	 SHORT $LN23@lua_compar
$LN13@lua_compar:
  00055	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  00058	45 8b da	 mov	 r11d, r10d
  0005b	44 2b da	 sub	 r11d, edx
  0005e	83 78 08 16	 cmp	 DWORD PTR [rax+8], 22
  00062	75 05		 jne	 SHORT $LN11@lua_compar
  00064	48 8b d6	 mov	 rdx, rsi
  00067	eb 2d		 jmp	 SHORT $LN23@lua_compar
$LN11@lua_compar:
  00069	48 89 5c 24 30	 mov	 QWORD PTR [rsp+48], rbx
  0006e	48 8b 18	 mov	 rbx, QWORD PTR [rax]
  00071	0f b6 43 0a	 movzx	 eax, BYTE PTR [rbx+10]
  00075	44 3b d8	 cmp	 r11d, eax
  00078	7f 14		 jg	 SHORT $LN22@lua_compar
  0007a	41 8d 43 ff	 lea	 eax, DWORD PTR [r11-1]
  0007e	48 63 d0	 movsxd	 rdx, eax
  00081	48 83 c2 02	 add	 rdx, 2
  00085	48 c1 e2 04	 shl	 rdx, 4
  00089	48 03 d3	 add	 rdx, rbx
  0008c	eb 03		 jmp	 SHORT $LN41@lua_compar
$LN22@lua_compar:
  0008e	48 8b d6	 mov	 rdx, rsi
$LN41@lua_compar:
  00091	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
$LN23@lua_compar:
; Line 323
  00096	45 85 c0	 test	 r8d, r8d
  00099	7e 17		 jle	 SHORT $LN33@lua_compar
  0009b	49 63 c0	 movsxd	 rax, r8d
  0009e	4c 8b c6	 mov	 r8, rsi
  000a1	48 c1 e0 04	 shl	 rax, 4
  000a5	48 03 07	 add	 rax, QWORD PTR [rdi]
  000a8	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  000ac	4c 0f 42 c0	 cmovb	 r8, rax
  000b0	eb 4f		 jmp	 SHORT $LN37@lua_compar
$LN33@lua_compar:
  000b2	45 3b c2	 cmp	 r8d, r10d
  000b5	7e 0d		 jle	 SHORT $LN43@lua_compar
  000b7	4d 63 c0	 movsxd	 r8, r8d
  000ba	49 c1 e0 04	 shl	 r8, 4
  000be	4c 03 41 10	 add	 r8, QWORD PTR [rcx+16]
  000c2	eb 3d		 jmp	 SHORT $LN37@lua_compar
$LN43@lua_compar:
  000c4	75 0a		 jne	 SHORT $LN27@lua_compar
  000c6	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  000ca	49 83 c0 40	 add	 r8, 64			; 00000040H
  000ce	eb 31		 jmp	 SHORT $LN37@lua_compar
$LN27@lua_compar:
  000d0	4c 8b 1f	 mov	 r11, QWORD PTR [rdi]
  000d3	45 2b d0	 sub	 r10d, r8d
  000d6	41 83 7b 08 16	 cmp	 DWORD PTR [r11+8], 22
  000db	74 21		 je	 SHORT $LN36@lua_compar
  000dd	4d 8b 1b	 mov	 r11, QWORD PTR [r11]
  000e0	41 0f b6 43 0a	 movzx	 eax, BYTE PTR [r11+10]
  000e5	44 3b d0	 cmp	 r10d, eax
  000e8	7f 14		 jg	 SHORT $LN36@lua_compar
  000ea	41 8d 42 ff	 lea	 eax, DWORD PTR [r10-1]
  000ee	4c 63 c0	 movsxd	 r8, eax
  000f1	49 83 c0 02	 add	 r8, 2
  000f5	49 c1 e0 04	 shl	 r8, 4
  000f9	4d 03 c3	 add	 r8, r11
  000fc	eb 03		 jmp	 SHORT $LN37@lua_compar
$LN36@lua_compar:
  000fe	4c 8b c6	 mov	 r8, rsi
$LN37@lua_compar:
; Line 324
  00101	48 8b 7c 24 38	 mov	 rdi, QWORD PTR [rsp+56]
  00106	48 3b d6	 cmp	 rdx, rsi
  00109	74 32		 je	 SHORT $LN39@lua_compar
  0010b	4c 3b c6	 cmp	 r8, rsi
  0010e	74 2d		 je	 SHORT $LN39@lua_compar
; Line 325
  00110	45 85 c9	 test	 r9d, r9d
  00113	74 1e		 je	 SHORT $LN4@lua_compar
  00115	41 ff c9	 dec	 r9d
  00118	74 0f		 je	 SHORT $LN3@lua_compar
  0011a	41 ff c9	 dec	 r9d
  0011d	75 1e		 jne	 SHORT $LN39@lua_compar
; Line 334
  0011f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00123	5e		 pop	 rsi
; Line 328
  00124	e9 00 00 00 00	 jmp	 luaV_lessequal
$LN3@lua_compar:
; Line 334
  00129	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0012d	5e		 pop	 rsi
; Line 327
  0012e	e9 00 00 00 00	 jmp	 luaV_lessthan
$LN4@lua_compar:
; Line 334
  00133	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00137	5e		 pop	 rsi
; Line 326
  00138	e9 00 00 00 00	 jmp	 luaV_equalobj
$LN39@lua_compar:
; Line 333
  0013d	33 c0		 xor	 eax, eax
; Line 334
  0013f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00143	5e		 pop	 rsi
  00144	c3		 ret	 0
lua_compare ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_rawequal
_TEXT	SEGMENT
L$ = 48
index1$ = 56
index2$ = 64
lua_rawequal PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 295
$LN37:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 296
  00006	4c 8b 59 20	 mov	 r11, QWORD PTR [rcx+32]
  0000a	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:luaO_nilobject_
  00011	41 b9 d8 b9 f0
	ff		 mov	 r9d, -1001000		; fffffffffff0b9d8H
  00017	85 d2		 test	 edx, edx
  00019	7e 17		 jle	 SHORT $LN14@lua_rawequ
  0001b	48 63 c2	 movsxd	 rax, edx
  0001e	48 8b d7	 mov	 rdx, rdi
  00021	48 c1 e0 04	 shl	 rax, 4
  00025	49 03 03	 add	 rax, QWORD PTR [r11]
  00028	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  0002c	48 0f 42 d0	 cmovb	 rdx, rax
  00030	eb 5f		 jmp	 SHORT $LN18@lua_rawequ
$LN14@lua_rawequ:
  00032	41 3b d1	 cmp	 edx, r9d
  00035	7e 0d		 jle	 SHORT $LN34@lua_rawequ
  00037	48 63 d2	 movsxd	 rdx, edx
  0003a	48 c1 e2 04	 shl	 rdx, 4
  0003e	48 03 51 10	 add	 rdx, QWORD PTR [rcx+16]
  00042	eb 4d		 jmp	 SHORT $LN18@lua_rawequ
$LN34@lua_rawequ:
  00044	75 0a		 jne	 SHORT $LN8@lua_rawequ
  00046	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  0004a	48 83 c2 40	 add	 rdx, 64			; 00000040H
  0004e	eb 41		 jmp	 SHORT $LN18@lua_rawequ
$LN8@lua_rawequ:
  00050	49 8b 03	 mov	 rax, QWORD PTR [r11]
  00053	45 8b d1	 mov	 r10d, r9d
  00056	44 2b d2	 sub	 r10d, edx
  00059	83 78 08 16	 cmp	 DWORD PTR [rax+8], 22
  0005d	75 05		 jne	 SHORT $LN6@lua_rawequ
  0005f	48 8b d7	 mov	 rdx, rdi
  00062	eb 2d		 jmp	 SHORT $LN18@lua_rawequ
$LN6@lua_rawequ:
  00064	48 89 5c 24 30	 mov	 QWORD PTR [rsp+48], rbx
  00069	48 8b 18	 mov	 rbx, QWORD PTR [rax]
  0006c	0f b6 43 0a	 movzx	 eax, BYTE PTR [rbx+10]
  00070	44 3b d0	 cmp	 r10d, eax
  00073	7f 14		 jg	 SHORT $LN17@lua_rawequ
  00075	41 8d 42 ff	 lea	 eax, DWORD PTR [r10-1]
  00079	48 63 d0	 movsxd	 rdx, eax
  0007c	48 83 c2 02	 add	 rdx, 2
  00080	48 c1 e2 04	 shl	 rdx, 4
  00084	48 03 d3	 add	 rdx, rbx
  00087	eb 03		 jmp	 SHORT $LN33@lua_rawequ
$LN17@lua_rawequ:
  00089	48 8b d7	 mov	 rdx, rdi
$LN33@lua_rawequ:
  0008c	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
$LN18@lua_rawequ:
; Line 297
  00091	45 85 c0	 test	 r8d, r8d
  00094	7e 17		 jle	 SHORT $LN28@lua_rawequ
  00096	49 63 c0	 movsxd	 rax, r8d
  00099	4c 8b c7	 mov	 r8, rdi
  0009c	48 c1 e0 04	 shl	 rax, 4
  000a0	49 03 03	 add	 rax, QWORD PTR [r11]
  000a3	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  000a7	4c 0f 42 c0	 cmovb	 r8, rax
  000ab	eb 4d		 jmp	 SHORT $LN32@lua_rawequ
$LN28@lua_rawequ:
  000ad	45 3b c1	 cmp	 r8d, r9d
  000b0	7e 0d		 jle	 SHORT $LN35@lua_rawequ
  000b2	4d 63 c0	 movsxd	 r8, r8d
  000b5	49 c1 e0 04	 shl	 r8, 4
  000b9	4c 03 41 10	 add	 r8, QWORD PTR [rcx+16]
  000bd	eb 3b		 jmp	 SHORT $LN32@lua_rawequ
$LN35@lua_rawequ:
  000bf	75 0a		 jne	 SHORT $LN22@lua_rawequ
  000c1	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  000c5	49 83 c0 40	 add	 r8, 64			; 00000040H
  000c9	eb 2f		 jmp	 SHORT $LN32@lua_rawequ
$LN22@lua_rawequ:
  000cb	49 8b 0b	 mov	 rcx, QWORD PTR [r11]
  000ce	45 2b c8	 sub	 r9d, r8d
  000d1	83 79 08 16	 cmp	 DWORD PTR [rcx+8], 22
  000d5	74 20		 je	 SHORT $LN31@lua_rawequ
  000d7	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000da	0f b6 41 0a	 movzx	 eax, BYTE PTR [rcx+10]
  000de	44 3b c8	 cmp	 r9d, eax
  000e1	7f 14		 jg	 SHORT $LN31@lua_rawequ
  000e3	41 8d 41 ff	 lea	 eax, DWORD PTR [r9-1]
  000e7	4c 63 c0	 movsxd	 r8, eax
  000ea	49 83 c0 02	 add	 r8, 2
  000ee	49 c1 e0 04	 shl	 r8, 4
  000f2	4c 03 c1	 add	 r8, rcx
  000f5	eb 03		 jmp	 SHORT $LN32@lua_rawequ
$LN31@lua_rawequ:
  000f7	4c 8b c7	 mov	 r8, rdi
$LN32@lua_rawequ:
; Line 298
  000fa	48 3b d7	 cmp	 rdx, rdi
  000fd	74 11		 je	 SHORT $LN3@lua_rawequ
  000ff	4c 3b c7	 cmp	 r8, rdi
  00102	74 0c		 je	 SHORT $LN3@lua_rawequ
  00104	33 c9		 xor	 ecx, ecx
; Line 299
  00106	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0010a	5f		 pop	 rdi
; Line 298
  0010b	e9 00 00 00 00	 jmp	 luaV_equalobj
$LN3@lua_rawequ:
  00110	33 c0		 xor	 eax, eax
; Line 299
  00112	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00116	5f		 pop	 rdi
  00117	c3		 ret	 0
lua_rawequal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_arith
_TEXT	SEGMENT
L$ = 64
op$ = 72
lua_arith PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 302
$LN7:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	8d 42 f4	 lea	 eax, DWORD PTR [rdx-12]
  00009	48 8b d9	 mov	 rbx, rcx
  0000c	83 f8 01	 cmp	 eax, 1
  0000f	77 10		 ja	 SHORT $LN1@lua_arith
; Line 308
  00011	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00015	0f 10 40 f0	 movups	 xmm0, XMMWORD PTR [rax-16]
  00019	0f 11 00	 movups	 XMMWORD PTR [rax], xmm0
; Line 309
  0001c	48 83 41 10 10	 add	 QWORD PTR [rcx+16], 16
$LN1@lua_arith:
; Line 312
  00021	4c 8b 49 10	 mov	 r9, QWORD PTR [rcx+16]
  00025	4d 8d 41 e0	 lea	 r8, QWORD PTR [r9-32]
  00029	49 83 c1 f0	 add	 r9, -16
  0002d	4c 89 44 24 20	 mov	 QWORD PTR [rsp+32], r8
  00032	e8 00 00 00 00	 call	 luaO_arith
; Line 313
  00037	48 83 43 10 f0	 add	 QWORD PTR [rbx+16], -16
; Line 315
  0003c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00040	5b		 pop	 rbx
  00041	c3		 ret	 0
lua_arith ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_topointer
_TEXT	SEGMENT
L$ = 8
idx$ = 16
lua_topointer PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 430
  00000	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  00004	4c 8b c9	 mov	 r9, rcx
  00007	85 d2		 test	 edx, edx
  00009	7e 1b		 jle	 SHORT $LN22@lua_topoin
  0000b	48 63 c2	 movsxd	 rax, edx
  0000e	48 c1 e0 04	 shl	 rax, 4
  00012	49 03 00	 add	 rax, QWORD PTR [r8]
  00015	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:luaO_nilobject_
  0001c	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00020	4c 0f 42 c0	 cmovb	 r8, rax
  00024	eb 52		 jmp	 SHORT $LN26@lua_topoin
$LN22@lua_topoin:
  00026	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0002b	3b d1		 cmp	 edx, ecx
  0002d	7e 0d		 jle	 SHORT $LN29@lua_topoin
  0002f	4c 63 c2	 movsxd	 r8, edx
  00032	49 c1 e0 04	 shl	 r8, 4
  00036	4d 03 41 10	 add	 r8, QWORD PTR [r9+16]
  0003a	eb 3c		 jmp	 SHORT $LN26@lua_topoin
$LN29@lua_topoin:
  0003c	75 0a		 jne	 SHORT $LN16@lua_topoin
  0003e	4d 8b 41 18	 mov	 r8, QWORD PTR [r9+24]
  00042	49 83 c0 40	 add	 r8, 64			; 00000040H
  00046	eb 30		 jmp	 SHORT $LN26@lua_topoin
$LN16@lua_topoin:
  00048	2b ca		 sub	 ecx, edx
  0004a	49 8b 10	 mov	 rdx, QWORD PTR [r8]
  0004d	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  00051	74 1e		 je	 SHORT $LN25@lua_topoin
  00053	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  00056	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  0005a	3b c8		 cmp	 ecx, eax
  0005c	7f 13		 jg	 SHORT $LN25@lua_topoin
  0005e	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00061	4c 63 c0	 movsxd	 r8, eax
  00064	49 83 c0 02	 add	 r8, 2
  00068	49 c1 e0 04	 shl	 r8, 4
  0006c	4c 03 c2	 add	 r8, rdx
  0006f	eb 07		 jmp	 SHORT $LN26@lua_topoin
$LN25@lua_topoin:
  00071	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:luaO_nilobject_
$LN26@lua_topoin:
; Line 431
  00078	41 8b 48 08	 mov	 ecx, DWORD PTR [r8+8]
  0007c	83 e1 3f	 and	 ecx, 63			; 0000003fH
  0007f	83 c1 fe	 add	 ecx, -2
  00082	83 f9 24	 cmp	 ecx, 36			; 00000024H
  00085	77 2a		 ja	 SHORT $LN1@lua_topoin
  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:__ImageBase
  0008e	48 63 c9	 movsxd	 rcx, ecx
  00091	0f b6 8c 08 00
	00 00 00	 movzx	 ecx, BYTE PTR $LN27@lua_topoin[rax+rcx]
  00099	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR $LN28@lua_topoin[rax+rcx*4]
  000a0	48 03 d0	 add	 rdx, rax
  000a3	ff e2		 jmp	 rdx
$LN8@lua_topoin:
; Line 432
  000a5	49 8b 00	 mov	 rax, QWORD PTR [r8]
; Line 441
  000a8	c3		 ret	 0
$LN3@lua_topoin:
; Line 437
  000a9	49 8b 00	 mov	 rax, QWORD PTR [r8]
  000ac	48 83 c0 28	 add	 rax, 40			; 00000028H
; Line 441
  000b0	c3		 ret	 0
$LN1@lua_topoin:
; Line 439
  000b1	33 c0		 xor	 eax, eax
; Line 441
  000b3	c3		 ret	 0
$LN28@lua_topoin:
  000b4	00 00 00 00	 DD	 $LN8@lua_topoin
  000b8	00 00 00 00	 DD	 $LN3@lua_topoin
  000bc	00 00 00 00	 DD	 $LN1@lua_topoin
$LN27@lua_topoin:
  000c0	00		 DB	 0
  000c1	02		 DB	 2
  000c2	02		 DB	 2
  000c3	00		 DB	 0
  000c4	00		 DB	 0
  000c5	01		 DB	 1
  000c6	00		 DB	 0
  000c7	02		 DB	 2
  000c8	02		 DB	 2
  000c9	02		 DB	 2
  000ca	02		 DB	 2
  000cb	02		 DB	 2
  000cc	02		 DB	 2
  000cd	02		 DB	 2
  000ce	02		 DB	 2
  000cf	02		 DB	 2
  000d0	02		 DB	 2
  000d1	02		 DB	 2
  000d2	02		 DB	 2
  000d3	02		 DB	 2
  000d4	00		 DB	 0
  000d5	02		 DB	 2
  000d6	02		 DB	 2
  000d7	02		 DB	 2
  000d8	02		 DB	 2
  000d9	02		 DB	 2
  000da	02		 DB	 2
  000db	02		 DB	 2
  000dc	02		 DB	 2
  000dd	02		 DB	 2
  000de	02		 DB	 2
  000df	02		 DB	 2
  000e0	02		 DB	 2
  000e1	02		 DB	 2
  000e2	02		 DB	 2
  000e3	02		 DB	 2
  000e4	00		 DB	 0
lua_topointer ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_tothread
_TEXT	SEGMENT
L$ = 8
idx$ = 16
lua_tothread PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 424
  00000	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00004	4c 8b c1	 mov	 r8, rcx
  00007	85 d2		 test	 edx, edx
  00009	7e 1b		 jle	 SHORT $LN14@lua_tothre
  0000b	48 63 c2	 movsxd	 rax, edx
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00015	48 c1 e0 04	 shl	 rax, 4
  00019	49 03 01	 add	 rax, QWORD PTR [r9]
  0001c	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00020	48 0f 42 d0	 cmovb	 rdx, rax
  00024	eb 54		 jmp	 SHORT $LN18@lua_tothre
$LN14@lua_tothre:
  00026	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0002b	3b d1		 cmp	 edx, ecx
  0002d	7e 0d		 jle	 SHORT $LN19@lua_tothre
  0002f	48 63 d2	 movsxd	 rdx, edx
  00032	48 c1 e2 04	 shl	 rdx, 4
  00036	49 03 50 10	 add	 rdx, QWORD PTR [r8+16]
  0003a	eb 3e		 jmp	 SHORT $LN18@lua_tothre
$LN19@lua_tothre:
  0003c	75 0a		 jne	 SHORT $LN8@lua_tothre
  0003e	49 8b 50 18	 mov	 rdx, QWORD PTR [r8+24]
  00042	48 83 c2 40	 add	 rdx, 64			; 00000040H
  00046	eb 32		 jmp	 SHORT $LN18@lua_tothre
$LN8@lua_tothre:
  00048	4d 8b 01	 mov	 r8, QWORD PTR [r9]
  0004b	2b ca		 sub	 ecx, edx
  0004d	41 83 78 08 16	 cmp	 DWORD PTR [r8+8], 22
  00052	74 1f		 je	 SHORT $LN17@lua_tothre
  00054	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00057	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  0005c	3b c8		 cmp	 ecx, eax
  0005e	7f 13		 jg	 SHORT $LN17@lua_tothre
  00060	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00063	48 63 d0	 movsxd	 rdx, eax
  00066	48 83 c2 02	 add	 rdx, 2
  0006a	48 c1 e2 04	 shl	 rdx, 4
  0006e	49 03 d0	 add	 rdx, r8
  00071	eb 07		 jmp	 SHORT $LN18@lua_tothre
$LN17@lua_tothre:
  00073	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
$LN18@lua_tothre:
; Line 425
  0007a	83 7a 08 48	 cmp	 DWORD PTR [rdx+8], 72	; 00000048H
  0007e	74 03		 je	 SHORT $LN3@lua_tothre
  00080	33 c0		 xor	 eax, eax
; Line 426
  00082	c3		 ret	 0
$LN3@lua_tothre:
; Line 425
  00083	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; Line 426
  00086	c3		 ret	 0
lua_tothread ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_touserdata
_TEXT	SEGMENT
L$ = 8
idx$ = 16
lua_touserdata PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 414
  00000	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00004	4c 8b c1	 mov	 r8, rcx
  00007	85 d2		 test	 edx, edx
  00009	7e 1b		 jle	 SHORT $LN17@lua_touser
  0000b	48 63 c2	 movsxd	 rax, edx
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00015	48 c1 e0 04	 shl	 rax, 4
  00019	49 03 01	 add	 rax, QWORD PTR [r9]
  0001c	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00020	48 0f 42 d0	 cmovb	 rdx, rax
  00024	eb 54		 jmp	 SHORT $LN21@lua_touser
$LN17@lua_touser:
  00026	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0002b	3b d1		 cmp	 edx, ecx
  0002d	7e 0d		 jle	 SHORT $LN22@lua_touser
  0002f	48 63 d2	 movsxd	 rdx, edx
  00032	48 c1 e2 04	 shl	 rdx, 4
  00036	49 03 50 10	 add	 rdx, QWORD PTR [r8+16]
  0003a	eb 3e		 jmp	 SHORT $LN21@lua_touser
$LN22@lua_touser:
  0003c	75 0a		 jne	 SHORT $LN11@lua_touser
  0003e	49 8b 50 18	 mov	 rdx, QWORD PTR [r8+24]
  00042	48 83 c2 40	 add	 rdx, 64			; 00000040H
  00046	eb 32		 jmp	 SHORT $LN21@lua_touser
$LN11@lua_touser:
  00048	4d 8b 01	 mov	 r8, QWORD PTR [r9]
  0004b	2b ca		 sub	 ecx, edx
  0004d	41 83 78 08 16	 cmp	 DWORD PTR [r8+8], 22
  00052	74 1f		 je	 SHORT $LN20@lua_touser
  00054	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00057	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  0005c	3b c8		 cmp	 ecx, eax
  0005e	7f 13		 jg	 SHORT $LN20@lua_touser
  00060	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00063	48 63 d0	 movsxd	 rdx, eax
  00066	48 83 c2 02	 add	 rdx, 2
  0006a	48 c1 e2 04	 shl	 rdx, 4
  0006e	49 03 d0	 add	 rdx, r8
  00071	eb 07		 jmp	 SHORT $LN21@lua_touser
$LN20@lua_touser:
  00073	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
$LN21@lua_touser:
; Line 415
  0007a	8b 42 08	 mov	 eax, DWORD PTR [rdx+8]
  0007d	83 e0 0f	 and	 eax, 15
  00080	83 f8 02	 cmp	 eax, 2
  00083	74 10		 je	 SHORT $LN2@lua_touser
  00085	83 f8 07	 cmp	 eax, 7
  00088	74 03		 je	 SHORT $LN3@lua_touser
; Line 418
  0008a	33 c0		 xor	 eax, eax
; Line 420
  0008c	c3		 ret	 0
$LN3@lua_touser:
; Line 416
  0008d	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00090	48 83 c0 28	 add	 rax, 40			; 00000028H
; Line 420
  00094	c3		 ret	 0
$LN2@lua_touser:
; Line 417
  00095	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; Line 420
  00098	c3		 ret	 0
lua_touserdata ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_tocfunction
_TEXT	SEGMENT
L$ = 8
idx$ = 16
lua_tocfunction PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 405
  00000	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00004	4c 8b c1	 mov	 r8, rcx
  00007	85 d2		 test	 edx, edx
  00009	7e 1b		 jle	 SHORT $LN16@lua_tocfun
  0000b	48 63 c2	 movsxd	 rax, edx
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00015	48 c1 e0 04	 shl	 rax, 4
  00019	49 03 01	 add	 rax, QWORD PTR [r9]
  0001c	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00020	48 0f 42 d0	 cmovb	 rdx, rax
  00024	eb 54		 jmp	 SHORT $LN20@lua_tocfun
$LN16@lua_tocfun:
  00026	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0002b	3b d1		 cmp	 edx, ecx
  0002d	7e 0d		 jle	 SHORT $LN21@lua_tocfun
  0002f	48 63 d2	 movsxd	 rdx, edx
  00032	48 c1 e2 04	 shl	 rdx, 4
  00036	49 03 50 10	 add	 rdx, QWORD PTR [r8+16]
  0003a	eb 3e		 jmp	 SHORT $LN20@lua_tocfun
$LN21@lua_tocfun:
  0003c	75 0a		 jne	 SHORT $LN10@lua_tocfun
  0003e	49 8b 50 18	 mov	 rdx, QWORD PTR [r8+24]
  00042	48 83 c2 40	 add	 rdx, 64			; 00000040H
  00046	eb 32		 jmp	 SHORT $LN20@lua_tocfun
$LN10@lua_tocfun:
  00048	4d 8b 01	 mov	 r8, QWORD PTR [r9]
  0004b	2b ca		 sub	 ecx, edx
  0004d	41 83 78 08 16	 cmp	 DWORD PTR [r8+8], 22
  00052	74 1f		 je	 SHORT $LN19@lua_tocfun
  00054	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00057	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  0005c	3b c8		 cmp	 ecx, eax
  0005e	7f 13		 jg	 SHORT $LN19@lua_tocfun
  00060	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00063	48 63 d0	 movsxd	 rdx, eax
  00066	48 83 c2 02	 add	 rdx, 2
  0006a	48 c1 e2 04	 shl	 rdx, 4
  0006e	49 03 d0	 add	 rdx, r8
  00071	eb 07		 jmp	 SHORT $LN20@lua_tocfun
$LN19@lua_tocfun:
  00073	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
$LN20@lua_tocfun:
; Line 406
  0007a	8b 42 08	 mov	 eax, DWORD PTR [rdx+8]
  0007d	83 f8 16	 cmp	 eax, 22
  00080	75 04		 jne	 SHORT $LN4@lua_tocfun
  00082	48 8b 02	 mov	 rax, QWORD PTR [rdx]
; Line 410
  00085	c3		 ret	 0
$LN4@lua_tocfun:
; Line 407
  00086	83 f8 66	 cmp	 eax, 102		; 00000066H
  00089	75 08		 jne	 SHORT $LN2@lua_tocfun
; Line 408
  0008b	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  0008e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
; Line 410
  00092	c3		 ret	 0
$LN2@lua_tocfun:
; Line 409
  00093	33 c0		 xor	 eax, eax
; Line 410
  00095	c3		 ret	 0
lua_tocfunction ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_rawlen
_TEXT	SEGMENT
L$ = 48
idx$ = 56
lua_rawlen PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 392
$LN26:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 393
  00004	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00008	4c 8b c1	 mov	 r8, rcx
  0000b	85 d2		 test	 edx, edx
  0000d	7e 1b		 jle	 SHORT $LN19@lua_rawlen
  0000f	48 63 c2	 movsxd	 rax, edx
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
  00019	48 c1 e0 04	 shl	 rax, 4
  0001d	49 03 01	 add	 rax, QWORD PTR [r9]
  00020	49 3b 40 10	 cmp	 rax, QWORD PTR [r8+16]
  00024	48 0f 42 c8	 cmovb	 rcx, rax
  00028	eb 52		 jmp	 SHORT $LN23@lua_rawlen
$LN19@lua_rawlen:
  0002a	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0002f	3b d1		 cmp	 edx, ecx
  00031	7e 0d		 jle	 SHORT $LN24@lua_rawlen
  00033	48 63 ca	 movsxd	 rcx, edx
  00036	48 c1 e1 04	 shl	 rcx, 4
  0003a	49 03 48 10	 add	 rcx, QWORD PTR [r8+16]
  0003e	eb 3c		 jmp	 SHORT $LN23@lua_rawlen
$LN24@lua_rawlen:
  00040	75 0a		 jne	 SHORT $LN13@lua_rawlen
  00042	49 8b 48 18	 mov	 rcx, QWORD PTR [r8+24]
  00046	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0004a	eb 30		 jmp	 SHORT $LN23@lua_rawlen
$LN13@lua_rawlen:
  0004c	2b ca		 sub	 ecx, edx
  0004e	49 8b 11	 mov	 rdx, QWORD PTR [r9]
  00051	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  00055	74 1e		 je	 SHORT $LN22@lua_rawlen
  00057	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  0005a	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  0005e	3b c8		 cmp	 ecx, eax
  00060	7f 13		 jg	 SHORT $LN22@lua_rawlen
  00062	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00065	48 63 c8	 movsxd	 rcx, eax
  00068	48 83 c1 02	 add	 rcx, 2
  0006c	48 c1 e1 04	 shl	 rcx, 4
  00070	48 03 ca	 add	 rcx, rdx
  00073	eb 07		 jmp	 SHORT $LN23@lua_rawlen
$LN22@lua_rawlen:
  00075	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
$LN23@lua_rawlen:
; Line 394
  0007c	8b 51 08	 mov	 edx, DWORD PTR [rcx+8]
  0007f	83 e2 3f	 and	 edx, 63			; 0000003fH
  00082	83 ea 04	 sub	 edx, 4
  00085	74 3c		 je	 SHORT $LN5@lua_rawlen
  00087	ff ca		 dec	 edx
  00089	74 29		 je	 SHORT $LN2@lua_rawlen
  0008b	83 ea 02	 sub	 edx, 2
  0008e	74 18		 je	 SHORT $LN3@lua_rawlen
  00090	83 fa 0d	 cmp	 edx, 13
  00093	74 07		 je	 SHORT $LN4@lua_rawlen
; Line 399
  00095	33 c0		 xor	 eax, eax
; Line 401
  00097	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0009b	c3		 ret	 0
$LN4@lua_rawlen:
; Line 396
  0009c	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0009f	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
; Line 401
  000a3	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000a7	c3		 ret	 0
$LN3@lua_rawlen:
; Line 397
  000a8	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  000ab	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
; Line 401
  000af	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b3	c3		 ret	 0
$LN2@lua_rawlen:
; Line 398
  000b4	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000b7	e8 00 00 00 00	 call	 luaH_getn
  000bc	48 98		 cdqe
; Line 401
  000be	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000c2	c3		 ret	 0
$LN5@lua_rawlen:
; Line 395
  000c3	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  000c6	0f b6 40 0b	 movzx	 eax, BYTE PTR [rax+11]
; Line 401
  000ca	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000ce	c3		 ret	 0
lua_rawlen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_tolstring
_TEXT	SEGMENT
L$ = 48
idx$ = 56
len$ = 64
lua_tolstring PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 373
$LN26:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	48 89 7c 24 18	 mov	 QWORD PTR [rsp+24], rdi
  0000f	41 56		 push	 r14
  00011	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00015	48 63 f2	 movsxd	 rsi, edx
; Line 374
  00018	48 8b 51 20	 mov	 rdx, QWORD PTR [rcx+32]
  0001c	4d 8b f0	 mov	 r14, r8
  0001f	48 8b f9	 mov	 rdi, rcx
  00022	85 f6		 test	 esi, esi
  00024	7e 1b		 jle	 SHORT $LN19@lua_tolstr
  00026	48 8b c6	 mov	 rax, rsi
  00029	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
  00030	48 c1 e0 04	 shl	 rax, 4
  00034	48 03 02	 add	 rax, QWORD PTR [rdx]
  00037	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  0003b	48 0f 42 d8	 cmovb	 rbx, rax
  0003f	eb 52		 jmp	 SHORT $LN23@lua_tolstr
$LN19@lua_tolstr:
  00041	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00046	3b f1		 cmp	 esi, ecx
  00048	7e 0d		 jle	 SHORT $LN24@lua_tolstr
  0004a	48 8b de	 mov	 rbx, rsi
  0004d	48 c1 e3 04	 shl	 rbx, 4
  00051	48 03 5f 10	 add	 rbx, QWORD PTR [rdi+16]
  00055	eb 3c		 jmp	 SHORT $LN23@lua_tolstr
$LN24@lua_tolstr:
  00057	75 0a		 jne	 SHORT $LN13@lua_tolstr
  00059	48 8b 5f 18	 mov	 rbx, QWORD PTR [rdi+24]
  0005d	48 83 c3 40	 add	 rbx, 64			; 00000040H
  00061	eb 30		 jmp	 SHORT $LN23@lua_tolstr
$LN13@lua_tolstr:
  00063	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00066	2b ce		 sub	 ecx, esi
  00068	83 78 08 16	 cmp	 DWORD PTR [rax+8], 22
  0006c	74 1e		 je	 SHORT $LN22@lua_tolstr
  0006e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00071	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00075	3b c8		 cmp	 ecx, eax
  00077	7f 13		 jg	 SHORT $LN22@lua_tolstr
  00079	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0007c	48 63 d8	 movsxd	 rbx, eax
  0007f	48 83 c3 02	 add	 rbx, 2
  00083	48 c1 e3 04	 shl	 rbx, 4
  00087	48 03 da	 add	 rbx, rdx
  0008a	eb 07		 jmp	 SHORT $LN23@lua_tolstr
$LN22@lua_tolstr:
  0008c	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:luaO_nilobject_
$LN23@lua_tolstr:
; Line 375
  00093	8b 43 08	 mov	 eax, DWORD PTR [rbx+8]
  00096	83 e0 0f	 and	 eax, 15
  00099	83 f8 04	 cmp	 eax, 4
  0009c	74 40		 je	 SHORT $LN5@lua_tolstr
; Line 376
  0009e	83 f8 03	 cmp	 eax, 3
  000a1	74 10		 je	 SHORT $LN4@lua_tolstr
; Line 377
  000a3	4d 85 c0	 test	 r8, r8
  000a6	74 07		 je	 SHORT $LN3@lua_tolstr
  000a8	49 c7 00 00 00
	00 00		 mov	 QWORD PTR [r8], 0
$LN3@lua_tolstr:
; Line 378
  000af	33 c0		 xor	 eax, eax
  000b1	eb 4d		 jmp	 SHORT $LN6@lua_tolstr
$LN4@lua_tolstr:
; Line 381
  000b3	48 8b 47 18	 mov	 rax, QWORD PTR [rdi+24]
  000b7	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  000bc	7e 08		 jle	 SHORT $LN2@lua_tolstr
  000be	48 8b cf	 mov	 rcx, rdi
  000c1	e8 00 00 00 00	 call	 luaC_step
$LN2@lua_tolstr:
; Line 382
  000c6	8b d6		 mov	 edx, esi
  000c8	48 8b cf	 mov	 rcx, rdi
  000cb	e8 00 00 00 00	 call	 index2addr
; Line 383
  000d0	48 8b cf	 mov	 rcx, rdi
  000d3	48 8b d0	 mov	 rdx, rax
  000d6	48 8b d8	 mov	 rbx, rax
  000d9	e8 00 00 00 00	 call	 luaO_tostring
$LN5@lua_tolstr:
; Line 386
  000de	4d 85 f6	 test	 r14, r14
  000e1	74 16		 je	 SHORT $LN1@lua_tolstr
; Line 387
  000e3	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000e6	80 78 08 04	 cmp	 BYTE PTR [rax+8], 4
  000ea	75 06		 jne	 SHORT $LN8@lua_tolstr
  000ec	0f b6 48 0b	 movzx	 ecx, BYTE PTR [rax+11]
  000f0	eb 04		 jmp	 SHORT $LN9@lua_tolstr
$LN8@lua_tolstr:
  000f2	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
$LN9@lua_tolstr:
  000f6	49 89 0e	 mov	 QWORD PTR [r14], rcx
$LN1@lua_tolstr:
; Line 388
  000f9	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000fc	48 83 c0 18	 add	 rax, 24
$LN6@lua_tolstr:
; Line 389
  00100	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00105	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0010a	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]
  0010f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00113	41 5e		 pop	 r14
  00115	c3		 ret	 0
lua_tolstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_toboolean
_TEXT	SEGMENT
L$ = 8
idx$ = 16
lua_toboolean PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 368
  00000	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00004	4c 8b c1	 mov	 r8, rcx
  00007	85 d2		 test	 edx, edx
  00009	7e 1b		 jle	 SHORT $LN15@lua_tobool
  0000b	48 63 c2	 movsxd	 rax, edx
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00015	48 c1 e0 04	 shl	 rax, 4
  00019	49 03 01	 add	 rax, QWORD PTR [r9]
  0001c	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00020	48 0f 42 d0	 cmovb	 rdx, rax
  00024	eb 54		 jmp	 SHORT $LN19@lua_tobool
$LN15@lua_tobool:
  00026	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0002b	3b d1		 cmp	 edx, ecx
  0002d	7e 0d		 jle	 SHORT $LN20@lua_tobool
  0002f	48 63 d2	 movsxd	 rdx, edx
  00032	48 c1 e2 04	 shl	 rdx, 4
  00036	49 03 50 10	 add	 rdx, QWORD PTR [r8+16]
  0003a	eb 3e		 jmp	 SHORT $LN19@lua_tobool
$LN20@lua_tobool:
  0003c	75 0a		 jne	 SHORT $LN9@lua_tobool
  0003e	49 8b 50 18	 mov	 rdx, QWORD PTR [r8+24]
  00042	48 83 c2 40	 add	 rdx, 64			; 00000040H
  00046	eb 32		 jmp	 SHORT $LN19@lua_tobool
$LN9@lua_tobool:
  00048	4d 8b 01	 mov	 r8, QWORD PTR [r9]
  0004b	2b ca		 sub	 ecx, edx
  0004d	41 83 78 08 16	 cmp	 DWORD PTR [r8+8], 22
  00052	74 1f		 je	 SHORT $LN18@lua_tobool
  00054	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00057	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  0005c	3b c8		 cmp	 ecx, eax
  0005e	7f 13		 jg	 SHORT $LN18@lua_tobool
  00060	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00063	48 63 d0	 movsxd	 rdx, eax
  00066	48 83 c2 02	 add	 rdx, 2
  0006a	48 c1 e2 04	 shl	 rdx, 4
  0006e	49 03 d0	 add	 rdx, r8
  00071	eb 07		 jmp	 SHORT $LN19@lua_tobool
$LN18@lua_tobool:
  00073	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
$LN19@lua_tobool:
; Line 369
  0007a	8b 42 08	 mov	 eax, DWORD PTR [rdx+8]
  0007d	85 c0		 test	 eax, eax
  0007f	74 10		 je	 SHORT $LN4@lua_tobool
  00081	83 f8 01	 cmp	 eax, 1
  00084	75 05		 jne	 SHORT $LN3@lua_tobool
  00086	83 3a 00	 cmp	 DWORD PTR [rdx], 0
  00089	74 06		 je	 SHORT $LN4@lua_tobool
$LN3@lua_tobool:
  0008b	b8 01 00 00 00	 mov	 eax, 1
; Line 370
  00090	c3		 ret	 0
$LN4@lua_tobool:
; Line 369
  00091	33 c0		 xor	 eax, eax
; Line 370
  00093	c3		 ret	 0
lua_toboolean ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_tointegerx
_TEXT	SEGMENT
res$ = 48
L$ = 48
idx$ = 56
pisnum$ = 64
lua_tointegerx PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 356
$LN24:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	49 8b d8	 mov	 rbx, r8
; Line 358
  00009	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  0000d	4c 8b c9	 mov	 r9, rcx
  00010	85 d2		 test	 edx, edx
  00012	7e 1b		 jle	 SHORT $LN16@lua_tointe
  00014	48 63 c2	 movsxd	 rax, edx
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
  0001e	48 c1 e0 04	 shl	 rax, 4
  00022	49 03 00	 add	 rax, QWORD PTR [r8]
  00025	49 3b 41 10	 cmp	 rax, QWORD PTR [r9+16]
  00029	48 0f 42 c8	 cmovb	 rcx, rax
  0002d	eb 52		 jmp	 SHORT $LN20@lua_tointe
$LN16@lua_tointe:
  0002f	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00034	3b d1		 cmp	 edx, ecx
  00036	7e 0d		 jle	 SHORT $LN22@lua_tointe
  00038	48 63 ca	 movsxd	 rcx, edx
  0003b	48 c1 e1 04	 shl	 rcx, 4
  0003f	49 03 49 10	 add	 rcx, QWORD PTR [r9+16]
  00043	eb 3c		 jmp	 SHORT $LN20@lua_tointe
$LN22@lua_tointe:
  00045	75 0a		 jne	 SHORT $LN10@lua_tointe
  00047	49 8b 49 18	 mov	 rcx, QWORD PTR [r9+24]
  0004b	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0004f	eb 30		 jmp	 SHORT $LN20@lua_tointe
$LN10@lua_tointe:
  00051	2b ca		 sub	 ecx, edx
  00053	49 8b 10	 mov	 rdx, QWORD PTR [r8]
  00056	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  0005a	74 1e		 je	 SHORT $LN19@lua_tointe
  0005c	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  0005f	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00063	3b c8		 cmp	 ecx, eax
  00065	7f 13		 jg	 SHORT $LN19@lua_tointe
  00067	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0006a	48 63 c8	 movsxd	 rcx, eax
  0006d	48 83 c1 02	 add	 rcx, 2
  00071	48 c1 e1 04	 shl	 rcx, 4
  00075	48 03 ca	 add	 rcx, rdx
  00078	eb 07		 jmp	 SHORT $LN20@lua_tointe
$LN19@lua_tointe:
  0007a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
$LN20@lua_tointe:
; Line 359
  00081	83 79 08 13	 cmp	 DWORD PTR [rcx+8], 19
  00085	75 0a		 jne	 SHORT $LN5@lua_tointe
  00087	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0008a	b9 01 00 00 00	 mov	 ecx, 1
  0008f	eb 1c		 jmp	 SHORT $LN2@lua_tointe
$LN5@lua_tointe:
  00091	48 8d 54 24 30	 lea	 rdx, QWORD PTR res$[rsp]
  00096	45 33 c0	 xor	 r8d, r8d
  00099	e8 00 00 00 00	 call	 luaV_tointeger
; Line 360
  0009e	33 d2		 xor	 edx, edx
  000a0	8b c8		 mov	 ecx, eax
  000a2	48 8b 44 24 30	 mov	 rax, QWORD PTR res$[rsp]
  000a7	85 c9		 test	 ecx, ecx
  000a9	48 0f 44 c2	 cmove	 rax, rdx
$LN2@lua_tointe:
; Line 362
  000ad	48 85 db	 test	 rbx, rbx
  000b0	74 02		 je	 SHORT $LN21@lua_tointe
  000b2	89 0b		 mov	 DWORD PTR [rbx], ecx
$LN21@lua_tointe:
; Line 364
  000b4	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b8	5b		 pop	 rbx
  000b9	c3		 ret	 0
lua_tointegerx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_tonumberx
_TEXT	SEGMENT
n$ = 48
L$ = 48
idx$ = 56
pisnum$ = 64
lua_tonumberx PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 345
$LN25:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	49 8b d8	 mov	 rbx, r8
; Line 347
  00009	4c 8b 41 20	 mov	 r8, QWORD PTR [rcx+32]
  0000d	4c 8b c9	 mov	 r9, rcx
  00010	85 d2		 test	 edx, edx
  00012	7e 1b		 jle	 SHORT $LN16@lua_tonumb
  00014	48 63 c2	 movsxd	 rax, edx
  00017	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
  0001e	48 c1 e0 04	 shl	 rax, 4
  00022	49 03 00	 add	 rax, QWORD PTR [r8]
  00025	49 3b 41 10	 cmp	 rax, QWORD PTR [r9+16]
  00029	48 0f 42 c8	 cmovb	 rcx, rax
  0002d	eb 52		 jmp	 SHORT $LN20@lua_tonumb
$LN16@lua_tonumb:
  0002f	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00034	3b d1		 cmp	 edx, ecx
  00036	7e 0d		 jle	 SHORT $LN23@lua_tonumb
  00038	48 63 ca	 movsxd	 rcx, edx
  0003b	48 c1 e1 04	 shl	 rcx, 4
  0003f	49 03 49 10	 add	 rcx, QWORD PTR [r9+16]
  00043	eb 3c		 jmp	 SHORT $LN20@lua_tonumb
$LN23@lua_tonumb:
  00045	75 0a		 jne	 SHORT $LN10@lua_tonumb
  00047	49 8b 49 18	 mov	 rcx, QWORD PTR [r9+24]
  0004b	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0004f	eb 30		 jmp	 SHORT $LN20@lua_tonumb
$LN10@lua_tonumb:
  00051	2b ca		 sub	 ecx, edx
  00053	49 8b 10	 mov	 rdx, QWORD PTR [r8]
  00056	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  0005a	74 1e		 je	 SHORT $LN19@lua_tonumb
  0005c	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  0005f	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00063	3b c8		 cmp	 ecx, eax
  00065	7f 13		 jg	 SHORT $LN19@lua_tonumb
  00067	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0006a	48 63 c8	 movsxd	 rcx, eax
  0006d	48 83 c1 02	 add	 rcx, 2
  00071	48 c1 e1 04	 shl	 rcx, 4
  00075	48 03 ca	 add	 rcx, rdx
  00078	eb 07		 jmp	 SHORT $LN20@lua_tonumb
$LN19@lua_tonumb:
  0007a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
$LN20@lua_tonumb:
; Line 348
  00081	83 79 08 03	 cmp	 DWORD PTR [rcx+8], 3
  00085	75 0b		 jne	 SHORT $LN5@lua_tonumb
  00087	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0008b	b8 01 00 00 00	 mov	 eax, 1
  00090	eb 19		 jmp	 SHORT $LN2@lua_tonumb
$LN5@lua_tonumb:
  00092	48 8d 54 24 30	 lea	 rdx, QWORD PTR n$[rsp]
  00097	e8 00 00 00 00	 call	 luaV_tonumber_
; Line 349
  0009c	85 c0		 test	 eax, eax
  0009e	75 05		 jne	 SHORT $LN22@lua_tonumb
  000a0	0f 57 c0	 xorps	 xmm0, xmm0
; Line 350
  000a3	eb 06		 jmp	 SHORT $LN2@lua_tonumb
$LN22@lua_tonumb:
  000a5	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR n$[rsp]
$LN2@lua_tonumb:
; Line 351
  000ab	48 85 db	 test	 rbx, rbx
  000ae	74 02		 je	 SHORT $LN21@lua_tonumb
  000b0	89 03		 mov	 DWORD PTR [rbx], eax
$LN21@lua_tonumb:
; Line 353
  000b2	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b6	5b		 pop	 rbx
  000b7	c3		 ret	 0
lua_tonumberx ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_typename
_TEXT	SEGMENT
L$ = 8
t$ = 16
lua_typename PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 260
  00000	48 8d 0d 08 00
	00 00		 lea	 rcx, OFFSET FLAT:luaT_typenames_+8
  00007	48 63 c2	 movsxd	 rax, edx
  0000a	48 8b 04 c1	 mov	 rax, QWORD PTR [rcx+rax*8]
; Line 261
  0000e	c3		 ret	 0
lua_typename ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_type
_TEXT	SEGMENT
L$ = 8
idx$ = 16
lua_type PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 252
  00000	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00004	4c 8b c1	 mov	 r8, rcx
  00007	85 d2		 test	 edx, edx
  00009	7e 14		 jle	 SHORT $LN14@lua_type
  0000b	48 63 c2	 movsxd	 rax, edx
  0000e	48 c1 e0 04	 shl	 rax, 4
  00012	49 03 01	 add	 rax, QWORD PTR [r9]
  00015	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00019	72 4c		 jb	 SHORT $LN18@lua_type
$LN3@lua_type:
; Line 253
  0001b	83 c8 ff	 or	 eax, -1
; Line 254
  0001e	c3		 ret	 0
; Line 252
$LN14@lua_type:
  0001f	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00024	3b d1		 cmp	 edx, ecx
  00026	7e 0d		 jle	 SHORT $LN19@lua_type
  00028	48 63 c2	 movsxd	 rax, edx
  0002b	48 c1 e0 04	 shl	 rax, 4
  0002f	49 03 40 10	 add	 rax, QWORD PTR [r8+16]
  00033	eb 32		 jmp	 SHORT $LN18@lua_type
$LN19@lua_type:
  00035	75 0a		 jne	 SHORT $LN8@lua_type
  00037	49 8b 40 18	 mov	 rax, QWORD PTR [r8+24]
  0003b	48 83 c0 40	 add	 rax, 64			; 00000040H
  0003f	eb 26		 jmp	 SHORT $LN18@lua_type
$LN8@lua_type:
  00041	2b ca		 sub	 ecx, edx
  00043	49 8b 11	 mov	 rdx, QWORD PTR [r9]
  00046	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  0004a	74 cf		 je	 SHORT $LN3@lua_type
  0004c	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  0004f	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00053	3b c8		 cmp	 ecx, eax
  00055	7f c4		 jg	 SHORT $LN3@lua_type
  00057	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0005a	48 98		 cdqe
  0005c	48 83 c0 02	 add	 rax, 2
  00060	48 c1 e0 04	 shl	 rax, 4
  00064	48 03 c2	 add	 rax, rdx
$LN18@lua_type:
; Line 253
  00067	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
  0006e	48 3b c1	 cmp	 rax, rcx
  00071	74 a8		 je	 SHORT $LN3@lua_type
  00073	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00076	83 e0 0f	 and	 eax, 15
; Line 254
  00079	c3		 ret	 0
lua_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_isuserdata
_TEXT	SEGMENT
L$ = 8
idx$ = 16
lua_isuserdata PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 290
  00000	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00004	4c 8b c1	 mov	 r8, rcx
  00007	85 d2		 test	 edx, edx
  00009	7e 1b		 jle	 SHORT $LN14@lua_isuser
  0000b	48 63 c2	 movsxd	 rax, edx
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00015	48 c1 e0 04	 shl	 rax, 4
  00019	49 03 01	 add	 rax, QWORD PTR [r9]
  0001c	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00020	48 0f 42 d0	 cmovb	 rdx, rax
  00024	eb 54		 jmp	 SHORT $LN18@lua_isuser
$LN14@lua_isuser:
  00026	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0002b	3b d1		 cmp	 edx, ecx
  0002d	7e 0d		 jle	 SHORT $LN19@lua_isuser
  0002f	48 63 d2	 movsxd	 rdx, edx
  00032	48 c1 e2 04	 shl	 rdx, 4
  00036	49 03 50 10	 add	 rdx, QWORD PTR [r8+16]
  0003a	eb 3e		 jmp	 SHORT $LN18@lua_isuser
$LN19@lua_isuser:
  0003c	75 0a		 jne	 SHORT $LN8@lua_isuser
  0003e	49 8b 50 18	 mov	 rdx, QWORD PTR [r8+24]
  00042	48 83 c2 40	 add	 rdx, 64			; 00000040H
  00046	eb 32		 jmp	 SHORT $LN18@lua_isuser
$LN8@lua_isuser:
  00048	4d 8b 01	 mov	 r8, QWORD PTR [r9]
  0004b	2b ca		 sub	 ecx, edx
  0004d	41 83 78 08 16	 cmp	 DWORD PTR [r8+8], 22
  00052	74 1f		 je	 SHORT $LN17@lua_isuser
  00054	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00057	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  0005c	3b c8		 cmp	 ecx, eax
  0005e	7f 13		 jg	 SHORT $LN17@lua_isuser
  00060	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00063	48 63 d0	 movsxd	 rdx, eax
  00066	48 83 c2 02	 add	 rdx, 2
  0006a	48 c1 e2 04	 shl	 rdx, 4
  0006e	49 03 d0	 add	 rdx, r8
  00071	eb 07		 jmp	 SHORT $LN18@lua_isuser
$LN17@lua_isuser:
  00073	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
$LN18@lua_isuser:
; Line 291
  0007a	8b 42 08	 mov	 eax, DWORD PTR [rdx+8]
  0007d	83 f8 47	 cmp	 eax, 71			; 00000047H
  00080	74 08		 je	 SHORT $LN3@lua_isuser
  00082	83 f8 02	 cmp	 eax, 2
  00085	74 03		 je	 SHORT $LN3@lua_isuser
  00087	33 c0		 xor	 eax, eax
; Line 292
  00089	c3		 ret	 0
$LN3@lua_isuser:
; Line 291
  0008a	b8 01 00 00 00	 mov	 eax, 1
; Line 292
  0008f	c3		 ret	 0
lua_isuserdata ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_isinteger
_TEXT	SEGMENT
L$ = 8
idx$ = 16
lua_isinteger PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 271
  00000	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00004	4c 8b c1	 mov	 r8, rcx
  00007	85 d2		 test	 edx, edx
  00009	7e 23		 jle	 SHORT $LN12@lua_isinte
  0000b	48 63 c2	 movsxd	 rax, edx
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00015	48 c1 e0 04	 shl	 rax, 4
  00019	49 03 01	 add	 rax, QWORD PTR [r9]
  0001c	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00020	48 0f 42 d0	 cmovb	 rdx, rax
; Line 272
  00024	33 c0		 xor	 eax, eax
  00026	83 7a 08 13	 cmp	 DWORD PTR [rdx+8], 19
  0002a	0f 94 c0	 sete	 al
; Line 273
  0002d	c3		 ret	 0
; Line 271
$LN12@lua_isinte:
  0002e	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00033	3b d1		 cmp	 edx, ecx
  00035	7e 15		 jle	 SHORT $LN17@lua_isinte
  00037	48 63 d2	 movsxd	 rdx, edx
; Line 272
  0003a	33 c0		 xor	 eax, eax
  0003c	48 c1 e2 04	 shl	 rdx, 4
  00040	49 03 50 10	 add	 rdx, QWORD PTR [r8+16]
  00044	83 7a 08 13	 cmp	 DWORD PTR [rdx+8], 19
  00048	0f 94 c0	 sete	 al
; Line 273
  0004b	c3		 ret	 0
$LN17@lua_isinte:
; Line 271
  0004c	75 12		 jne	 SHORT $LN6@lua_isinte
  0004e	49 8b 50 18	 mov	 rdx, QWORD PTR [r8+24]
; Line 272
  00052	33 c0		 xor	 eax, eax
  00054	48 83 c2 40	 add	 rdx, 64			; 00000040H
  00058	83 7a 08 13	 cmp	 DWORD PTR [rdx+8], 19
  0005c	0f 94 c0	 sete	 al
; Line 273
  0005f	c3		 ret	 0
; Line 271
$LN6@lua_isinte:
  00060	4d 8b 01	 mov	 r8, QWORD PTR [r9]
  00063	2b ca		 sub	 ecx, edx
  00065	41 83 78 08 16	 cmp	 DWORD PTR [r8+8], 22
  0006a	74 27		 je	 SHORT $LN15@lua_isinte
  0006c	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  0006f	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  00074	3b c8		 cmp	 ecx, eax
  00076	7f 1b		 jg	 SHORT $LN15@lua_isinte
  00078	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0007b	48 63 d0	 movsxd	 rdx, eax
; Line 272
  0007e	33 c0		 xor	 eax, eax
  00080	48 83 c2 02	 add	 rdx, 2
  00084	48 c1 e2 04	 shl	 rdx, 4
  00088	49 03 d0	 add	 rdx, r8
  0008b	83 7a 08 13	 cmp	 DWORD PTR [rdx+8], 19
  0008f	0f 94 c0	 sete	 al
; Line 273
  00092	c3		 ret	 0
; Line 271
$LN15@lua_isinte:
; Line 272
  00093	33 c0		 xor	 eax, eax
  00095	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  0009c	83 7a 08 13	 cmp	 DWORD PTR [rdx+8], 19
  000a0	0f 94 c0	 sete	 al
; Line 273
  000a3	c3		 ret	 0
lua_isinteger ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_iscfunction
_TEXT	SEGMENT
L$ = 8
idx$ = 16
lua_iscfunction PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 265
  00000	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00004	4c 8b c1	 mov	 r8, rcx
  00007	85 d2		 test	 edx, edx
  00009	7e 1b		 jle	 SHORT $LN14@lua_iscfun
  0000b	48 63 c2	 movsxd	 rax, edx
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00015	48 c1 e0 04	 shl	 rax, 4
  00019	49 03 01	 add	 rax, QWORD PTR [r9]
  0001c	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00020	48 0f 42 d0	 cmovb	 rdx, rax
  00024	eb 54		 jmp	 SHORT $LN18@lua_iscfun
$LN14@lua_iscfun:
  00026	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0002b	3b d1		 cmp	 edx, ecx
  0002d	7e 0d		 jle	 SHORT $LN19@lua_iscfun
  0002f	48 63 d2	 movsxd	 rdx, edx
  00032	48 c1 e2 04	 shl	 rdx, 4
  00036	49 03 50 10	 add	 rdx, QWORD PTR [r8+16]
  0003a	eb 3e		 jmp	 SHORT $LN18@lua_iscfun
$LN19@lua_iscfun:
  0003c	75 0a		 jne	 SHORT $LN8@lua_iscfun
  0003e	49 8b 50 18	 mov	 rdx, QWORD PTR [r8+24]
  00042	48 83 c2 40	 add	 rdx, 64			; 00000040H
  00046	eb 32		 jmp	 SHORT $LN18@lua_iscfun
$LN8@lua_iscfun:
  00048	4d 8b 01	 mov	 r8, QWORD PTR [r9]
  0004b	2b ca		 sub	 ecx, edx
  0004d	41 83 78 08 16	 cmp	 DWORD PTR [r8+8], 22
  00052	74 1f		 je	 SHORT $LN17@lua_iscfun
  00054	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00057	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  0005c	3b c8		 cmp	 ecx, eax
  0005e	7f 13		 jg	 SHORT $LN17@lua_iscfun
  00060	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00063	48 63 d0	 movsxd	 rdx, eax
  00066	48 83 c2 02	 add	 rdx, 2
  0006a	48 c1 e2 04	 shl	 rdx, 4
  0006e	49 03 d0	 add	 rdx, r8
  00071	eb 07		 jmp	 SHORT $LN18@lua_iscfun
$LN17@lua_iscfun:
  00073	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
$LN18@lua_iscfun:
; Line 266
  0007a	8b 42 08	 mov	 eax, DWORD PTR [rdx+8]
  0007d	83 f8 16	 cmp	 eax, 22
  00080	74 08		 je	 SHORT $LN3@lua_iscfun
  00082	83 f8 66	 cmp	 eax, 102		; 00000066H
  00085	74 03		 je	 SHORT $LN3@lua_iscfun
  00087	33 c0		 xor	 eax, eax
; Line 267
  00089	c3		 ret	 0
$LN3@lua_iscfun:
; Line 266
  0008a	b8 01 00 00 00	 mov	 eax, 1
; Line 267
  0008f	c3		 ret	 0
lua_iscfunction ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_isstring
_TEXT	SEGMENT
L$ = 8
idx$ = 16
lua_isstring PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 284
  00000	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00004	4c 8b c1	 mov	 r8, rcx
  00007	85 d2		 test	 edx, edx
  00009	7e 2b		 jle	 SHORT $LN14@lua_isstri
  0000b	48 63 c2	 movsxd	 rax, edx
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00015	48 c1 e0 04	 shl	 rax, 4
  00019	49 03 01	 add	 rax, QWORD PTR [r9]
  0001c	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00020	48 0f 42 d0	 cmovb	 rdx, rax
  00024	33 c0		 xor	 eax, eax
; Line 285
  00026	8b 4a 08	 mov	 ecx, DWORD PTR [rdx+8]
  00029	83 e1 0f	 and	 ecx, 15
  0002c	83 e9 03	 sub	 ecx, 3
  0002f	83 f9 01	 cmp	 ecx, 1
  00032	0f 96 c0	 setbe	 al
; Line 286
  00035	c3		 ret	 0
; Line 284
$LN14@lua_isstri:
  00036	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0003b	3b d1		 cmp	 edx, ecx
  0003d	7e 1d		 jle	 SHORT $LN20@lua_isstri
  0003f	48 63 d2	 movsxd	 rdx, edx
  00042	33 c0		 xor	 eax, eax
  00044	48 c1 e2 04	 shl	 rdx, 4
  00048	49 03 50 10	 add	 rdx, QWORD PTR [r8+16]
; Line 285
  0004c	8b 4a 08	 mov	 ecx, DWORD PTR [rdx+8]
  0004f	83 e1 0f	 and	 ecx, 15
  00052	83 e9 03	 sub	 ecx, 3
  00055	83 f9 01	 cmp	 ecx, 1
  00058	0f 96 c0	 setbe	 al
; Line 286
  0005b	c3		 ret	 0
$LN20@lua_isstri:
; Line 284
  0005c	75 1a		 jne	 SHORT $LN8@lua_isstri
  0005e	49 8b 50 18	 mov	 rdx, QWORD PTR [r8+24]
  00062	33 c0		 xor	 eax, eax
; Line 285
  00064	8b 4a 48	 mov	 ecx, DWORD PTR [rdx+72]
  00067	48 83 c2 40	 add	 rdx, 64			; 00000040H
  0006b	83 e1 0f	 and	 ecx, 15
  0006e	83 e9 03	 sub	 ecx, 3
  00071	83 f9 01	 cmp	 ecx, 1
  00074	0f 96 c0	 setbe	 al
; Line 286
  00077	c3		 ret	 0
; Line 284
$LN8@lua_isstri:
  00078	4d 8b 01	 mov	 r8, QWORD PTR [r9]
  0007b	2b ca		 sub	 ecx, edx
  0007d	41 83 78 08 16	 cmp	 DWORD PTR [r8+8], 22
  00082	74 2f		 je	 SHORT $LN17@lua_isstri
  00084	4d 8b 00	 mov	 r8, QWORD PTR [r8]
  00087	41 0f b6 40 0a	 movzx	 eax, BYTE PTR [r8+10]
  0008c	3b c8		 cmp	 ecx, eax
  0008e	7f 23		 jg	 SHORT $LN17@lua_isstri
  00090	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00093	48 63 d0	 movsxd	 rdx, eax
  00096	33 c0		 xor	 eax, eax
  00098	48 83 c2 02	 add	 rdx, 2
  0009c	48 c1 e2 04	 shl	 rdx, 4
  000a0	49 03 d0	 add	 rdx, r8
; Line 285
  000a3	8b 4a 08	 mov	 ecx, DWORD PTR [rdx+8]
  000a6	83 e1 0f	 and	 ecx, 15
  000a9	83 e9 03	 sub	 ecx, 3
  000ac	83 f9 01	 cmp	 ecx, 1
  000af	0f 96 c0	 setbe	 al
; Line 286
  000b2	c3		 ret	 0
; Line 284
$LN17@lua_isstri:
  000b3	33 c0		 xor	 eax, eax
  000b5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
; Line 285
  000bc	8b 4a 08	 mov	 ecx, DWORD PTR [rdx+8]
  000bf	83 e1 0f	 and	 ecx, 15
  000c2	83 e9 03	 sub	 ecx, 3
  000c5	83 f9 01	 cmp	 ecx, 1
  000c8	0f 96 c0	 setbe	 al
; Line 286
  000cb	c3		 ret	 0
lua_isstring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_isnumber
_TEXT	SEGMENT
n$ = 48
L$ = 48
idx$ = 56
lua_isnumber PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 276
$LN21:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 278
  00004	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00008	4c 8b c1	 mov	 r8, rcx
  0000b	85 d2		 test	 edx, edx
  0000d	7e 1b		 jle	 SHORT $LN14@lua_isnumb
  0000f	48 63 c2	 movsxd	 rax, edx
  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
  00019	48 c1 e0 04	 shl	 rax, 4
  0001d	49 03 01	 add	 rax, QWORD PTR [r9]
  00020	49 3b 40 10	 cmp	 rax, QWORD PTR [r8+16]
  00024	48 0f 42 c8	 cmovb	 rcx, rax
  00028	eb 52		 jmp	 SHORT $LN18@lua_isnumb
$LN14@lua_isnumb:
  0002a	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  0002f	3b d1		 cmp	 edx, ecx
  00031	7e 0d		 jle	 SHORT $LN19@lua_isnumb
  00033	48 63 ca	 movsxd	 rcx, edx
  00036	48 c1 e1 04	 shl	 rcx, 4
  0003a	49 03 48 10	 add	 rcx, QWORD PTR [r8+16]
  0003e	eb 3c		 jmp	 SHORT $LN18@lua_isnumb
$LN19@lua_isnumb:
  00040	75 0a		 jne	 SHORT $LN8@lua_isnumb
  00042	49 8b 48 18	 mov	 rcx, QWORD PTR [r8+24]
  00046	48 83 c1 40	 add	 rcx, 64			; 00000040H
  0004a	eb 30		 jmp	 SHORT $LN18@lua_isnumb
$LN8@lua_isnumb:
  0004c	2b ca		 sub	 ecx, edx
  0004e	49 8b 11	 mov	 rdx, QWORD PTR [r9]
  00051	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  00055	74 1e		 je	 SHORT $LN17@lua_isnumb
  00057	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  0005a	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  0005e	3b c8		 cmp	 ecx, eax
  00060	7f 13		 jg	 SHORT $LN17@lua_isnumb
  00062	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00065	48 63 c8	 movsxd	 rcx, eax
  00068	48 83 c1 02	 add	 rcx, 2
  0006c	48 c1 e1 04	 shl	 rcx, 4
  00070	48 03 ca	 add	 rcx, rdx
  00073	eb 07		 jmp	 SHORT $LN18@lua_isnumb
$LN17@lua_isnumb:
  00075	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
$LN18@lua_isnumb:
; Line 279
  0007c	83 79 08 03	 cmp	 DWORD PTR [rcx+8], 3
  00080	75 0a		 jne	 SHORT $LN3@lua_isnumb
  00082	b8 01 00 00 00	 mov	 eax, 1
; Line 280
  00087	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008b	c3		 ret	 0
$LN3@lua_isnumb:
; Line 279
  0008c	48 8d 54 24 30	 lea	 rdx, QWORD PTR n$[rsp]
  00091	e8 00 00 00 00	 call	 luaV_tonumber_
; Line 280
  00096	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0009a	c3		 ret	 0
lua_isnumber ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_xmove
_TEXT	SEGMENT
from$ = 8
to$ = 16
n$ = 24
lua_xmove PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 118
  00000	4c 8b d1	 mov	 r10, rcx
; Line 120
  00003	48 3b ca	 cmp	 rcx, rdx
  00006	74 38		 je	 SHORT $LN1@lua_xmove
; Line 125
  00008	4d 63 c8	 movsxd	 r9, r8d
  0000b	49 8b c1	 mov	 rax, r9
  0000e	48 f7 d8	 neg	 rax
  00011	48 c1 e0 04	 shl	 rax, 4
  00015	48 01 41 10	 add	 QWORD PTR [rcx+16], rax
; Line 126
  00019	45 85 c0	 test	 r8d, r8d
  0001c	7e 22		 jle	 SHORT $LN1@lua_xmove
; Line 125
  0001e	45 33 c0	 xor	 r8d, r8d
$LL3@lua_xmove:
; Line 127
  00021	49 8b 42 10	 mov	 rax, QWORD PTR [r10+16]
  00025	48 8b 4a 10	 mov	 rcx, QWORD PTR [rdx+16]
  00029	4d 8d 40 10	 lea	 r8, QWORD PTR [r8+16]
  0002d	42 0f 10 44 00
	f0		 movups	 xmm0, XMMWORD PTR [rax+r8-16]
  00033	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0
; Line 128
  00036	48 83 42 10 10	 add	 QWORD PTR [rdx+16], 16
  0003b	49 ff c9	 dec	 r9
  0003e	75 e1		 jne	 SHORT $LL3@lua_xmove
$LN1@lua_xmove:
; Line 131
  00040	c3		 ret	 0
lua_xmove ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_checkstack
_TEXT	SEGMENT
L$ = 48
n$ = 56
lua_checkstack PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 97
$LN12:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 102
  0000e	4c 8b 49 10	 mov	 r9, QWORD PTR [rcx+16]
  00012	4c 8b 41 30	 mov	 r8, QWORD PTR [rcx+48]
  00016	48 8b 79 20	 mov	 rdi, QWORD PTR [rcx+32]
  0001a	4d 2b c1	 sub	 r8, r9
  0001d	4c 63 d2	 movsxd	 r10, edx
  00020	48 8b d9	 mov	 rbx, rcx
  00023	49 c1 f8 04	 sar	 r8, 4
  00027	4d 3b c2	 cmp	 r8, r10
  0002a	7e 07		 jle	 SHORT $LN5@lua_checks
; Line 103
  0002c	ba 01 00 00 00	 mov	 edx, 1
; Line 104
  00031	eb 49		 jmp	 SHORT $LN8@lua_checks
$LN5@lua_checks:
; Line 105
  00033	4c 2b 49 38	 sub	 r9, QWORD PTR [rcx+56]
; Line 106
  00037	b8 40 42 0f 00	 mov	 eax, 1000000		; 000f4240H
  0003c	49 c1 f9 04	 sar	 r9, 4
  00040	41 2b c2	 sub	 eax, r10d
  00043	41 83 c1 05	 add	 r9d, 5
  00047	44 3b c8	 cmp	 r9d, eax
  0004a	7e 0f		 jle	 SHORT $LN3@lua_checks
; Line 107
  0004c	33 d2		 xor	 edx, edx
$LN9@lua_checks:
; Line 114
  0004e	8b c2		 mov	 eax, edx
$LN1@lua_checks:
; Line 115
  00050	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
$LN3@lua_checks:
; Line 109
  0005b	4c 8d 44 24 38	 lea	 r8, QWORD PTR n$[rsp]
  00060	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:growstack
  00067	e8 00 00 00 00	 call	 luaD_rawrunprotected
  0006c	33 d2		 xor	 edx, edx
  0006e	85 c0		 test	 eax, eax
  00070	0f 94 c2	 sete	 dl
; Line 111
  00073	85 d2		 test	 edx, edx
  00075	74 d7		 je	 SHORT $LN9@lua_checks
  00077	44 8b 54 24 38	 mov	 r10d, DWORD PTR n$[rsp]
$LN8@lua_checks:
  0007c	4d 63 c2	 movsxd	 r8, r10d
; Line 114
  0007f	8b c2		 mov	 eax, edx
  00081	49 c1 e0 04	 shl	 r8, 4
  00085	4c 03 43 10	 add	 r8, QWORD PTR [rbx+16]
  00089	4c 39 47 08	 cmp	 QWORD PTR [rdi+8], r8
  0008d	73 c1		 jae	 SHORT $LN1@lua_checks
; Line 112
  0008f	4c 89 47 08	 mov	 QWORD PTR [rdi+8], r8
; Line 115
  00093	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00098	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0009c	5f		 pop	 rdi
  0009d	c3		 ret	 0
lua_checkstack ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_copy
_TEXT	SEGMENT
L$ = 48
fromidx$ = 56
toidx$ = 64
lua_copy PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 222
$LN37:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 225
  00006	48 8b 59 20	 mov	 rbx, QWORD PTR [rcx+32]
  0000a	4c 8b d1	 mov	 r10, rcx
  0000d	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:luaO_nilobject_
  00014	85 d2		 test	 edx, edx
  00016	7e 17		 jle	 SHORT $LN15@lua_copy
  00018	48 63 c2	 movsxd	 rax, edx
  0001b	49 8b d1	 mov	 rdx, r9
  0001e	48 c1 e0 04	 shl	 rax, 4
  00022	48 03 03	 add	 rax, QWORD PTR [rbx]
  00025	48 3b 41 10	 cmp	 rax, QWORD PTR [rcx+16]
  00029	48 0f 42 d0	 cmovb	 rdx, rax
  0002d	eb 53		 jmp	 SHORT $LN19@lua_copy
$LN15@lua_copy:
  0002f	81 fa d8 b9 f0
	ff		 cmp	 edx, -1001000		; fffffffffff0b9d8H
  00035	7e 0d		 jle	 SHORT $LN34@lua_copy
  00037	48 63 d2	 movsxd	 rdx, edx
  0003a	48 c1 e2 04	 shl	 rdx, 4
  0003e	48 03 51 10	 add	 rdx, QWORD PTR [rcx+16]
  00042	eb 3e		 jmp	 SHORT $LN19@lua_copy
$LN34@lua_copy:
  00044	75 0a		 jne	 SHORT $LN9@lua_copy
  00046	48 8b 51 18	 mov	 rdx, QWORD PTR [rcx+24]
  0004a	48 83 c2 40	 add	 rdx, 64			; 00000040H
  0004e	eb 32		 jmp	 SHORT $LN19@lua_copy
$LN9@lua_copy:
  00050	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00053	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00058	2b ca		 sub	 ecx, edx
  0005a	83 78 08 16	 cmp	 DWORD PTR [rax+8], 22
  0005e	74 1f		 je	 SHORT $LN18@lua_copy
  00060	4c 8b 18	 mov	 r11, QWORD PTR [rax]
  00063	41 0f b6 43 0a	 movzx	 eax, BYTE PTR [r11+10]
  00068	3b c8		 cmp	 ecx, eax
  0006a	7f 13		 jg	 SHORT $LN18@lua_copy
  0006c	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  0006f	48 63 d0	 movsxd	 rdx, eax
  00072	48 83 c2 02	 add	 rdx, 2
  00076	48 c1 e2 04	 shl	 rdx, 4
  0007a	49 03 d3	 add	 rdx, r11
  0007d	eb 03		 jmp	 SHORT $LN19@lua_copy
$LN18@lua_copy:
  0007f	49 8b d1	 mov	 rdx, r9
$LN19@lua_copy:
; Line 226
  00082	45 85 c0	 test	 r8d, r8d
  00085	7e 14		 jle	 SHORT $LN29@lua_copy
  00087	49 63 c0	 movsxd	 rax, r8d
  0008a	48 c1 e0 04	 shl	 rax, 4
  0008e	48 03 03	 add	 rax, QWORD PTR [rbx]
  00091	49 3b 42 10	 cmp	 rax, QWORD PTR [r10+16]
  00095	4c 0f 42 c8	 cmovb	 r9, rax
  00099	eb 50		 jmp	 SHORT $LN32@lua_copy
$LN29@lua_copy:
  0009b	41 81 f8 d8 b9
	f0 ff		 cmp	 r8d, -1001000		; fffffffffff0b9d8H
  000a2	7e 0d		 jle	 SHORT $LN35@lua_copy
  000a4	4d 63 c8	 movsxd	 r9, r8d
  000a7	49 c1 e1 04	 shl	 r9, 4
  000ab	4d 03 4a 10	 add	 r9, QWORD PTR [r10+16]
  000af	eb 3a		 jmp	 SHORT $LN32@lua_copy
$LN35@lua_copy:
  000b1	75 0a		 jne	 SHORT $LN23@lua_copy
  000b3	4d 8b 4a 18	 mov	 r9, QWORD PTR [r10+24]
  000b7	49 83 c1 40	 add	 r9, 64			; 00000040H
  000bb	eb 2e		 jmp	 SHORT $LN32@lua_copy
$LN23@lua_copy:
  000bd	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  000c0	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  000c5	41 2b c8	 sub	 ecx, r8d
  000c8	83 78 08 16	 cmp	 DWORD PTR [rax+8], 22
  000cc	74 1d		 je	 SHORT $LN32@lua_copy
  000ce	4c 8b 18	 mov	 r11, QWORD PTR [rax]
  000d1	41 0f b6 43 0a	 movzx	 eax, BYTE PTR [r11+10]
  000d6	3b c8		 cmp	 ecx, eax
  000d8	7f 11		 jg	 SHORT $LN32@lua_copy
  000da	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  000dd	4c 63 c8	 movsxd	 r9, eax
  000e0	49 83 c1 02	 add	 r9, 2
  000e4	49 c1 e1 04	 shl	 r9, 4
  000e8	4d 03 cb	 add	 r9, r11
$LN32@lua_copy:
; Line 228
  000eb	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  000ee	41 0f 11 01	 movups	 XMMWORD PTR [r9], xmm0
; Line 229
  000f2	41 81 f8 d8 b9
	f0 ff		 cmp	 r8d, -1001000		; fffffffffff0b9d8H
  000f9	7d 30		 jge	 SHORT $LN4@lua_copy
; Line 230
  000fb	f6 42 08 40	 test	 BYTE PTR [rdx+8], 64	; 00000040H
  000ff	74 2a		 je	 SHORT $LN4@lua_copy
  00101	49 8b 42 20	 mov	 rax, QWORD PTR [r10+32]
  00105	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00108	48 8b 01	 mov	 rax, QWORD PTR [rcx]
  0010b	f6 40 09 04	 test	 BYTE PTR [rax+9], 4
  0010f	74 1a		 je	 SHORT $LN4@lua_copy
  00111	4c 8b 02	 mov	 r8, QWORD PTR [rdx]
  00114	41 f6 40 09 03	 test	 BYTE PTR [r8+9], 3
  00119	74 10		 je	 SHORT $LN4@lua_copy
  0011b	48 8b d0	 mov	 rdx, rax
  0011e	49 8b ca	 mov	 rcx, r10
; Line 234
  00121	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00125	5b		 pop	 rbx
; Line 230
  00126	e9 00 00 00 00	 jmp	 luaC_barrier_
$LN4@lua_copy:
; Line 234
  0012b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0012f	5b		 pop	 rbx
  00130	c3		 ret	 0
lua_copy ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_rotate
_TEXT	SEGMENT
L$ = 8
idx$ = 16
n$ = 24
lua_rotate PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 210
  00000	4c 8b 51 10	 mov	 r10, QWORD PTR [rcx+16]
; Line 211
  00004	4c 8b 59 20	 mov	 r11, QWORD PTR [rcx+32]
  00008	48 8b c1	 mov	 rax, rcx
  0000b	4d 8d 4a f0	 lea	 r9, QWORD PTR [r10-16]
  0000f	85 d2		 test	 edx, edx
  00011	7e 1a		 jle	 SHORT $LN14@lua_rotate
  00013	48 63 ca	 movsxd	 rcx, edx
  00016	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:luaO_nilobject_
  0001d	48 c1 e1 04	 shl	 rcx, 4
  00021	49 03 0b	 add	 rcx, QWORD PTR [r11]
  00024	49 3b ca	 cmp	 rcx, r10
  00027	48 0f 42 c1	 cmovb	 rax, rcx
  0002b	eb 50		 jmp	 SHORT $LN18@lua_rotate
$LN14@lua_rotate:
  0002d	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00032	3b d1		 cmp	 edx, ecx
  00034	7e 0c		 jle	 SHORT $LN46@lua_rotate
  00036	48 63 c2	 movsxd	 rax, edx
  00039	48 c1 e0 04	 shl	 rax, 4
  0003d	49 03 c2	 add	 rax, r10
  00040	eb 3b		 jmp	 SHORT $LN18@lua_rotate
$LN46@lua_rotate:
  00042	75 0a		 jne	 SHORT $LN8@lua_rotate
  00044	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00048	48 83 c0 40	 add	 rax, 64			; 00000040H
  0004c	eb 2f		 jmp	 SHORT $LN18@lua_rotate
$LN8@lua_rotate:
  0004e	2b ca		 sub	 ecx, edx
  00050	49 8b 13	 mov	 rdx, QWORD PTR [r11]
  00053	83 7a 08 16	 cmp	 DWORD PTR [rdx+8], 22
  00057	74 1d		 je	 SHORT $LN17@lua_rotate
  00059	48 8b 12	 mov	 rdx, QWORD PTR [rdx]
  0005c	0f b6 42 0a	 movzx	 eax, BYTE PTR [rdx+10]
  00060	3b c8		 cmp	 ecx, eax
  00062	7f 12		 jg	 SHORT $LN17@lua_rotate
  00064	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00067	48 98		 cdqe
  00069	48 83 c0 02	 add	 rax, 2
  0006d	48 c1 e0 04	 shl	 rax, 4
  00071	48 03 c2	 add	 rax, rdx
  00074	eb 07		 jmp	 SHORT $LN18@lua_rotate
$LN17@lua_rotate:
  00076	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:luaO_nilobject_
$LN18@lua_rotate:
; Line 214
  0007d	49 63 c8	 movsxd	 rcx, r8d
  00080	45 85 c0	 test	 r8d, r8d
  00083	78 05		 js	 SHORT $LN3@lua_rotate
  00085	4d 8b c1	 mov	 r8, r9
  00088	eb 06		 jmp	 SHORT $LN47@lua_rotate
$LN3@lua_rotate:
  0008a	48 ff c1	 inc	 rcx
  0008d	4c 8b c0	 mov	 r8, rax
$LN47@lua_rotate:
  00090	48 c1 e1 04	 shl	 rcx, 4
; Line 215
  00094	48 8b d0	 mov	 rdx, rax
  00097	4c 2b c1	 sub	 r8, rcx
  0009a	49 8b c8	 mov	 rcx, r8
  0009d	49 3b c0	 cmp	 rax, r8
  000a0	73 1b		 jae	 SHORT $LN19@lua_rotate
$LL21@lua_rotate:
  000a2	0f 10 01	 movups	 xmm0, XMMWORD PTR [rcx]
  000a5	0f 10 0a	 movups	 xmm1, XMMWORD PTR [rdx]
  000a8	48 83 e9 10	 sub	 rcx, 16
  000ac	48 83 c2 10	 add	 rdx, 16
  000b0	0f 11 42 f0	 movups	 XMMWORD PTR [rdx-16], xmm0
  000b4	0f 11 49 10	 movups	 XMMWORD PTR [rcx+16], xmm1
  000b8	48 3b d1	 cmp	 rdx, rcx
  000bb	72 e5		 jb	 SHORT $LL21@lua_rotate
$LN19@lua_rotate:
; Line 216
  000bd	49 8d 48 10	 lea	 rcx, QWORD PTR [r8+16]
  000c1	49 8b d1	 mov	 rdx, r9
  000c4	49 3b c9	 cmp	 rcx, r9
  000c7	73 22		 jae	 SHORT $LN24@lua_rotate
  000c9	0f 1f 80 00 00
	00 00		 npad	 7
$LL26@lua_rotate:
  000d0	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  000d3	0f 10 09	 movups	 xmm1, XMMWORD PTR [rcx]
  000d6	48 83 ea 10	 sub	 rdx, 16
  000da	48 83 c1 10	 add	 rcx, 16
  000de	0f 11 41 f0	 movups	 XMMWORD PTR [rcx-16], xmm0
  000e2	0f 11 4a 10	 movups	 XMMWORD PTR [rdx+16], xmm1
  000e6	48 3b ca	 cmp	 rcx, rdx
  000e9	72 e5		 jb	 SHORT $LL26@lua_rotate
$LN24@lua_rotate:
; Line 217
  000eb	49 3b c1	 cmp	 rax, r9
  000ee	73 1d		 jae	 SHORT $LN29@lua_rotate
$LL31@lua_rotate:
  000f0	41 0f 10 01	 movups	 xmm0, XMMWORD PTR [r9]
  000f4	0f 10 08	 movups	 xmm1, XMMWORD PTR [rax]
  000f7	49 83 e9 10	 sub	 r9, 16
  000fb	48 83 c0 10	 add	 rax, 16
  000ff	0f 11 40 f0	 movups	 XMMWORD PTR [rax-16], xmm0
  00103	41 0f 11 49 10	 movups	 XMMWORD PTR [r9+16], xmm1
  00108	49 3b c1	 cmp	 rax, r9
  0010b	72 e3		 jb	 SHORT $LL31@lua_rotate
$LN29@lua_rotate:
; Line 219
  0010d	c3		 ret	 0
lua_rotate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_pushvalue
_TEXT	SEGMENT
L$ = 8
idx$ = 16
lua_pushvalue PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 239
  00000	4c 8b 51 10	 mov	 r10, QWORD PTR [rcx+16]
  00004	4c 8b 49 20	 mov	 r9, QWORD PTR [rcx+32]
  00008	4c 8b c1	 mov	 r8, rcx
  0000b	85 d2		 test	 edx, edx
  0000d	7e 25		 jle	 SHORT $LN12@lua_pushva
  0000f	48 63 c2	 movsxd	 rax, edx
  00012	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  00019	48 c1 e0 04	 shl	 rax, 4
  0001d	49 03 01	 add	 rax, QWORD PTR [r9]
  00020	49 3b c2	 cmp	 rax, r10
  00023	48 0f 42 d0	 cmovb	 rdx, rax
  00027	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0002a	41 0f 11 02	 movups	 XMMWORD PTR [r10], xmm0
; Line 240
  0002e	48 83 41 10 10	 add	 QWORD PTR [rcx+16], 16
; Line 242
  00033	c3		 ret	 0
; Line 239
$LN12@lua_pushva:
  00034	b9 d8 b9 f0 ff	 mov	 ecx, -1001000		; fffffffffff0b9d8H
  00039	3b d1		 cmp	 edx, ecx
  0003b	7e 17		 jle	 SHORT $LN17@lua_pushva
  0003d	48 63 d2	 movsxd	 rdx, edx
  00040	48 c1 e2 04	 shl	 rdx, 4
  00044	49 03 d2	 add	 rdx, r10
  00047	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  0004a	41 0f 11 02	 movups	 XMMWORD PTR [r10], xmm0
; Line 240
  0004e	49 83 40 10 10	 add	 QWORD PTR [r8+16], 16
; Line 242
  00053	c3		 ret	 0
$LN17@lua_pushva:
; Line 239
  00054	75 15		 jne	 SHORT $LN6@lua_pushva
  00056	49 8b 50 18	 mov	 rdx, QWORD PTR [r8+24]
  0005a	48 83 c2 40	 add	 rdx, 64			; 00000040H
  0005e	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  00061	41 0f 11 02	 movups	 XMMWORD PTR [r10], xmm0
; Line 240
  00065	49 83 40 10 10	 add	 QWORD PTR [r8+16], 16
; Line 242
  0006a	c3		 ret	 0
; Line 239
$LN6@lua_pushva:
  0006b	4d 8b 09	 mov	 r9, QWORD PTR [r9]
  0006e	2b ca		 sub	 ecx, edx
  00070	41 83 79 08 16	 cmp	 DWORD PTR [r9+8], 22
  00075	74 2a		 je	 SHORT $LN15@lua_pushva
  00077	4d 8b 09	 mov	 r9, QWORD PTR [r9]
  0007a	41 0f b6 41 0a	 movzx	 eax, BYTE PTR [r9+10]
  0007f	3b c8		 cmp	 ecx, eax
  00081	7f 1e		 jg	 SHORT $LN15@lua_pushva
  00083	8d 41 ff	 lea	 eax, DWORD PTR [rcx-1]
  00086	48 63 d0	 movsxd	 rdx, eax
  00089	48 83 c2 02	 add	 rdx, 2
  0008d	48 c1 e2 04	 shl	 rdx, 4
  00091	49 03 d1	 add	 rdx, r9
  00094	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  00097	41 0f 11 02	 movups	 XMMWORD PTR [r10], xmm0
; Line 240
  0009b	49 83 40 10 10	 add	 QWORD PTR [r8+16], 16
; Line 242
  000a0	c3		 ret	 0
; Line 239
$LN15@lua_pushva:
  000a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaO_nilobject_
  000a8	0f 10 02	 movups	 xmm0, XMMWORD PTR [rdx]
  000ab	41 0f 11 02	 movups	 XMMWORD PTR [r10], xmm0
; Line 240
  000af	49 83 40 10 10	 add	 QWORD PTR [r8+16], 16
; Line 242
  000b4	c3		 ret	 0
lua_pushvalue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_settop
_TEXT	SEGMENT
L$ = 8
idx$ = 16
lua_settop PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 173
  00000	48 8b 41 20	 mov	 rax, QWORD PTR [rcx+32]
  00004	4c 8b 00	 mov	 r8, QWORD PTR [rax]
; Line 175
  00007	85 d2		 test	 edx, edx
  00009	78 2e		 js	 SHORT $LN4@lua_settop
; Line 177
  0000b	48 63 d2	 movsxd	 rdx, edx
  0000e	48 ff c2	 inc	 rdx
  00011	48 c1 e2 04	 shl	 rdx, 4
  00015	49 03 d0	 add	 rdx, r8
  00018	48 39 51 10	 cmp	 QWORD PTR [rcx+16], rdx
  0001c	73 16		 jae	 SHORT $LN2@lua_settop
  0001e	45 33 c0	 xor	 r8d, r8d
$LL3@lua_settop:
; Line 178
  00021	48 8b 41 10	 mov	 rax, QWORD PTR [rcx+16]
  00025	44 89 40 08	 mov	 DWORD PTR [rax+8], r8d
  00029	48 83 41 10 10	 add	 QWORD PTR [rcx+16], 16
  0002e	48 39 51 10	 cmp	 QWORD PTR [rcx+16], rdx
  00032	72 ed		 jb	 SHORT $LL3@lua_settop
$LN2@lua_settop:
; Line 179
  00034	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx
; Line 186
  00038	c3		 ret	 0
$LN4@lua_settop:
; Line 183
  00039	8d 42 01	 lea	 eax, DWORD PTR [rdx+1]
  0003c	48 63 d0	 movsxd	 rdx, eax
  0003f	48 c1 e2 04	 shl	 rdx, 4
  00043	48 01 51 10	 add	 QWORD PTR [rcx+16], rdx
; Line 186
  00047	c3		 ret	 0
lua_settop ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_gettop
_TEXT	SEGMENT
L$ = 8
lua_gettop PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 168
  00000	48 8b 41 20	 mov	 rax, QWORD PTR [rcx+32]
  00004	48 8b 51 10	 mov	 rdx, QWORD PTR [rcx+16]
  00008	48 2b 10	 sub	 rdx, QWORD PTR [rax]
  0000b	48 8d 42 f0	 lea	 rax, QWORD PTR [rdx-16]
  0000f	48 c1 f8 04	 sar	 rax, 4
; Line 169
  00013	c3		 ret	 0
lua_gettop ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_absindex
_TEXT	SEGMENT
L$ = 8
idx$ = 16
lua_absindex PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 163
  00000	8d 82 27 46 0f
	00		 lea	 eax, DWORD PTR [rdx+1000999]
  00006	3d 27 46 0f 00	 cmp	 eax, 1000999		; 000f4627H
  0000b	77 13		 ja	 SHORT $LN3@lua_absind
  0000d	48 8b 41 20	 mov	 rax, QWORD PTR [rcx+32]
  00011	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00015	48 2b 08	 sub	 rcx, QWORD PTR [rax]
  00018	48 c1 f9 04	 sar	 rcx, 4
  0001c	8d 04 0a	 lea	 eax, DWORD PTR [rdx+rcx]
; Line 164
  0001f	c3		 ret	 0
$LN3@lua_absind:
; Line 163
  00020	8b c2		 mov	 eax, edx
; Line 164
  00022	c3		 ret	 0
lua_absindex ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_version
_TEXT	SEGMENT
L$ = 8
lua_version PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 146
  00000	48 85 c9	 test	 rcx, rcx
  00003	75 08		 jne	 SHORT $LN2@lua_versio
  00005	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?version@?1??lua_version@@9@9
; Line 148
  0000c	c3		 ret	 0
$LN2@lua_versio:
; Line 147
  0000d	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00011	48 8b 80 d0 00
	00 00		 mov	 rax, QWORD PTR [rax+208]
; Line 148
  00018	c3		 ret	 0
lua_version ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_atpanic
_TEXT	SEGMENT
L$ = 8
panicf$ = 16
lua_atpanic PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lapi.c
; Line 137
  00000	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  00004	49 8b 80 c0 00
	00 00		 mov	 rax, QWORD PTR [r8+192]
; Line 138
  0000b	49 89 90 c0 00
	00 00		 mov	 QWORD PTR [r8+192], rdx
; Line 141
  00012	c3		 ret	 0
lua_atpanic ENDP
_TEXT	ENDS
END
