; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	luaS_hash
PUBLIC	luaS_hashlongstr
PUBLIC	luaS_eqlngstr
PUBLIC	luaS_resize
PUBLIC	luaS_clearcache
PUBLIC	luaS_init
PUBLIC	luaS_remove
PUBLIC	luaS_newudata
PUBLIC	luaS_newlstr
PUBLIC	luaS_new
PUBLIC	luaS_createlngstrobj
PUBLIC	??_C@_0BC@ENOOLCNF@not?5enough?5memory?$AA@	; `string'
EXTRN	luaM_toobig:PROC
EXTRN	luaM_realloc_:PROC
EXTRN	luaC_fix:PROC
EXTRN	luaC_newobj:PROC
EXTRN	memcmp:PROC
EXTRN	memcpy:PROC
EXTRN	luaO_nilobject_:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaS_eqlngstr DD imagerel $LN7
	DD	imagerel $LN7+53
	DD	imagerel $unwind$luaS_eqlngstr
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaS_resize DD imagerel $LN27
	DD	imagerel $LN27+19
	DD	imagerel $unwind$luaS_resize
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$luaS_resize DD imagerel $LN27+19
	DD	imagerel $LN27+225
	DD	imagerel $chain$1$luaS_resize
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$luaS_resize DD imagerel $LN27+225
	DD	imagerel $LN27+275
	DD	imagerel $chain$2$luaS_resize
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaS_init DD imagerel $LN30
	DD	imagerel $LN30+122
	DD	imagerel $unwind$luaS_init
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaS_newudata DD imagerel $LN7
	DD	imagerel $LN7+83
	DD	imagerel $unwind$luaS_newudata
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaS_newlstr DD imagerel $LN13
	DD	imagerel $LN13+56
	DD	imagerel $unwind$luaS_newlstr
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$luaS_newlstr DD imagerel $LN13+56
	DD	imagerel $LN13+141
	DD	imagerel $chain$1$luaS_newlstr
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$luaS_newlstr DD imagerel $LN13+141
	DD	imagerel $LN13+147
	DD	imagerel $chain$3$luaS_newlstr
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaS_new DD imagerel $LN37
	DD	imagerel $LN37+125
	DD	imagerel $unwind$luaS_new
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$luaS_new DD imagerel $LN37+125
	DD	imagerel $LN37+211
	DD	imagerel $chain$1$luaS_new
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$luaS_new DD imagerel $LN37+211
	DD	imagerel $LN37+263
	DD	imagerel $chain$2$luaS_new
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$luaS_new DD imagerel $LN37+263
	DD	imagerel $LN37+295
	DD	imagerel $chain$3$luaS_new
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$luaS_new DD imagerel $LN37+295
	DD	imagerel $LN37+310
	DD	imagerel $chain$4$luaS_new
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$luaS_new DD imagerel $LN37+310
	DD	imagerel $LN37+316
	DD	imagerel $chain$5$luaS_new
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaS_createlngstrobj DD imagerel $LN6
	DD	imagerel $LN6+61
	DD	imagerel $unwind$luaS_createlngstrobj
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$createstrobj DD imagerel createstrobj
	DD	imagerel createstrobj+53
	DD	imagerel $unwind$createstrobj
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$internshrstr DD imagerel internshrstr
	DD	imagerel internshrstr+358
	DD	imagerel $unwind$internshrstr
pdata	ENDS
;	COMDAT ??_C@_0BC@ENOOLCNF@not?5enough?5memory?$AA@
CONST	SEGMENT
??_C@_0BC@ENOOLCNF@not?5enough?5memory?$AA@ DB 'not enough memory', 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$internshrstr DD 0c2101H
	DD	0d6421H
	DD	0c5421H
	DD	0b3421H
	DD	0f01d3221H
	DD	0d019e01bH
	DD	07015c017H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$createstrobj DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaS_createlngstrobj DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$luaS_new DD 040021H
	DD	087400H
	DD	075400H
	DD	imagerel $LN37
	DD	imagerel $LN37+125
	DD	imagerel $unwind$luaS_new
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$luaS_new DD 021H
	DD	imagerel $LN37
	DD	imagerel $LN37+125
	DD	imagerel $unwind$luaS_new
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$luaS_new DD 021H
	DD	imagerel $LN37+125
	DD	imagerel $LN37+211
	DD	imagerel $chain$1$luaS_new
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$luaS_new DD 020521H
	DD	063405H
	DD	imagerel $LN37+125
	DD	imagerel $LN37+211
	DD	imagerel $chain$1$luaS_new
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$luaS_new DD 042121H
	DD	075421H
	DD	087405H
	DD	imagerel $LN37
	DD	imagerel $LN37+125
	DD	imagerel $unwind$luaS_new
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaS_new DD 040b01H
	DD	09640bH
	DD	0e007320bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$luaS_newlstr DD 021H
	DD	imagerel $LN13
	DD	imagerel $LN13+56
	DD	imagerel $unwind$luaS_newlstr
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$luaS_newlstr DD 041621H
	DD	077416H
	DD	063405H
	DD	imagerel $LN13
	DD	imagerel $LN13+56
	DD	imagerel $unwind$luaS_newlstr
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaS_newlstr DD 040a01H
	DD	08540aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaS_newudata DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaS_init DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$luaS_resize DD 021H
	DD	imagerel $LN27
	DD	imagerel $LN27+19
	DD	imagerel $unwind$luaS_resize
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$luaS_resize DD 041121H
	DD	07e411H
	DD	067405H
	DD	imagerel $LN27
	DD	imagerel $LN27+19
	DD	imagerel $unwind$luaS_resize
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaS_resize DD 060f01H
	DD	09540fH
	DD	08340fH
	DD	0600b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaS_eqlngstr DD 010401H
	DD	04204H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT internshrstr
_TEXT	SEGMENT
L$ = 80
str$ = 88
l$ = 96
internshrstr PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 167
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	41 54		 push	 r12
  00017	41 55		 push	 r13
  00019	41 56		 push	 r14
  0001b	41 57		 push	 r15
  0001d	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 169
  00021	48 8b 69 18	 mov	 rbp, QWORD PTR [rcx+24]
  00025	49 8b f0	 mov	 rsi, r8
  00028	4c 8b fa	 mov	 r15, rdx
; Line 170
  0002b	8b 7d 50	 mov	 edi, DWORD PTR [rbp+80]
  0002e	4c 8b d6	 mov	 r10, rsi
  00031	4c 8b c1	 mov	 r8, rcx
  00034	49 c1 ea 05	 shr	 r10, 5
  00038	33 fe		 xor	 edi, esi
  0003a	4c 8b ce	 mov	 r9, rsi
  0003d	49 ff c2	 inc	 r10
  00040	49 3b f2	 cmp	 rsi, r10
  00043	72 29		 jb	 SHORT $LN9@internshrs
  00045	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL11@internshrs:
  00050	42 0f b6 4c 0a
	ff		 movzx	 ecx, BYTE PTR [rdx+r9-1]
  00056	8b c7		 mov	 eax, edi
  00058	4d 2b ca	 sub	 r9, r10
  0005b	c1 e0 05	 shl	 eax, 5
  0005e	03 c8		 add	 ecx, eax
  00060	8b c7		 mov	 eax, edi
  00062	c1 e8 02	 shr	 eax, 2
  00065	03 c8		 add	 ecx, eax
  00067	33 f9		 xor	 edi, ecx
  00069	4d 3b ca	 cmp	 r9, r10
  0006c	73 e2		 jae	 SHORT $LL11@internshrs
$LN9@internshrs:
; Line 171
  0006e	44 8b 75 3c	 mov	 r14d, DWORD PTR [rbp+60]
  00072	4c 63 ef	 movsxd	 r13, edi
  00075	41 8d 46 ff	 lea	 eax, DWORD PTR [r14-1]
  00079	48 63 c8	 movsxd	 rcx, eax
  0007c	48 8b 45 30	 mov	 rax, QWORD PTR [rbp+48]
  00080	49 23 cd	 and	 rcx, r13
  00083	4c 8d 24 c8	 lea	 r12, QWORD PTR [rax+rcx*8]
; Line 173
  00087	49 8b 1c 24	 mov	 rbx, QWORD PTR [r12]
  0008b	48 85 db	 test	 rbx, rbx
  0008e	74 2e		 je	 SHORT $LN25@internshrs
$LL6@internshrs:
; Line 175
  00090	0f b6 43 0b	 movzx	 eax, BYTE PTR [rbx+11]
  00094	48 3b f0	 cmp	 rsi, rax
  00097	75 17		 jne	 SHORT $LN5@internshrs
  00099	48 8d 53 18	 lea	 rdx, QWORD PTR [rbx+24]
  0009d	4c 8b c6	 mov	 r8, rsi
  000a0	49 8b cf	 mov	 rcx, r15
  000a3	e8 00 00 00 00	 call	 memcmp
  000a8	85 c0		 test	 eax, eax
  000aa	0f 84 a0 00 00
	00		 je	 $LN18@internshrs
$LN5@internshrs:
; Line 173
  000b0	48 8b 5b 10	 mov	 rbx, QWORD PTR [rbx+16]
  000b4	48 85 db	 test	 rbx, rbx
  000b7	75 d7		 jne	 SHORT $LL6@internshrs
  000b9	4c 8b 44 24 50	 mov	 r8, QWORD PTR L$[rsp]
$LN25@internshrs:
; Line 182
  000be	44 39 75 38	 cmp	 DWORD PTR [rbp+56], r14d
  000c2	7c 28		 jl	 SHORT $LN1@internshrs
  000c4	41 81 fe ff ff
	ff 3f		 cmp	 r14d, 1073741823	; 3fffffffH
  000cb	7f 1f		 jg	 SHORT $LN1@internshrs
; Line 183
  000cd	43 8d 14 36	 lea	 edx, DWORD PTR [r14+r14]
  000d1	49 8b c8	 mov	 rcx, r8
  000d4	e8 00 00 00 00	 call	 luaS_resize
; Line 184
  000d9	8b 45 3c	 mov	 eax, DWORD PTR [rbp+60]
  000dc	ff c8		 dec	 eax
  000de	48 63 c8	 movsxd	 rcx, eax
  000e1	48 8b 45 30	 mov	 rax, QWORD PTR [rbp+48]
  000e5	49 23 cd	 and	 rcx, r13
  000e8	4c 8d 24 c8	 lea	 r12, QWORD PTR [rax+rcx*8]
$LN1@internshrs:
; Line 186
  000ec	48 8b 4c 24 50	 mov	 rcx, QWORD PTR L$[rsp]
  000f1	4c 8d 46 19	 lea	 r8, QWORD PTR [rsi+25]
  000f5	ba 04 00 00 00	 mov	 edx, 4
  000fa	e8 00 00 00 00	 call	 luaC_newobj
; Line 187
  000ff	4c 8b c6	 mov	 r8, rsi
  00102	49 8b d7	 mov	 rdx, r15
  00105	89 78 0c	 mov	 DWORD PTR [rax+12], edi
  00108	c6 40 0a 00	 mov	 BYTE PTR [rax+10], 0
  0010c	48 8d 48 18	 lea	 rcx, QWORD PTR [rax+24]
  00110	48 8b d8	 mov	 rbx, rax
  00113	c6 44 30 18 00	 mov	 BYTE PTR [rax+rsi+24], 0
  00118	e8 00 00 00 00	 call	 memcpy
; Line 188
  0011d	40 88 73 0b	 mov	 BYTE PTR [rbx+11], sil
; Line 189
  00121	49 8b 0c 24	 mov	 rcx, QWORD PTR [r12]
  00125	48 89 4b 10	 mov	 QWORD PTR [rbx+16], rcx
; Line 190
  00129	49 89 1c 24	 mov	 QWORD PTR [r12], rbx
; Line 191
  0012d	ff 45 38	 inc	 DWORD PTR [rbp+56]
$LN2@internshrs:
; Line 193
  00130	48 8b 6c 24 60	 mov	 rbp, QWORD PTR [rsp+96]
  00135	48 8b 74 24 68	 mov	 rsi, QWORD PTR [rsp+104]
  0013a	48 8b c3	 mov	 rax, rbx
  0013d	48 8b 5c 24 58	 mov	 rbx, QWORD PTR [rsp+88]
  00142	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00146	41 5f		 pop	 r15
  00148	41 5e		 pop	 r14
  0014a	41 5d		 pop	 r13
  0014c	41 5c		 pop	 r12
  0014e	5f		 pop	 rdi
  0014f	c3		 ret	 0
$LN18@internshrs:
; Line 177
  00150	0f b6 43 09	 movzx	 eax, BYTE PTR [rbx+9]
  00154	0f b6 4d 54	 movzx	 ecx, BYTE PTR [rbp+84]
  00158	34 03		 xor	 al, 3
  0015a	80 f1 03	 xor	 cl, 3
  0015d	84 c8		 test	 cl, al
  0015f	75 cf		 jne	 SHORT $LN2@internshrs
; Line 178
  00161	88 43 09	 mov	 BYTE PTR [rbx+9], al
; Line 179
  00164	eb ca		 jmp	 SHORT $LN2@internshrs
internshrstr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT createstrobj
_TEXT	SEGMENT
L$ = 48
l$ = 56
tag$ = 64
h$ = 72
createstrobj PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 133
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	41 8b c0	 mov	 eax, r8d
; Line 137
  0000d	4c 8d 42 19	 lea	 r8, QWORD PTR [rdx+25]
  00011	48 8b fa	 mov	 rdi, rdx
; Line 138
  00014	8b d0		 mov	 edx, eax
  00016	41 8b d9	 mov	 ebx, r9d
  00019	e8 00 00 00 00	 call	 luaC_newobj
; Line 140
  0001e	89 58 0c	 mov	 DWORD PTR [rax+12], ebx
; Line 144
  00021	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00026	c6 40 0a 00	 mov	 BYTE PTR [rax+10], 0
  0002a	c6 44 38 18 00	 mov	 BYTE PTR [rax+rdi+24], 0
  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
createstrobj ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaS_createlngstrobj
_TEXT	SEGMENT
L$ = 48
l$ = 56
luaS_createlngstrobj PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 147
$LN6:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 148
  0000a	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  0000e	4c 8d 42 19	 lea	 r8, QWORD PTR [rdx+25]
  00012	48 8b fa	 mov	 rdi, rdx
  00015	8b 58 50	 mov	 ebx, DWORD PTR [rax+80]
  00018	ba 14 00 00 00	 mov	 edx, 20
  0001d	e8 00 00 00 00	 call	 luaC_newobj
  00022	89 58 0c	 mov	 DWORD PTR [rax+12], ebx
; Line 151
  00025	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0002a	c6 40 0a 00	 mov	 BYTE PTR [rax+10], 0
  0002e	c6 44 38 18 00	 mov	 BYTE PTR [rax+rdi+24], 0
  00033	48 89 78 10	 mov	 QWORD PTR [rax+16], rdi
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
luaS_createlngstrobj ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaS_new
_TEXT	SEGMENT
L$ = 48
str$ = 56
luaS_new PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 219
$LN37:
  00000	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  00005	41 56		 push	 r14
  00007	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000b	48 8b f2	 mov	 rsi, rdx
; Line 220
  0000e	b8 b3 cf 21 35	 mov	 eax, 891408307		; 3521cfb3H
  00013	4c 8b d9	 mov	 r11, rcx
  00016	44 8b f6	 mov	 r14d, esi
  00019	f7 e2		 mul	 edx
  0001b	8b c6		 mov	 eax, esi
  0001d	2b c2		 sub	 eax, edx
  0001f	d1 e8		 shr	 eax, 1
  00021	03 c2		 add	 eax, edx
  00023	c1 e8 05	 shr	 eax, 5
  00026	6b c0 35	 imul	 eax, eax, 53		; 00000035H
  00029	44 2b f0	 sub	 r14d, eax
; Line 222
  0002c	49 c1 e6 04	 shl	 r14, 4
  00030	4c 03 71 18	 add	 r14, QWORD PTR [rcx+24]
; Line 223
  00034	45 33 c9	 xor	 r9d, r9d
  00037	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL7@luaS_new:
; Line 224
  00040	4f 8b 94 ce e8
	01 00 00	 mov	 r10, QWORD PTR [r14+r9*8+488]
  00048	48 8b c6	 mov	 rax, rsi
  0004b	4d 8d 42 18	 lea	 r8, QWORD PTR [r10+24]
  0004f	4c 2b c6	 sub	 r8, rsi
$LL30@luaS_new:
  00052	0f b6 10	 movzx	 edx, BYTE PTR [rax]
  00055	42 0f b6 0c 00	 movzx	 ecx, BYTE PTR [rax+r8]
  0005a	2b d1		 sub	 edx, ecx
  0005c	75 07		 jne	 SHORT $LN31@luaS_new
  0005e	48 ff c0	 inc	 rax
  00061	85 c9		 test	 ecx, ecx
  00063	75 ed		 jne	 SHORT $LL30@luaS_new
$LN31@luaS_new:
  00065	85 d2		 test	 edx, edx
  00067	0f 84 ba 00 00
	00		 je	 $LN22@luaS_new
; Line 223
  0006d	49 ff c1	 inc	 r9
  00070	49 83 f9 02	 cmp	 r9, 2
  00074	7c ca		 jl	 SHORT $LL7@luaS_new
; Line 229
  00076	49 8b 86 e8 01
	00 00		 mov	 rax, QWORD PTR [r14+488]
  0007d	48 89 7c 24 40	 mov	 QWORD PTR [rsp+64], rdi
; Line 231
  00082	48 83 cf ff	 or	 rdi, -1
  00086	49 89 86 f0 01
	00 00		 mov	 QWORD PTR [r14+496], rax
  0008d	0f 1f 00	 npad	 3
$LL29@luaS_new:
  00090	48 ff c7	 inc	 rdi
  00093	80 3c 3e 00	 cmp	 BYTE PTR [rsi+rdi], 0
  00097	75 f7		 jne	 SHORT $LL29@luaS_new
  00099	48 89 6c 24 38	 mov	 QWORD PTR [rsp+56], rbp
  0009e	49 8b cb	 mov	 rcx, r11
  000a1	48 83 ff 28	 cmp	 rdi, 40			; 00000028H
  000a5	77 10		 ja	 SHORT $LN12@luaS_new
  000a7	4c 8b c7	 mov	 r8, rdi
  000aa	48 8b d6	 mov	 rdx, rsi
  000ad	e8 00 00 00 00	 call	 internshrstr
  000b2	48 8b e8	 mov	 rbp, rax
  000b5	eb 50		 jmp	 SHORT $LN11@luaS_new
$LN12@luaS_new:
  000b7	48 b8 e7 ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775783 ; 7fffffffffffffe7H
  000c1	48 3b f8	 cmp	 rdi, rax
  000c4	73 70		 jae	 SHORT $LN35@luaS_new
  000c6	49 8b 43 18	 mov	 rax, QWORD PTR [r11+24]
  000ca	4c 8d 47 19	 lea	 r8, QWORD PTR [rdi+25]
  000ce	ba 14 00 00 00	 mov	 edx, 20
  000d3	48 89 5c 24 30	 mov	 QWORD PTR [rsp+48], rbx
  000d8	8b 58 50	 mov	 ebx, DWORD PTR [rax+80]
  000db	e8 00 00 00 00	 call	 luaC_newobj
  000e0	89 58 0c	 mov	 DWORD PTR [rax+12], ebx
  000e3	c6 40 0a 00	 mov	 BYTE PTR [rax+10], 0
  000e7	c6 44 07 18 00	 mov	 BYTE PTR [rdi+rax+24], 0
  000ec	48 8d 48 18	 lea	 rcx, QWORD PTR [rax+24]
  000f0	4c 8b c7	 mov	 r8, rdi
  000f3	48 8b d6	 mov	 rdx, rsi
  000f6	48 8b e8	 mov	 rbp, rax
  000f9	48 89 78 10	 mov	 QWORD PTR [rax+16], rdi
  000fd	e8 00 00 00 00	 call	 memcpy
  00102	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
$LN11@luaS_new:
  00107	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]
  0010c	49 89 ae e8 01
	00 00		 mov	 QWORD PTR [r14+488], rbp
; Line 232
  00113	48 8b c5	 mov	 rax, rbp
  00116	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
; Line 233
  0011b	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00120	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00124	41 5e		 pop	 r14
  00126	c3		 ret	 0
$LN22@luaS_new:
; Line 225
  00127	49 8b c2	 mov	 rax, r10
; Line 233
  0012a	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  0012f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00133	41 5e		 pop	 r14
  00135	c3		 ret	 0
$LN35@luaS_new:
; Line 231
  00136	e8 00 00 00 00	 call	 luaM_toobig
  0013b	cc		 int	 3
$LN34@luaS_new:
luaS_new ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaS_newlstr
_TEXT	SEGMENT
L$ = 48
str$ = 56
l$ = 64
luaS_newlstr PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 199
$LN13:
  00000	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  00005	56		 push	 rsi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	49 8b f0	 mov	 rsi, r8
  0000d	48 8b ea	 mov	 rbp, rdx
; Line 200
  00010	49 83 f8 28	 cmp	 r8, 40			; 00000028H
  00014	77 0f		 ja	 SHORT $LN3@luaS_newls
; Line 210
  00016	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  0001b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001f	5e		 pop	 rsi
; Line 201
  00020	e9 00 00 00 00	 jmp	 internshrstr
$LN3@luaS_newls:
; Line 204
  00025	48 b8 e7 ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775783 ; 7fffffffffffffe7H
  0002f	4c 3b c0	 cmp	 r8, rax
  00032	73 59		 jae	 SHORT $LN11@luaS_newls
; Line 206
  00034	48 8b 41 18	 mov	 rax, QWORD PTR [rcx+24]
  00038	48 89 5c 24 30	 mov	 QWORD PTR [rsp+48], rbx
  0003d	49 83 c0 19	 add	 r8, 25
  00041	8b 58 50	 mov	 ebx, DWORD PTR [rax+80]
  00044	ba 14 00 00 00	 mov	 edx, 20
  00049	48 89 7c 24 38	 mov	 QWORD PTR [rsp+56], rdi
  0004e	e8 00 00 00 00	 call	 luaC_newobj
; Line 207
  00053	4c 8b c6	 mov	 r8, rsi
  00056	48 8b d5	 mov	 rdx, rbp
  00059	89 58 0c	 mov	 DWORD PTR [rax+12], ebx
  0005c	c6 40 0a 00	 mov	 BYTE PTR [rax+10], 0
  00060	c6 44 30 18 00	 mov	 BYTE PTR [rax+rsi+24], 0
  00065	48 8d 48 18	 lea	 rcx, QWORD PTR [rax+24]
  00069	48 8b f8	 mov	 rdi, rax
  0006c	48 89 70 10	 mov	 QWORD PTR [rax+16], rsi
  00070	e8 00 00 00 00	 call	 memcpy
  00075	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
; Line 210
  0007a	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  0007f	48 8b c7	 mov	 rax, rdi
  00082	48 8b 7c 24 38	 mov	 rdi, QWORD PTR [rsp+56]
  00087	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008b	5e		 pop	 rsi
  0008c	c3		 ret	 0
$LN11@luaS_newls:
; Line 205
  0008d	e8 00 00 00 00	 call	 luaM_toobig
  00092	cc		 int	 3
$LN10@luaS_newls:
luaS_newlstr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaS_newudata
_TEXT	SEGMENT
L$ = 48
s$ = 56
luaS_newudata PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 236
$LN7:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 239
  00006	48 b8 d7 ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775767 ; 7fffffffffffffd7H
  00010	48 8b da	 mov	 rbx, rdx
  00013	48 3b d0	 cmp	 rdx, rax
  00016	77 35		 ja	 SHORT $LN5@luaS_newud
; Line 241
  00018	4c 8d 42 28	 lea	 r8, QWORD PTR [rdx+40]
  0001c	ba 07 00 00 00	 mov	 edx, 7
  00021	e8 00 00 00 00	 call	 luaC_newobj
; Line 243
  00026	48 89 58 18	 mov	 QWORD PTR [rax+24], rbx
; Line 244
  0002a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
; Line 245
  00032	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR luaO_nilobject_
  00039	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
  0003d	0f b6 0d 08 00
	00 00		 movzx	 ecx, BYTE PTR luaO_nilobject_+8
  00044	88 48 0a	 mov	 BYTE PTR [rax+10], cl
; Line 247
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5b		 pop	 rbx
  0004c	c3		 ret	 0
$LN5@luaS_newud:
; Line 240
  0004d	e8 00 00 00 00	 call	 luaM_toobig
  00052	cc		 int	 3
$LN4@luaS_newud:
luaS_newudata ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaS_remove
_TEXT	SEGMENT
L$ = 8
ts$ = 16
luaS_remove PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 155
  00000	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
; Line 156
  00004	41 8b 40 3c	 mov	 eax, DWORD PTR [r8+60]
  00008	ff c8		 dec	 eax
  0000a	48 63 c8	 movsxd	 rcx, eax
  0000d	48 63 42 0c	 movsxd	 rax, DWORD PTR [rdx+12]
  00011	48 23 c8	 and	 rcx, rax
  00014	49 8b 40 30	 mov	 rax, QWORD PTR [r8+48]
; Line 157
  00018	48 39 14 c8	 cmp	 QWORD PTR [rax+rcx*8], rdx
  0001c	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  00020	74 0c		 je	 SHORT $LN1@luaS_remov
$LL2@luaS_remov:
; Line 158
  00022	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00025	48 83 c0 10	 add	 rax, 16
  00029	48 39 10	 cmp	 QWORD PTR [rax], rdx
  0002c	75 f4		 jne	 SHORT $LL2@luaS_remov
$LN1@luaS_remov:
; Line 159
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	48 8b 51 10	 mov	 rdx, QWORD PTR [rcx+16]
  00035	48 89 10	 mov	 QWORD PTR [rax], rdx
; Line 160
  00038	41 ff 48 38	 dec	 DWORD PTR [r8+56]
; Line 161
  0003c	c3		 ret	 0
luaS_remove ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaS_init
_TEXT	SEGMENT
L$ = 48
luaS_init PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 116
$LN30:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 117
  0000a	48 8b 79 18	 mov	 rdi, QWORD PTR [rcx+24]
; Line 119
  0000e	ba 80 00 00 00	 mov	 edx, 128		; 00000080H
  00013	48 8b d9	 mov	 rbx, rcx
  00016	e8 00 00 00 00	 call	 luaS_resize
; Line 121
  0001b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@ENOOLCNF@not?5enough?5memory?$AA@
  00022	41 b8 11 00 00
	00		 mov	 r8d, 17
  00028	48 8b cb	 mov	 rcx, rbx
  0002b	e8 00 00 00 00	 call	 internshrstr
; Line 122
  00030	48 8b cb	 mov	 rcx, rbx
  00033	48 8b d0	 mov	 rdx, rax
  00036	48 89 87 d8 00
	00 00		 mov	 QWORD PTR [rdi+216], rax
  0003d	e8 00 00 00 00	 call	 luaC_fix
  00042	48 8d 87 f0 01
	00 00		 lea	 rax, QWORD PTR [rdi+496]
  00049	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  0004e	66 90		 npad	 2
$LL6@luaS_init:
; Line 125
  00050	48 8b 8f d8 00
	00 00		 mov	 rcx, QWORD PTR [rdi+216]
  00057	48 8d 40 10	 lea	 rax, QWORD PTR [rax+16]
  0005b	48 89 48 e8	 mov	 QWORD PTR [rax-24], rcx
  0005f	48 8b 8f d8 00
	00 00		 mov	 rcx, QWORD PTR [rdi+216]
  00066	48 89 48 f0	 mov	 QWORD PTR [rax-16], rcx
  0006a	48 ff ca	 dec	 rdx
  0006d	75 e1		 jne	 SHORT $LL6@luaS_init
; Line 126
  0006f	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00074	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00078	5f		 pop	 rdi
  00079	c3		 ret	 0
luaS_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaS_clearcache
_TEXT	SEGMENT
g$ = 8
luaS_clearcache PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 103
  00000	4c 8b c9	 mov	 r9, rcx
; Line 105
  00003	48 8d 81 f0 01
	00 00		 lea	 rax, QWORD PTR [rcx+496]
  0000a	41 b8 35 00 00
	00		 mov	 r8d, 53			; 00000035H
$LL7@luaS_clear:
; Line 107
  00010	48 8b 50 f8	 mov	 rdx, QWORD PTR [rax-8]
  00014	f6 42 09 03	 test	 BYTE PTR [rdx+9], 3
  00018	74 0b		 je	 SHORT $LN3@luaS_clear
; Line 108
  0001a	49 8b 91 d8 00
	00 00		 mov	 rdx, QWORD PTR [r9+216]
  00021	48 89 50 f8	 mov	 QWORD PTR [rax-8], rdx
$LN3@luaS_clear:
; Line 107
  00025	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00028	f6 41 09 03	 test	 BYTE PTR [rcx+9], 3
  0002c	74 0a		 je	 SHORT $LN6@luaS_clear
; Line 108
  0002e	49 8b 89 d8 00
	00 00		 mov	 rcx, QWORD PTR [r9+216]
  00035	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN6@luaS_clear:
; Line 105
  00038	48 83 c0 10	 add	 rax, 16
  0003c	49 ff c8	 dec	 r8
  0003f	75 cf		 jne	 SHORT $LL7@luaS_clear
; Line 110
  00041	c3		 ret	 0
luaS_clearcache ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaS_resize
_TEXT	SEGMENT
L$ = 48
newsize$ = 56
luaS_resize PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 71
$LN27:
  00000	48 89 5c 24 18	 mov	 QWORD PTR [rsp+24], rbx
  00005	48 89 6c 24 20	 mov	 QWORD PTR [rsp+32], rbp
  0000a	56		 push	 rsi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 73
  0000f	48 8b 59 18	 mov	 rbx, QWORD PTR [rcx+24]
  00013	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  00018	48 63 f2	 movsxd	 rsi, edx
; Line 74
  0001b	48 63 43 3c	 movsxd	 rax, DWORD PTR [rbx+60]
  0001f	4c 89 74 24 38	 mov	 QWORD PTR [rsp+56], r14
  00024	45 33 f6	 xor	 r14d, r14d
  00027	48 8b e9	 mov	 rbp, rcx
  0002a	3b f0		 cmp	 esi, eax
  0002c	7e 43		 jle	 SHORT $LN7@luaS_resiz
; Line 75
  0002e	48 8b 53 30	 mov	 rdx, QWORD PTR [rbx+48]
  00032	4c 8b c0	 mov	 r8, rax
  00035	4c 8d 0c f5 00
	00 00 00	 lea	 r9, QWORD PTR [rsi*8]
  0003d	49 c1 e0 03	 shl	 r8, 3
  00041	e8 00 00 00 00	 call	 luaM_realloc_
; Line 76
  00046	48 63 4b 3c	 movsxd	 rcx, DWORD PTR [rbx+60]
  0004a	48 89 43 30	 mov	 QWORD PTR [rbx+48], rax
  0004e	48 3b ce	 cmp	 rcx, rsi
  00051	7d 1e		 jge	 SHORT $LN7@luaS_resiz
  00053	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL9@luaS_resiz:
; Line 77
  00060	48 8b 43 30	 mov	 rax, QWORD PTR [rbx+48]
  00064	48 ff c1	 inc	 rcx
  00067	4c 89 74 c8 f8	 mov	 QWORD PTR [rax+rcx*8-8], r14
  0006c	48 3b ce	 cmp	 rcx, rsi
  0006f	7c ef		 jl	 SHORT $LL9@luaS_resiz
$LN7@luaS_resiz:
; Line 79
  00071	45 8b d6	 mov	 r10d, r14d
  00074	44 39 73 3c	 cmp	 DWORD PTR [rbx+60], r14d
  00078	7e 55		 jle	 SHORT $LN4@luaS_resiz
  0007a	4d 8b de	 mov	 r11, r14
  0007d	0f 1f 00	 npad	 3
$LL6@luaS_resiz:
; Line 80
  00080	48 8b 43 30	 mov	 rax, QWORD PTR [rbx+48]
  00084	4e 8b 0c 18	 mov	 r9, QWORD PTR [rax+r11]
; Line 81
  00088	4e 89 34 18	 mov	 QWORD PTR [rax+r11], r14
; Line 82
  0008c	4d 85 c9	 test	 r9, r9
  0008f	74 31		 je	 SHORT $LN5@luaS_resiz
  00091	8d 7e ff	 lea	 edi, DWORD PTR [rsi-1]
$LL3@luaS_resiz:
; Line 84
  00094	41 8b 41 0c	 mov	 eax, DWORD PTR [r9+12]
  00098	4d 8b 41 10	 mov	 r8, QWORD PTR [r9+16]
  0009c	23 c7		 and	 eax, edi
; Line 85
  0009e	48 8d 14 c5 00
	00 00 00	 lea	 rdx, QWORD PTR [rax*8]
  000a6	48 8b 43 30	 mov	 rax, QWORD PTR [rbx+48]
  000aa	48 8b 0c 02	 mov	 rcx, QWORD PTR [rdx+rax]
  000ae	49 89 49 10	 mov	 QWORD PTR [r9+16], rcx
; Line 86
  000b2	48 8b 43 30	 mov	 rax, QWORD PTR [rbx+48]
  000b6	4c 89 0c 02	 mov	 QWORD PTR [rdx+rax], r9
; Line 87
  000ba	4d 8b c8	 mov	 r9, r8
  000bd	4d 85 c0	 test	 r8, r8
  000c0	75 d2		 jne	 SHORT $LL3@luaS_resiz
$LN5@luaS_resiz:
; Line 79
  000c2	41 ff c2	 inc	 r10d
  000c5	49 83 c3 08	 add	 r11, 8
  000c9	44 3b 53 3c	 cmp	 r10d, DWORD PTR [rbx+60]
  000cd	7c b1		 jl	 SHORT $LL6@luaS_resiz
$LN4@luaS_resiz:
; Line 90
  000cf	48 63 43 3c	 movsxd	 rax, DWORD PTR [rbx+60]
  000d3	4c 8b 74 24 38	 mov	 r14, QWORD PTR [rsp+56]
  000d8	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
  000dd	3b f0		 cmp	 esi, eax
  000df	7d 1f		 jge	 SHORT $LN25@luaS_resiz
; Line 93
  000e1	48 8b 53 30	 mov	 rdx, QWORD PTR [rbx+48]
  000e5	4c 8b c0	 mov	 r8, rax
  000e8	4c 8d 0c f5 00
	00 00 00	 lea	 r9, QWORD PTR [rsi*8]
  000f0	49 c1 e0 03	 shl	 r8, 3
  000f4	48 8b cd	 mov	 rcx, rbp
  000f7	e8 00 00 00 00	 call	 luaM_realloc_
  000fc	48 89 43 30	 mov	 QWORD PTR [rbx+48], rax
$LN25@luaS_resiz:
; Line 96
  00100	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  00105	89 73 3c	 mov	 DWORD PTR [rbx+60], esi
  00108	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0010d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00111	5e		 pop	 rsi
  00112	c3		 ret	 0
luaS_resize ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaS_eqlngstr
_TEXT	SEGMENT
a$ = 48
b$ = 56
luaS_eqlngstr PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 40
$LN7:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 41
  00004	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
; Line 45
  00008	48 3b ca	 cmp	 rcx, rdx
  0000b	74 1e		 je	 SHORT $LN4@luaS_eqlng
  0000d	4c 3b 42 10	 cmp	 r8, QWORD PTR [rdx+16]
  00011	75 11		 jne	 SHORT $LN3@luaS_eqlng
  00013	48 83 c2 18	 add	 rdx, 24
  00017	48 83 c1 18	 add	 rcx, 24
  0001b	e8 00 00 00 00	 call	 memcmp
  00020	85 c0		 test	 eax, eax
  00022	74 07		 je	 SHORT $LN4@luaS_eqlng
$LN3@luaS_eqlng:
  00024	33 c0		 xor	 eax, eax
; Line 46
  00026	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002a	c3		 ret	 0
$LN4@luaS_eqlng:
; Line 45
  0002b	b8 01 00 00 00	 mov	 eax, 1
; Line 46
  00030	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00034	c3		 ret	 0
luaS_eqlngstr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaS_hashlongstr
_TEXT	SEGMENT
ts$ = 8
luaS_hashlongstr PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 60
  00000	80 79 0a 00	 cmp	 BYTE PTR [rcx+10], 0
  00004	4c 8b c9	 mov	 r9, rcx
  00007	75 51		 jne	 SHORT $LN13@luaS_hashl
; Line 61
  00009	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
  0000d	8b 51 0c	 mov	 edx, DWORD PTR [rcx+12]
  00010	4d 8b d0	 mov	 r10, r8
  00013	41 33 d0	 xor	 edx, r8d
  00016	49 c1 ea 05	 shr	 r10, 5
  0001a	49 ff c2	 inc	 r10
  0001d	4d 3b c2	 cmp	 r8, r10
  00020	72 2c		 jb	 SHORT $LN4@luaS_hashl
  00022	0f 1f 40 00 66
	66 0f 1f 84 00
	00 00 00 00	 npad	 14
$LL6@luaS_hashl:
  00030	43 0f b6 4c 01
	17		 movzx	 ecx, BYTE PTR [r9+r8+23]
  00036	8b c2		 mov	 eax, edx
  00038	4d 2b c2	 sub	 r8, r10
  0003b	c1 e0 05	 shl	 eax, 5
  0003e	03 c8		 add	 ecx, eax
  00040	8b c2		 mov	 eax, edx
  00042	c1 e8 02	 shr	 eax, 2
  00045	03 c8		 add	 ecx, eax
  00047	33 d1		 xor	 edx, ecx
  00049	4d 3b c2	 cmp	 r8, r10
  0004c	73 e2		 jae	 SHORT $LL6@luaS_hashl
$LN4@luaS_hashl:
  0004e	41 89 51 0c	 mov	 DWORD PTR [r9+12], edx
; Line 62
  00052	41 c6 41 0a 01	 mov	 BYTE PTR [r9+10], 1
; Line 64
  00057	8b c2		 mov	 eax, edx
; Line 65
  00059	c3		 ret	 0
$LN13@luaS_hashl:
; Line 64
  0005a	8b 41 0c	 mov	 eax, DWORD PTR [rcx+12]
; Line 65
  0005d	c3		 ret	 0
luaS_hashlongstr ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaS_hash
_TEXT	SEGMENT
str$ = 8
l$ = 16
seed$ = 24
luaS_hash PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstring.c
; Line 50
  00000	8b c2		 mov	 eax, edx
  00002	4c 8b ca	 mov	 r9, rdx
  00005	4c 8b d1	 mov	 r10, rcx
  00008	41 33 c0	 xor	 eax, r8d
; Line 51
  0000b	4c 8b c2	 mov	 r8, rdx
  0000e	49 c1 e8 05	 shr	 r8, 5
  00012	49 ff c0	 inc	 r8
; Line 52
  00015	49 3b d0	 cmp	 rdx, r8
  00018	72 24		 jb	 SHORT $LN10@luaS_hash
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL3@luaS_hash:
; Line 53
  00020	43 0f b6 54 0a
	ff		 movzx	 edx, BYTE PTR [r10+r9-1]
  00026	8b c8		 mov	 ecx, eax
  00028	4d 2b c8	 sub	 r9, r8
  0002b	c1 e1 05	 shl	 ecx, 5
  0002e	03 d1		 add	 edx, ecx
  00030	8b c8		 mov	 ecx, eax
  00032	c1 e9 02	 shr	 ecx, 2
  00035	03 d1		 add	 edx, ecx
  00037	33 c2		 xor	 eax, edx
  00039	4d 3b c8	 cmp	 r9, r8
  0003c	73 e2		 jae	 SHORT $LL3@luaS_hash
$LN10@luaS_hash:
; Line 55
  0003e	c3		 ret	 0
luaS_hash ENDP
_TEXT	ENDS
END
