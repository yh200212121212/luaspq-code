; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	luaF_newproto
PUBLIC	luaF_newCclosure
PUBLIC	luaF_newLclosure
PUBLIC	luaF_initupvals
PUBLIC	luaF_findupval
PUBLIC	luaF_close
PUBLIC	luaF_freeproto
PUBLIC	luaF_getlocalname
EXTRN	luaM_realloc_:PROC
EXTRN	luaC_newobj:PROC
EXTRN	luaC_upvalbarrier_:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaF_newproto DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$luaF_newproto
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaF_newCclosure DD imagerel $LN4
	DD	imagerel $LN4+36
	DD	imagerel $unwind$luaF_newCclosure
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaF_newLclosure DD imagerel $LN12
	DD	imagerel $LN12+66
	DD	imagerel $unwind$luaF_newLclosure
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaF_initupvals DD imagerel $LN11
	DD	imagerel $LN11+38
	DD	imagerel $unwind$luaF_initupvals
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$luaF_initupvals DD imagerel $LN11+38
	DD	imagerel $LN11+109
	DD	imagerel $chain$0$luaF_initupvals
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$luaF_initupvals DD imagerel $LN11+109
	DD	imagerel $LN11+131
	DD	imagerel $chain$1$luaF_initupvals
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaF_findupval DD imagerel $LN13
	DD	imagerel $LN13+144
	DD	imagerel $unwind$luaF_findupval
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaF_close DD imagerel $LN14
	DD	imagerel $LN14+112
	DD	imagerel $unwind$luaF_close
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaF_freeproto DD imagerel $LN4
	DD	imagerel $LN4+179
	DD	imagerel $unwind$luaF_freeproto
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaF_freeproto DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaF_close DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaF_findupval DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$luaF_initupvals DD 021H
	DD	imagerel $LN11
	DD	imagerel $LN11+38
	DD	imagerel $unwind$luaF_initupvals
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$luaF_initupvals DD 020521H
	DD	067405H
	DD	imagerel $LN11
	DD	imagerel $LN11+38
	DD	imagerel $unwind$luaF_initupvals
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaF_initupvals DD 081501H
	DD	096415H
	DD	085415H
	DD	073415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaF_newLclosure DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaF_newCclosure DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaF_newproto DD 010401H
	DD	04204H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaF_getlocalname
_TEXT	SEGMENT
f$ = 8
local_number$ = 16
pc$ = 24
luaF_getlocalname PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 140
  00000	48 63 41 24	 movsxd	 rax, DWORD PTR [rcx+36]
; Line 142
  00004	45 33 c9	 xor	 r9d, r9d
  00007	85 c0		 test	 eax, eax
  00009	7e 2e		 jle	 SHORT $LN13@luaF_getlo
  0000b	4c 8b 51 50	 mov	 r10, QWORD PTR [rcx+80]
  0000f	4c 8b d8	 mov	 r11, rax
  00012	41 8b c9	 mov	 ecx, r9d
  00015	41 8b c1	 mov	 eax, r9d
$LL5@luaF_getlo:
  00018	46 39 44 10 08	 cmp	 DWORD PTR [rax+r10+8], r8d
  0001d	7f 1a		 jg	 SHORT $LN13@luaF_getlo
; Line 143
  0001f	46 3b 44 10 0c	 cmp	 r8d, DWORD PTR [rax+r10+12]
  00024	7d 04		 jge	 SHORT $LN4@luaF_getlo
; Line 144
  00026	ff ca		 dec	 edx
; Line 145
  00028	74 12		 je	 SHORT $LN9@luaF_getlo
$LN4@luaF_getlo:
; Line 142
  0002a	48 ff c1	 inc	 rcx
  0002d	41 ff c1	 inc	 r9d
  00030	48 83 c0 10	 add	 rax, 16
  00034	49 3b cb	 cmp	 rcx, r11
  00037	7c df		 jl	 SHORT $LL5@luaF_getlo
$LN13@luaF_getlo:
; Line 149
  00039	33 c0		 xor	 eax, eax
; Line 150
  0003b	c3		 ret	 0
$LN9@luaF_getlo:
; Line 146
  0003c	49 63 c1	 movsxd	 rax, r9d
  0003f	48 03 c0	 add	 rax, rax
  00042	49 8b 04 c2	 mov	 rax, QWORD PTR [r10+rax*8]
  00046	48 83 c0 18	 add	 rax, 24
; Line 150
  0004a	c3		 ret	 0
luaF_getlocalname ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaF_freeproto
_TEXT	SEGMENT
L$ = 48
f$ = 56
luaF_freeproto PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 125
$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 126
  0000a	4c 63 42 18	 movsxd	 r8, DWORD PTR [rdx+24]
  0000e	48 8b da	 mov	 rbx, rdx
  00011	48 8b 52 38	 mov	 rdx, QWORD PTR [rdx+56]
  00015	45 33 c9	 xor	 r9d, r9d
  00018	49 c1 e0 02	 shl	 r8, 2
  0001c	48 8b f9	 mov	 rdi, rcx
  0001f	e8 00 00 00 00	 call	 luaM_realloc_
; Line 127
  00024	4c 63 43 20	 movsxd	 r8, DWORD PTR [rbx+32]
  00028	48 8b 53 40	 mov	 rdx, QWORD PTR [rbx+64]
  0002c	49 c1 e0 03	 shl	 r8, 3
  00030	45 33 c9	 xor	 r9d, r9d
  00033	48 8b cf	 mov	 rcx, rdi
  00036	e8 00 00 00 00	 call	 luaM_realloc_
; Line 128
  0003b	4c 63 43 14	 movsxd	 r8, DWORD PTR [rbx+20]
  0003f	48 8b 53 30	 mov	 rdx, QWORD PTR [rbx+48]
  00043	49 c1 e0 04	 shl	 r8, 4
  00047	45 33 c9	 xor	 r9d, r9d
  0004a	48 8b cf	 mov	 rcx, rdi
  0004d	e8 00 00 00 00	 call	 luaM_realloc_
; Line 129
  00052	4c 63 43 1c	 movsxd	 r8, DWORD PTR [rbx+28]
  00056	48 8b 53 48	 mov	 rdx, QWORD PTR [rbx+72]
  0005a	49 c1 e0 02	 shl	 r8, 2
  0005e	45 33 c9	 xor	 r9d, r9d
  00061	48 8b cf	 mov	 rcx, rdi
  00064	e8 00 00 00 00	 call	 luaM_realloc_
; Line 130
  00069	4c 63 43 24	 movsxd	 r8, DWORD PTR [rbx+36]
  0006d	48 8b 53 50	 mov	 rdx, QWORD PTR [rbx+80]
  00071	49 c1 e0 04	 shl	 r8, 4
  00075	45 33 c9	 xor	 r9d, r9d
  00078	48 8b cf	 mov	 rcx, rdi
  0007b	e8 00 00 00 00	 call	 luaM_realloc_
; Line 131
  00080	4c 63 43 10	 movsxd	 r8, DWORD PTR [rbx+16]
  00084	48 8b 53 58	 mov	 rdx, QWORD PTR [rbx+88]
  00088	49 c1 e0 04	 shl	 r8, 4
  0008c	45 33 c9	 xor	 r9d, r9d
  0008f	48 8b cf	 mov	 rcx, rdi
  00092	e8 00 00 00 00	 call	 luaM_realloc_
; Line 132
  00097	45 33 c9	 xor	 r9d, r9d
  0009a	48 8b d3	 mov	 rdx, rbx
  0009d	45 8d 41 78	 lea	 r8d, QWORD PTR [r9+120]
  000a1	48 8b cf	 mov	 rcx, rdi
; Line 133
  000a4	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000a9	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ad	5f		 pop	 rdi
; Line 132
  000ae	e9 00 00 00 00	 jmp	 luaM_realloc_
luaF_freeproto ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaF_close
_TEXT	SEGMENT
L$ = 48
level$ = 56
luaF_close PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 83
$LN14:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 85
  0000a	48 83 79 40 00	 cmp	 QWORD PTR [rcx+64], 0
  0000f	48 8b fa	 mov	 rdi, rdx
  00012	48 8b d9	 mov	 rbx, rcx
  00015	74 4e		 je	 SHORT $LN12@luaF_close
$LL4@luaF_close:
  00017	48 8b 53 40	 mov	 rdx, QWORD PTR [rbx+64]
  0001b	48 39 3a	 cmp	 QWORD PTR [rdx], rdi
  0001e	72 45		 jb	 SHORT $LN12@luaF_close
; Line 87
  00020	48 8b 42 10	 mov	 rax, QWORD PTR [rdx+16]
  00024	48 8d 4a 10	 lea	 rcx, QWORD PTR [rdx+16]
  00028	48 89 43 40	 mov	 QWORD PTR [rbx+64], rax
; Line 88
  0002c	48 83 7a 08 00	 cmp	 QWORD PTR [rdx+8], 0
  00031	75 11		 jne	 SHORT $LN2@luaF_close
; Line 89
  00033	45 33 c9	 xor	 r9d, r9d
  00036	48 8b cb	 mov	 rcx, rbx
  00039	45 8d 41 20	 lea	 r8d, QWORD PTR [r9+32]
  0003d	e8 00 00 00 00	 call	 luaM_realloc_
; Line 90
  00042	eb 1a		 jmp	 SHORT $LN7@luaF_close
$LN2@luaF_close:
; Line 91
  00044	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00047	0f 10 00	 movups	 xmm0, XMMWORD PTR [rax]
  0004a	0f 11 01	 movups	 XMMWORD PTR [rcx], xmm0
; Line 92
  0004d	48 89 0a	 mov	 QWORD PTR [rdx], rcx
; Line 93
  00050	f6 41 08 40	 test	 BYTE PTR [rcx+8], 64	; 00000040H
  00054	74 08		 je	 SHORT $LN7@luaF_close
  00056	48 8b cb	 mov	 rcx, rbx
  00059	e8 00 00 00 00	 call	 luaC_upvalbarrier_
$LN7@luaF_close:
; Line 85
  0005e	48 83 7b 40 00	 cmp	 QWORD PTR [rbx+64], 0
  00063	75 b2		 jne	 SHORT $LL4@luaF_close
$LN12@luaF_close:
; Line 96
  00065	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006e	5f		 pop	 rdi
  0006f	c3		 ret	 0
luaF_close ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaF_findupval
_TEXT	SEGMENT
L$ = 48
level$ = 56
luaF_findupval PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 57
$LN13:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 62
  0000f	48 83 79 40 00	 cmp	 QWORD PTR [rcx+64], 0
  00014	48 8d 59 40	 lea	 rbx, QWORD PTR [rcx+64]
  00018	48 8b fa	 mov	 rdi, rdx
  0001b	48 8b f1	 mov	 rsi, rcx
  0001e	74 18		 je	 SHORT $LN3@luaF_findu
$LL4@luaF_findu:
  00020	48 8b 03	 mov	 rax, QWORD PTR [rbx]
  00023	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00026	4c 3b c2	 cmp	 r8, rdx
  00029	72 0d		 jb	 SHORT $LN3@luaF_findu
; Line 64
  0002b	74 53		 je	 SHORT $LN1@luaF_findu
; Line 66
  0002d	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  00032	48 8d 58 10	 lea	 rbx, QWORD PTR [rax+16]
  00036	75 e8		 jne	 SHORT $LL4@luaF_findu
$LN3@luaF_findu:
; Line 69
  00038	41 b9 20 00 00
	00		 mov	 r9d, 32			; 00000020H
  0003e	45 33 c0	 xor	 r8d, r8d
  00041	33 d2		 xor	 edx, edx
  00043	e8 00 00 00 00	 call	 luaM_realloc_
; Line 70
  00048	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; Line 71
  00050	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
; Line 72
  00053	c7 40 18 01 00
	00 00		 mov	 DWORD PTR [rax+24], 1
  0005a	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
; Line 73
  0005e	48 89 03	 mov	 QWORD PTR [rbx], rax
; Line 74
  00061	48 89 38	 mov	 QWORD PTR [rax], rdi
; Line 75
  00064	48 39 76 50	 cmp	 QWORD PTR [rsi+80], rsi
  00068	75 16		 jne	 SHORT $LN1@luaF_findu
; Line 76
  0006a	48 8b 56 18	 mov	 rdx, QWORD PTR [rsi+24]
  0006e	48 8b 8a a8 00
	00 00		 mov	 rcx, QWORD PTR [rdx+168]
  00075	48 89 4e 50	 mov	 QWORD PTR [rsi+80], rcx
; Line 77
  00079	48 89 b2 a8 00
	00 00		 mov	 QWORD PTR [rdx+168], rsi
$LN1@luaF_findu:
; Line 80
  00080	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00085	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0008a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008e	5f		 pop	 rdi
  0008f	c3		 ret	 0
luaF_findupval ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaF_initupvals
_TEXT	SEGMENT
L$ = 48
cl$ = 56
luaF_initupvals PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 45
$LN11:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0000f	41 56		 push	 r14
  00011	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 47
  00015	45 33 f6	 xor	 r14d, r14d
  00018	48 8b f2	 mov	 rsi, rdx
  0001b	48 8b e9	 mov	 rbp, rcx
  0001e	41 8b de	 mov	 ebx, r14d
  00021	38 5a 0a	 cmp	 BYTE PTR [rdx+10], bl
  00024	76 47		 jbe	 SHORT $LN1@luaF_initu
  00026	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  0002b	48 8d 7a 20	 lea	 rdi, QWORD PTR [rdx+32]
  0002f	90		 npad	 1
$LL3@luaF_initu:
; Line 48
  00030	41 b9 20 00 00
	00		 mov	 r9d, 32			; 00000020H
  00036	45 33 c0	 xor	 r8d, r8d
  00039	33 d2		 xor	 edx, edx
  0003b	48 8b cd	 mov	 rcx, rbp
  0003e	e8 00 00 00 00	 call	 luaM_realloc_
  00043	ff c3		 inc	 ebx
  00045	48 8d 7f 08	 lea	 rdi, QWORD PTR [rdi+8]
; Line 50
  00049	48 8d 48 10	 lea	 rcx, QWORD PTR [rax+16]
  0004d	48 c7 40 08 01
	00 00 00	 mov	 QWORD PTR [rax+8], 1
  00055	48 89 08	 mov	 QWORD PTR [rax], rcx
; Line 51
  00058	44 89 71 08	 mov	 DWORD PTR [rcx+8], r14d
; Line 52
  0005c	48 89 47 f8	 mov	 QWORD PTR [rdi-8], rax
  00060	0f b6 46 0a	 movzx	 eax, BYTE PTR [rsi+10]
  00064	3b d8		 cmp	 ebx, eax
  00066	7c c8		 jl	 SHORT $LL3@luaF_initu
  00068	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
$LN1@luaF_initu:
; Line 54
  0006d	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00072	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  00077	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  0007c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00080	41 5e		 pop	 r14
  00082	c3		 ret	 0
luaF_initupvals ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaF_newLclosure
_TEXT	SEGMENT
L$ = 48
n$ = 56
luaF_newLclosure PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 33
$LN12:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 34
  00006	8d 04 d5 20 00
	00 00		 lea	 eax, DWORD PTR [rdx*8+32]
  0000d	8b da		 mov	 ebx, edx
  0000f	ba 06 00 00 00	 mov	 edx, 6
  00014	4c 63 c0	 movsxd	 r8, eax
  00017	e8 00 00 00 00	 call	 luaC_newobj
; Line 36
  0001c	33 d2		 xor	 edx, edx
  0001e	48 89 50 18	 mov	 QWORD PTR [rax+24], rdx
; Line 37
  00022	88 58 0a	 mov	 BYTE PTR [rax+10], bl
; Line 38
  00025	85 db		 test	 ebx, ebx
  00027	74 13		 je	 SHORT $LN10@luaF_newLc
  00029	0f 1f 80 00 00
	00 00		 npad	 7
$LL2@luaF_newLc:
  00030	ff cb		 dec	 ebx
  00032	48 63 cb	 movsxd	 rcx, ebx
  00035	48 89 54 c8 20	 mov	 QWORD PTR [rax+rcx*8+32], rdx
  0003a	75 f4		 jne	 SHORT $LL2@luaF_newLc
$LN10@luaF_newLc:
; Line 40
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5b		 pop	 rbx
  00041	c3		 ret	 0
luaF_newLclosure ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaF_newCclosure
_TEXT	SEGMENT
L$ = 48
n$ = 56
luaF_newCclosure PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 25
$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 27
  00006	8d 42 02	 lea	 eax, DWORD PTR [rdx+2]
  00009	8b da		 mov	 ebx, edx
  0000b	ba 26 00 00 00	 mov	 edx, 38			; 00000026H
  00010	c1 e0 04	 shl	 eax, 4
  00013	4c 63 c0	 movsxd	 r8, eax
  00016	e8 00 00 00 00	 call	 luaC_newobj
; Line 28
  0001b	88 58 0a	 mov	 BYTE PTR [rax+10], bl
; Line 30
  0001e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00022	5b		 pop	 rbx
  00023	c3		 ret	 0
luaF_newCclosure ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaF_newproto
_TEXT	SEGMENT
L$ = 48
luaF_newproto PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lfunc.c
; Line 99
$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 100
  00004	ba 09 00 00 00	 mov	 edx, 9
  00009	44 8d 42 6f	 lea	 r8d, QWORD PTR [rdx+111]
  0000d	e8 00 00 00 00	 call	 luaC_newobj
; Line 102
  00012	33 c9		 xor	 ecx, ecx
  00014	48 89 48 30	 mov	 QWORD PTR [rax+48], rcx
; Line 103
  00018	48 89 48 14	 mov	 QWORD PTR [rax+20], rcx
; Line 104
  0001c	48 89 48 40	 mov	 QWORD PTR [rax+64], rcx
; Line 110
  00020	48 89 48 1c	 mov	 QWORD PTR [rax+28], rcx
  00024	48 89 48 38	 mov	 QWORD PTR [rax+56], rcx
  00028	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx
  0002c	48 89 48 48	 mov	 QWORD PTR [rax+72], rcx
; Line 111
  00030	48 89 48 58	 mov	 QWORD PTR [rax+88], rcx
; Line 112
  00034	89 48 10	 mov	 DWORD PTR [rax+16], ecx
; Line 113
  00037	66 89 48 0a	 mov	 WORD PTR [rax+10], cx
; Line 115
  0003b	88 48 0c	 mov	 BYTE PTR [rax+12], cl
; Line 116
  0003e	48 89 48 50	 mov	 QWORD PTR [rax+80], rcx
; Line 117
  00042	48 89 48 24	 mov	 QWORD PTR [rax+36], rcx
; Line 119
  00046	89 48 2c	 mov	 DWORD PTR [rax+44], ecx
; Line 120
  00049	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx
; Line 122
  0004d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00051	c3		 ret	 0
luaF_newproto ENDP
_TEXT	ENDS
END
