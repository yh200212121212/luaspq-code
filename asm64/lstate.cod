; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	lua_newstate
PUBLIC	lua_close
PUBLIC	lua_newthread
PUBLIC	luaE_setdebt
PUBLIC	luaE_freethread
PUBLIC	luaE_extendCI
PUBLIC	luaE_freeCI
PUBLIC	luaE_shrinkCI
EXTRN	lua_version:PROC
EXTRN	luaT_init:PROC
EXTRN	luaM_realloc_:PROC
EXTRN	luaD_rawrunprotected:PROC
EXTRN	luaF_close:PROC
EXTRN	luaC_freeallobjects:PROC
EXTRN	luaC_step:PROC
EXTRN	luaX_init:PROC
EXTRN	luaS_hash:PROC
EXTRN	luaS_init:PROC
EXTRN	luaH_setint:PROC
EXTRN	luaH_new:PROC
EXTRN	luaH_resize:PROC
EXTRN	__imp__time64:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	luaO_nilobject_:BYTE
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_newstate DD imagerel $LN28
	DD	imagerel $LN28+53
	DD	imagerel $unwind$lua_newstate
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$lua_newstate DD imagerel $LN28+53
	DD	imagerel $LN28+428
	DD	imagerel $chain$2$lua_newstate
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$lua_newstate DD imagerel $LN28+428
	DD	imagerel $LN28+463
	DD	imagerel $chain$3$lua_newstate
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lua_newthread DD imagerel $LN7
	DD	imagerel $LN7+270
	DD	imagerel $unwind$lua_newthread
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaE_freethread DD imagerel $LN7
	DD	imagerel $LN7+118
	DD	imagerel $unwind$luaE_freethread
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaE_extendCI DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$luaE_extendCI
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaE_freeCI DD imagerel $LN10
	DD	imagerel $LN10+37
	DD	imagerel $unwind$luaE_freeCI
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$luaE_freeCI DD imagerel $LN10+37
	DD	imagerel $LN10+84
	DD	imagerel $chain$0$luaE_freeCI
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$luaE_freeCI DD imagerel $LN10+84
	DD	imagerel $LN10+95
	DD	imagerel $chain$1$luaE_freeCI
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaE_shrinkCI DD imagerel $LN13
	DD	imagerel $LN13+24
	DD	imagerel $unwind$luaE_shrinkCI
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$luaE_shrinkCI DD imagerel $LN13+24
	DD	imagerel $LN13+108
	DD	imagerel $chain$1$luaE_shrinkCI
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$luaE_shrinkCI DD imagerel $LN13+108
	DD	imagerel $LN13+119
	DD	imagerel $chain$2$luaE_shrinkCI
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$makeseed DD imagerel makeseed
	DD	imagerel makeseed+112
	DD	imagerel $unwind$makeseed
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stack_init DD imagerel stack_init
	DD	imagerel stack_init+180
	DD	imagerel $unwind$stack_init
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$freestack DD imagerel freestack
	DD	imagerel freestack+66
	DD	imagerel $unwind$freestack
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$init_registry DD imagerel init_registry
	DD	imagerel init_registry+152
	DD	imagerel $unwind$init_registry
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$f_luaopen DD imagerel f_luaopen
	DD	imagerel f_luaopen+89
	DD	imagerel $unwind$f_luaopen
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$close_state DD imagerel close_state
	DD	imagerel close_state+143
	DD	imagerel $unwind$close_state
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$close_state DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$f_luaopen DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$init_registry DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$freestack DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stack_init DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$makeseed DD 021519H
	DD	030029206H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$luaE_shrinkCI DD 021H
	DD	imagerel $LN13
	DD	imagerel $LN13+24
	DD	imagerel $unwind$luaE_shrinkCI
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$luaE_shrinkCI DD 040a21H
	DD	07540aH
	DD	063405H
	DD	imagerel $LN13
	DD	imagerel $LN13+24
	DD	imagerel $unwind$luaE_shrinkCI
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaE_shrinkCI DD 040a01H
	DD	08640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$luaE_freeCI DD 021H
	DD	imagerel $LN10
	DD	imagerel $LN10+37
	DD	imagerel $unwind$luaE_freeCI
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$luaE_freeCI DD 020521H
	DD	066405H
	DD	imagerel $LN10
	DD	imagerel $LN10+37
	DD	imagerel $unwind$luaE_freeCI
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaE_freeCI DD 040a01H
	DD	07340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaE_extendCI DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaE_freethread DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_newthread DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$lua_newstate DD 040021H
	DD	08e400H
	DD	077400H
	DD	imagerel $LN28
	DD	imagerel $LN28+53
	DD	imagerel $unwind$lua_newstate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$lua_newstate DD 061a21H
	DD	08e41aH
	DD	077411H
	DD	063405H
	DD	imagerel $LN28
	DD	imagerel $LN28+53
	DD	imagerel $unwind$lua_newstate
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lua_newstate DD 040a01H
	DD	09540aH
	DD	06006320aH
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT close_state
_TEXT	SEGMENT
L$ = 48
close_state PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 242
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 244
  0000a	48 8b 51 38	 mov	 rdx, QWORD PTR [rcx+56]
  0000e	48 8b 79 18	 mov	 rdi, QWORD PTR [rcx+24]
  00012	48 8b d9	 mov	 rbx, rcx
  00015	e8 00 00 00 00	 call	 luaF_close
; Line 245
  0001a	48 8b cb	 mov	 rcx, rbx
  0001d	e8 00 00 00 00	 call	 luaC_freeallobjects
; Line 248
  00022	48 8b 53 18	 mov	 rdx, QWORD PTR [rbx+24]
  00026	45 33 c9	 xor	 r9d, r9d
  00029	4c 63 42 3c	 movsxd	 r8, DWORD PTR [rdx+60]
  0002d	48 8b 52 30	 mov	 rdx, QWORD PTR [rdx+48]
  00031	48 8b cb	 mov	 rcx, rbx
  00034	49 c1 e0 03	 shl	 r8, 3
  00038	e8 00 00 00 00	 call	 luaM_realloc_
; Line 249
  0003d	48 83 7b 38 00	 cmp	 QWORD PTR [rbx+56], 0
  00042	74 2a		 je	 SHORT $LN5@close_stat
  00044	48 8d 43 60	 lea	 rax, QWORD PTR [rbx+96]
  00048	48 8b cb	 mov	 rcx, rbx
  0004b	48 89 43 20	 mov	 QWORD PTR [rbx+32], rax
  0004f	e8 00 00 00 00	 call	 luaE_freeCI
  00054	4c 63 83 b8 00
	00 00		 movsxd	 r8, DWORD PTR [rbx+184]
  0005b	48 8b 53 38	 mov	 rdx, QWORD PTR [rbx+56]
  0005f	49 c1 e0 04	 shl	 r8, 4
  00063	45 33 c9	 xor	 r9d, r9d
  00066	48 8b cb	 mov	 rcx, rbx
  00069	e8 00 00 00 00	 call	 luaM_realloc_
$LN5@close_stat:
; Line 251
  0006e	48 8b 4f 08	 mov	 rcx, QWORD PTR [rdi+8]
  00072	48 8d 53 f8	 lea	 rdx, QWORD PTR [rbx-8]
  00076	45 33 c9	 xor	 r9d, r9d
  00079	41 b8 10 06 00
	00		 mov	 r8d, 1552		; 00000610H
  0007f	48 8b 07	 mov	 rax, QWORD PTR [rdi]
; Line 252
  00082	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00087	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008b	5f		 pop	 rdi
; Line 251
  0008c	48 ff e0	 rex_jmp rax
close_state ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT preinit_thread
_TEXT	SEGMENT
L$ = 8
g$ = 16
preinit_thread PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 222
  00000	48 89 51 18	 mov	 QWORD PTR [rcx+24], rdx
; Line 223
  00004	33 d2		 xor	 edx, edx
; Line 227
  00006	48 89 49 50	 mov	 QWORD PTR [rcx+80], rcx
; Line 236
  0000a	c7 81 c4 00 00
	00 01 00 00 00	 mov	 DWORD PTR [rcx+196], 1
  00014	66 c7 81 c8 00
	00 00 00 01	 mov	 WORD PTR [rcx+200], 256	; 00000100H
  0001d	48 89 51 38	 mov	 QWORD PTR [rcx+56], rdx
  00021	48 89 51 20	 mov	 QWORD PTR [rcx+32], rdx
  00025	66 89 51 0a	 mov	 WORD PTR [rcx+10], dx
  00029	48 89 91 b8 00
	00 00		 mov	 QWORD PTR [rcx+184], rdx
  00030	48 89 51 58	 mov	 QWORD PTR [rcx+88], rdx
  00034	48 89 91 a8 00
	00 00		 mov	 QWORD PTR [rcx+168], rdx
  0003b	89 91 c0 00 00
	00		 mov	 DWORD PTR [rcx+192], edx
  00041	48 89 51 40	 mov	 QWORD PTR [rcx+64], rdx
; Line 237
  00045	88 51 0c	 mov	 BYTE PTR [rcx+12], dl
; Line 238
  00048	48 89 91 b0 00
	00 00		 mov	 QWORD PTR [rcx+176], rdx
; Line 239
  0004f	c3		 ret	 0
preinit_thread ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT f_luaopen
_TEXT	SEGMENT
L$ = 48
ud$ = 56
f_luaopen PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 203
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 204
  0000a	48 8b 79 18	 mov	 rdi, QWORD PTR [rcx+24]
; Line 206
  0000e	48 8b d1	 mov	 rdx, rcx
  00011	48 8b d9	 mov	 rbx, rcx
  00014	e8 00 00 00 00	 call	 stack_init
; Line 207
  00019	48 8b d7	 mov	 rdx, rdi
  0001c	48 8b cb	 mov	 rcx, rbx
  0001f	e8 00 00 00 00	 call	 init_registry
; Line 208
  00024	48 8b cb	 mov	 rcx, rbx
  00027	e8 00 00 00 00	 call	 luaS_init
; Line 209
  0002c	48 8b cb	 mov	 rcx, rbx
  0002f	e8 00 00 00 00	 call	 luaT_init
; Line 210
  00034	48 8b cb	 mov	 rcx, rbx
  00037	e8 00 00 00 00	 call	 luaX_init
; Line 212
  0003c	33 c9		 xor	 ecx, ecx
  0003e	c6 47 57 01	 mov	 BYTE PTR [rdi+87], 1
  00042	e8 00 00 00 00	 call	 lua_version
; Line 214
  00047	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004c	48 89 87 d0 00
	00 00		 mov	 QWORD PTR [rdi+208], rax
  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
f_luaopen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT init_registry
_TEXT	SEGMENT
temp$ = 32
L$ = 64
g$ = 72
init_registry PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 184
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b da	 mov	 rbx, rdx
  00012	48 8b f1	 mov	 rsi, rcx
; Line 187
  00015	e8 00 00 00 00	 call	 luaH_new
; Line 189
  0001a	45 33 c9	 xor	 r9d, r9d
  0001d	48 8b ce	 mov	 rcx, rsi
  00020	48 8b d0	 mov	 rdx, rax
  00023	45 8d 41 02	 lea	 r8d, QWORD PTR [r9+2]
  00027	48 8b f8	 mov	 rdi, rax
  0002a	48 89 43 40	 mov	 QWORD PTR [rbx+64], rax
  0002e	c7 43 48 45 00
	00 00		 mov	 DWORD PTR [rbx+72], 69	; 00000045H
  00035	e8 00 00 00 00	 call	 luaH_resize
; Line 192
  0003a	4c 8d 4c 24 20	 lea	 r9, QWORD PTR temp$[rsp]
  0003f	41 b8 01 00 00
	00		 mov	 r8d, 1
  00045	48 8b d7	 mov	 rdx, rdi
  00048	48 8b ce	 mov	 rcx, rsi
  0004b	48 89 74 24 20	 mov	 QWORD PTR temp$[rsp], rsi
  00050	c7 44 24 28 48
	00 00 00	 mov	 DWORD PTR temp$[rsp+8], 72 ; 00000048H
  00058	e8 00 00 00 00	 call	 luaH_setint
; Line 194
  0005d	48 8b ce	 mov	 rcx, rsi
  00060	e8 00 00 00 00	 call	 luaH_new
; Line 195
  00065	4c 8d 4c 24 20	 lea	 r9, QWORD PTR temp$[rsp]
  0006a	41 b8 02 00 00
	00		 mov	 r8d, 2
  00070	48 8b d7	 mov	 rdx, rdi
  00073	48 8b ce	 mov	 rcx, rsi
  00076	c7 44 24 28 45
	00 00 00	 mov	 DWORD PTR temp$[rsp+8], 69 ; 00000045H
  0007e	48 89 44 24 20	 mov	 QWORD PTR temp$[rsp], rax
  00083	e8 00 00 00 00	 call	 luaH_setint
; Line 196
  00088	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0008d	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00092	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00096	5f		 pop	 rdi
  00097	c3		 ret	 0
init_registry ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT freestack
_TEXT	SEGMENT
L$ = 48
freestack PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 171
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 172
  00006	48 83 79 38 00	 cmp	 QWORD PTR [rcx+56], 0
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	74 2c		 je	 SHORT $LN2@freestack
; Line 174
  00010	48 8d 41 60	 lea	 rax, QWORD PTR [rcx+96]
  00014	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax
; Line 175
  00018	e8 00 00 00 00	 call	 luaE_freeCI
; Line 177
  0001d	4c 63 83 b8 00
	00 00		 movsxd	 r8, DWORD PTR [rbx+184]
  00024	48 8b 53 38	 mov	 rdx, QWORD PTR [rbx+56]
  00028	49 c1 e0 04	 shl	 r8, 4
  0002c	45 33 c9	 xor	 r9d, r9d
  0002f	48 8b cb	 mov	 rcx, rbx
; Line 178
  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5b		 pop	 rbx
; Line 177
  00037	e9 00 00 00 00	 jmp	 luaM_realloc_
$LN2@freestack:
; Line 178
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5b		 pop	 rbx
  00041	c3		 ret	 0
freestack ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT stack_init
_TEXT	SEGMENT
L1$ = 48
L$ = 56
stack_init PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 151
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b c2	 mov	 rax, rdx
  00009	48 8b d9	 mov	 rbx, rcx
; Line 154
  0000c	41 b9 80 02 00
	00		 mov	 r9d, 640		; 00000280H
  00012	45 33 c0	 xor	 r8d, r8d
  00015	33 d2		 xor	 edx, edx
  00017	48 8b c8	 mov	 rcx, rax
  0001a	e8 00 00 00 00	 call	 luaM_realloc_
  0001f	33 d2		 xor	 edx, edx
; Line 155
  00021	c7 83 b8 00 00
	00 28 00 00 00	 mov	 DWORD PTR [rbx+184], 40	; 00000028H
  0002b	48 89 43 38	 mov	 QWORD PTR [rbx+56], rax
  0002f	8b c2		 mov	 eax, edx
  00031	0f 1f 40 00 66
	66 66 0f 1f 84
	00 00 00 00 00	 npad	 15
$LL3@stack_init:
; Line 157
  00040	48 8b 4b 38	 mov	 rcx, QWORD PTR [rbx+56]
  00044	48 83 c0 20	 add	 rax, 32			; 00000020H
  00048	89 54 08 e8	 mov	 DWORD PTR [rax+rcx-24], edx
  0004c	48 8b 4b 38	 mov	 rcx, QWORD PTR [rbx+56]
  00050	89 54 08 f8	 mov	 DWORD PTR [rax+rcx-8], edx
  00054	48 3d 80 02 00
	00		 cmp	 rax, 640		; 00000280H
  0005a	7c e4		 jl	 SHORT $LL3@stack_init
; Line 158
  0005c	48 8b 4b 38	 mov	 rcx, QWORD PTR [rbx+56]
; Line 159
  00060	48 63 83 b8 00
	00 00		 movsxd	 rax, DWORD PTR [rbx+184]
  00067	48 89 4b 10	 mov	 QWORD PTR [rbx+16], rcx
  0006b	48 83 e8 05	 sub	 rax, 5
  0006f	48 c1 e0 04	 shl	 rax, 4
  00073	48 03 c1	 add	 rax, rcx
; Line 161
  00076	48 8d 4b 60	 lea	 rcx, QWORD PTR [rbx+96]
  0007a	48 89 43 30	 mov	 QWORD PTR [rbx+48], rax
; Line 162
  0007e	48 89 51 10	 mov	 QWORD PTR [rcx+16], rdx
  00082	48 89 51 18	 mov	 QWORD PTR [rcx+24], rdx
; Line 163
  00086	88 51 42	 mov	 BYTE PTR [rcx+66], dl
; Line 164
  00089	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  0008d	48 89 01	 mov	 QWORD PTR [rcx], rax
; Line 165
  00090	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
  00094	89 50 08	 mov	 DWORD PTR [rax+8], edx
  00097	48 83 43 10 10	 add	 QWORD PTR [rbx+16], 16
  0009c	48 8b 43 10	 mov	 rax, QWORD PTR [rbx+16]
; Line 166
  000a0	48 05 40 01 00
	00		 add	 rax, 320		; 00000140H
  000a6	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
; Line 167
  000aa	48 89 4b 20	 mov	 QWORD PTR [rbx+32], rcx
; Line 168
  000ae	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b2	5b		 pop	 rbx
  000b3	c3		 ret	 0
stack_init ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT makeseed
_TEXT	SEGMENT
h$ = 32
buff$ = 40
__$ArrayPad$ = 72
L$ = 96
makeseed PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 81
  00000	40 53		 push	 rbx
  00002	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00006	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0000d	48 33 c4	 xor	 rax, rsp
  00010	48 89 44 24 48	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00015	48 8b d9	 mov	 rbx, rcx
; Line 83
  00018	33 c9		 xor	 ecx, ecx
  0001a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__time64
; Line 86
  00020	48 8d 4c 24 20	 lea	 rcx, QWORD PTR h$[rsp]
; Line 90
  00025	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0002a	48 89 4c 24 30	 mov	 QWORD PTR buff$[rsp+8], rcx
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:luaO_nilobject_
  00036	44 8b c0	 mov	 r8d, eax
  00039	48 89 4c 24 38	 mov	 QWORD PTR buff$[rsp+16], rcx
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:lua_newstate
  00045	89 44 24 20	 mov	 DWORD PTR h$[rsp], eax
  00049	48 89 4c 24 40	 mov	 QWORD PTR buff$[rsp+24], rcx
  0004e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR buff$[rsp]
  00053	48 89 5c 24 28	 mov	 QWORD PTR buff$[rsp], rbx
  00058	e8 00 00 00 00	 call	 luaS_hash
; Line 91
  0005d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00062	48 33 cc	 xor	 rcx, rsp
  00065	e8 00 00 00 00	 call	 __security_check_cookie
  0006a	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0006e	5b		 pop	 rbx
  0006f	c3		 ret	 0
makeseed ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT time
_TEXT	SEGMENT
_Time$ = 8
time	PROC						; COMDAT
; File e:\microsoft visual studio 12.0\vc\include\time.inl
; Line 133
  00000	48 ff 25 00 00
	00 00		 rex_jmp QWORD PTR __imp__time64
time	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaE_shrinkCI
_TEXT	SEGMENT
L$ = 48
luaE_shrinkCI PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 137
$LN13:
  00000	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 138
  0000a	48 8b 79 20	 mov	 rdi, QWORD PTR [rcx+32]
  0000e	48 8b f1	 mov	 rsi, rcx
; Line 141
  00011	48 83 7f 18 00	 cmp	 QWORD PTR [rdi+24], 0
  00016	74 54		 je	 SHORT $LN9@luaE_shrin
  00018	48 89 5c 24 30	 mov	 QWORD PTR [rsp+48], rbx
  0001d	48 89 6c 24 38	 mov	 QWORD PTR [rsp+56], rbp
  00022	bd ff ff 00 00	 mov	 ebp, 65535		; 0000ffffH
  00027	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL2@luaE_shrin:
  00030	48 8b 57 18	 mov	 rdx, QWORD PTR [rdi+24]
  00034	48 8b 5a 18	 mov	 rbx, QWORD PTR [rdx+24]
  00038	48 85 db	 test	 rbx, rbx
  0003b	74 25		 je	 SHORT $LN11@luaE_shrin
; Line 142
  0003d	45 33 c9	 xor	 r9d, r9d
  00040	48 8b ce	 mov	 rcx, rsi
  00043	45 8d 41 48	 lea	 r8d, QWORD PTR [r9+72]
  00047	e8 00 00 00 00	 call	 luaM_realloc_
; Line 143
  0004c	66 01 6e 0a	 add	 WORD PTR [rsi+10], bp
; Line 144
  00050	48 89 5f 18	 mov	 QWORD PTR [rdi+24], rbx
; Line 145
  00054	48 89 7b 10	 mov	 QWORD PTR [rbx+16], rdi
  00058	48 83 7b 18 00	 cmp	 QWORD PTR [rbx+24], 0
; Line 146
  0005d	48 8b fb	 mov	 rdi, rbx
  00060	75 ce		 jne	 SHORT $LL2@luaE_shrin
$LN11@luaE_shrin:
  00062	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00067	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
$LN9@luaE_shrin:
; Line 148
  0006c	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00071	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00075	5f		 pop	 rdi
  00076	c3		 ret	 0
luaE_shrinkCI ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaE_freeCI
_TEXT	SEGMENT
L$ = 48
luaE_freeCI PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 122
$LN10:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 123
  0000a	48 8b 41 20	 mov	 rax, QWORD PTR [rcx+32]
  0000e	48 8b f9	 mov	 rdi, rcx
; Line 124
  00011	48 8b 58 18	 mov	 rbx, QWORD PTR [rax+24]
; Line 125
  00015	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
; Line 126
  0001d	48 8b d3	 mov	 rdx, rbx
  00020	48 85 db	 test	 rbx, rbx
  00023	74 2f		 je	 SHORT $LN1@luaE_freeC
  00025	48 89 74 24 30	 mov	 QWORD PTR [rsp+48], rsi
  0002a	be ff ff 00 00	 mov	 esi, 65535		; 0000ffffH
  0002f	90		 npad	 1
$LL2@luaE_freeC:
; Line 127
  00030	48 8b 5b 18	 mov	 rbx, QWORD PTR [rbx+24]
; Line 128
  00034	45 33 c9	 xor	 r9d, r9d
  00037	48 8b cf	 mov	 rcx, rdi
  0003a	45 8d 41 48	 lea	 r8d, QWORD PTR [r9+72]
  0003e	e8 00 00 00 00	 call	 luaM_realloc_
; Line 129
  00043	66 01 77 0a	 add	 WORD PTR [rdi+10], si
  00047	48 8b d3	 mov	 rdx, rbx
  0004a	48 85 db	 test	 rbx, rbx
  0004d	75 e1		 jne	 SHORT $LL2@luaE_freeC
  0004f	48 8b 74 24 30	 mov	 rsi, QWORD PTR [rsp+48]
$LN1@luaE_freeC:
; Line 131
  00054	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
luaE_freeCI ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaE_extendCI
_TEXT	SEGMENT
L$ = 48
luaE_extendCI PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 108
$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 109
  00006	41 b9 48 00 00
	00		 mov	 r9d, 72			; 00000048H
  0000c	45 33 c0	 xor	 r8d, r8d
  0000f	33 d2		 xor	 edx, edx
  00011	48 8b d9	 mov	 rbx, rcx
  00014	e8 00 00 00 00	 call	 luaM_realloc_
; Line 111
  00019	48 8b 53 20	 mov	 rdx, QWORD PTR [rbx+32]
  0001d	48 89 42 18	 mov	 QWORD PTR [rdx+24], rax
; Line 112
  00021	48 8b 53 20	 mov	 rdx, QWORD PTR [rbx+32]
; Line 113
  00025	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  0002d	48 89 50 10	 mov	 QWORD PTR [rax+16], rdx
; Line 114
  00031	66 ff 43 0a	 inc	 WORD PTR [rbx+10]
; Line 116
  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5b		 pop	 rbx
  0003a	c3		 ret	 0
luaE_extendCI ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaE_freethread
_TEXT	SEGMENT
L$ = 48
L1$ = 56
luaE_freethread PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 285
$LN7:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b da	 mov	 rbx, rdx
; Line 287
  00012	48 8b 52 38	 mov	 rdx, QWORD PTR [rdx+56]
  00016	48 8b f9	 mov	 rdi, rcx
  00019	48 8b cb	 mov	 rcx, rbx
  0001c	e8 00 00 00 00	 call	 luaF_close
; Line 290
  00021	48 83 7b 38 00	 cmp	 QWORD PTR [rbx+56], 0
  00026	74 2a		 je	 SHORT $LN4@luaE_freet
  00028	48 8d 43 60	 lea	 rax, QWORD PTR [rbx+96]
  0002c	48 8b cb	 mov	 rcx, rbx
  0002f	48 89 43 20	 mov	 QWORD PTR [rbx+32], rax
  00033	e8 00 00 00 00	 call	 luaE_freeCI
  00038	4c 63 83 b8 00
	00 00		 movsxd	 r8, DWORD PTR [rbx+184]
  0003f	48 8b 53 38	 mov	 rdx, QWORD PTR [rbx+56]
  00043	49 c1 e0 04	 shl	 r8, 4
  00047	45 33 c9	 xor	 r9d, r9d
  0004a	48 8b cb	 mov	 rcx, rbx
  0004d	e8 00 00 00 00	 call	 luaM_realloc_
$LN4@luaE_freet:
; Line 291
  00052	48 8d 53 f8	 lea	 rdx, QWORD PTR [rbx-8]
  00056	45 33 c9	 xor	 r9d, r9d
  00059	41 b8 d8 00 00
	00		 mov	 r8d, 216		; 000000d8H
  0005f	48 8b cf	 mov	 rcx, rdi
; Line 292
  00062	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00067	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0006c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00070	5f		 pop	 rdi
; Line 291
  00071	e9 00 00 00 00	 jmp	 luaM_realloc_
luaE_freethread ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaE_setdebt
_TEXT	SEGMENT
g$ = 8
debt$ = 16
luaE_setdebt PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 99
  00000	4c 8b 41 10	 mov	 r8, QWORD PTR [rcx+16]
; Line 101
  00004	48 b8 01 00 00
	00 00 00 00 80	 mov	 rax, -9223372036854775807 ; 8000000000000001H
  0000e	4c 03 41 18	 add	 r8, QWORD PTR [rcx+24]
  00012	49 03 c0	 add	 rax, r8
  00015	48 3b d0	 cmp	 rdx, rax
  00018	48 0f 4c d0	 cmovl	 rdx, rax
; Line 103
  0001c	4c 2b c2	 sub	 r8, rdx
; Line 104
  0001f	48 89 51 18	 mov	 QWORD PTR [rcx+24], rdx
  00023	4c 89 41 10	 mov	 QWORD PTR [rcx+16], r8
; Line 105
  00027	c3		 ret	 0
luaE_setdebt ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_newthread
_TEXT	SEGMENT
L$ = 48
lua_newthread PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 255
$LN7:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 256
  0000f	48 8b 71 18	 mov	 rsi, QWORD PTR [rcx+24]
  00013	48 8b f9	 mov	 rdi, rcx
; Line 259
  00016	48 83 7e 18 00	 cmp	 QWORD PTR [rsi+24], 0
  0001b	7e 05		 jle	 SHORT $LN1@lua_newthr
  0001d	e8 00 00 00 00	 call	 luaC_step
$LN1@lua_newthr:
; Line 261
  00022	33 d2		 xor	 edx, edx
  00024	41 b9 d8 00 00
	00		 mov	 r9d, 216		; 000000d8H
  0002a	48 8b cf	 mov	 rcx, rdi
  0002d	44 8d 42 08	 lea	 r8d, QWORD PTR [rdx+8]
  00031	e8 00 00 00 00	 call	 luaM_realloc_
; Line 270
  00036	33 c9		 xor	 ecx, ecx
  00038	48 8d 58 08	 lea	 rbx, QWORD PTR [rax+8]
  0003c	0f b6 46 54	 movzx	 eax, BYTE PTR [rsi+84]
  00040	c6 43 08 08	 mov	 BYTE PTR [rbx+8], 8
  00044	24 03		 and	 al, 3
  00046	88 43 09	 mov	 BYTE PTR [rbx+9], al
  00049	48 8b 46 58	 mov	 rax, QWORD PTR [rsi+88]
  0004d	48 89 03	 mov	 QWORD PTR [rbx], rax
  00050	48 89 5e 58	 mov	 QWORD PTR [rsi+88], rbx
  00054	48 8b 47 10	 mov	 rax, QWORD PTR [rdi+16]
  00058	48 89 18	 mov	 QWORD PTR [rax], rbx
  0005b	c7 40 08 48 00
	00 00		 mov	 DWORD PTR [rax+8], 72	; 00000048H
  00062	48 83 47 10 10	 add	 QWORD PTR [rdi+16], 16
  00067	48 89 8b b8 00
	00 00		 mov	 QWORD PTR [rbx+184], rcx
  0006e	48 89 8b a8 00
	00 00		 mov	 QWORD PTR [rbx+168], rcx
  00075	89 8b c0 00 00
	00		 mov	 DWORD PTR [rbx+192], ecx
  0007b	48 89 4b 38	 mov	 QWORD PTR [rbx+56], rcx
  0007f	48 89 4b 20	 mov	 QWORD PTR [rbx+32], rcx
  00083	66 89 4b 0a	 mov	 WORD PTR [rbx+10], cx
  00087	48 89 4b 58	 mov	 QWORD PTR [rbx+88], rcx
  0008b	66 c7 83 c8 00
	00 00 00 01	 mov	 WORD PTR [rbx+200], 256	; 00000100H
  00094	48 89 4b 40	 mov	 QWORD PTR [rbx+64], rcx
  00098	88 4b 0c	 mov	 BYTE PTR [rbx+12], cl
  0009b	48 89 8b b0 00
	00 00		 mov	 QWORD PTR [rbx+176], rcx
  000a2	48 89 73 18	 mov	 QWORD PTR [rbx+24], rsi
  000a6	48 89 5b 50	 mov	 QWORD PTR [rbx+80], rbx
  000aa	c7 83 c4 00 00
	00 01 00 00 00	 mov	 DWORD PTR [rbx+196], 1
; Line 271
  000b4	0f b6 8f c8 00
	00 00		 movzx	 ecx, BYTE PTR [rdi+200]
  000bb	88 8b c8 00 00
	00		 mov	 BYTE PTR [rbx+200], cl
; Line 272
  000c1	8b 97 bc 00 00
	00		 mov	 edx, DWORD PTR [rdi+188]
  000c7	89 93 bc 00 00
	00		 mov	 DWORD PTR [rbx+188], edx
; Line 273
  000cd	48 8b 8f a8 00
	00 00		 mov	 rcx, QWORD PTR [rdi+168]
; Line 274
  000d4	89 93 c0 00 00
	00		 mov	 DWORD PTR [rbx+192], edx
  000da	48 89 8b a8 00
	00 00		 mov	 QWORD PTR [rbx+168], rcx
; Line 277
  000e1	48 8b 8e c8 00
	00 00		 mov	 rcx, QWORD PTR [rsi+200]
  000e8	48 8b 51 f8	 mov	 rdx, QWORD PTR [rcx-8]
; Line 279
  000ec	48 8b cb	 mov	 rcx, rbx
  000ef	48 89 53 f8	 mov	 QWORD PTR [rbx-8], rdx
  000f3	48 8b d7	 mov	 rdx, rdi
  000f6	e8 00 00 00 00	 call	 stack_init
; Line 282
  000fb	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00100	48 8b c3	 mov	 rax, rbx
  00103	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00108	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
lua_newthread ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_close
_TEXT	SEGMENT
L$ = 8
lua_close PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 344
  00000	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00004	48 8b 89 c8 00
	00 00		 mov	 rcx, QWORD PTR [rcx+200]
  0000b	e9 00 00 00 00	 jmp	 close_state
lua_close ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lua_newstate
_TEXT	SEGMENT
f$ = 48
ud$ = 56
lua_newstate PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lstate.c
; Line 295
$LN28:
  00000	48 89 6c 24 20	 mov	 QWORD PTR [rsp+32], rbp
  00005	56		 push	 rsi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b f2	 mov	 rsi, rdx
; Line 299
  0000d	33 d2		 xor	 edx, edx
  0000f	48 8b e9	 mov	 rbp, rcx
  00012	44 8d 42 08	 lea	 r8d, QWORD PTR [rdx+8]
  00016	41 b9 10 06 00
	00		 mov	 r9d, 1552		; 00000610H
  0001c	48 8b ce	 mov	 rcx, rsi
  0001f	ff d5		 call	 rbp
; Line 300
  00021	48 85 c0	 test	 rax, rax
  00024	75 0b		 jne	 SHORT $LN5@lua_newsta
; Line 338
  00026	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5e		 pop	 rsi
  00030	c3		 ret	 0
$LN5@lua_newsta:
; Line 304
  00031	c6 40 10 08	 mov	 BYTE PTR [rax+16], 8
  00035	48 89 5c 24 30	 mov	 QWORD PTR [rsp+48], rbx
  0003a	48 8d 98 d8 00
	00 00		 lea	 rbx, QWORD PTR [rax+216]
  00041	48 89 7c 24 38	 mov	 QWORD PTR [rsp+56], rdi
  00046	48 8d 78 08	 lea	 rdi, QWORD PTR [rax+8]
  0004a	4c 89 74 24 40	 mov	 QWORD PTR [rsp+64], r14
  0004f	45 33 f6	 xor	 r14d, r14d
; Line 311
  00052	48 8b cf	 mov	 rcx, rdi
  00055	4c 89 37	 mov	 QWORD PTR [rdi], r14
  00058	c6 43 54 01	 mov	 BYTE PTR [rbx+84], 1
  0005c	c6 47 09 01	 mov	 BYTE PTR [rdi+9], 1
  00060	48 89 5f 18	 mov	 QWORD PTR [rdi+24], rbx
  00064	4c 89 77 38	 mov	 QWORD PTR [rdi+56], r14
  00068	4c 89 77 20	 mov	 QWORD PTR [rdi+32], r14
  0006c	66 44 89 77 0a	 mov	 WORD PTR [rdi+10], r14w
  00071	4c 89 b7 b8 00
	00 00		 mov	 QWORD PTR [rdi+184], r14
  00078	48 89 7f 50	 mov	 QWORD PTR [rdi+80], rdi
  0007c	4c 89 77 58	 mov	 QWORD PTR [rdi+88], r14
  00080	c7 87 c4 00 00
	00 01 00 00 00	 mov	 DWORD PTR [rdi+196], 1
  0008a	4c 89 b7 a8 00
	00 00		 mov	 QWORD PTR [rdi+168], r14
  00091	66 c7 87 c8 00
	00 00 00 01	 mov	 WORD PTR [rdi+200], 256	; 00000100H
  0009a	44 89 b7 c0 00
	00 00		 mov	 DWORD PTR [rdi+192], r14d
  000a1	4c 89 77 40	 mov	 QWORD PTR [rdi+64], r14
  000a5	44 88 77 0c	 mov	 BYTE PTR [rdi+12], r14b
  000a9	4c 89 b7 b0 00
	00 00		 mov	 QWORD PTR [rdi+176], r14
  000b0	48 89 2b	 mov	 QWORD PTR [rbx], rbp
  000b3	48 89 73 08	 mov	 QWORD PTR [rbx+8], rsi
  000b7	48 89 bb c8 00
	00 00		 mov	 QWORD PTR [rbx+200], rdi
  000be	e8 00 00 00 00	 call	 makeseed
; Line 320
  000c3	66 44 89 73 56	 mov	 WORD PTR [rbx+86], r14w
  000c8	4c 89 73 28	 mov	 QWORD PTR [rbx+40], r14
  000cc	4c 89 73 38	 mov	 QWORD PTR [rbx+56], r14
  000d0	89 43 50	 mov	 DWORD PTR [rbx+80], eax
  000d3	4c 89 73 30	 mov	 QWORD PTR [rbx+48], r14
  000d7	44 89 73 48	 mov	 DWORD PTR [rbx+72], r14d
  000db	4c 89 b3 c0 00
	00 00		 mov	 QWORD PTR [rbx+192], r14
  000e2	4c 89 b3 d0 00
	00 00		 mov	 QWORD PTR [rbx+208], r14
  000e9	c6 43 55 07	 mov	 BYTE PTR [rbx+85], 7
; Line 321
  000ed	4c 89 b3 a0 00
	00 00		 mov	 QWORD PTR [rbx+160], r14
  000f4	4c 89 b3 98 00
	00 00		 mov	 QWORD PTR [rbx+152], r14
  000fb	4c 89 73 68	 mov	 QWORD PTR [rbx+104], r14
  000ff	4c 89 73 58	 mov	 QWORD PTR [rbx+88], r14
; Line 322
  00103	4c 89 73 60	 mov	 QWORD PTR [rbx+96], r14
; Line 323
  00107	4c 89 73 78	 mov	 QWORD PTR [rbx+120], r14
  0010b	4c 89 73 70	 mov	 QWORD PTR [rbx+112], r14
; Line 324
  0010f	4c 89 b3 90 00
	00 00		 mov	 QWORD PTR [rbx+144], r14
  00116	4c 89 b3 88 00
	00 00		 mov	 QWORD PTR [rbx+136], r14
  0011d	4c 89 b3 80 00
	00 00		 mov	 QWORD PTR [rbx+128], r14
; Line 325
  00124	4c 89 b3 a8 00
	00 00		 mov	 QWORD PTR [rbx+168], r14
; Line 326
  0012b	48 c7 43 10 10
	06 00 00	 mov	 QWORD PTR [rbx+16], 1552 ; 00000610H
; Line 327
  00133	4c 89 73 18	 mov	 QWORD PTR [rbx+24], r14
; Line 328
  00137	44 89 b3 b0 00
	00 00		 mov	 DWORD PTR [rbx+176], r14d
; Line 329
  0013e	c7 83 b4 00 00
	00 c8 00 00 00	 mov	 DWORD PTR [rbx+180], 200 ; 000000c8H
; Line 330
  00148	c7 83 b8 00 00
	00 c8 00 00 00	 mov	 DWORD PTR [rbx+184], 200 ; 000000c8H
; Line 332
  00152	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:f_luaopen
  00159	45 33 c0	 xor	 r8d, r8d
  0015c	48 8b cf	 mov	 rcx, rdi
  0015f	4c 89 b3 a0 01
	00 00		 mov	 QWORD PTR [rbx+416], r14
  00166	4c 89 b3 a8 01
	00 00		 mov	 QWORD PTR [rbx+424], r14
  0016d	4c 89 b3 b0 01
	00 00		 mov	 QWORD PTR [rbx+432], r14
  00174	4c 89 b3 b8 01
	00 00		 mov	 QWORD PTR [rbx+440], r14
  0017b	4c 89 b3 c0 01
	00 00		 mov	 QWORD PTR [rbx+448], r14
  00182	4c 89 b3 c8 01
	00 00		 mov	 QWORD PTR [rbx+456], r14
  00189	4c 89 b3 d0 01
	00 00		 mov	 QWORD PTR [rbx+464], r14
  00190	4c 89 b3 d8 01
	00 00		 mov	 QWORD PTR [rbx+472], r14
  00197	4c 89 b3 e0 01
	00 00		 mov	 QWORD PTR [rbx+480], r14
  0019e	e8 00 00 00 00	 call	 luaD_rawrunprotected
  001a3	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  001a8	85 c0		 test	 eax, eax
  001aa	74 0b		 je	 SHORT $LN1@lua_newsta
; Line 334
  001ac	48 8b cf	 mov	 rcx, rdi
  001af	e8 00 00 00 00	 call	 close_state
; Line 335
  001b4	41 8b fe	 mov	 edi, r14d
$LN1@lua_newsta:
; Line 338
  001b7	4c 8b 74 24 40	 mov	 r14, QWORD PTR [rsp+64]
  001bc	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  001c1	48 8b c7	 mov	 rax, rdi
  001c4	48 8b 7c 24 38	 mov	 rdi, QWORD PTR [rsp+56]
  001c9	48 83 c4 20	 add	 rsp, 32			; 00000020H
  001cd	5e		 pop	 rsi
  001ce	c3		 ret	 0
lua_newstate ENDP
_TEXT	ENDS
END
