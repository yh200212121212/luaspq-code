; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_04LNEJFJGI@path?$AA@			; `string'
PUBLIC	??_C@_05EEMJHCCC@cpath?$AA@			; `string'
PUBLIC	??_C@_09IPENMJM@searchers?$AA@			; `string'
PUBLIC	??_C@_07KOEABFCN@loadlib?$AA@			; `string'
PUBLIC	??_C@_0L@LLHGDMBK@searchpath?$AA@		; `string'
PUBLIC	??_C@_06LNOHAKGK@seeall?$AA@			; `string'
PUBLIC	??_C@_07GCEAJMEA@preload?$AA@			; `string'
PUBLIC	??_C@_06IILMCCFO@loaded?$AA@			; `string'
PUBLIC	??_C@_06BIEEJMKO@module?$AA@			; `string'
PUBLIC	??_C@_07FFLLPPLH@require?$AA@			; `string'
;	COMDAT ??_C@_07FFLLPPLH@require?$AA@
CONST	SEGMENT
??_C@_07FFLLPPLH@require?$AA@ DB 'require', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BIEEJMKO@module?$AA@
CONST	SEGMENT
??_C@_06BIEEJMKO@module?$AA@ DB 'module', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IILMCCFO@loaded?$AA@
CONST	SEGMENT
??_C@_06IILMCCFO@loaded?$AA@ DB 'loaded', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GCEAJMEA@preload?$AA@
CONST	SEGMENT
??_C@_07GCEAJMEA@preload?$AA@ DB 'preload', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LNOHAKGK@seeall?$AA@
CONST	SEGMENT
??_C@_06LNOHAKGK@seeall?$AA@ DB 'seeall', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LLHGDMBK@searchpath?$AA@
CONST	SEGMENT
??_C@_0L@LLHGDMBK@searchpath?$AA@ DB 'searchpath', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KOEABFCN@loadlib?$AA@
CONST	SEGMENT
??_C@_07KOEABFCN@loadlib?$AA@ DB 'loadlib', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09IPENMJM@searchers?$AA@
CONST	SEGMENT
??_C@_09IPENMJM@searchers?$AA@ DB 'searchers', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05EEMJHCCC@cpath?$AA@
CONST	SEGMENT
??_C@_05EEMJHCCC@cpath?$AA@ DB 'cpath', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LNEJFJGI@path?$AA@
CONST	SEGMENT
??_C@_04LNEJFJGI@path?$AA@ DB 'path', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
CLIBS	DD	00H
	ORG $+12
pk_funcs DQ	FLAT:??_C@_07KOEABFCN@loadlib?$AA@
	DQ	FLAT:ll_loadlib
	DQ	FLAT:??_C@_0L@LLHGDMBK@searchpath?$AA@
	DQ	FLAT:ll_searchpath
	DQ	FLAT:??_C@_06LNOHAKGK@seeall?$AA@
	DQ	FLAT:ll_seeall
	DQ	FLAT:??_C@_07GCEAJMEA@preload?$AA@
	DQ	0000000000000000H
	DQ	FLAT:??_C@_05EEMJHCCC@cpath?$AA@
	DQ	0000000000000000H
	DQ	FLAT:??_C@_04LNEJFJGI@path?$AA@
	DQ	0000000000000000H
	DQ	FLAT:??_C@_09IPENMJM@searchers?$AA@
	DQ	0000000000000000H
	DQ	FLAT:??_C@_06IILMCCFO@loaded?$AA@
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
ll_funcs DQ	FLAT:??_C@_06BIEEJMKO@module?$AA@
	DQ	FLAT:ll_module
	DQ	FLAT:??_C@_07FFLLPPLH@require?$AA@
	DQ	FLAT:ll_require
	DQ	0000000000000000H
	DQ	0000000000000000H
?searchers@?1??createsearcherstable@@9@9 DQ FLAT:searcher_preload ; `createsearcherstable'::`2'::searchers
	DQ	FLAT:searcher_Lua
	DQ	FLAT:searcher_C
	DQ	FLAT:searcher_Croot
	DQ	0000000000000000H
CONST	ENDS
PUBLIC	luaopen_package
PUBLIC	??_C@_01KICIPPFI@?2?$AA@			; `string'
PUBLIC	??_C@_0CG@KOECHPEJ@unable?5to?5get?5process?5executable@ ; `string'
PUBLIC	??_C@_01DCLJPIOD@?$CB?$AA@			; `string'
PUBLIC	??_C@_0DL@DPPJHBHJ@dynamic?5libraries?5not?5enabled?$DL?5c@ ; `string'
PUBLIC	??_C@_06LBPOAOHH@absent?$AA@			; `string'
PUBLIC	??_C@_04HKFDNBLD@init?$AA@			; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	??_C@_01OGPIMHDM@?$DP?$AA@			; `string'
PUBLIC	??_C@_0P@NEBKIMDC@?6?7no?5file?5?8?$CFs?8?$AA@	; `string'
PUBLIC	??_C@_01LFCBOECM@?4?$AA@			; `string'
PUBLIC	??_C@_0BO@COFCKCAL@?8package?4?$CFs?8?5must?5be?5a?5string?$AA@ ; `string'
PUBLIC	??_C@_0CO@KHMIPLKM@error?5loading?5module?5?8?$CFs?8?5from?5f@ ; `string'
PUBLIC	??_C@_01IDAFKMJL@_?$AA@				; `string'
PUBLIC	??_C@_0L@KHKMBFOE@luaopen_?$CFs?$AA@		; `string'
PUBLIC	??_C@_0BO@KOILFIGK@?6?7no?5module?5?8?$CFs?8?5in?5file?5?8?$CFs?8?$AA@ ; `string'
PUBLIC	??_C@_08LBNNGFKE@_PRELOAD?$AA@			; `string'
PUBLIC	??_C@_0CB@NPNABMBF@?6?7no?5field?5package?4preload?$FL?8?$CFs?8?$FN@ ; `string'
PUBLIC	??_C@_0CE@JEDHJEBL@?8package?4searchers?8?5must?5be?5a?5ta@ ; `string'
PUBLIC	??_C@_0BJ@HFHHABH@module?5?8?$CFs?8?5not?5found?3?$CFs?$AA@ ; `string'
PUBLIC	??_C@_07PINPBNPB@_LOADED?$AA@			; `string'
PUBLIC	??_C@_01INIBCBCB@f?$AA@				; `string'
PUBLIC	??_C@_0CI@GKOMOAFD@?8module?8?5not?5called?5from?5a?5Lua?5f@ ; `string'
PUBLIC	??_C@_02CCIJHOCI@_M?$AA@			; `string'
PUBLIC	??_C@_05ICMCJINN@_NAME?$AA@			; `string'
PUBLIC	??_C@_08HONLOGDK@_PACKAGE?$AA@			; `string'
PUBLIC	??_C@_07NHABFFHN@__index?$AA@			; `string'
PUBLIC	??_C@_09EFECHJCA@LUA_NOENV?$AA@			; `string'
PUBLIC	??_C@_03MEOBNKEM@?$DL?$AB?$DL?$AA@		; `string'
PUBLIC	??_C@_02BEDCMDKE@?$DL?$DL?$AA@			; `string'
PUBLIC	??_C@_01KHDNNMEB@?$AB?$AA@			; `string'
PUBLIC	??_C@_07JAOCDFCG@loaders?$AA@			; `string'
PUBLIC	??_C@_04BDLIKKMN@__gc?$AA@			; `string'
PUBLIC	??_C@_0CF@KMBCNEPN@?4?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?2init@ ; `string'
PUBLIC	??_C@_08GLJMJBPN@LUA_PATH?$AA@			; `string'
PUBLIC	??_C@_0N@NMCAMIJK@LUA_PATH_1_1?$AA@		; `string'
PUBLIC	??_C@_0CG@JAFDBDLK@?4?2?$DP?4dll?$DL?$CB?2?4?4?2?2?$DP?4dll?$DL?$CB?2?4?4?2?2loadal@ ; `string'
PUBLIC	??_C@_09FBPOOEID@LUA_CPATH?$AA@			; `string'
PUBLIC	??_C@_0O@JEDNGFBJ@LUA_CPATH_1_1?$AA@		; `string'
PUBLIC	??_C@_0L@GKIMPOMK@?2?6?$DL?6?$DP?6?$CB?6?9?6?$AA@ ; `string'
PUBLIC	??_C@_06HEJKKHEK@config?$AA@			; `string'
PUBLIC	__real@405bc00000000000
EXTRN	__imp_fclose:PROC
EXTRN	__imp_fopen:PROC
EXTRN	__imp_getenv:PROC
EXTRN	__imp_strchr:PROC
EXTRN	__imp_strrchr:PROC
EXTRN	lua_gettop:PROC
EXTRN	lua_settop:PROC
EXTRN	lua_pushvalue:PROC
EXTRN	lua_rotate:PROC
EXTRN	lua_isstring:PROC
EXTRN	lua_iscfunction:PROC
EXTRN	lua_type:PROC
EXTRN	lua_toboolean:PROC
EXTRN	lua_tolstring:PROC
EXTRN	lua_touserdata:PROC
EXTRN	lua_pushnil:PROC
EXTRN	lua_pushlstring:PROC
EXTRN	lua_pushstring:PROC
EXTRN	lua_pushfstring:PROC
EXTRN	lua_pushcclosure:PROC
EXTRN	lua_pushboolean:PROC
EXTRN	lua_pushlightuserdata:PROC
EXTRN	lua_getfield:PROC
EXTRN	lua_rawgeti:PROC
EXTRN	lua_rawgetp:PROC
EXTRN	lua_createtable:PROC
EXTRN	lua_getmetatable:PROC
EXTRN	lua_setfield:PROC
EXTRN	lua_rawseti:PROC
EXTRN	lua_rawsetp:PROC
EXTRN	lua_setmetatable:PROC
EXTRN	lua_callk:PROC
EXTRN	lua_getstack:PROC
EXTRN	lua_getinfo:PROC
EXTRN	lua_setupvalue:PROC
EXTRN	luaL_checkversion_:PROC
EXTRN	luaL_checklstring:PROC
EXTRN	luaL_optlstring:PROC
EXTRN	luaL_checktype:PROC
EXTRN	luaL_error:PROC
EXTRN	luaL_loadfilex:PROC
EXTRN	luaL_len:PROC
EXTRN	luaL_gsub:PROC
EXTRN	luaL_setfuncs:PROC
EXTRN	luaL_getsubtable:PROC
EXTRN	luaL_buffinit:PROC
EXTRN	luaL_addvalue:PROC
EXTRN	luaL_pushresult:PROC
EXTRN	luaL_pushmodule:PROC
EXTRN	__imp_GetModuleFileNameA:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__chkstk:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaopen_package DD imagerel $LN6
	DD	imagerel $LN6+440
	DD	imagerel $unwind$luaopen_package
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lsys_load DD imagerel lsys_load
	DD	imagerel lsys_load+23
	DD	imagerel $unwind$lsys_load
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lsys_sym DD imagerel lsys_sym
	DD	imagerel lsys_sym+23
	DD	imagerel $unwind$lsys_sym
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$setprogdir DD imagerel setprogdir
	DD	imagerel setprogdir+192
	DD	imagerel $unwind$setprogdir
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$checkclib DD imagerel checkclib
	DD	imagerel checkclib+88
	DD	imagerel $unwind$checkclib
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$addtoclib DD imagerel addtoclib
	DD	imagerel addtoclib+137
	DD	imagerel $unwind$addtoclib
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$gctm DD	imagerel gctm
	DD	imagerel gctm+94
	DD	imagerel $unwind$gctm
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$lookforfunc DD imagerel lookforfunc
	DD	imagerel lookforfunc+187
	DD	imagerel $unwind$lookforfunc
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ll_loadlib DD imagerel ll_loadlib
	DD	imagerel ll_loadlib+147
	DD	imagerel $unwind$ll_loadlib
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$readable DD imagerel readable
	DD	imagerel readable+46
	DD	imagerel $unwind$readable
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$pushnexttemplate DD imagerel pushnexttemplate
	DD	imagerel pushnexttemplate+128
	DD	imagerel $unwind$pushnexttemplate
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$searchpath DD imagerel searchpath
	DD	imagerel searchpath+391
	DD	imagerel $unwind$searchpath
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ll_searchpath DD imagerel ll_searchpath
	DD	imagerel ll_searchpath+188
	DD	imagerel $unwind$ll_searchpath
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$findfile DD imagerel findfile
	DD	imagerel findfile+141
	DD	imagerel $unwind$findfile
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$checkload DD imagerel checkload
	DD	imagerel checkload+120
	DD	imagerel $unwind$checkload
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$searcher_Lua DD imagerel searcher_Lua
	DD	imagerel searcher_Lua+204
	DD	imagerel $unwind$searcher_Lua
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$loadfunc DD imagerel loadfunc
	DD	imagerel loadfunc+187
	DD	imagerel $unwind$loadfunc
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$searcher_C DD imagerel searcher_C
	DD	imagerel searcher_C+204
	DD	imagerel $unwind$searcher_C
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$searcher_Croot DD imagerel searcher_Croot
	DD	imagerel searcher_Croot+70
	DD	imagerel $unwind$searcher_Croot
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$searcher_Croot DD imagerel searcher_Croot+70
	DD	imagerel searcher_Croot+212
	DD	imagerel $chain$1$searcher_Croot
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$searcher_Croot DD imagerel searcher_Croot+212
	DD	imagerel searcher_Croot+309
	DD	imagerel $chain$2$searcher_Croot
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$searcher_Croot DD imagerel searcher_Croot+309
	DD	imagerel searcher_Croot+348
	DD	imagerel $chain$4$searcher_Croot
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$6$searcher_Croot DD imagerel searcher_Croot+348
	DD	imagerel searcher_Croot+377
	DD	imagerel $chain$6$searcher_Croot
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$searcher_preload DD imagerel searcher_preload
	DD	imagerel searcher_preload+100
	DD	imagerel $unwind$searcher_preload
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$findloader DD imagerel findloader
	DD	imagerel findloader+340
	DD	imagerel $unwind$findloader
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ll_require DD imagerel ll_require
	DD	imagerel ll_require+279
	DD	imagerel $unwind$ll_require
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$set_env DD imagerel set_env
	DD	imagerel set_env+171
	DD	imagerel $unwind$set_env
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$dooptions DD imagerel dooptions
	DD	imagerel dooptions+29
	DD	imagerel $unwind$dooptions
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$dooptions DD imagerel dooptions+29
	DD	imagerel dooptions+108
	DD	imagerel $chain$0$dooptions
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$dooptions DD imagerel dooptions+108
	DD	imagerel dooptions+124
	DD	imagerel $chain$1$dooptions
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$modinit DD imagerel modinit
	DD	imagerel modinit+149
	DD	imagerel $unwind$modinit
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ll_module DD imagerel ll_module
	DD	imagerel ll_module+163
	DD	imagerel $unwind$ll_module
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ll_seeall DD imagerel ll_seeall
	DD	imagerel ll_seeall+125
	DD	imagerel $unwind$ll_seeall
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$noenv DD	imagerel noenv
	DD	imagerel noenv+69
	DD	imagerel $unwind$noenv
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$setpath DD imagerel setpath
	DD	imagerel setpath+246
	DD	imagerel $unwind$setpath
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$createsearcherstable DD imagerel createsearcherstable
	DD	imagerel createsearcherstable+31
	DD	imagerel $unwind$createsearcherstable
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$createsearcherstable DD imagerel createsearcherstable+31
	DD	imagerel createsearcherstable+149
	DD	imagerel $chain$3$createsearcherstable
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$createsearcherstable DD imagerel createsearcherstable+149
	DD	imagerel createsearcherstable+205
	DD	imagerel $chain$4$createsearcherstable
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$createclibstable DD imagerel createclibstable
	DD	imagerel createclibstable+109
	DD	imagerel $unwind$createclibstable
pdata	ENDS
;	COMDAT __real@405bc00000000000
CONST	SEGMENT
__real@405bc00000000000 DQ 0405bc00000000000r	; 111
CONST	ENDS
;	COMDAT ??_C@_06HEJKKHEK@config?$AA@
CONST	SEGMENT
??_C@_06HEJKKHEK@config?$AA@ DB 'config', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GKIMPOMK@?2?6?$DL?6?$DP?6?$CB?6?9?6?$AA@
CONST	SEGMENT
??_C@_0L@GKIMPOMK@?2?6?$DL?6?$DP?6?$CB?6?9?6?$AA@ DB '\', 0aH, ';', 0aH, '?'
	DB	0aH, '!', 0aH, '-', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JEDNGFBJ@LUA_CPATH_1_1?$AA@
CONST	SEGMENT
??_C@_0O@JEDNGFBJ@LUA_CPATH_1_1?$AA@ DB 'LUA_CPATH_1_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09FBPOOEID@LUA_CPATH?$AA@
CONST	SEGMENT
??_C@_09FBPOOEID@LUA_CPATH?$AA@ DB 'LUA_CPATH', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JAFDBDLK@?4?2?$DP?4dll?$DL?$CB?2?4?4?2?2?$DP?4dll?$DL?$CB?2?4?4?2?2loadal@
CONST	SEGMENT
??_C@_0CG@JAFDBDLK@?4?2?$DP?4dll?$DL?$CB?2?4?4?2?2?$DP?4dll?$DL?$CB?2?4?4?2?2loadal@ DB '.'
	DB	'\?.dll;!\..\\?.dll;!\..\\loadall.dll', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NMCAMIJK@LUA_PATH_1_1?$AA@
CONST	SEGMENT
??_C@_0N@NMCAMIJK@LUA_PATH_1_1?$AA@ DB 'LUA_PATH_1_1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GLJMJBPN@LUA_PATH?$AA@
CONST	SEGMENT
??_C@_08GLJMJBPN@LUA_PATH?$AA@ DB 'LUA_PATH', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KMBCNEPN@?4?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?2init@
CONST	SEGMENT
??_C@_0CF@KMBCNEPN@?4?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?2init@ DB '.'
	DB	'\?.lua;!\..\\?.lua;!\..\\?\init.lua', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04BDLIKKMN@__gc?$AA@
CONST	SEGMENT
??_C@_04BDLIKKMN@__gc?$AA@ DB '__gc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JAOCDFCG@loaders?$AA@
CONST	SEGMENT
??_C@_07JAOCDFCG@loaders?$AA@ DB 'loaders', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KHDNNMEB@?$AB?$AA@
CONST	SEGMENT
??_C@_01KHDNNMEB@?$AB?$AA@ DB 01H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BEDCMDKE@?$DL?$DL?$AA@
CONST	SEGMENT
??_C@_02BEDCMDKE@?$DL?$DL?$AA@ DB ';;', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MEOBNKEM@?$DL?$AB?$DL?$AA@
CONST	SEGMENT
??_C@_03MEOBNKEM@?$DL?$AB?$DL?$AA@ DB ';', 01H, ';', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EFECHJCA@LUA_NOENV?$AA@
CONST	SEGMENT
??_C@_09EFECHJCA@LUA_NOENV?$AA@ DB 'LUA_NOENV', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NHABFFHN@__index?$AA@
CONST	SEGMENT
??_C@_07NHABFFHN@__index?$AA@ DB '__index', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HONLOGDK@_PACKAGE?$AA@
CONST	SEGMENT
??_C@_08HONLOGDK@_PACKAGE?$AA@ DB '_PACKAGE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05ICMCJINN@_NAME?$AA@
CONST	SEGMENT
??_C@_05ICMCJINN@_NAME?$AA@ DB '_NAME', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02CCIJHOCI@_M?$AA@
CONST	SEGMENT
??_C@_02CCIJHOCI@_M?$AA@ DB '_M', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@GKOMOAFD@?8module?8?5not?5called?5from?5a?5Lua?5f@
CONST	SEGMENT
??_C@_0CI@GKOMOAFD@?8module?8?5not?5called?5from?5a?5Lua?5f@ DB '''module'
	DB	''' not called from a Lua function', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01INIBCBCB@f?$AA@
CONST	SEGMENT
??_C@_01INIBCBCB@f?$AA@ DB 'f', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07PINPBNPB@_LOADED?$AA@
CONST	SEGMENT
??_C@_07PINPBNPB@_LOADED?$AA@ DB '_LOADED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HFHHABH@module?5?8?$CFs?8?5not?5found?3?$CFs?$AA@
CONST	SEGMENT
??_C@_0BJ@HFHHABH@module?5?8?$CFs?8?5not?5found?3?$CFs?$AA@ DB 'module '''
	DB	'%s'' not found:%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@JEDHJEBL@?8package?4searchers?8?5must?5be?5a?5ta@
CONST	SEGMENT
??_C@_0CE@JEDHJEBL@?8package?4searchers?8?5must?5be?5a?5ta@ DB '''package'
	DB	'.searchers'' must be a table', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NPNABMBF@?6?7no?5field?5package?4preload?$FL?8?$CFs?8?$FN@
CONST	SEGMENT
??_C@_0CB@NPNABMBF@?6?7no?5field?5package?4preload?$FL?8?$CFs?8?$FN@ DB 0aH
	DB	09H, 'no field package.preload[''%s'']', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LBNNGFKE@_PRELOAD?$AA@
CONST	SEGMENT
??_C@_08LBNNGFKE@_PRELOAD?$AA@ DB '_PRELOAD', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KOILFIGK@?6?7no?5module?5?8?$CFs?8?5in?5file?5?8?$CFs?8?$AA@
CONST	SEGMENT
??_C@_0BO@KOILFIGK@?6?7no?5module?5?8?$CFs?8?5in?5file?5?8?$CFs?8?$AA@ DB 0aH
	DB	09H, 'no module ''%s'' in file ''%s''', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KHKMBFOE@luaopen_?$CFs?$AA@
CONST	SEGMENT
??_C@_0L@KHKMBFOE@luaopen_?$CFs?$AA@ DB 'luaopen_%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01IDAFKMJL@_?$AA@
CONST	SEGMENT
??_C@_01IDAFKMJL@_?$AA@ DB '_', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@KHMIPLKM@error?5loading?5module?5?8?$CFs?8?5from?5f@
CONST	SEGMENT
??_C@_0CO@KHMIPLKM@error?5loading?5module?5?8?$CFs?8?5from?5f@ DB 'error '
	DB	'loading module ''%s'' from file ''%s'':', 0aH, 09H, '%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@COFCKCAL@?8package?4?$CFs?8?5must?5be?5a?5string?$AA@
CONST	SEGMENT
??_C@_0BO@COFCKCAL@?8package?4?$CFs?8?5must?5be?5a?5string?$AA@ DB '''pac'
	DB	'kage.%s'' must be a string', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01LFCBOECM@?4?$AA@
CONST	SEGMENT
??_C@_01LFCBOECM@?4?$AA@ DB '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NEBKIMDC@?6?7no?5file?5?8?$CFs?8?$AA@
CONST	SEGMENT
??_C@_0P@NEBKIMDC@?6?7no?5file?5?8?$CFs?8?$AA@ DB 0aH, 09H, 'no file ''%s'
	DB	'''', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_01OGPIMHDM@?$DP?$AA@
CONST	SEGMENT
??_C@_01OGPIMHDM@?$DP?$AA@ DB '?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HKFDNBLD@init?$AA@
CONST	SEGMENT
??_C@_04HKFDNBLD@init?$AA@ DB 'init', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LBPOAOHH@absent?$AA@
CONST	SEGMENT
??_C@_06LBPOAOHH@absent?$AA@ DB 'absent', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@DPPJHBHJ@dynamic?5libraries?5not?5enabled?$DL?5c@
CONST	SEGMENT
??_C@_0DL@DPPJHBHJ@dynamic?5libraries?5not?5enabled?$DL?5c@ DB 'dynamic l'
	DB	'ibraries not enabled; check your Lua installation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01DCLJPIOD@?$CB?$AA@
CONST	SEGMENT
??_C@_01DCLJPIOD@?$CB?$AA@ DB '!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KOECHPEJ@unable?5to?5get?5process?5executable@
CONST	SEGMENT
??_C@_0CG@KOECHPEJ@unable?5to?5get?5process?5executable@ DB 'unable to ge'
	DB	't process executable path', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KICIPPFI@?2?$AA@
CONST	SEGMENT
??_C@_01KICIPPFI@?2?$AA@ DB '\', 00H			; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$createclibstable DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$createsearcherstable DD 021H
	DD	imagerel createsearcherstable
	DD	imagerel createsearcherstable+31
	DD	imagerel $unwind$createsearcherstable
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$createsearcherstable DD 081421H
	DD	09f414H
	DD	08e40fH
	DD	07740aH
	DD	066405H
	DD	imagerel createsearcherstable
	DD	imagerel createsearcherstable+31
	DD	imagerel $unwind$createsearcherstable
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$createsearcherstable DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$setpath DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$noenv DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ll_seeall DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ll_module DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$modinit DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$dooptions DD 021H
	DD	imagerel dooptions
	DD	imagerel dooptions+29
	DD	imagerel $unwind$dooptions
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$dooptions DD 020521H
	DD	085405H
	DD	imagerel dooptions
	DD	imagerel dooptions+29
	DD	imagerel $unwind$dooptions
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$dooptions DD 060f01H
	DD	0a640fH
	DD	09340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$set_env DD 031b19H
	DD	0160109H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0a0H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ll_require DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$findloader DD 072719H
	DD	04123415H
	DD	040c0115H
	DD	060077008H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	02050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$searcher_preload DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$6$searcher_Croot DD 020021H
	DD	096400H
	DD	imagerel searcher_Croot
	DD	imagerel searcher_Croot+70
	DD	imagerel $unwind$searcher_Croot
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$searcher_Croot DD 020021H
	DD	096400H
	DD	imagerel searcher_Croot
	DD	imagerel searcher_Croot+70
	DD	imagerel $unwind$searcher_Croot
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$searcher_Croot DD 020021H
	DD	096400H
	DD	imagerel searcher_Croot
	DD	imagerel searcher_Croot+70
	DD	imagerel $unwind$searcher_Croot
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$searcher_Croot DD 040a21H
	DD	09640aH
	DD	085405H
	DD	imagerel searcher_Croot
	DD	imagerel searcher_Croot+70
	DD	imagerel $unwind$searcher_Croot
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$searcher_Croot DD 040a01H
	DD	0a340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$searcher_C DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$loadfunc DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$searcher_Lua DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$checkload DD 063701H
	DD	083437H
	DD	09640aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$findfile DD 0a1a01H
	DD	0b741aH
	DD	0a641aH
	DD	09541aH
	DD	08341aH
	DD	0e016521aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ll_searchpath DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$searchpath DD 072619H
	DD	040a0114H
	DD	07005e007H
	DD	050036004H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	02040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$pushnexttemplate DD 063c01H
	DD	06743cH
	DD	07340aH
	DD	06006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$readable DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ll_loadlib DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lookforfunc DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$gctm DD	040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$addtoclib DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$checkclib DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$setprogdir DD 031b19H
	DD	0280109H
	DD	03002H
	DD	imagerel __GSHandlerCheck
	DD	0130H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lsys_sym DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$lsys_load DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaopen_package DD 020601H
	DD	030025206H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT createclibstable
_TEXT	SEGMENT
L$ = 48
createclibstable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 825
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 826
  00006	45 33 c0	 xor	 r8d, r8d
  00009	33 d2		 xor	 edx, edx
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 lua_createtable
; Line 827
  00013	33 d2		 xor	 edx, edx
  00015	48 8b cb	 mov	 rcx, rbx
  00018	44 8d 42 01	 lea	 r8d, QWORD PTR [rdx+1]
  0001c	e8 00 00 00 00	 call	 lua_createtable
; Line 828
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:gctm
  00028	45 33 c0	 xor	 r8d, r8d
  0002b	48 8b cb	 mov	 rcx, rbx
  0002e	e8 00 00 00 00	 call	 lua_pushcclosure
; Line 829
  00033	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_04BDLIKKMN@__gc?$AA@
  0003a	ba fe ff ff ff	 mov	 edx, -2
  0003f	48 8b cb	 mov	 rcx, rbx
  00042	e8 00 00 00 00	 call	 lua_setfield
; Line 830
  00047	ba fe ff ff ff	 mov	 edx, -2
  0004c	48 8b cb	 mov	 rcx, rbx
  0004f	e8 00 00 00 00	 call	 lua_setmetatable
; Line 831
  00054	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:CLIBS
  0005b	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  00060	48 8b cb	 mov	 rcx, rbx
; Line 832
  00063	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00067	5b		 pop	 rbx
; Line 831
  00068	e9 00 00 00 00	 jmp	 lua_rawsetp
createclibstable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT createsearcherstable
_TEXT	SEGMENT
L$ = 48
createsearcherstable PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 801
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 806
  00006	45 33 c0	 xor	 r8d, r8d
  00009	48 8b d9	 mov	 rbx, rcx
  0000c	41 8d 50 04	 lea	 edx, QWORD PTR [r8+4]
  00010	e8 00 00 00 00	 call	 lua_createtable
; Line 808
  00015	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR ?searchers@?1??createsearcherstable@@9@9, 0
  0001d	74 76		 je	 SHORT $LN1@createsear
  0001f	48 89 74 24 30	 mov	 QWORD PTR [rsp+48], rsi
  00024	48 89 7c 24 38	 mov	 QWORD PTR [rsp+56], rdi
  00029	4c 89 74 24 40	 mov	 QWORD PTR [rsp+64], r14
  0002e	4c 89 7c 24 48	 mov	 QWORD PTR [rsp+72], r15
  00033	4c 8d 3d 00 00
	00 00		 lea	 r15, OFFSET FLAT:?searchers@?1??createsearcherstable@@9@9
  0003a	33 ff		 xor	 edi, edi
  0003c	4d 8b f7	 mov	 r14, r15
  0003f	8d 77 01	 lea	 esi, QWORD PTR [rdi+1]
$LL3@createsear:
; Line 809
  00042	ba fe ff ff ff	 mov	 edx, -2
  00047	48 8b cb	 mov	 rcx, rbx
  0004a	e8 00 00 00 00	 call	 lua_pushvalue
; Line 810
  0004f	49 8b 16	 mov	 rdx, QWORD PTR [r14]
  00052	41 b8 01 00 00
	00		 mov	 r8d, 1
  00058	48 8b cb	 mov	 rcx, rbx
  0005b	e8 00 00 00 00	 call	 lua_pushcclosure
; Line 811
  00060	4c 63 c6	 movsxd	 r8, esi
  00063	ba fe ff ff ff	 mov	 edx, -2
  00068	48 8b cb	 mov	 rcx, rbx
  0006b	e8 00 00 00 00	 call	 lua_rawseti
  00070	48 8d 7f 01	 lea	 rdi, QWORD PTR [rdi+1]
  00074	ff c6		 inc	 esi
  00076	49 83 3c ff 00	 cmp	 QWORD PTR [r15+rdi*8], 0
  0007b	4d 8d 34 ff	 lea	 r14, QWORD PTR [r15+rdi*8]
  0007f	75 c1		 jne	 SHORT $LL3@createsear
  00081	4c 8b 7c 24 48	 mov	 r15, QWORD PTR [rsp+72]
  00086	4c 8b 74 24 40	 mov	 r14, QWORD PTR [rsp+64]
  0008b	48 8b 7c 24 38	 mov	 rdi, QWORD PTR [rsp+56]
  00090	48 8b 74 24 30	 mov	 rsi, QWORD PTR [rsp+48]
$LN1@createsear:
; Line 814
  00095	83 ca ff	 or	 edx, -1
  00098	48 8b cb	 mov	 rcx, rbx
  0009b	e8 00 00 00 00	 call	 lua_pushvalue
; Line 815
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_07JAOCDFCG@loaders?$AA@
  000a7	ba fd ff ff ff	 mov	 edx, -3
  000ac	48 8b cb	 mov	 rcx, rbx
  000af	e8 00 00 00 00	 call	 lua_setfield
; Line 817
  000b4	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_09IPENMJM@searchers?$AA@
  000bb	ba fe ff ff ff	 mov	 edx, -2
  000c0	48 8b cb	 mov	 rcx, rbx
; Line 818
  000c3	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000c7	5b		 pop	 rbx
; Line 817
  000c8	e9 00 00 00 00	 jmp	 lua_setfield
createsearcherstable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT setpath
_TEXT	SEGMENT
L$ = 48
fieldname$ = 56
envname1$ = 64
envname2$ = 72
def$ = 80
setpath	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 758
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b f9	 mov	 rdi, rcx
; Line 759
  00017	49 8b c8	 mov	 rcx, r8
  0001a	49 8b d9	 mov	 rbx, r9
  0001d	48 8b ea	 mov	 rbp, rdx
  00020	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_getenv
  00026	48 8b f0	 mov	 rsi, rax
; Line 760
  00029	48 85 c0	 test	 rax, rax
  0002c	75 11		 jne	 SHORT $LN9@setpath
; Line 761
  0002e	48 8b cb	 mov	 rcx, rbx
  00031	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_getenv
  00037	48 8b f0	 mov	 rsi, rax
; Line 762
  0003a	48 85 c0	 test	 rax, rax
  0003d	74 7e		 je	 SHORT $LN2@setpath
$LN9@setpath:
  0003f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_09EFECHJCA@LUA_NOENV?$AA@
  00046	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  0004b	48 8b cf	 mov	 rcx, rdi
  0004e	e8 00 00 00 00	 call	 lua_getfield
  00053	83 ca ff	 or	 edx, -1
  00056	48 8b cf	 mov	 rcx, rdi
  00059	e8 00 00 00 00	 call	 lua_toboolean
  0005e	ba fe ff ff ff	 mov	 edx, -2
  00063	48 8b cf	 mov	 rcx, rdi
  00066	8b d8		 mov	 ebx, eax
  00068	e8 00 00 00 00	 call	 lua_settop
  0006d	85 db		 test	 ebx, ebx
  0006f	75 4c		 jne	 SHORT $LN2@setpath
; Line 767
  00071	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_03MEOBNKEM@?$DL?$AB?$DL?$AA@
  00078	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02BEDCMDKE@?$DL?$DL?$AA@
  0007f	48 8b d6	 mov	 rdx, rsi
  00082	48 8b cf	 mov	 rcx, rdi
  00085	e8 00 00 00 00	 call	 luaL_gsub
; Line 768
  0008a	4c 8b 4c 24 50	 mov	 r9, QWORD PTR def$[rsp]
  0008f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_01KHDNNMEB@?$AB?$AA@
  00096	48 8b d0	 mov	 rdx, rax
  00099	48 8b cf	 mov	 rcx, rdi
  0009c	e8 00 00 00 00	 call	 luaL_gsub
; Line 769
  000a1	8d 53 fe	 lea	 edx, QWORD PTR [rbx-2]
  000a4	41 83 c8 ff	 or	 r8d, -1
  000a8	48 8b cf	 mov	 rcx, rdi
  000ab	e8 00 00 00 00	 call	 lua_rotate
  000b0	8d 53 fe	 lea	 edx, QWORD PTR [rbx-2]
  000b3	48 8b cf	 mov	 rcx, rdi
  000b6	e8 00 00 00 00	 call	 lua_settop
  000bb	eb 0d		 jmp	 SHORT $LN1@setpath
$LN2@setpath:
; Line 763
  000bd	48 8b 54 24 50	 mov	 rdx, QWORD PTR def$[rsp]
  000c2	48 8b cf	 mov	 rcx, rdi
  000c5	e8 00 00 00 00	 call	 lua_pushstring
$LN1@setpath:
; Line 771
  000ca	48 8b cf	 mov	 rcx, rdi
  000cd	e8 00 00 00 00	 call	 setprogdir
; Line 772
  000d2	4c 8b c5	 mov	 r8, rbp
  000d5	ba fe ff ff ff	 mov	 edx, -2
  000da	48 8b cf	 mov	 rcx, rdi
; Line 773
  000dd	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000e2	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  000e7	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  000ec	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000f0	5f		 pop	 rdi
; Line 772
  000f1	e9 00 00 00 00	 jmp	 lua_setfield
setpath	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT noenv
_TEXT	SEGMENT
L$ = 48
noenv	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 748
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 750
  0000a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_09EFECHJCA@LUA_NOENV?$AA@
  00011	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  00016	48 8b f9	 mov	 rdi, rcx
  00019	e8 00 00 00 00	 call	 lua_getfield
; Line 751
  0001e	83 ca ff	 or	 edx, -1
  00021	48 8b cf	 mov	 rcx, rdi
  00024	e8 00 00 00 00	 call	 lua_toboolean
; Line 752
  00029	ba fe ff ff ff	 mov	 edx, -2
  0002e	48 8b cf	 mov	 rcx, rdi
  00031	8b d8		 mov	 ebx, eax
  00033	e8 00 00 00 00	 call	 lua_settop
; Line 753
  00038	8b c3		 mov	 eax, ebx
; Line 754
  0003a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
noenv	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ll_seeall
_TEXT	SEGMENT
L$ = 48
ll_seeall PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 724
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 725
  00006	ba 01 00 00 00	 mov	 edx, 1
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	44 8d 42 04	 lea	 r8d, QWORD PTR [rdx+4]
  00012	e8 00 00 00 00	 call	 luaL_checktype
; Line 726
  00017	ba 01 00 00 00	 mov	 edx, 1
  0001c	48 8b cb	 mov	 rcx, rbx
  0001f	e8 00 00 00 00	 call	 lua_getmetatable
  00024	85 c0		 test	 eax, eax
  00026	75 26		 jne	 SHORT $LN1@ll_seeall
; Line 727
  00028	44 8d 40 01	 lea	 r8d, QWORD PTR [rax+1]
  0002c	33 d2		 xor	 edx, edx
  0002e	48 8b cb	 mov	 rcx, rbx
  00031	e8 00 00 00 00	 call	 lua_createtable
; Line 728
  00036	83 ca ff	 or	 edx, -1
  00039	48 8b cb	 mov	 rcx, rbx
  0003c	e8 00 00 00 00	 call	 lua_pushvalue
; Line 729
  00041	ba 01 00 00 00	 mov	 edx, 1
  00046	48 8b cb	 mov	 rcx, rbx
  00049	e8 00 00 00 00	 call	 lua_setmetatable
$LN1@ll_seeall:
; Line 731
  0004e	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  00053	41 b8 02 00 00
	00		 mov	 r8d, 2
  00059	48 8b cb	 mov	 rcx, rbx
  0005c	e8 00 00 00 00	 call	 lua_rawgeti
; Line 732
  00061	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_07NHABFFHN@__index?$AA@
  00068	ba fe ff ff ff	 mov	 edx, -2
  0006d	48 8b cb	 mov	 rcx, rbx
  00070	e8 00 00 00 00	 call	 lua_setfield
; Line 733
  00075	33 c0		 xor	 eax, eax
; Line 734
  00077	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007b	5b		 pop	 rbx
  0007c	c3		 ret	 0
ll_seeall ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ll_module
_TEXT	SEGMENT
L$ = 48
ll_module PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 706
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 707
  0000f	45 33 c0	 xor	 r8d, r8d
  00012	48 8b d9	 mov	 rbx, rcx
  00015	41 8d 50 01	 lea	 edx, QWORD PTR [r8+1]
  00019	e8 00 00 00 00	 call	 luaL_checklstring
; Line 708
  0001e	48 8b cb	 mov	 rcx, rbx
  00021	48 8b f8	 mov	 rdi, rax
  00024	e8 00 00 00 00	 call	 lua_gettop
; Line 709
  00029	41 b8 01 00 00
	00		 mov	 r8d, 1
  0002f	48 8b d7	 mov	 rdx, rdi
  00032	48 8b cb	 mov	 rcx, rbx
  00035	8b f0		 mov	 esi, eax
  00037	e8 00 00 00 00	 call	 luaL_pushmodule
; Line 711
  0003c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_05ICMCJINN@_NAME?$AA@
  00043	83 ca ff	 or	 edx, -1
  00046	48 8b cb	 mov	 rcx, rbx
  00049	e8 00 00 00 00	 call	 lua_getfield
; Line 712
  0004e	ba fe ff ff ff	 mov	 edx, -2
  00053	48 8b cb	 mov	 rcx, rbx
  00056	85 c0		 test	 eax, eax
  00058	74 07		 je	 SHORT $LN2@ll_module
  0005a	e8 00 00 00 00	 call	 lua_settop
; Line 713
  0005f	eb 10		 jmp	 SHORT $LN1@ll_module
$LN2@ll_module:
; Line 714
  00061	e8 00 00 00 00	 call	 lua_settop
; Line 715
  00066	48 8b d7	 mov	 rdx, rdi
  00069	48 8b cb	 mov	 rcx, rbx
  0006c	e8 00 00 00 00	 call	 modinit
$LN1@ll_module:
; Line 717
  00071	83 ca ff	 or	 edx, -1
  00074	48 8b cb	 mov	 rcx, rbx
  00077	e8 00 00 00 00	 call	 lua_pushvalue
; Line 718
  0007c	48 8b cb	 mov	 rcx, rbx
  0007f	e8 00 00 00 00	 call	 set_env
; Line 719
  00084	8b d6		 mov	 edx, esi
  00086	48 8b cb	 mov	 rcx, rbx
  00089	e8 00 00 00 00	 call	 dooptions
; Line 721
  0008e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00093	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00098	b8 01 00 00 00	 mov	 eax, 1
  0009d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
ll_module ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT modinit
_TEXT	SEGMENT
L$ = 48
modname$ = 56
modinit	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 691
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
; Line 693
  0000d	83 ca ff	 or	 edx, -1
  00010	48 8b f9	 mov	 rdi, rcx
  00013	e8 00 00 00 00	 call	 lua_pushvalue
; Line 694
  00018	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02CCIJHOCI@_M?$AA@
  0001f	ba fe ff ff ff	 mov	 edx, -2
  00024	48 8b cf	 mov	 rcx, rdi
  00027	e8 00 00 00 00	 call	 lua_setfield
; Line 695
  0002c	48 8b d3	 mov	 rdx, rbx
  0002f	48 8b cf	 mov	 rcx, rdi
  00032	e8 00 00 00 00	 call	 lua_pushstring
; Line 696
  00037	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_05ICMCJINN@_NAME?$AA@
  0003e	ba fe ff ff ff	 mov	 edx, -2
  00043	48 8b cf	 mov	 rcx, rdi
  00046	e8 00 00 00 00	 call	 lua_setfield
; Line 697
  0004b	ba 2e 00 00 00	 mov	 edx, 46			; 0000002eH
  00050	48 8b cb	 mov	 rcx, rbx
  00053	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strrchr
; Line 698
  00059	48 85 c0	 test	 rax, rax
  0005c	75 05		 jne	 SHORT $LN2@modinit
  0005e	48 8b c3	 mov	 rax, rbx
  00061	eb 03		 jmp	 SHORT $LN1@modinit
$LN2@modinit:
; Line 699
  00063	48 ff c0	 inc	 rax
$LN1@modinit:
; Line 701
  00066	48 2b c3	 sub	 rax, rbx
  00069	48 8b d3	 mov	 rdx, rbx
  0006c	48 8b cf	 mov	 rcx, rdi
  0006f	4c 8b c0	 mov	 r8, rax
  00072	e8 00 00 00 00	 call	 lua_pushlstring
; Line 702
  00077	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_08HONLOGDK@_PACKAGE?$AA@
  0007e	ba fe ff ff ff	 mov	 edx, -2
  00083	48 8b cf	 mov	 rcx, rdi
; Line 703
  00086	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0008b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008f	5f		 pop	 rdi
; Line 702
  00090	e9 00 00 00 00	 jmp	 lua_setfield
modinit	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT dooptions
_TEXT	SEGMENT
L$ = 64
n$ = 72
dooptions PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 679
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 681
  0000f	bb 02 00 00 00	 mov	 ebx, 2
  00014	8b f2		 mov	 esi, edx
  00016	48 8b f9	 mov	 rdi, rcx
  00019	3b d3		 cmp	 edx, ebx
  0001b	7c 4f		 jl	 SHORT $LN2@dooptions
  0001d	48 89 6c 24 40	 mov	 QWORD PTR [rsp+64], rbp
  00022	33 ed		 xor	 ebp, ebp
$LL4@dooptions:
; Line 682
  00024	8b d3		 mov	 edx, ebx
  00026	48 8b cf	 mov	 rcx, rdi
  00029	e8 00 00 00 00	 call	 lua_type
  0002e	83 f8 06	 cmp	 eax, 6
  00031	75 2e		 jne	 SHORT $LN3@dooptions
; Line 683
  00033	8b d3		 mov	 edx, ebx
  00035	48 8b cf	 mov	 rcx, rdi
  00038	e8 00 00 00 00	 call	 lua_pushvalue
; Line 684
  0003d	ba fe ff ff ff	 mov	 edx, -2
  00042	48 8b cf	 mov	 rcx, rdi
  00045	e8 00 00 00 00	 call	 lua_pushvalue
; Line 685
  0004a	45 33 c9	 xor	 r9d, r9d
  0004d	45 33 c0	 xor	 r8d, r8d
  00050	41 8d 51 01	 lea	 edx, QWORD PTR [r9+1]
  00054	48 8b cf	 mov	 rcx, rdi
  00057	48 89 6c 24 20	 mov	 QWORD PTR [rsp+32], rbp
  0005c	e8 00 00 00 00	 call	 lua_callk
$LN3@dooptions:
; Line 681
  00061	ff c3		 inc	 ebx
  00063	3b de		 cmp	 ebx, esi
  00065	7e bd		 jle	 SHORT $LL4@dooptions
  00067	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
$LN2@dooptions:
; Line 688
  0006c	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00071	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  00076	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007a	5f		 pop	 rdi
  0007b	c3		 ret	 0
dooptions ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT set_env
_TEXT	SEGMENT
ar$ = 32
__$ArrayPad$ = 160
L$ = 192
set_env	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 667
  00000	40 53		 push	 rbx
  00002	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00009	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00010	48 33 c4	 xor	 rax, rsp
  00013	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 671
  0001b	4c 8d 44 24 20	 lea	 r8, QWORD PTR ar$[rsp]
  00020	ba 01 00 00 00	 mov	 edx, 1
  00025	48 8b d9	 mov	 rbx, rcx
  00028	e8 00 00 00 00	 call	 lua_getstack
  0002d	85 c0		 test	 eax, eax
  0002f	74 27		 je	 SHORT $LN1@set_env
  00031	4c 8d 44 24 20	 lea	 r8, QWORD PTR ar$[rsp]
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01INIBCBCB@f?$AA@
  0003d	48 8b cb	 mov	 rcx, rbx
  00040	e8 00 00 00 00	 call	 lua_getinfo
  00045	85 c0		 test	 eax, eax
  00047	74 0f		 je	 SHORT $LN1@set_env
  00049	83 ca ff	 or	 edx, -1
  0004c	48 8b cb	 mov	 rcx, rbx
  0004f	e8 00 00 00 00	 call	 lua_iscfunction
  00054	85 c0		 test	 eax, eax
  00056	74 0f		 je	 SHORT $LN2@set_env
$LN1@set_env:
; Line 672
  00058	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CI@GKOMOAFD@?8module?8?5not?5called?5from?5a?5Lua?5f@
  0005f	48 8b cb	 mov	 rcx, rbx
  00062	e8 00 00 00 00	 call	 luaL_error
$LN2@set_env:
; Line 673
  00067	ba fe ff ff ff	 mov	 edx, -2
  0006c	48 8b cb	 mov	 rcx, rbx
  0006f	e8 00 00 00 00	 call	 lua_pushvalue
; Line 674
  00074	ba fe ff ff ff	 mov	 edx, -2
  00079	48 8b cb	 mov	 rcx, rbx
  0007c	44 8d 42 03	 lea	 r8d, QWORD PTR [rdx+3]
  00080	e8 00 00 00 00	 call	 lua_setupvalue
; Line 675
  00085	ba fe ff ff ff	 mov	 edx, -2
  0008a	48 8b cb	 mov	 rcx, rbx
  0008d	e8 00 00 00 00	 call	 lua_settop
; Line 676
  00092	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0009a	48 33 cc	 xor	 rcx, rsp
  0009d	e8 00 00 00 00	 call	 __security_check_cookie
  000a2	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  000a9	5b		 pop	 rbx
  000aa	c3		 ret	 0
set_env	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ll_require
_TEXT	SEGMENT
L$ = 64
ll_require PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 630
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 631
  0000a	45 33 c0	 xor	 r8d, r8d
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	41 8d 50 01	 lea	 edx, QWORD PTR [r8+1]
  00014	e8 00 00 00 00	 call	 luaL_checklstring
; Line 632
  00019	ba 01 00 00 00	 mov	 edx, 1
  0001e	48 8b cb	 mov	 rcx, rbx
  00021	48 8b f8	 mov	 rdi, rax
  00024	e8 00 00 00 00	 call	 lua_settop
; Line 633
  00029	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_07PINPBNPB@_LOADED?$AA@
  00030	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  00035	48 8b cb	 mov	 rcx, rbx
  00038	e8 00 00 00 00	 call	 lua_getfield
; Line 634
  0003d	4c 8b c7	 mov	 r8, rdi
  00040	ba 02 00 00 00	 mov	 edx, 2
  00045	48 8b cb	 mov	 rcx, rbx
  00048	e8 00 00 00 00	 call	 lua_getfield
; Line 635
  0004d	83 ca ff	 or	 edx, -1
  00050	48 8b cb	 mov	 rcx, rbx
  00053	e8 00 00 00 00	 call	 lua_toboolean
  00058	85 c0		 test	 eax, eax
  0005a	0f 85 a7 00 00
	00		 jne	 $LN1@ll_require
; Line 638
  00060	8d 50 fe	 lea	 edx, QWORD PTR [rax-2]
  00063	48 8b cb	 mov	 rcx, rbx
  00066	e8 00 00 00 00	 call	 lua_settop
; Line 639
  0006b	48 8b d7	 mov	 rdx, rdi
  0006e	48 8b cb	 mov	 rcx, rbx
  00071	e8 00 00 00 00	 call	 findloader
; Line 640
  00076	48 8b d7	 mov	 rdx, rdi
  00079	48 8b cb	 mov	 rcx, rbx
  0007c	e8 00 00 00 00	 call	 lua_pushstring
; Line 641
  00081	ba fe ff ff ff	 mov	 edx, -2
  00086	48 8b cb	 mov	 rcx, rbx
  00089	44 8d 42 03	 lea	 r8d, QWORD PTR [rdx+3]
  0008d	e8 00 00 00 00	 call	 lua_rotate
; Line 642
  00092	45 33 c9	 xor	 r9d, r9d
  00095	48 8b cb	 mov	 rcx, rbx
  00098	41 8d 51 02	 lea	 edx, QWORD PTR [r9+2]
  0009c	45 8d 41 01	 lea	 r8d, QWORD PTR [r9+1]
  000a0	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000a9	e8 00 00 00 00	 call	 lua_callk
; Line 643
  000ae	83 ca ff	 or	 edx, -1
  000b1	48 8b cb	 mov	 rcx, rbx
  000b4	e8 00 00 00 00	 call	 lua_type
  000b9	85 c0		 test	 eax, eax
  000bb	74 10		 je	 SHORT $LN2@ll_require
; Line 644
  000bd	4c 8b c7	 mov	 r8, rdi
  000c0	ba 02 00 00 00	 mov	 edx, 2
  000c5	48 8b cb	 mov	 rcx, rbx
  000c8	e8 00 00 00 00	 call	 lua_setfield
$LN2@ll_require:
; Line 645
  000cd	4c 8b c7	 mov	 r8, rdi
  000d0	ba 02 00 00 00	 mov	 edx, 2
  000d5	48 8b cb	 mov	 rcx, rbx
  000d8	e8 00 00 00 00	 call	 lua_getfield
  000dd	85 c0		 test	 eax, eax
  000df	75 26		 jne	 SHORT $LN1@ll_require
; Line 646
  000e1	8d 50 01	 lea	 edx, QWORD PTR [rax+1]
  000e4	48 8b cb	 mov	 rcx, rbx
  000e7	e8 00 00 00 00	 call	 lua_pushboolean
; Line 647
  000ec	83 ca ff	 or	 edx, -1
  000ef	48 8b cb	 mov	 rcx, rbx
  000f2	e8 00 00 00 00	 call	 lua_pushvalue
; Line 648
  000f7	4c 8b c7	 mov	 r8, rdi
  000fa	ba 02 00 00 00	 mov	 edx, 2
  000ff	48 8b cb	 mov	 rcx, rbx
  00102	e8 00 00 00 00	 call	 lua_setfield
$LN1@ll_require:
; Line 650
  00107	b8 01 00 00 00	 mov	 eax, 1
; Line 651
  0010c	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00111	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
ll_require ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT findloader
_TEXT	SEGMENT
msg$ = 48
__$ArrayPad$ = 8272
L$ = 8320
name$ = 8328
findloader PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 602
  00000	48 89 5c 24 18	 mov	 QWORD PTR [rsp+24], rbx
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	b8 60 20 00 00	 mov	 eax, 8288		; 00002060H
  0000d	e8 00 00 00 00	 call	 __chkstk
  00012	48 2b e0	 sub	 rsp, rax
  00015	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001c	48 33 c4	 xor	 rax, rsp
  0001f	48 89 84 24 50
	20 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00027	48 8b f2	 mov	 rsi, rdx
; Line 605
  0002a	48 8d 54 24 30	 lea	 rdx, QWORD PTR msg$[rsp]
  0002f	48 8b d9	 mov	 rbx, rcx
  00032	e8 00 00 00 00	 call	 luaL_buffinit
; Line 607
  00037	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_09IPENMJM@searchers?$AA@
  0003e	ba d7 b9 f0 ff	 mov	 edx, -1001001		; fffffffffff0b9d7H
  00043	48 8b cb	 mov	 rcx, rbx
  00046	e8 00 00 00 00	 call	 lua_getfield
  0004b	83 f8 05	 cmp	 eax, 5
  0004e	74 0f		 je	 SHORT $LN9@findloader
; Line 608
  00050	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CE@JEDHJEBL@?8package?4searchers?8?5must?5be?5a?5ta@
  00057	48 8b cb	 mov	 rcx, rbx
  0005a	e8 00 00 00 00	 call	 luaL_error
$LN9@findloader:
; Line 610
  0005f	bf 01 00 00 00	 mov	 edi, 1
  00064	33 ed		 xor	 ebp, ebp
  00066	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL8@findloader:
; Line 611
  00070	4c 63 c7	 movsxd	 r8, edi
  00073	ba 03 00 00 00	 mov	 edx, 3
  00078	48 8b cb	 mov	 rcx, rbx
  0007b	e8 00 00 00 00	 call	 lua_rawgeti
  00080	85 c0		 test	 eax, eax
  00082	75 38		 jne	 SHORT $LN5@findloader
; Line 612
  00084	8d 50 fe	 lea	 edx, QWORD PTR [rax-2]
  00087	48 8b cb	 mov	 rcx, rbx
  0008a	e8 00 00 00 00	 call	 lua_settop
; Line 613
  0008f	48 8d 4c 24 30	 lea	 rcx, QWORD PTR msg$[rsp]
  00094	e8 00 00 00 00	 call	 luaL_pushresult
; Line 614
  00099	45 33 c0	 xor	 r8d, r8d
  0009c	83 ca ff	 or	 edx, -1
  0009f	48 8b cb	 mov	 rcx, rbx
  000a2	e8 00 00 00 00	 call	 lua_tolstring
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@HFHHABH@module?5?8?$CFs?8?5not?5found?3?$CFs?$AA@
  000ae	4c 8b c6	 mov	 r8, rsi
  000b1	4c 8b c8	 mov	 r9, rax
  000b4	48 8b cb	 mov	 rcx, rbx
  000b7	e8 00 00 00 00	 call	 luaL_error
$LN5@findloader:
; Line 616
  000bc	48 8b d6	 mov	 rdx, rsi
  000bf	48 8b cb	 mov	 rcx, rbx
  000c2	e8 00 00 00 00	 call	 lua_pushstring
; Line 617
  000c7	45 33 c9	 xor	 r9d, r9d
  000ca	48 8b cb	 mov	 rcx, rbx
  000cd	41 8d 51 01	 lea	 edx, QWORD PTR [r9+1]
  000d1	45 8d 41 02	 lea	 r8d, QWORD PTR [r9+2]
  000d5	48 89 6c 24 20	 mov	 QWORD PTR [rsp+32], rbp
  000da	e8 00 00 00 00	 call	 lua_callk
; Line 618
  000df	ba fe ff ff ff	 mov	 edx, -2
  000e4	48 8b cb	 mov	 rcx, rbx
  000e7	e8 00 00 00 00	 call	 lua_type
  000ec	83 f8 06	 cmp	 eax, 6
  000ef	74 40		 je	 SHORT $LN14@findloader
; Line 620
  000f1	ba fe ff ff ff	 mov	 edx, -2
  000f6	48 8b cb	 mov	 rcx, rbx
  000f9	e8 00 00 00 00	 call	 lua_isstring
; Line 621
  000fe	48 8b cb	 mov	 rcx, rbx
  00101	85 c0		 test	 eax, eax
  00103	74 1b		 je	 SHORT $LN2@findloader
  00105	ba fe ff ff ff	 mov	 edx, -2
  0010a	e8 00 00 00 00	 call	 lua_settop
; Line 622
  0010f	48 8d 4c 24 30	 lea	 rcx, QWORD PTR msg$[rsp]
  00114	e8 00 00 00 00	 call	 luaL_addvalue
  00119	ff c7		 inc	 edi
  0011b	e9 50 ff ff ff	 jmp	 $LL8@findloader
$LN2@findloader:
; Line 625
  00120	ba fd ff ff ff	 mov	 edx, -3
  00125	e8 00 00 00 00	 call	 lua_settop
  0012a	ff c7		 inc	 edi
  0012c	e9 3f ff ff ff	 jmp	 $LL8@findloader
$LN14@findloader:
; Line 627
  00131	48 8b 8c 24 50
	20 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00139	48 33 cc	 xor	 rcx, rsp
  0013c	e8 00 00 00 00	 call	 __security_check_cookie
  00141	48 8b 9c 24 90
	20 00 00	 mov	 rbx, QWORD PTR [rsp+8336]
  00149	48 81 c4 60 20
	00 00		 add	 rsp, 8288		; 00002060H
  00150	5f		 pop	 rdi
  00151	5e		 pop	 rsi
  00152	5d		 pop	 rbp
  00153	c3		 ret	 0
findloader ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT searcher_preload
_TEXT	SEGMENT
L$ = 48
searcher_preload PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 593
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 594
  0000a	45 33 c0	 xor	 r8d, r8d
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	41 8d 50 01	 lea	 edx, QWORD PTR [r8+1]
  00014	e8 00 00 00 00	 call	 luaL_checklstring
; Line 595
  00019	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_08LBNNGFKE@_PRELOAD?$AA@
  00020	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  00025	48 8b cb	 mov	 rcx, rbx
  00028	48 8b f8	 mov	 rdi, rax
  0002b	e8 00 00 00 00	 call	 lua_getfield
; Line 596
  00030	4c 8b c7	 mov	 r8, rdi
  00033	83 ca ff	 or	 edx, -1
  00036	48 8b cb	 mov	 rcx, rbx
  00039	e8 00 00 00 00	 call	 lua_getfield
  0003e	85 c0		 test	 eax, eax
  00040	75 12		 jne	 SHORT $LN4@searcher_p
; Line 597
  00042	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CB@NPNABMBF@?6?7no?5field?5package?4preload?$FL?8?$CFs?8?$FN@
  00049	4c 8b c7	 mov	 r8, rdi
  0004c	48 8b cb	 mov	 rcx, rbx
  0004f	e8 00 00 00 00	 call	 lua_pushfstring
$LN4@searcher_p:
; Line 598
  00054	b8 01 00 00 00	 mov	 eax, 1
; Line 599
  00059	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0005e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00062	5f		 pop	 rdi
  00063	c3		 ret	 0
searcher_preload ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT searcher_Croot
_TEXT	SEGMENT
L$ = 64
searcher_Croot PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 571
  00000	48 89 5c 24 18	 mov	 QWORD PTR [rsp+24], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 573
  0000a	45 33 c0	 xor	 r8d, r8d
  0000d	48 8b f9	 mov	 rdi, rcx
  00010	41 8d 50 01	 lea	 edx, QWORD PTR [r8+1]
  00014	e8 00 00 00 00	 call	 luaL_checklstring
; Line 574
  00019	ba 2e 00 00 00	 mov	 edx, 46			; 0000002eH
  0001e	48 8b c8	 mov	 rcx, rax
  00021	48 8b d8	 mov	 rbx, rax
  00024	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strchr
; Line 576
  0002a	48 85 c0	 test	 rax, rax
  0002d	75 0b		 jne	 SHORT $LN5@searcher_C
; Line 590
  0002f	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  00034	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
$LN5@searcher_C:
; Line 577
  0003a	48 2b c3	 sub	 rax, rbx
  0003d	48 8b d3	 mov	 rdx, rbx
  00040	48 8b cf	 mov	 rcx, rdi
  00043	4c 8b c0	 mov	 r8, rax
  00046	48 89 6c 24 40	 mov	 QWORD PTR [rsp+64], rbp
  0004b	48 89 74 24 48	 mov	 QWORD PTR [rsp+72], rsi
  00050	e8 00 00 00 00	 call	 lua_pushlstring
; Line 578
  00055	45 33 c0	 xor	 r8d, r8d
  00058	83 ca ff	 or	 edx, -1
  0005b	48 8b cf	 mov	 rcx, rdi
  0005e	e8 00 00 00 00	 call	 lua_tolstring
  00063	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_05EEMJHCCC@cpath?$AA@
  0006a	ba d7 b9 f0 ff	 mov	 edx, -1001001		; fffffffffff0b9d7H
  0006f	48 8b cf	 mov	 rcx, rdi
  00072	48 8b e8	 mov	 rbp, rax
  00075	e8 00 00 00 00	 call	 lua_getfield
  0007a	45 33 c0	 xor	 r8d, r8d
  0007d	83 ca ff	 or	 edx, -1
  00080	48 8b cf	 mov	 rcx, rdi
  00083	e8 00 00 00 00	 call	 lua_tolstring
  00088	48 8b f0	 mov	 rsi, rax
  0008b	48 85 c0	 test	 rax, rax
  0008e	75 16		 jne	 SHORT $LN8@searcher_C
  00090	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_05EEMJHCCC@cpath?$AA@
  00097	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BO@COFCKCAL@?8package?4?$CFs?8?5must?5be?5a?5string?$AA@
  0009e	48 8b cf	 mov	 rcx, rdi
  000a1	e8 00 00 00 00	 call	 luaL_error
$LN8@searcher_C:
  000a6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01KICIPPFI@?2?$AA@
  000ad	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_01LFCBOECM@?4?$AA@
  000b4	4c 8b c6	 mov	 r8, rsi
  000b7	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000bc	48 8b cf	 mov	 rcx, rdi
  000bf	48 8b d5	 mov	 rdx, rbp
  000c2	e8 00 00 00 00	 call	 searchpath
  000c7	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  000cc	48 8b f0	 mov	 rsi, rax
; Line 579
  000cf	48 85 c0	 test	 rax, rax
  000d2	74 73		 je	 SHORT $LN16@searcher_C
; Line 580
  000d4	4c 8b c3	 mov	 r8, rbx
  000d7	48 8b d0	 mov	 rdx, rax
  000da	48 8b cf	 mov	 rcx, rdi
  000dd	e8 00 00 00 00	 call	 loadfunc
; Line 582
  000e2	48 8b cf	 mov	 rcx, rdi
  000e5	85 c0		 test	 eax, eax
  000e7	74 73		 je	 SHORT $LN1@searcher_C
; Line 581
  000e9	83 f8 02	 cmp	 eax, 2
  000ec	74 47		 je	 SHORT $LN2@searcher_C
; Line 582
  000ee	45 33 c0	 xor	 r8d, r8d
  000f1	83 ca ff	 or	 edx, -1
  000f4	e8 00 00 00 00	 call	 lua_tolstring
  000f9	45 33 c0	 xor	 r8d, r8d
  000fc	48 8b cf	 mov	 rcx, rdi
  000ff	41 8d 50 01	 lea	 edx, QWORD PTR [r8+1]
  00103	48 8b d8	 mov	 rbx, rax
  00106	e8 00 00 00 00	 call	 lua_tolstring
  0010b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CO@KHMIPLKM@error?5loading?5module?5?8?$CFs?8?5from?5f@
  00112	4c 8b ce	 mov	 r9, rsi
  00115	48 8b cf	 mov	 rcx, rdi
  00118	4c 8b c0	 mov	 r8, rax
  0011b	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  00120	e8 00 00 00 00	 call	 luaL_error
  00125	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
; Line 590
  0012a	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  0012f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00133	5f		 pop	 rdi
  00134	c3		 ret	 0
$LN2@searcher_C:
; Line 584
  00135	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BO@KOILFIGK@?6?7no?5module?5?8?$CFs?8?5in?5file?5?8?$CFs?8?$AA@
  0013c	4c 8b ce	 mov	 r9, rsi
  0013f	4c 8b c3	 mov	 r8, rbx
  00142	e8 00 00 00 00	 call	 lua_pushfstring
$LN16@searcher_C:
; Line 585
  00147	b8 01 00 00 00	 mov	 eax, 1
  0014c	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
; Line 590
  00151	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  00156	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0015a	5f		 pop	 rdi
  0015b	c3		 ret	 0
$LN1@searcher_C:
; Line 588
  0015c	48 8b d6	 mov	 rdx, rsi
  0015f	e8 00 00 00 00	 call	 lua_pushstring
  00164	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
; Line 590
  00169	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  0016e	b8 02 00 00 00	 mov	 eax, 2
  00173	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00177	5f		 pop	 rdi
  00178	c3		 ret	 0
searcher_Croot ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT searcher_C
_TEXT	SEGMENT
L$ = 64
searcher_C PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 563
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 564
  0000f	45 33 c0	 xor	 r8d, r8d
  00012	48 8b d9	 mov	 rbx, rcx
  00015	41 8d 50 01	 lea	 edx, QWORD PTR [r8+1]
  00019	e8 00 00 00 00	 call	 luaL_checklstring
; Line 565
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_05EEMJHCCC@cpath?$AA@
  00025	ba d7 b9 f0 ff	 mov	 edx, -1001001		; fffffffffff0b9d7H
  0002a	48 8b cb	 mov	 rcx, rbx
  0002d	48 8b f0	 mov	 rsi, rax
  00030	e8 00 00 00 00	 call	 lua_getfield
  00035	45 33 c0	 xor	 r8d, r8d
  00038	83 ca ff	 or	 edx, -1
  0003b	48 8b cb	 mov	 rcx, rbx
  0003e	e8 00 00 00 00	 call	 lua_tolstring
  00043	48 8b f8	 mov	 rdi, rax
  00046	48 85 c0	 test	 rax, rax
  00049	75 16		 jne	 SHORT $LN4@searcher_C
  0004b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_05EEMJHCCC@cpath?$AA@
  00052	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BO@COFCKCAL@?8package?4?$CFs?8?5must?5be?5a?5string?$AA@
  00059	48 8b cb	 mov	 rcx, rbx
  0005c	e8 00 00 00 00	 call	 luaL_error
$LN4@searcher_C:
  00061	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01KICIPPFI@?2?$AA@
  00068	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_01LFCBOECM@?4?$AA@
  0006f	4c 8b c7	 mov	 r8, rdi
  00072	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00077	48 8b cb	 mov	 rcx, rbx
  0007a	48 8b d6	 mov	 rdx, rsi
  0007d	e8 00 00 00 00	 call	 searchpath
  00082	48 8b f8	 mov	 rdi, rax
; Line 566
  00085	48 85 c0	 test	 rax, rax
  00088	75 13		 jne	 SHORT $LN1@searcher_C
  0008a	8d 47 01	 lea	 eax, QWORD PTR [rdi+1]
; Line 568
  0008d	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00092	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00097	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0009b	5f		 pop	 rdi
  0009c	c3		 ret	 0
$LN1@searcher_C:
; Line 567
  0009d	4c 8b c6	 mov	 r8, rsi
  000a0	48 8b d0	 mov	 rdx, rax
  000a3	48 8b cb	 mov	 rcx, rbx
  000a6	e8 00 00 00 00	 call	 loadfunc
  000ab	33 d2		 xor	 edx, edx
  000ad	4c 8b c7	 mov	 r8, rdi
  000b0	85 c0		 test	 eax, eax
  000b2	48 8b cb	 mov	 rcx, rbx
  000b5	0f 94 c2	 sete	 dl
; Line 568
  000b8	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000bd	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000c2	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c6	5f		 pop	 rdi
; Line 567
  000c7	e9 00 00 00 00	 jmp	 checkload
searcher_C ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT loadfunc
_TEXT	SEGMENT
L$ = 48
filename$ = 56
modname$ = 64
loadfunc PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 545
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	49 8b c0	 mov	 rax, r8
  00017	48 8b ea	 mov	 rbp, rdx
; Line 548
  0001a	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_01IDAFKMJL@_?$AA@
  00021	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_01LFCBOECM@?4?$AA@
  00028	48 8b d0	 mov	 rdx, rax
  0002b	48 8b f9	 mov	 rdi, rcx
  0002e	e8 00 00 00 00	 call	 luaL_gsub
; Line 549
  00033	ba 2d 00 00 00	 mov	 edx, 45			; 0000002dH
  00038	48 8b c8	 mov	 rcx, rax
  0003b	48 8b d8	 mov	 rbx, rax
  0003e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strchr
  00044	48 8b f0	 mov	 rsi, rax
; Line 550
  00047	48 85 c0	 test	 rax, rax
  0004a	74 3a		 je	 SHORT $LN2@loadfunc
; Line 552
  0004c	4c 8b c0	 mov	 r8, rax
  0004f	48 8b d3	 mov	 rdx, rbx
  00052	48 8b cf	 mov	 rcx, rdi
  00055	4c 2b c3	 sub	 r8, rbx
  00058	e8 00 00 00 00	 call	 lua_pushlstring
; Line 553
  0005d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@KHKMBFOE@luaopen_?$CFs?$AA@
  00064	48 8b cf	 mov	 rcx, rdi
  00067	4c 8b c0	 mov	 r8, rax
  0006a	e8 00 00 00 00	 call	 lua_pushfstring
; Line 554
  0006f	48 8b d5	 mov	 rdx, rbp
  00072	48 8b cf	 mov	 rcx, rdi
  00075	4c 8b c0	 mov	 r8, rax
  00078	e8 00 00 00 00	 call	 lookforfunc
; Line 555
  0007d	83 f8 02	 cmp	 eax, 2
  00080	75 24		 jne	 SHORT $LN3@loadfunc
; Line 556
  00082	48 8d 5e 01	 lea	 rbx, QWORD PTR [rsi+1]
$LN2@loadfunc:
; Line 558
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@KHKMBFOE@luaopen_?$CFs?$AA@
  0008d	4c 8b c3	 mov	 r8, rbx
  00090	48 8b cf	 mov	 rcx, rdi
  00093	e8 00 00 00 00	 call	 lua_pushfstring
; Line 559
  00098	48 8b d5	 mov	 rdx, rbp
  0009b	48 8b cf	 mov	 rcx, rdi
  0009e	4c 8b c0	 mov	 r8, rax
  000a1	e8 00 00 00 00	 call	 lookforfunc
$LN3@loadfunc:
; Line 560
  000a6	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000ab	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  000b0	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  000b5	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b9	5f		 pop	 rdi
  000ba	c3		 ret	 0
loadfunc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT searcher_Lua
_TEXT	SEGMENT
L$ = 64
searcher_Lua PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 528
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 530
  0000f	45 33 c0	 xor	 r8d, r8d
  00012	48 8b d9	 mov	 rbx, rcx
  00015	41 8d 50 01	 lea	 edx, QWORD PTR [r8+1]
  00019	e8 00 00 00 00	 call	 luaL_checklstring
; Line 531
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_04LNEJFJGI@path?$AA@
  00025	ba d7 b9 f0 ff	 mov	 edx, -1001001		; fffffffffff0b9d7H
  0002a	48 8b cb	 mov	 rcx, rbx
  0002d	48 8b f0	 mov	 rsi, rax
  00030	e8 00 00 00 00	 call	 lua_getfield
  00035	45 33 c0	 xor	 r8d, r8d
  00038	83 ca ff	 or	 edx, -1
  0003b	48 8b cb	 mov	 rcx, rbx
  0003e	e8 00 00 00 00	 call	 lua_tolstring
  00043	48 8b f8	 mov	 rdi, rax
  00046	48 85 c0	 test	 rax, rax
  00049	75 16		 jne	 SHORT $LN4@searcher_L
  0004b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_04LNEJFJGI@path?$AA@
  00052	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BO@COFCKCAL@?8package?4?$CFs?8?5must?5be?5a?5string?$AA@
  00059	48 8b cb	 mov	 rcx, rbx
  0005c	e8 00 00 00 00	 call	 luaL_error
$LN4@searcher_L:
  00061	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01KICIPPFI@?2?$AA@
  00068	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_01LFCBOECM@?4?$AA@
  0006f	4c 8b c7	 mov	 r8, rdi
  00072	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00077	48 8b cb	 mov	 rcx, rbx
  0007a	48 8b d6	 mov	 rdx, rsi
  0007d	e8 00 00 00 00	 call	 searchpath
  00082	48 8b f8	 mov	 rdi, rax
; Line 532
  00085	48 85 c0	 test	 rax, rax
  00088	75 13		 jne	 SHORT $LN1@searcher_L
  0008a	8d 47 01	 lea	 eax, QWORD PTR [rdi+1]
; Line 534
  0008d	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00092	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00097	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0009b	5f		 pop	 rdi
  0009c	c3		 ret	 0
$LN1@searcher_L:
; Line 533
  0009d	45 33 c0	 xor	 r8d, r8d
  000a0	48 8b d0	 mov	 rdx, rax
  000a3	48 8b cb	 mov	 rcx, rbx
  000a6	e8 00 00 00 00	 call	 luaL_loadfilex
  000ab	33 d2		 xor	 edx, edx
  000ad	4c 8b c7	 mov	 r8, rdi
  000b0	85 c0		 test	 eax, eax
  000b2	48 8b cb	 mov	 rcx, rbx
  000b5	0f 94 c2	 sete	 dl
; Line 534
  000b8	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000bd	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000c2	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c6	5f		 pop	 rdi
; Line 533
  000c7	e9 00 00 00 00	 jmp	 checkload
searcher_Lua ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT checkload
_TEXT	SEGMENT
L$ = 64
stat$ = 72
filename$ = 80
checkload PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 517
  00000	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	49 8b f0	 mov	 rsi, r8
  0000d	48 8b f9	 mov	 rdi, rcx
; Line 518
  00010	85 d2		 test	 edx, edx
  00012	74 18		 je	 SHORT $LN2@checkload
; Line 519
  00014	49 8b d0	 mov	 rdx, r8
  00017	e8 00 00 00 00	 call	 lua_pushstring
; Line 520
  0001c	b8 02 00 00 00	 mov	 eax, 2
; Line 525
  00021	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00026	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
$LN2@checkload:
; Line 524
  0002c	45 33 c0	 xor	 r8d, r8d
  0002f	83 ca ff	 or	 edx, -1
  00032	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00037	e8 00 00 00 00	 call	 lua_tolstring
  0003c	45 33 c0	 xor	 r8d, r8d
  0003f	48 8b cf	 mov	 rcx, rdi
  00042	41 8d 50 01	 lea	 edx, QWORD PTR [r8+1]
  00046	48 8b d8	 mov	 rbx, rax
  00049	e8 00 00 00 00	 call	 lua_tolstring
  0004e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CO@KHMIPLKM@error?5loading?5module?5?8?$CFs?8?5from?5f@
  00055	4c 8b ce	 mov	 r9, rsi
  00058	48 8b cf	 mov	 rcx, rdi
  0005b	4c 8b c0	 mov	 r8, rax
  0005e	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  00063	e8 00 00 00 00	 call	 luaL_error
  00068	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
; Line 525
  0006d	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
checkload ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT findfile
_TEXT	SEGMENT
L$ = 64
name$ = 72
pname$ = 80
dirsep$ = 88
findfile PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 507
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00014	41 56		 push	 r14
  00016	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0001a	4c 8b f2	 mov	 r14, rdx
; Line 509
  0001d	ba d7 b9 f0 ff	 mov	 edx, -1001001		; fffffffffff0b9d7H
  00022	49 8b e9	 mov	 rbp, r9
  00025	49 8b f8	 mov	 rdi, r8
  00028	48 8b d9	 mov	 rbx, rcx
  0002b	e8 00 00 00 00	 call	 lua_getfield
; Line 510
  00030	45 33 c0	 xor	 r8d, r8d
  00033	83 ca ff	 or	 edx, -1
  00036	48 8b cb	 mov	 rcx, rbx
  00039	e8 00 00 00 00	 call	 lua_tolstring
  0003e	48 8b f0	 mov	 rsi, rax
; Line 511
  00041	48 85 c0	 test	 rax, rax
  00044	75 12		 jne	 SHORT $LN1@findfile
; Line 512
  00046	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BO@COFCKCAL@?8package?4?$CFs?8?5must?5be?5a?5string?$AA@
  0004d	4c 8b c7	 mov	 r8, rdi
  00050	48 8b cb	 mov	 rcx, rbx
  00053	e8 00 00 00 00	 call	 luaL_error
$LN1@findfile:
; Line 513
  00058	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_01LFCBOECM@?4?$AA@
  0005f	4c 8b c6	 mov	 r8, rsi
  00062	49 8b d6	 mov	 rdx, r14
  00065	48 8b cb	 mov	 rcx, rbx
  00068	48 89 6c 24 20	 mov	 QWORD PTR [rsp+32], rbp
  0006d	e8 00 00 00 00	 call	 searchpath
; Line 514
  00072	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00077	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  0007c	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  00081	48 8b 7c 24 58	 mov	 rdi, QWORD PTR [rsp+88]
  00086	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008a	41 5e		 pop	 r14
  0008c	c3		 ret	 0
findfile ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ll_searchpath
_TEXT	SEGMENT
L$ = 64
ll_searchpath PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 491
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 495
  00014	45 33 c9	 xor	 r9d, r9d
  00017	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_01KICIPPFI@?2?$AA@
  0001e	48 8b e9	 mov	 rbp, rcx
  00021	41 8d 51 04	 lea	 edx, QWORD PTR [r9+4]
  00025	e8 00 00 00 00	 call	 luaL_optlstring
  0002a	45 33 c9	 xor	 r9d, r9d
  0002d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_01LFCBOECM@?4?$AA@
  00034	41 8d 51 03	 lea	 edx, QWORD PTR [r9+3]
  00038	48 8b cd	 mov	 rcx, rbp
  0003b	48 8b f0	 mov	 rsi, rax
  0003e	e8 00 00 00 00	 call	 luaL_optlstring
  00043	45 33 c0	 xor	 r8d, r8d
  00046	48 8b cd	 mov	 rcx, rbp
  00049	41 8d 50 02	 lea	 edx, QWORD PTR [r8+2]
  0004d	48 8b f8	 mov	 rdi, rax
  00050	e8 00 00 00 00	 call	 luaL_checklstring
  00055	45 33 c0	 xor	 r8d, r8d
  00058	48 8b cd	 mov	 rcx, rbp
  0005b	41 8d 50 01	 lea	 edx, QWORD PTR [r8+1]
  0005f	48 8b d8	 mov	 rbx, rax
  00062	e8 00 00 00 00	 call	 luaL_checklstring
  00067	4c 8b cf	 mov	 r9, rdi
  0006a	4c 8b c3	 mov	 r8, rbx
  0006d	48 8b cd	 mov	 rcx, rbp
  00070	48 8b d0	 mov	 rdx, rax
  00073	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  00078	e8 00 00 00 00	 call	 searchpath
; Line 496
  0007d	48 85 c0	 test	 rax, rax
  00080	74 07		 je	 SHORT $LN2@ll_searchp
  00082	b8 01 00 00 00	 mov	 eax, 1
  00087	eb 1e		 jmp	 SHORT $LN1@ll_searchp
$LN2@ll_searchp:
; Line 498
  00089	48 8b cd	 mov	 rcx, rbp
  0008c	e8 00 00 00 00	 call	 lua_pushnil
; Line 499
  00091	ba fe ff ff ff	 mov	 edx, -2
  00096	48 8b cd	 mov	 rcx, rbp
  00099	44 8d 42 03	 lea	 r8d, QWORD PTR [rdx+3]
  0009d	e8 00 00 00 00	 call	 lua_rotate
; Line 500
  000a2	b8 02 00 00 00	 mov	 eax, 2
$LN1@ll_searchp:
; Line 502
  000a7	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000ac	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  000b1	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  000b6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ba	5f		 pop	 rdi
  000bb	c3		 ret	 0
ll_searchpath ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT searchpath
_TEXT	SEGMENT
msg$ = 32
__$ArrayPad$ = 8256
L$ = 8320
name$ = 8328
path$ = 8336
sep$ = 8344
dirsep$ = 8352
searchpath PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 471
  00000	40 53		 push	 rbx
  00002	55		 push	 rbp
  00003	56		 push	 rsi
  00004	57		 push	 rdi
  00005	41 56		 push	 r14
  00007	b8 50 20 00 00	 mov	 eax, 8272		; 00002050H
  0000c	e8 00 00 00 00	 call	 __chkstk
  00011	48 2b e0	 sub	 rsp, rax
  00014	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0001b	48 33 c4	 xor	 rax, rsp
  0001e	48 89 84 24 40
	20 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00026	48 8b ac 24 a0
	20 00 00	 mov	 rbp, QWORD PTR dirsep$[rsp]
  0002e	4c 8b f2	 mov	 r14, rdx
; Line 473
  00031	48 8d 54 24 20	 lea	 rdx, QWORD PTR msg$[rsp]
  00036	49 8b d9	 mov	 rbx, r9
  00039	49 8b f8	 mov	 rdi, r8
  0003c	48 8b f1	 mov	 rsi, rcx
  0003f	e8 00 00 00 00	 call	 luaL_buffinit
; Line 474
  00044	80 3b 00	 cmp	 BYTE PTR [rbx], 0
  00047	74 17		 je	 SHORT $LL3@searchpath
; Line 475
  00049	4c 8b cd	 mov	 r9, rbp
  0004c	4c 8b c3	 mov	 r8, rbx
  0004f	49 8b d6	 mov	 rdx, r14
  00052	48 8b ce	 mov	 rcx, rsi
  00055	e8 00 00 00 00	 call	 luaL_gsub
  0005a	4c 8b f0	 mov	 r14, rax
  0005d	0f 1f 00	 npad	 3
$LL3@searchpath:
; Line 476
  00060	80 3f 3b	 cmp	 BYTE PTR [rdi], 59	; 0000003bH
  00063	48 8b df	 mov	 rbx, rdi
  00066	75 08		 jne	 SHORT $LN9@searchpath
$LL10@searchpath:
  00068	48 ff c3	 inc	 rbx
  0006b	80 3b 3b	 cmp	 BYTE PTR [rbx], 59	; 0000003bH
  0006e	74 f8		 je	 SHORT $LL10@searchpath
$LN9@searchpath:
  00070	80 3b 00	 cmp	 BYTE PTR [rbx], 0
  00073	0f 84 e4 00 00
	00		 je	 $LN2@searchpath
  00079	ba 3b 00 00 00	 mov	 edx, 59			; 0000003bH
  0007e	48 8b cb	 mov	 rcx, rbx
  00081	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strchr
  00087	48 8b f8	 mov	 rdi, rax
  0008a	48 85 c0	 test	 rax, rax
  0008d	75 10		 jne	 SHORT $LN7@searchpath
  0008f	48 83 cf ff	 or	 rdi, -1
$LL36@searchpath:
  00093	48 ff c7	 inc	 rdi
  00096	80 3c 3b 00	 cmp	 BYTE PTR [rbx+rdi], 0
  0009a	75 f7		 jne	 SHORT $LL36@searchpath
  0009c	48 03 fb	 add	 rdi, rbx
$LN7@searchpath:
  0009f	4c 8b c7	 mov	 r8, rdi
  000a2	48 8b d3	 mov	 rdx, rbx
  000a5	48 8b ce	 mov	 rcx, rsi
  000a8	4c 2b c3	 sub	 r8, rbx
  000ab	e8 00 00 00 00	 call	 lua_pushlstring
  000b0	48 85 ff	 test	 rdi, rdi
  000b3	0f 84 a4 00 00
	00		 je	 $LN2@searchpath
; Line 478
  000b9	45 33 c0	 xor	 r8d, r8d
  000bc	83 ca ff	 or	 edx, -1
  000bf	48 8b ce	 mov	 rcx, rsi
  000c2	e8 00 00 00 00	 call	 lua_tolstring
  000c7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_01OGPIMHDM@?$DP?$AA@
  000ce	4d 8b ce	 mov	 r9, r14
  000d1	48 8b d0	 mov	 rdx, rax
  000d4	48 8b ce	 mov	 rcx, rsi
  000d7	e8 00 00 00 00	 call	 luaL_gsub
; Line 479
  000dc	41 83 c8 ff	 or	 r8d, -1
  000e0	48 8b ce	 mov	 rcx, rsi
  000e3	41 8d 50 ff	 lea	 edx, QWORD PTR [r8-1]
  000e7	48 8b d8	 mov	 rbx, rax
  000ea	e8 00 00 00 00	 call	 lua_rotate
  000ef	ba fe ff ff ff	 mov	 edx, -2
  000f4	48 8b ce	 mov	 rcx, rsi
  000f7	e8 00 00 00 00	 call	 lua_settop
; Line 480
  000fc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01KDCPPGHE@r?$AA@
  00103	48 8b cb	 mov	 rcx, rbx
  00106	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fopen
  0010c	48 85 c0	 test	 rax, rax
  0010f	75 3e		 jne	 SHORT $LN13@searchpath
; Line 482
  00111	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@NEBKIMDC@?6?7no?5file?5?8?$CFs?8?$AA@
  00118	4c 8b c3	 mov	 r8, rbx
  0011b	48 8b ce	 mov	 rcx, rsi
  0011e	e8 00 00 00 00	 call	 lua_pushfstring
; Line 483
  00123	41 83 c8 ff	 or	 r8d, -1
  00127	48 8b ce	 mov	 rcx, rsi
  0012a	41 8d 50 ff	 lea	 edx, QWORD PTR [r8-1]
  0012e	e8 00 00 00 00	 call	 lua_rotate
  00133	ba fe ff ff ff	 mov	 edx, -2
  00138	48 8b ce	 mov	 rcx, rsi
  0013b	e8 00 00 00 00	 call	 lua_settop
; Line 484
  00140	48 8d 4c 24 20	 lea	 rcx, QWORD PTR msg$[rsp]
  00145	e8 00 00 00 00	 call	 luaL_addvalue
; Line 485
  0014a	e9 11 ff ff ff	 jmp	 $LL3@searchpath
; Line 480
$LN13@searchpath:
  0014f	48 8b c8	 mov	 rcx, rax
  00152	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fclose
; Line 481
  00158	48 8b c3	 mov	 rax, rbx
  0015b	eb 0c		 jmp	 SHORT $LN5@searchpath
$LN2@searchpath:
; Line 486
  0015d	48 8d 4c 24 20	 lea	 rcx, QWORD PTR msg$[rsp]
  00162	e8 00 00 00 00	 call	 luaL_pushresult
; Line 487
  00167	33 c0		 xor	 eax, eax
$LN5@searchpath:
; Line 488
  00169	48 8b 8c 24 40
	20 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00171	48 33 cc	 xor	 rcx, rsp
  00174	e8 00 00 00 00	 call	 __security_check_cookie
  00179	48 81 c4 50 20
	00 00		 add	 rsp, 8272		; 00002050H
  00180	41 5e		 pop	 r14
  00182	5f		 pop	 rdi
  00183	5e		 pop	 rsi
  00184	5d		 pop	 rbp
  00185	5b		 pop	 rbx
  00186	c3		 ret	 0
searchpath ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT pushnexttemplate
_TEXT	SEGMENT
L$ = 48
path$ = 56
pushnexttemplate PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 457
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	56		 push	 rsi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 459
  0000a	80 3a 3b	 cmp	 BYTE PTR [rdx], 59	; 0000003bH
  0000d	48 8b da	 mov	 rbx, rdx
  00010	48 8b f1	 mov	 rsi, rcx
  00013	75 08		 jne	 SHORT $LN3@pushnextte
$LL4@pushnextte:
  00015	48 ff c3	 inc	 rbx
  00018	80 3b 3b	 cmp	 BYTE PTR [rbx], 59	; 0000003bH
  0001b	74 f8		 je	 SHORT $LL4@pushnextte
$LN3@pushnextte:
; Line 460
  0001d	80 3b 00	 cmp	 BYTE PTR [rbx], 0
  00020	75 0d		 jne	 SHORT $LN2@pushnextte
  00022	33 c0		 xor	 eax, eax
; Line 465
  00024	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5e		 pop	 rsi
  0002e	c3		 ret	 0
$LN2@pushnextte:
; Line 461
  0002f	ba 3b 00 00 00	 mov	 edx, 59			; 0000003bH
  00034	48 8b cb	 mov	 rcx, rbx
  00037	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  0003c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strchr
  00042	48 8b f8	 mov	 rdi, rax
; Line 462
  00045	48 85 c0	 test	 rax, rax
  00048	75 12		 jne	 SHORT $LN1@pushnextte
  0004a	48 83 cf ff	 or	 rdi, -1
  0004e	66 90		 npad	 2
$LL11@pushnextte:
  00050	48 ff c7	 inc	 rdi
  00053	80 3c 3b 00	 cmp	 BYTE PTR [rbx+rdi], 0
  00057	75 f7		 jne	 SHORT $LL11@pushnextte
  00059	48 03 fb	 add	 rdi, rbx
$LN1@pushnextte:
; Line 463
  0005c	4c 8b c7	 mov	 r8, rdi
  0005f	48 8b d3	 mov	 rdx, rbx
  00062	48 8b ce	 mov	 rcx, rsi
  00065	4c 2b c3	 sub	 r8, rbx
  00068	e8 00 00 00 00	 call	 lua_pushlstring
; Line 465
  0006d	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00072	48 8b c7	 mov	 rax, rdi
  00075	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
  0007a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007e	5e		 pop	 rsi
  0007f	c3		 ret	 0
pushnexttemplate ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT readable
_TEXT	SEGMENT
filename$ = 48
readable PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 449
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 450
  00004	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01KDCPPGHE@r?$AA@
  0000b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fopen
; Line 451
  00011	48 85 c0	 test	 rax, rax
  00014	75 05		 jne	 SHORT $LN1@readable
; Line 454
  00016	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001a	c3		 ret	 0
$LN1@readable:
; Line 452
  0001b	48 8b c8	 mov	 rcx, rax
  0001e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fclose
; Line 453
  00024	b8 01 00 00 00	 mov	 eax, 1
; Line 454
  00029	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002d	c3		 ret	 0
readable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ll_loadlib
_TEXT	SEGMENT
L$ = 48
ll_loadlib PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 426
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 427
  0000a	45 33 c0	 xor	 r8d, r8d
  0000d	48 8b f9	 mov	 rdi, rcx
  00010	41 8d 50 01	 lea	 edx, QWORD PTR [r8+1]
  00014	e8 00 00 00 00	 call	 luaL_checklstring
; Line 428
  00019	45 33 c0	 xor	 r8d, r8d
  0001c	48 8b cf	 mov	 rcx, rdi
  0001f	41 8d 50 02	 lea	 edx, QWORD PTR [r8+2]
  00023	48 8b d8	 mov	 rbx, rax
  00026	e8 00 00 00 00	 call	 luaL_checklstring
; Line 429
  0002b	48 8b d3	 mov	 rdx, rbx
  0002e	48 8b cf	 mov	 rcx, rdi
  00031	4c 8b c0	 mov	 r8, rax
  00034	e8 00 00 00 00	 call	 lookforfunc
  00039	8b d8		 mov	 ebx, eax
; Line 430
  0003b	85 c0		 test	 eax, eax
  0003d	75 0e		 jne	 SHORT $LN2@ll_loadlib
; Line 431
  0003f	8d 43 01	 lea	 eax, QWORD PTR [rbx+1]
; Line 438
  00042	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
$LN2@ll_loadlib:
; Line 433
  0004d	48 8b cf	 mov	 rcx, rdi
  00050	e8 00 00 00 00	 call	 lua_pushnil
; Line 434
  00055	ba fe ff ff ff	 mov	 edx, -2
  0005a	48 8b cf	 mov	 rcx, rdi
  0005d	44 8d 42 03	 lea	 r8d, QWORD PTR [rdx+3]
  00061	e8 00 00 00 00	 call	 lua_rotate
; Line 435
  00066	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_06LBPOAOHH@absent?$AA@
  0006d	83 fb 01	 cmp	 ebx, 1
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04HKFDNBLD@init?$AA@
  00077	48 8b cf	 mov	 rcx, rdi
  0007a	48 0f 44 d0	 cmove	 rdx, rax
  0007e	e8 00 00 00 00	 call	 lua_pushstring
; Line 438
  00083	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00088	b8 03 00 00 00	 mov	 eax, 3
  0008d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00091	5f		 pop	 rdi
  00092	c3		 ret	 0
ll_loadlib ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lookforfunc
_TEXT	SEGMENT
L$ = 48
path$ = 56
sym$ = 64
lookforfunc PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 405
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f0	 mov	 rsi, r8
  00012	48 8b da	 mov	 rbx, rdx
; Line 406
  00015	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:CLIBS
  0001c	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  00021	48 8b f9	 mov	 rdi, rcx
  00024	e8 00 00 00 00	 call	 lua_rawgetp
  00029	4c 8b c3	 mov	 r8, rbx
  0002c	83 ca ff	 or	 edx, -1
  0002f	48 8b cf	 mov	 rcx, rdi
  00032	e8 00 00 00 00	 call	 lua_getfield
  00037	83 ca ff	 or	 edx, -1
  0003a	48 8b cf	 mov	 rcx, rdi
  0003d	e8 00 00 00 00	 call	 lua_touserdata
  00042	ba fd ff ff ff	 mov	 edx, -3
  00047	48 8b cf	 mov	 rcx, rdi
  0004a	48 8b d8	 mov	 rbx, rax
  0004d	e8 00 00 00 00	 call	 lua_settop
; Line 408
  00052	48 8b cf	 mov	 rcx, rdi
  00055	48 85 db	 test	 rbx, rbx
  00058	75 1f		 jne	 SHORT $LN5@lookforfun
  0005a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DL@DPPJHBHJ@dynamic?5libraries?5not?5enabled?$DL?5c@
  00061	e8 00 00 00 00	 call	 lua_pushstring
; Line 409
  00066	8d 43 01	 lea	 eax, QWORD PTR [rbx+1]
; Line 423
  00069	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006e	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00073	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00077	5f		 pop	 rdi
  00078	c3		 ret	 0
$LN5@lookforfun:
; Line 412
  00079	80 3e 2a	 cmp	 BYTE PTR [rsi], 42	; 0000002aH
  0007c	75 1c		 jne	 SHORT $LN3@lookforfun
; Line 413
  0007e	ba 01 00 00 00	 mov	 edx, 1
  00083	e8 00 00 00 00	 call	 lua_pushboolean
; Line 414
  00088	33 c0		 xor	 eax, eax
; Line 423
  0008a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0008f	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00094	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00098	5f		 pop	 rdi
  00099	c3		 ret	 0
$LN3@lookforfun:
; Line 417
  0009a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DL@DPPJHBHJ@dynamic?5libraries?5not?5enabled?$DL?5c@
  000a1	e8 00 00 00 00	 call	 lua_pushstring
; Line 423
  000a6	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000ab	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000b0	b8 02 00 00 00	 mov	 eax, 2
  000b5	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b9	5f		 pop	 rdi
  000ba	c3		 ret	 0
lookforfunc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT gctm
_TEXT	SEGMENT
L$ = 48
gctm	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 378
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 379
  0000a	ba 01 00 00 00	 mov	 edx, 1
  0000f	48 8b f9	 mov	 rdi, rcx
  00012	e8 00 00 00 00	 call	 luaL_len
  00017	48 8b d8	 mov	 rbx, rax
; Line 380
  0001a	48 83 f8 01	 cmp	 rax, 1
  0001e	7c 31		 jl	 SHORT $LN12@gctm
$LL3@gctm:
; Line 381
  00020	4c 8b c3	 mov	 r8, rbx
  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b cf	 mov	 rcx, rdi
  0002b	e8 00 00 00 00	 call	 lua_rawgeti
; Line 382
  00030	83 ca ff	 or	 edx, -1
  00033	48 8b cf	 mov	 rcx, rdi
  00036	e8 00 00 00 00	 call	 lua_touserdata
; Line 383
  0003b	ba fe ff ff ff	 mov	 edx, -2
  00040	48 8b cf	 mov	 rcx, rdi
  00043	e8 00 00 00 00	 call	 lua_settop
  00048	48 ff cb	 dec	 rbx
  0004b	48 83 fb 01	 cmp	 rbx, 1
  0004f	7d cf		 jge	 SHORT $LL3@gctm
$LN12@gctm:
; Line 385
  00051	33 c0		 xor	 eax, eax
; Line 386
  00053	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00058	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
gctm	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT addtoclib
_TEXT	SEGMENT
L$ = 48
path$ = 56
plib$ = 64
addtoclib PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 364
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b d8	 mov	 rbx, r8
  00012	48 8b fa	 mov	 rdi, rdx
; Line 365
  00015	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:CLIBS
  0001c	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  00021	48 8b f1	 mov	 rsi, rcx
  00024	e8 00 00 00 00	 call	 lua_rawgetp
; Line 366
  00029	48 8b d3	 mov	 rdx, rbx
  0002c	48 8b ce	 mov	 rcx, rsi
  0002f	e8 00 00 00 00	 call	 lua_pushlightuserdata
; Line 367
  00034	83 ca ff	 or	 edx, -1
  00037	48 8b ce	 mov	 rcx, rsi
  0003a	e8 00 00 00 00	 call	 lua_pushvalue
; Line 368
  0003f	4c 8b c7	 mov	 r8, rdi
  00042	ba fd ff ff ff	 mov	 edx, -3
  00047	48 8b ce	 mov	 rcx, rsi
  0004a	e8 00 00 00 00	 call	 lua_setfield
; Line 369
  0004f	ba fe ff ff ff	 mov	 edx, -2
  00054	48 8b ce	 mov	 rcx, rsi
  00057	e8 00 00 00 00	 call	 luaL_len
  0005c	ba fe ff ff ff	 mov	 edx, -2
  00061	48 8b ce	 mov	 rcx, rsi
  00064	4c 8d 40 01	 lea	 r8, QWORD PTR [rax+1]
  00068	e8 00 00 00 00	 call	 lua_rawseti
; Line 370
  0006d	ba fe ff ff ff	 mov	 edx, -2
  00072	48 8b ce	 mov	 rcx, rsi
; Line 371
  00075	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0007a	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0007f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00083	5f		 pop	 rdi
; Line 370
  00084	e9 00 00 00 00	 jmp	 lua_settop
addtoclib ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT checkclib
_TEXT	SEGMENT
L$ = 48
path$ = 56
checkclib PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 350
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
; Line 352
  0000d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:CLIBS
  00014	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  00019	48 8b f9	 mov	 rdi, rcx
  0001c	e8 00 00 00 00	 call	 lua_rawgetp
; Line 353
  00021	4c 8b c3	 mov	 r8, rbx
  00024	83 ca ff	 or	 edx, -1
  00027	48 8b cf	 mov	 rcx, rdi
  0002a	e8 00 00 00 00	 call	 lua_getfield
; Line 354
  0002f	83 ca ff	 or	 edx, -1
  00032	48 8b cf	 mov	 rcx, rdi
  00035	e8 00 00 00 00	 call	 lua_touserdata
; Line 355
  0003a	ba fd ff ff ff	 mov	 edx, -3
  0003f	48 8b cf	 mov	 rcx, rdi
  00042	48 8b d8	 mov	 rbx, rax
  00045	e8 00 00 00 00	 call	 lua_settop
; Line 356
  0004a	48 8b c3	 mov	 rax, rbx
; Line 357
  0004d	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5f		 pop	 rdi
  00057	c3		 ret	 0
checkclib ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT setprogdir
_TEXT	SEGMENT
progdir$ = 32
__$ArrayPad$ = 304
L$ = 336
setprogdir PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 154
  00000	40 53		 push	 rbx
  00002	48 81 ec 40 01
	00 00		 sub	 rsp, 320		; 00000140H
  00009	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00010	48 33 c4	 xor	 rax, rsp
  00013	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0001b	48 8b d9	 mov	 rbx, rcx
; Line 165
  0001e	48 8d 54 24 20	 lea	 rdx, QWORD PTR progdir$[rsp]
  00023	41 b8 05 01 00
	00		 mov	 r8d, 261		; 00000105H
  00029	33 c9		 xor	 ecx, ecx
  0002b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetModuleFileNameA
; Line 208
  00031	85 c0		 test	 eax, eax
  00033	74 63		 je	 SHORT $LN2@setprogdir
  00035	3d 05 01 00 00	 cmp	 eax, 261		; 00000105H
  0003a	74 5c		 je	 SHORT $LN2@setprogdir
  0003c	48 8d 4c 24 20	 lea	 rcx, QWORD PTR progdir$[rsp]
  00041	ba 5c 00 00 00	 mov	 edx, 92			; 0000005cH
  00046	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strrchr
  0004c	48 85 c0	 test	 rax, rax
  0004f	74 47		 je	 SHORT $LN2@setprogdir
; Line 214
  00051	45 33 c0	 xor	 r8d, r8d
  00054	83 ca ff	 or	 edx, -1
  00057	48 8b cb	 mov	 rcx, rbx
  0005a	c6 00 00	 mov	 BYTE PTR [rax], 0
  0005d	e8 00 00 00 00	 call	 lua_tolstring
  00062	4c 8d 4c 24 20	 lea	 r9, QWORD PTR progdir$[rsp]
  00067	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_01DCLJPIOD@?$CB?$AA@
  0006e	48 8b cb	 mov	 rcx, rbx
  00071	48 8b d0	 mov	 rdx, rax
  00074	e8 00 00 00 00	 call	 luaL_gsub
; Line 215
  00079	41 83 c8 ff	 or	 r8d, -1
  0007d	48 8b cb	 mov	 rcx, rbx
  00080	41 8d 50 ff	 lea	 edx, QWORD PTR [r8-1]
  00084	e8 00 00 00 00	 call	 lua_rotate
  00089	ba fe ff ff ff	 mov	 edx, -2
  0008e	48 8b cb	 mov	 rcx, rbx
  00091	e8 00 00 00 00	 call	 lua_settop
  00096	eb 0f		 jmp	 SHORT $LN1@setprogdir
$LN2@setprogdir:
; Line 209
  00098	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CG@KOECHPEJ@unable?5to?5get?5process?5executable@
  0009f	48 8b cb	 mov	 rcx, rbx
  000a2	e8 00 00 00 00	 call	 luaL_error
$LN1@setprogdir:
; Line 217
  000a7	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000af	48 33 cc	 xor	 rcx, rsp
  000b2	e8 00 00 00 00	 call	 __security_check_cookie
  000b7	48 81 c4 40 01
	00 00		 add	 rsp, 320		; 00000140H
  000be	5b		 pop	 rbx
  000bf	c3		 ret	 0
setprogdir ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lsys_sym
_TEXT	SEGMENT
L$ = 48
lib$ = 56
sym$ = 64
lsys_sym PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 337
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 339
  00004	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DL@DPPJHBHJ@dynamic?5libraries?5not?5enabled?$DL?5c@
  0000b	e8 00 00 00 00	 call	 lua_pushstring
; Line 340
  00010	33 c0		 xor	 eax, eax
; Line 341
  00012	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00016	c3		 ret	 0
lsys_sym ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lsys_load
_TEXT	SEGMENT
L$ = 48
path$ = 56
seeglb$ = 64
lsys_load PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 330
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 332
  00004	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DL@DPPJHBHJ@dynamic?5libraries?5not?5enabled?$DL?5c@
  0000b	e8 00 00 00 00	 call	 lua_pushstring
; Line 333
  00010	33 c0		 xor	 eax, eax
; Line 334
  00012	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00016	c3		 ret	 0
lsys_load ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT lsys_unloadlib
_TEXT	SEGMENT
lib$ = 8
lsys_unloadlib PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 327
  00000	c2 00 00	 ret	 0
lsys_unloadlib ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaopen_package
_TEXT	SEGMENT
L$ = 64
luaopen_package PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\loadlib_rel.c
; Line 835
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 836
  00006	45 33 c0	 xor	 r8d, r8d
  00009	33 d2		 xor	 edx, edx
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 lua_createtable
  00013	33 d2		 xor	 edx, edx
  00015	48 8b cb	 mov	 rcx, rbx
  00018	44 8d 42 01	 lea	 r8d, QWORD PTR [rdx+1]
  0001c	e8 00 00 00 00	 call	 lua_createtable
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:gctm
  00028	45 33 c0	 xor	 r8d, r8d
  0002b	48 8b cb	 mov	 rcx, rbx
  0002e	e8 00 00 00 00	 call	 lua_pushcclosure
  00033	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_04BDLIKKMN@__gc?$AA@
  0003a	ba fe ff ff ff	 mov	 edx, -2
  0003f	48 8b cb	 mov	 rcx, rbx
  00042	e8 00 00 00 00	 call	 lua_setfield
  00047	ba fe ff ff ff	 mov	 edx, -2
  0004c	48 8b cb	 mov	 rcx, rbx
  0004f	e8 00 00 00 00	 call	 lua_setmetatable
  00054	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:CLIBS
  0005b	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  00060	48 8b cb	 mov	 rcx, rbx
  00063	e8 00 00 00 00	 call	 lua_rawsetp
; Line 837
  00068	41 b8 88 00 00
	00		 mov	 r8d, 136		; 00000088H
  0006e	48 8b cb	 mov	 rcx, rbx
  00071	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@405bc00000000000
  00079	e8 00 00 00 00	 call	 luaL_checkversion_
  0007e	33 d2		 xor	 edx, edx
  00080	44 8d 42 08	 lea	 r8d, QWORD PTR [rdx+8]
  00084	48 8b cb	 mov	 rcx, rbx
  00087	e8 00 00 00 00	 call	 lua_createtable
  0008c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:pk_funcs
  00093	45 33 c0	 xor	 r8d, r8d
  00096	48 8b cb	 mov	 rcx, rbx
  00099	e8 00 00 00 00	 call	 luaL_setfuncs
; Line 838
  0009e	48 8b cb	 mov	 rcx, rbx
  000a1	e8 00 00 00 00	 call	 createsearcherstable
; Line 840
  000a6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CF@KMBCNEPN@?4?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?4lua?$DL?$CB?2?4?4?2?2?$DP?2init@
  000ad	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_08GLJMJBPN@LUA_PATH?$AA@
  000b4	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0N@NMCAMIJK@LUA_PATH_1_1?$AA@
  000bb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04LNEJFJGI@path?$AA@
  000c2	48 8b cb	 mov	 rcx, rbx
  000c5	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ca	e8 00 00 00 00	 call	 setpath
; Line 842
  000cf	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CG@JAFDBDLK@?4?2?$DP?4dll?$DL?$CB?2?4?4?2?2?$DP?4dll?$DL?$CB?2?4?4?2?2loadal@
  000d6	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_C@_09FBPOOEID@LUA_CPATH?$AA@
  000dd	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0O@JEDNGFBJ@LUA_CPATH_1_1?$AA@
  000e4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05EEMJHCCC@cpath?$AA@
  000eb	48 8b cb	 mov	 rcx, rbx
  000ee	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000f3	e8 00 00 00 00	 call	 setpath
; Line 845
  000f8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@GKIMPOMK@?2?6?$DL?6?$DP?6?$CB?6?9?6?$AA@
  000ff	48 8b cb	 mov	 rcx, rbx
  00102	e8 00 00 00 00	 call	 lua_pushstring
; Line 846
  00107	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_06HEJKKHEK@config?$AA@
  0010e	ba fe ff ff ff	 mov	 edx, -2
  00113	48 8b cb	 mov	 rcx, rbx
  00116	e8 00 00 00 00	 call	 lua_setfield
; Line 848
  0011b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_07PINPBNPB@_LOADED?$AA@
  00122	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  00127	48 8b cb	 mov	 rcx, rbx
  0012a	e8 00 00 00 00	 call	 luaL_getsubtable
; Line 849
  0012f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_06IILMCCFO@loaded?$AA@
  00136	ba fe ff ff ff	 mov	 edx, -2
  0013b	48 8b cb	 mov	 rcx, rbx
  0013e	e8 00 00 00 00	 call	 lua_setfield
; Line 851
  00143	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_08LBNNGFKE@_PRELOAD?$AA@
  0014a	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  0014f	48 8b cb	 mov	 rcx, rbx
  00152	e8 00 00 00 00	 call	 luaL_getsubtable
; Line 852
  00157	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_07GCEAJMEA@preload?$AA@
  0015e	ba fe ff ff ff	 mov	 edx, -2
  00163	48 8b cb	 mov	 rcx, rbx
  00166	e8 00 00 00 00	 call	 lua_setfield
; Line 853
  0016b	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  00170	41 b8 02 00 00
	00		 mov	 r8d, 2
  00176	48 8b cb	 mov	 rcx, rbx
  00179	e8 00 00 00 00	 call	 lua_rawgeti
; Line 854
  0017e	ba fe ff ff ff	 mov	 edx, -2
  00183	48 8b cb	 mov	 rcx, rbx
  00186	e8 00 00 00 00	 call	 lua_pushvalue
; Line 855
  0018b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:ll_funcs
  00192	41 b8 01 00 00
	00		 mov	 r8d, 1
  00198	48 8b cb	 mov	 rcx, rbx
  0019b	e8 00 00 00 00	 call	 luaL_setfuncs
; Line 856
  001a0	ba fe ff ff ff	 mov	 edx, -2
  001a5	48 8b cb	 mov	 rcx, rbx
  001a8	e8 00 00 00 00	 call	 lua_settop
; Line 857
  001ad	b8 01 00 00 00	 mov	 eax, 1
; Line 858
  001b2	48 83 c4 30	 add	 rsp, 48			; 00000030H
  001b6	5b		 pop	 rbx
  001b7	c3		 ret	 0
luaopen_package ENDP
_TEXT	ENDS
END
