; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_08FNIIFOJC@tostring?$AA@			; `string'
PUBLIC	??_C@_04PEGFANN@stop?$AA@			; `string'
PUBLIC	??_C@_07LDHOHMPD@restart?$AA@			; `string'
PUBLIC	??_C@_07JHIJCABF@collect?$AA@			; `string'
PUBLIC	??_C@_05IOMEMJEC@count?$AA@			; `string'
PUBLIC	??_C@_04CNBNFAL@step?$AA@			; `string'
PUBLIC	??_C@_08ONFIAENP@setpause?$AA@			; `string'
PUBLIC	??_C@_0L@KABEJKKP@setstepmul?$AA@		; `string'
PUBLIC	??_C@_09JCKLCKIH@isrunning?$AA@			; `string'
PUBLIC	??_C@_06GMEIIFFN@assert?$AA@			; `string'
PUBLIC	??_C@_07DBBPHNDK@authors?$AA@			; `string'
PUBLIC	??_C@_0P@CKFEAJJE@collectgarbage?$AA@		; `string'
PUBLIC	??_C@_05MEHLAELG@clear?$AA@			; `string'
PUBLIC	??_C@_03LCPHGAHP@cls?$AA@			; `string'
PUBLIC	??_C@_0M@PPJNHBMP@description?$AA@		; `string'
PUBLIC	??_C@_04EBPADADD@desc?$AA@			; `string'
PUBLIC	??_C@_06ONNDGCDK@dofile?$AA@			; `string'
PUBLIC	??_C@_05KKCIMGE@error?$AA@			; `string'
PUBLIC	??_C@_04MKNBDEPB@exit?$AA@			; `string'
PUBLIC	??_C@_0N@LGLOEPAG@getmetatable?$AA@		; `string'
PUBLIC	??_C@_04PCJFHION@help?$AA@			; `string'
PUBLIC	??_C@_06MGIEFEAJ@ipairs?$AA@			; `string'
PUBLIC	??_C@_08BNNFLGCJ@loadfile?$AA@			; `string'
PUBLIC	??_C@_04EONOHKEP@load?$AA@			; `string'
PUBLIC	??_C@_0L@BBBJLLLK@loadstring?$AA@		; `string'
PUBLIC	??_C@_04CJGEDOF@next?$AA@			; `string'
PUBLIC	??_C@_05PEAECDOC@pairs?$AA@			; `string'
PUBLIC	??_C@_05JAJCNIIJ@pcall?$AA@			; `string'
PUBLIC	??_C@_05IJDJACGD@print?$AA@			; `string'
PUBLIC	??_C@_08LCBKMMAG@rawequal?$AA@			; `string'
PUBLIC	??_C@_06FFKMAGPK@rawlen?$AA@			; `string'
PUBLIC	??_C@_06DCIAHLCA@rawget?$AA@			; `string'
PUBLIC	??_C@_06ONPLLLOI@rawset?$AA@			; `string'
PUBLIC	??_C@_06LGNCCACI@select?$AA@			; `string'
PUBLIC	??_C@_0N@MCAAIDEK@setmetatable?$AA@		; `string'
PUBLIC	??_C@_08JOIMPOJO@tonumber?$AA@			; `string'
PUBLIC	??_C@_04GPMDFGEJ@type?$AA@			; `string'
PUBLIC	??_C@_05HNCIIKBA@usage?$AA@			; `string'
PUBLIC	??_C@_07CPCPJPKL@version?$AA@			; `string'
PUBLIC	??_C@_06GDLLDIBI@xpcall?$AA@			; `string'
PUBLIC	??_C@_05PJMKFLDO@ztest?$AA@			; `string'
PUBLIC	??_C@_02NIGGJGKC@_G?$AA@			; `string'
PUBLIC	??_C@_08PMLCGGEP@_VERSION?$AA@			; `string'
PUBLIC	??_C@_0KO@JANFHFAH@?H?g?$LJ?$PL?F?d?$LC?N?J?$PN?5v?5?$LF?D?V?$LF?N?$KK?$LM?Y?$KD?$KInil?5?$LL?r?5fa@ ; `string'
PUBLIC	??_C@_0BG@EMONHILO@?O?T?J?$LOlua?$LK?K?P?D?$LP?b?H?m?$LM?$PO?W?w?U?$NP?$AA@ ; `string'
PUBLIC	??_C@_0BLJ@JAGMBHNF@?$MA?$KM?$LL?x?$LL?X?J?U?5?6?5?$CCstop?$CC?3?5?M?$KD?V?$LJ?$MA?$KM?$LL?x?$LL?X?J?U?$KB@ ; `string'
PUBLIC	??_C@_0BB@DLNNKEPM@?G?e?$LD?$PN?$LF?$LB?G?$LA?F?A?D?$LL?D?Z?H?$NN?$AA@ ; `string'
PUBLIC	??_C@_0BO@DIDGHNKN@?G?e?$LD?$PN?$LF?$LB?G?$LA?F?A?D?$LL?D?Z?H?$NN?$KD?$KM?S?kclear?R?$LL?Q?y?$AA@ ; `string'
PUBLIC	??_C@_0CM@BKHIOMOH@?$LE?r?$LP?$KK?$LI?C?C?$PL?W?V?$LF?D?N?D?$LM?$PO?$KD?$KM?$LC?$KC?V?$LE?P?P?N?D?$LM?$PO?V?P?$LF?D@ ; `string'
PUBLIC	??_C@_0CO@MGGLOCON@?V?U?V?$LJ?K?y?$LB?$KD?$LL?$KE?$LF?D?$LK?$KP?J?$PN?$KD?$KM?E?W?$LD?v?5message?5?O@ ; `string'
PUBLIC	??_C@_08ECHOJKFB@?M?K?$LD?v?$LL?$LH?$LO?$LD?$AA@ ; `string'
PUBLIC	??_C@_06EDAGHKOI@gcinfo?$AA@			; `string'
PUBLIC	??_C@_0L@HMHBHHNF@?$LL?q?H?$KBgc?P?E?O?$KC?$AA@	; `string'
PUBLIC	??_C@_0FI@LNEDBPAH@?H?g?$LJ?$PL?$LG?T?O?s?C?$LL?S?P?T?$KK?$LB?m?$KD?$KM?$LH?$LF?$LL?X?$LP?U?$KD?$LL?H?g?$LJ?$PL?$LG?T@ ; `string'
PUBLIC	??_C@_08ENPOPECB@?O?T?J?$LO?$LA?o?V?z?$AA@	; `string'
PUBLIC	??_C@_0GD@BCHKILID@?$LH?$LF?$LL?X?H?$PN?$LI?v?V?$LF?$KD?$LK?$LF?$PM?$LE?z?F?w?$KB?$KC?$LE?$KL?H?k?$LF?D?$LB?m?5t?$KB?$KC@ ; `string'
PUBLIC	??_C@_0DJ@FJIPOJKF@?$LE?S?N?D?$LM?$PO?V?P?$LL?q?H?$KB?$LE?z?B?k?$LP?i?$KD?$KM?H?g?$LJ?$PL?C?$LL?S?P?V?$LI?$LG?$KI@ ; `string'
PUBLIC	??_C@_0BFP@JCAMCHOC@?M?$KI?$LJ?$PN?$LE?$KL?H?k?$LK?$KP?J?$PN?5func?5?$LF?D?$LH?$LF?$LL?X?V?$LF?$LL?q?H?$KB?$LE?z@ ; `string'
PUBLIC	??_C@_0CL@KDEJAEID@?S?k?5load?5?$MA?$OA?K?F?$KD?$KM?V?$LL?$LC?$LL?$LJ?$PN?J?G?$LE?S?W?V?$LH?$PL?$LE?$KO?V?P@ ; `string'
PUBLIC	??_C@_0BL@PBNINAND@?$LH?$LF?$LL?X?$LE?$KL?H?k?$LF?D?$LB?m?V?P?O?B?R?$LL?$LI?v?$LM?$PM?V?$LF?$LG?T?$AA@ ; `string'
PUBLIC	??_C@_0LM@CCOODELD@?R?T?$LB?$KD?$LL?$KE?D?$KD?J?$LN?$LF?w?S?C?$LE?$KL?H?k?$LF?D?$LK?$KP?J?$PN?$KD?$KM?R?$LC?$LO?M?J?G@ ; `string'
PUBLIC	??_C@_0FN@GIFILDMN@?$LN?v?W?w?N?$KK?$LP?l?K?Y?$LC?i?$LP?$LE?D?$LD?$LI?v?V?$LF?$LF?D?$LJ?$KE?$LO?$NP?$KD?$KM?$LC?$LL?S?C@ ; `string'
PUBLIC	??_C@_0HD@KAAICMEO@?R?T?5raw?5?W?w?N?$KK?G?$LA?W?$LK?$LF?D?$LK?$KP?J?$PN?$LO?y?$LB?m?J?$LO?$LI?C?$LH?$LN?$LH@ ; `string'
PUBLIC	??_C@_0EK@HOOBFFHD@?$LL?q?H?$KB?5table?5?V?P?$LM?$PM?5index?5?$LF?D?$LJ?X?A?$KK?V?$LF?$KD?$KM@ ; `string'
PUBLIC	??_C@_0HL@JIGMHII@?$LN?$KL?5table?$FLindex?$FN?5?$LF?D?V?$LF?I?h?V?C?N?$KK?5value@ ; `string'
PUBLIC	??_C@_0KI@BKGLFMBF@index?5?$LP?I?R?T?J?G?J?$PN?W?V?$LL?r?U?$NP?W?V?$LH?$PL?5?8?$CD?8?5?$KB?$KD?$LF@ ; `string'
PUBLIC	??_C@_0JI@CGNAGBNM@?$LI?x?5table?5?$LJ?X?A?$KK?T?$KK?$LB?m?5metatable?5?$KB?$KD?$LH?$LF@ ; `string'
PUBLIC	??_C@_0ML@FKNGDJCH@?5?$LD?$KC?J?T?$LA?Q?5e?5?$KD?$KI?$LF?Z?R?$LL?$LC?N?J?$PN?$KD?$KJ?W?$KK?$LL?$LL?N?$KK?J?$KO?$LN?x@ ; `string'
PUBLIC	??_C@_0LH@BPMOIOAF@?D?$NM?$LN?$KL?H?N?R?b?$MA?$OA?P?M?$LF?D?V?$LF?W?$KK?$LL?$LL?N?$KK?$LK?O?J?J?$LF?D?W?V?$LH?$PL@ ; `string'
PUBLIC	??_C@_0JD@IBGGALMK@?$LH?$LF?$LL?X?5v?5?$LF?D?$MA?$OA?P?M?$KD?$KM?$MA?$OA?P?M?R?T?W?V?$LH?$PL?$LE?$KO?P?N?J?$LN?$LH@ ; `string'
PUBLIC	??_C@_06FIONAGJL@unpack?$AA@			; `string'
PUBLIC	??_C@_0EK@NGIAAGBN@?$LH?$LF?$LL?X?$LB?m?V?P?$LF?D?$LI?w?$LI?v?S?r?$LF?D?V?$LF?0?$LF?H?$LM?$NL?S?Z?$KD?$LK?6?5r@ ; `string'
PUBLIC	??_C@_0M@PFJHOPOH@?O?T?J?$LOlua?$LA?o?V?z?$AA@	; `string'
PUBLIC	??_C@_0O@EHKFACGH@?O?T?J?$LOlua?$LA?f?$LB?$LO?$LK?E?$AA@ ; `string'
PUBLIC	??_C@_0IK@CAPLCHMD@?S?k?5pcall?5?$CIf?0?5arg1?0?5?4?4?4?$CJ?5?$MA?$OA?K?F?$KB?$KD?$LC?$LL@ ; `string'
PUBLIC	??_C@_08IMDOEIMN@?T?$NN?N?$NO?N?D?$LF?$LF?$AA@	; `string'
PUBLIC	??_C@_0BAL@KMFOEKGD@?5Si?5la?5valeur?5de?5ses?5param?$KI?$KItres@ ; `string'
PUBLIC	??_C@_0DC@CDPJFCGL@?5Biblioth?$KI?$KIque?5centrale?5de?5logic@ ; `string'
PUBLIC	??_C@_0DGC@IPAKCGAD@?5Recyclage?5d?8ordures?5?6?5?$CCStop?$CC?3?5a@ ; `string'
PUBLIC	??_C@_0CG@FJGBEIFH@?5Efface?5le?5contenu?5d?8?$KI?$KGcran?5actu@ ; `string'
PUBLIC	??_C@_0DE@JICLAMHJ@?5Efface?5le?5contenu?5d?8?$KI?$KGcran?5actu@ ; `string'
PUBLIC	??_C@_0FL@FAJHGOBG@?5Ouvrir?5un?5fichier?5pour?5le?5nom?5d@ ; `string'
PUBLIC	??_C@_0EP@PIJCBEIB@?5La?5fonction?5de?5protection?5de?5fi@ ; `string'
PUBLIC	??_C@_0CA@FGHNAFKD@?5Le?5retrait?5de?5l?8environnement?4?$AA@ ; `string'
PUBLIC	??_C@_0CI@NALIMHDF@?5Pour?5acqu?$KI?$KGrir?5des?5informations@ ; `string'
PUBLIC	??_C@_0LJ@FGEIIAGN@Si?5l?8objet?5n?8a?5pas?5d?8?$KI?$KGl?$KI?$KGment?5d@ ; `string'
PUBLIC	??_C@_0BF@CJGBKPP@?5L?8affichage?5d?8aide?4?$AA@ ; `string'
PUBLIC	??_C@_0JO@JADFJLCG@?5Le?5retour?5de?5trois?5valeurs?3?5des@ ; `string'
PUBLIC	??_C@_0HC@JGJODJKM@?$DP?5partir?5d?8un?5fichier?5d?8un?5bloc?5@ ; `string'
PUBLIC	??_C@_0CMD@IPDNPDKH@?5En?5fonction?5de?5la?5valeur?5de?5ret@ ; `string'
PUBLIC	??_C@_0EP@ILNELIKM@?5Et?5de?5charge?5similaires?0?5mais?5d@ ; `string'
PUBLIC	??_C@_0DH@GLINNKKE@?5Renvoie?5une?5table?5en?5entrant?5un@ ; `string'
PUBLIC	??_C@_0BGK@CNELNDDM@?5En?5fonction?5de?5modes?5de?5protect@ ; `string'
PUBLIC	??_C@_0KE@GDPEMNBN@?5Uniquement?5comme?5un?5outil?5de?5v?$KI@ ; `string'
PUBLIC	??_C@_0NG@LLAAJDGI@?5En?5fonction?5de?5brut?5comme?5pr?$KI?$KGf@ ; `string'
PUBLIC	??_C@_0HK@FGIOHHAI@?5Association?5de?5valeurs?5de?5cl?$KI?$KG?5@ ; `string'
PUBLIC	??_C@_0MG@BGPJEELN@?5La?5valeur?5de?5table?5?$FLindex?$FN?5agen@ ; `string'
PUBLIC	??_C@_0BAI@LLPMMAEH@?5Index?5peuvent?5?$KI?$LKtre?5des?5nombres@ ; `string'
PUBLIC	??_C@_0PO@FHCMBDIA@?5Une?5table?5d?8?$KI?$KGl?$KI?$KGments?5?$KI?$KE?5Assoc@ ; `string'
PUBLIC	??_C@_0BIG@GOLMNLDL@?5Essayer?5de?5mettre?5e?5?$CIpremier?5pa@ ; `string'
PUBLIC	??_C@_0BIE@IGMKAOCN@?5Peut?5?$KI?$LKtre?5tout?5type?5de?5convers@ ; `string'
PUBLIC	??_C@_0LN@LBNHJOBO@?5Type?5de?5retour?5de?5type?5V?0?5sous?5@ ; `string'
PUBLIC	??_C@_0HG@JGIEAADH@?5Valeur?5de?5retour?5dans?5la?5table?0@ ; `string'
PUBLIC	??_C@_0BG@NBIOKOFO@?5Afficher?5l?8aide?5lua?4?$AA@ ; `string'
PUBLIC	??_C@_0CE@PGJELJLM@?5Affiche?5le?5num?$KI?$KGro?5de?5version?5l@ ; `string'
PUBLIC	??_C@_0NI@EGNKKADN@?5Et?5pcall?5F?0?5ARG1?0?4?4?4?$CJ?5similaire@ ; `string'
PUBLIC	??_C@_0BC@OHKCJLJF@?5Pas?5de?5document?4?$AA@	; `string'
PUBLIC	??_C@_0PL@PPGPJAOF@?5If?5the?5value?5of?5the?5parameter?5V@ ; `string'
PUBLIC	??_C@_0CL@EGPKEPDF@?5Display?5Lua?5core?5library?5softwa@ ; `string'
PUBLIC	??_C@_0CLG@MHPOFKFP@?5Garbage?5collection?5?6?5?$CCstop?$CC?3sto@ ; `string'
PUBLIC	??_C@_0CD@GIFDFOKH@?5Clear?5the?5current?5screen?5conten@ ; `string'
PUBLIC	??_C@_0DM@FOIOOHIH@?5Clear?5the?5contents?5of?5the?5curre@ ; `string'
PUBLIC	??_C@_0EJ@DGJFFBHF@?5Open?5the?5file?5with?5the?5name?5and@ ; `string'
PUBLIC	??_C@_0FC@EOKDBHAL@?5Terminates?5the?5protected?5functi@ ; `string'
PUBLIC	??_C@_0BD@PJKNDGCE@?5Exit?5environment?4?$AA@	; `string'
PUBLIC	??_C@_0BF@MHOHDPLO@?5Get?5GC?5information?4?$AA@ ; `string'
PUBLIC	??_C@_0LO@DNFGBCFA@?5If?5the?5object?5does?5not?5have?5a?5m@ ; `string'
PUBLIC	??_C@_0P@LLHOPFNO@?5Display?5help?4?$AA@	; `string'
PUBLIC	??_C@_0KM@JGBEJALH@?5Returns?5three?5values?3?5the?5itera@ ; `string'
PUBLIC	??_C@_0FN@KPBHGFLD@?5Gets?5the?5code?5block?5from?5the?5fi@ ; `string'
PUBLIC	??_C@_0CJJ@GDHFJCG@?5Gets?5a?5block?5of?5code?5fragments?5@ ; `string'
PUBLIC	??_C@_0DI@GMENKGGP@?5Like?5load?0?5it?8s?5just?5getting?5co@ ; `string'
PUBLIC	??_C@_0DG@HFJGEFJL@?5Returns?5the?5next?5key?5key?5pair?5i@ ; `string'
PUBLIC	??_C@_0BCK@BOCGOANJ@?5Call?5the?5incoming?5function?5in?5p@ ; `string'
PUBLIC	??_C@_0IK@GDKDFCKG@?5As?5a?5tool?5for?5quickly?5looking?5a@ ; `string'
PUBLIC	??_C@_0LF@PKNDHPCC@?5Functions?5that?5use?5raw?5as?5a?5pre@ ; `string'
PUBLIC	??_C@_0HO@HGCBPGHB@?5Gets?5the?5associated?5value?5of?5th@ ; `string'
PUBLIC	??_C@_0JE@BFCHJBJB@?5Set?5the?5value?5of?5table?$FLindex?$FN?5t@ ; `string'
PUBLIC	??_C@_0PD@CBLGHCJO@?5Index?5can?5be?5a?5number?5or?5charac@ ; `string'
PUBLIC	??_C@_0PO@NGGJNABH@?5Give?5the?5?$CCtable?$CC?5to?5associated?5@ ; `string'
PUBLIC	??_C@_0BFM@CFFEGNIJ@?5Try?5converting?5e?5?$CIfirst?5paramet@ ; `string'
PUBLIC	??_C@_0BBB@PJNMCJFP@?5Converts?5any?5type?5of?5value?5to?5t@ ; `string'
PUBLIC	??_C@_0LC@DPMGNINL@?5Returns?5the?5type?5of?5v?0?5and?5the?5@ ; `string'
PUBLIC	??_C@_0GO@DDDBPCFJ@Returns?5the?5value?5of?5each?5domain@ ; `string'
PUBLIC	??_C@_0BD@GMPIGENL@?5Display?5Lua?5help?4?$AA@	; `string'
PUBLIC	??_C@_0CB@NHLIKOMI@?5Display?5the?5Lua?5version?5number?4@ ; `string'
PUBLIC	??_C@_0OE@KLGOIKF@?5Similar?5to?5pcall?5?$CIF?0?5arg1?0?4?4?4?$CJ?4@ ; `string'
PUBLIC	??_C@_0O@KFENAANH@?5No?5document?4?$AA@		; `string'
PUBLIC	??_C@_03IBJHJIAF@lua?$AA@			; `string'
PUBLIC	____Description_chs
PUBLIC	??_C@_0DHO@IPDEENOO@Lua?J?G?R?$LL?$LI?v?P?$KB?G?I?$LF?D?$LN?E?$LB?$LO?S?o?Q?T?$KB?$KD?J?G?$LA?M?N?w?$MA@ ; `string'
PUBLIC	____Description_eng
PUBLIC	??_C@_0FFL@EBMBOIJP@Lua?5is?5a?5small?5scripting?5languag@ ; `string'
PUBLIC	luaB_authors
PUBLIC	luaB_clear
PUBLIC	luaB_exit
PUBLIC	luaB_getDescription
PUBLIC	luaB_help
PUBLIC	luaB_usage
PUBLIC	luaB_version
PUBLIC	luaB_ztest
;	COMDAT ??_C@_0FFL@EBMBOIJP@Lua?5is?5a?5small?5scripting?5languag@
CONST	SEGMENT
??_C@_0FFL@EBMBOIJP@Lua?5is?5a?5small?5scripting?5languag@ DB 'Lua is a s'
	DB	'mall scripting language. Brazil Catholic University of Rio De'
	DB	' Janeiro (Pontifical Catholic University of Rio de Janeiro) a'
	DB	' research team, Roberto Ierusalimschy, Waldemar Celes by Luiz'
	DB	' Henrique and de Figueiredo formed and developed in 1993. The'
	DB	' design is designed to embed applications, providing flexible'
	DB	' extension and customization capabilities for applications. L'
	DB	'ua is written by standard C and can be compiled and run on al'
	DB	'most all operating systems and platforms. Lua does not provid'
	DB	'e a powerful library, which is determined by its location. Th'
	DB	'erefore, Lua is not suitable as a language for developing ind'
	DB	'ependent applications. Lua has a simultaneous JIT project tha'
	DB	't provides immediate compile capabilities on a particular pla'
	DB	'tform. ', 0aH, ' Lua scripts can easily be called by C / C++ '
	DB	'code, and can also call C / C++ functions in turn, which make'
	DB	's Lua available for applications in a wide variety of applica'
	DB	'tions. Not only as an extension script, but also as an ordina'
	DB	'ry configuration file instead of XML, ini and other file form'
	DB	'ats, and easier to understand and maintain. Lua is written by'
	DB	' standard C, which is simple and elegant, and can be compiled'
	DB	' and run on almost all operating systems and platforms. A com'
	DB	'plete Lua interpreter, but 200K, is the fastest Lua in all sc'
	DB	'ripting engines. All this determines that Lua is the best cho'
	DB	'ice as an embedded script.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DHO@IPDEENOO@Lua?J?G?R?$LL?$LI?v?P?$KB?G?I?$LF?D?$LN?E?$LB?$LO?S?o?Q?T?$KB?$KD?J?G?$LA?M?N?w?$MA@
CONST	SEGMENT
??_C@_0DHO@IPDEENOO@Lua?J?G?R?$LL?$LI?v?P?$KB?G?I?$LF?D?$LN?E?$LB?$LO?S?o?Q?T?$KB?$KD?J?G?$LA?M?N?w?$MA@ DB 'L'
	DB	'ua', 0caH, 0c7H, 0d2H, 0bbH, 0b8H, 0f6H, 0d0H, 0a1H, 0c7H, 0c9H
	DB	0b5H, 0c4H, 0bdH, 0c5H, 0b1H, 0beH, 0d3H, 0efH, 0d1H, 0d4H, 0a1H
	DB	0a3H, 0caH, 0c7H, 0b0H, 0cdH, 0ceH, 0f7H, 0c0H, 0efH, 0d4H, 0bcH
	DB	0c8H, 0c8H, 0c4H, 0daH, 0c2H, 0acH, 0ccH, 0ecH, 0d6H, 0f7H, 0bdH
	DB	0ccH, 0b4H, 0f3H, 0d1H, 0a7H, 0a3H, 0a8H, 'Pontifical Catholic'
	DB	' University of Rio de Janeiro', 0a3H, 0a9H, 0c0H, 0efH, 0b5H, 0c4H
	DB	0d2H, 0bbH, 0b8H, 0f6H, 0d1H, 0d0H, 0beH, 0bfH, 0d0H, 0a1H, 0d7H
	DB	0e9H, 0a3H, 0acH, 0d3H, 0c9H, 'Roberto Ierusalimschy', 0a1H, 0a2H
	DB	'Waldemar Celes ', 0baH, 0cdH, ' Luiz Henrique de Figueiredo', 0cbH
	DB	0f9H, 0d7H, 0e9H, 0b3H, 0c9H, 0b2H, 0a2H, 0d3H, 0daH, '1993', 0c4H
	DB	0eaH, 0bfH, 0aaH, 0b7H, 0a2H, 0a1H, 0a3H, ' ', 0c6H, 0e4H, 0c9H
	DB	0e8H, 0bcH, 0c6H, 0c4H, 0bfH, 0b5H, 0c4H, 0caH, 0c7H, 0ceH, 0aaH
	DB	0c1H, 0cbH, 0c7H, 0b6H, 0c8H, 0ebH, 0d3H, 0a6H, 0d3H, 0c3H, 0b3H
	DB	0ccH, 0d0H, 0f2H, 0d6H, 0d0H, 0a3H, 0acH, 0b4H, 0d3H, 0b6H, 0f8H
	DB	0ceH, 0aaH, 0d3H, 0a6H, 0d3H, 0c3H, 0b3H, 0ccH, 0d0H, 0f2H, 0ccH
	DB	0e1H, 0b9H, 0a9H, 0c1H, 0e9H, 0bbH, 0eeH, 0b5H, 0c4H, 0c0H, 0a9H
	DB	0d5H, 0b9H, 0baH, 0cdH, 0b6H, 0a8H, 0d6H, 0c6H, 0b9H, 0a6H, 0c4H
	DB	0dcH, 0a1H, 0a3H, 'Lua', 0d3H, 0c9H, 0b1H, 0eaH, 0d7H, 0bcH, 'C'
	DB	0b1H, 0e0H, 0d0H, 0b4H, 0b6H, 0f8H, 0b3H, 0c9H, 0a3H, 0acH, 0bcH
	DB	0b8H, 0baH, 0f5H, 0d4H, 0daH, 0cbH, 0f9H, 0d3H, 0d0H, 0b2H, 0d9H
	DB	0d7H, 0f7H, 0cfH, 0b5H, 0cdH, 0b3H, 0baH, 0cdH, 0c6H, 0bdH, 0ccH
	DB	0a8H, 0c9H, 0cfH, 0b6H, 0bcH, 0bfH, 0c9H, 0d2H, 0d4H, 0b1H, 0e0H
	DB	0d2H, 0ebH, 0a3H, 0acH, 0d4H, 0cbH, 0d0H, 0d0H, 0a1H, 0a3H, 'L'
	DB	'ua', 0b2H, 0a2H, 0c3H, 0bbH, 0d3H, 0d0H, 0ccH, 0e1H, 0b9H, 0a9H
	DB	0c7H, 0bfH, 0b4H, 0f3H, 0b5H, 0c4H, 0bfH, 0e2H, 0a3H, 0acH, 0d5H
	DB	0e2H, 0caH, 0c7H, 0d3H, 0c9H, 0cbH, 0fcH, 0b5H, 0c4H, 0b6H, 0a8H
	DB	0ceH, 0bbH, 0beH, 0f6H, 0b6H, 0a8H, 0b5H, 0c4H, 0a1H, 0a3H, 0cbH
	DB	0f9H, 0d2H, 0d4H, 'Lua', 0b2H, 0bbH, 0caH, 0caH, 0baH, 0cfH, 0d7H
	DB	0f7H, 0ceH, 0aaH, 0bfH, 0aaH, 0b7H, 0a2H, 0b6H, 0c0H, 0c1H, 0a2H
	DB	0d3H, 0a6H, 0d3H, 0c3H, 0b3H, 0ccH, 0d0H, 0f2H, 0b5H, 0c4H, 0d3H
	DB	0efH, 0d1H, 0d4H, 0a1H, 0a3H, 'Lua ', 0d3H, 0d0H, 0d2H, 0bbH, 0b8H
	DB	0f6H, 0cdH, 0acH, 0caH, 0b1H, 0bdH, 0f8H, 0d0H, 0d0H, 0b5H, 0c4H
	DB	'JIT', 0cfH, 0eeH, 0c4H, 0bfH, 0a3H, 0acH, 0ccH, 0e1H, 0b9H, 0a9H
	DB	0d4H, 0daH, 0ccH, 0d8H, 0b6H, 0a8H, 0c6H, 0bdH, 0ccH, 0a8H, 0c9H
	DB	0cfH, 0b5H, 0c4H, 0bcH, 0b4H, 0caH, 0b1H, 0b1H, 0e0H, 0d2H, 0ebH
	DB	0b9H, 0a6H, 0c4H, 0dcH, 0a1H, 0a3H, 0aH, ' Lua', 0bdH, 0c5H, 0b1H
	DB	0beH, 0bfH, 0c9H, 0d2H, 0d4H, 0baH, 0dcH, 0c8H, 0ddH, 0d2H, 0d7H
	DB	0b5H, 0c4H, 0b1H, 0bbH, 'C / C++ ', 0b4H, 0faH, 0c2H, 0ebH, 0b5H
	DB	0f7H, 0d3H, 0c3H, 0a3H, 0acH, 0d2H, 0b2H, 0bfH, 0c9H, 0d2H, 0d4H
	DB	0b7H, 0b4H, 0b9H, 0fdH, 0c0H, 0b4H, 0b5H, 0f7H, 0d3H, 0c3H, 'C'
	DB	' / C++', 0b5H, 0c4H, 0baH, 0afH, 0caH, 0fdH, 0a3H, 0acH, 0d5H
	DB	0e2H, 0caH, 0b9H, 0b5H, 0c3H, 'Lua', 0d4H, 0daH, 0d3H, 0a6H, 0d3H
	DB	0c3H, 0b3H, 0ccH, 0d0H, 0f2H, 0d6H, 0d0H, 0bfH, 0c9H, 0d2H, 0d4H
	DB	0b1H, 0bbH, 0b9H, 0e3H, 0b7H, 0baH, 0d3H, 0a6H, 0d3H, 0c3H, 0a1H
	DB	0a3H, 0b2H, 0bbH, 0bdH, 0f6H, 0bdH, 0f6H, 0d7H, 0f7H, 0ceH, 0aaH
	DB	0c0H, 0a9H, 0d5H, 0b9H, 0bdH, 0c5H, 0b1H, 0beH, 0a3H, 0acH, 0d2H
	DB	0b2H, 0bfH, 0c9H, 0d2H, 0d4H, 0d7H, 0f7H, 0ceH, 0aaH, 0c6H, 0d5H
	DB	0cdH, 0a8H, 0b5H, 0c4H, 0c5H, 0e4H, 0d6H, 0c3H, 0ceH, 0c4H, 0bcH
	DB	0feH, 0a3H, 0acH, 0b4H, 0faH, 0ccH, 0e6H, 'XML, ini', 0b5H, 0c8H
	DB	0ceH, 0c4H, 0bcH, 0feH, 0b8H, 0f1H, 0caH, 0bdH, 0a3H, 0acH, 0b2H
	DB	0a2H, 0c7H, 0d2H, 0b8H, 0fcH, 0c8H, 0ddH, 0d2H, 0d7H, 0c0H, 0edH
	DB	0bdH, 0e2H, 0baH, 0cdH, 0ceH, 0acH, 0bbH, 0a4H, 0a1H, 0a3H, 'L'
	DB	'ua', 0d3H, 0c9H, 0b1H, 0eaH, 0d7H, 0bcH, 'C', 0b1H, 0e0H, 0d0H
	DB	0b4H, 0b6H, 0f8H, 0b3H, 0c9H, 0a3H, 0acH, 0b4H, 0faH, 0c2H, 0ebH
	DB	0bcH, 0f2H, 0bdH, 0e0H, 0d3H, 0c5H, 0c3H, 0c0H, 0a3H, 0acH, 0bcH
	DB	0b8H, 0baH, 0f5H, 0d4H, 0daH, 0cbH, 0f9H, 0d3H, 0d0H, 0b2H, 0d9H
	DB	0d7H, 0f7H, 0cfH, 0b5H, 0cdH, 0b3H, 0baH, 0cdH, 0c6H, 0bdH, 0ccH
	DB	0a8H, 0c9H, 0cfH, 0b6H, 0bcH, 0bfH, 0c9H, 0d2H, 0d4H, 0b1H, 0e0H
	DB	0d2H, 0ebH, 0a3H, 0acH, 0d4H, 0cbH, 0d0H, 0d0H, 0a1H, 0a3H, ' '
	DB	0d2H, 0bbH, 0b8H, 0f6H, 0cdH, 0eaH, 0d5H, 0fbH, 0b5H, 0c4H, 'L'
	DB	'ua', 0bdH, 0e2H, 0caH, 0cdH, 0c6H, 0f7H, 0b2H, 0bbH, 0b9H, 0fdH
	DB	'200k', 0a3H, 0acH, 0d4H, 0daH, 0c4H, 0bfH, 0c7H, 0b0H, 0cbH, 0f9H
	DB	0d3H, 0d0H, 0bdH, 0c5H, 0b1H, 0beH, 0d2H, 0fdH, 0c7H, 0e6H, 0d6H
	DB	0d0H, 0a3H, 0acH, 'Lua', 0b5H, 0c4H, 0cbH, 0d9H, 0b6H, 0c8H, 0caH
	DB	0c7H, 0d7H, 0eeH, 0bfH, 0ecH, 0b5H, 0c4H, 0a1H, 0a3H, 0d5H, 0e2H
	DB	0d2H, 0bbH, 0c7H, 0d0H, 0b6H, 0bcH, 0beH, 0f6H, 0b6H, 0a8H, 0c1H
	DB	0cbH, 'Lua', 0caH, 0c7H, 0d7H, 0f7H, 0ceH, 0aaH, 0c7H, 0b6H, 0c8H
	DB	0ebH, 0caH, 0bdH, 0bdH, 0c5H, 0b1H, 0beH, 0b5H, 0c4H, 0d7H, 0eeH
	DB	0bcH, 0d1H, 0d1H, 0a1H, 0d4H, 0f1H, 0a1H, 0a3H, ' ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03IBJHJIAF@lua?$AA@
CONST	SEGMENT
??_C@_03IBJHJIAF@lua?$AA@ DB 'lua', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
progname DQ	FLAT:??_C@_03IBJHJIAF@lua?$AA@
____Description_chs DQ FLAT:??_C@_0DHO@IPDEENOO@Lua?J?G?R?$LL?$LI?v?P?$KB?G?I?$LF?D?$LN?E?$LB?$LO?S?o?Q?T?$KB?$KD?J?G?$LA?M?N?w?$MA@
____Description_eng DQ FLAT:??_C@_0FFL@EBMBOIJP@Lua?5is?5a?5small?5scripting?5languag@
_DATA	ENDS
;	COMDAT ??_C@_0O@KFENAANH@?5No?5document?4?$AA@
CONST	SEGMENT
??_C@_0O@KFENAANH@?5No?5document?4?$AA@ DB ' No document.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0OE@KLGOIKF@?5Similar?5to?5pcall?5?$CIF?0?5arg1?0?4?4?4?$CJ?4@
CONST	SEGMENT
??_C@_0OE@KLGOIKF@?5Similar?5to?5pcall?5?$CIF?0?5arg1?0?4?4?4?$CJ?4@ DB ' '
	DB	'Similar to pcall (F, arg1,...). The difference is that if the'
	DB	' F function throws an error, the xpcall does not return the e'
	DB	'rror information thrown from the f, but instead uses the erro'
	DB	'r information returned by the err function.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NHLIKOMI@?5Display?5the?5Lua?5version?5number?4@
CONST	SEGMENT
??_C@_0CB@NHLIKOMI@?5Display?5the?5Lua?5version?5number?4@ DB ' Display t'
	DB	'he Lua version number.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GMPIGENL@?5Display?5Lua?5help?4?$AA@
CONST	SEGMENT
??_C@_0BD@GMPIGENL@?5Display?5Lua?5help?4?$AA@ DB ' Display Lua help.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GO@DDDBPCFJ@Returns?5the?5value?5of?5each?5domain@
CONST	SEGMENT
??_C@_0GO@DDDBPCFJ@Returns?5the?5value?5of?5each?5domain@ DB 'Returns the'
	DB	' value of each domain in the table, which is equivalent to: ', 0aH
	DB	', return, list[i], list[i+1], list[j]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0LC@DPMGNINL@?5Returns?5the?5type?5of?5v?0?5and?5the?5@
CONST	SEGMENT
??_C@_0LC@DPMGNINL@?5Returns?5the?5type?5of?5v?0?5and?5the?5@ DB ' Return'
	DB	's the type of v, and the type returns in string. There are ei'
	DB	'ght kinds of return values: " nil"," number", "string","boole'
	DB	'an", "table", " function", "thread", "userdata".', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BBB@PJNMCJFP@?5Converts?5any?5type?5of?5value?5to?5t@
CONST	SEGMENT
??_C@_0BBB@PJNMCJFP@?5Converts?5any?5type?5of?5value?5to?5t@ DB ' Convert'
	DB	's any type of value to the proper string type. To control the'
	DB	' conversion of numbers to strings, use string.format (FormatS'
	DB	'tring,...). ', 0aH, ' If the value associated with the meta t'
	DB	'able has the __tostring field, the string is obtained using t'
	DB	'he meta method of the field.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BFM@CFFEGNIJ@?5Try?5converting?5e?5?$CIfirst?5paramet@
CONST	SEGMENT
??_C@_0BFM@CFFEGNIJ@?5Try?5converting?5e?5?$CIfirst?5paramet@ DB ' Try co'
	DB	'nverting e (first parameter) to decimal value and return it. '
	DB	'Returns nil if it cannot be converted. ', 0aH, ' The base (se'
	DB	'cond arguments) represents the hexadecimal of the incoming pa'
	DB	'rameter, and defaults to 10. Parameter base has an input rang'
	DB	'e of [2, 36]. Letters higher than 10 are represented by lette'
	DB	'rs, and A - Z represent 11-35 respectively.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0PO@NGGJNABH@?5Give?5the?5?$CCtable?$CC?5to?5associated?5@
CONST	SEGMENT
??_C@_0PO@NGGJNABH@?5Give?5the?5?$CCtable?$CC?5to?5associated?5@ DB ' Giv'
	DB	'e the "table" to associated element table "metatable". Return'
	DB	' parameter table. ', 0aH, ' if the meta table defines the dom'
	DB	'ain, an error is thrown. ', 0aH, ' The metatable parameter (s'
	DB	'econd argument) is nil to indicate that the associated meta t'
	DB	'able has been lifted.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0PD@CBLGHCJO@?5Index?5can?5be?5a?5number?5or?5charac@
CONST	SEGMENT
??_C@_0PD@CBLGHCJO@?5Index?5can?5be?5a?5number?5or?5charac@ DB ' Index ca'
	DB	'n be a number or character''#''. When index is digital, param'
	DB	'eter returns the index + 1 Parameters and behind (support the'
	DB	' negative form of index); when index is''#'', returns the num'
	DB	'ber of parameters (not including the first parameter).', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0JE@BFCHJBJB@?5Set?5the?5value?5of?5table?$FLindex?$FN?5t@
CONST	SEGMENT
??_C@_0JE@BFCHJBJB@?5Set?5the?5value?5of?5table?$FLindex?$FN?5t@ DB ' Set'
	DB	' the value of table[index] to value. Table must be a table, a'
	DB	'nd index cannot be nil or NaN. Value can be any value. Return'
	DB	's the modified table.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0HO@HGCBPGHB@?5Gets?5the?5associated?5value?5of?5th@
CONST	SEGMENT
??_C@_0HO@HGCBPGHB@?5Gets?5the?5associated?5value?5of?5th@ DB ' Gets the '
	DB	'associated value of the key table in the index. The table par'
	DB	'ameter must be a table and cannot find the return nil.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0LF@PKNDHPCC@?5Functions?5that?5use?5raw?5as?5a?5pre@
CONST	SEGMENT
??_C@_0LF@PKNDHPCC@?5Functions?5that?5use?5raw?5as?5a?5pre@ DB ' Function'
	DB	's that use raw as a prefix indicate that the method calls wit'
	DB	'hout triggering any meta methods. ', 0aH, ' Rawequal checks w'
	DB	'hether V1 is equal to V2 and returns a comparison result.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0IK@GDKDFCKG@?5As?5a?5tool?5for?5quickly?5looking?5a@
CONST	SEGMENT
??_C@_0IK@GDKDFCKG@?5As?5a?5tool?5for?5quickly?5looking?5a@ DB ' As a too'
	DB	'l for quickly looking at a value, you do not have to format o'
	DB	'utput. For formal formatted output, see string.format and io.'
	DB	'write.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BCK@BOCGOANJ@?5Call?5the?5incoming?5function?5in?5p@
CONST	SEGMENT
??_C@_0BCK@BOCGOANJ@?5Call?5the?5incoming?5function?5in?5p@ DB ' Call the'
	DB	' incoming function in protected mode, that is, no errors are '
	DB	'thrown. If caught out of the error, the first parameter retur'
	DB	'ns false, the second parameter error information is returned;'
	DB	' if no error occurs, the first parameter returns ture, behind'
	DB	' the returned value to a function parameter.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@HFJGEFJL@?5Returns?5the?5next?5key?5key?5pair?5i@
CONST	SEGMENT
??_C@_0DG@HFJGEFJL@?5Returns?5the?5next?5key?5key?5pair?5i@ DB ' Returns '
	DB	'the next key key pair in the incoming table.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@GMENKGGP@?5Like?5load?0?5it?8s?5just?5getting?5co@
CONST	SEGMENT
??_C@_0DI@GMENKGGP@?5Like?5load?0?5it?8s?5just?5getting?5co@ DB ' Like lo'
	DB	'ad, it''s just getting code blocks from strings.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJJ@GDHFJCG@?5Gets?5a?5block?5of?5code?5fragments?5@
CONST	SEGMENT
??_C@_0CJJ@GDHFJCG@?5Gets?5a?5block?5of?5code?5fragments?5@ DB ' Gets a b'
	DB	'lock of code fragments through the return value of the incomi'
	DB	'ng function func. The string returned by the subsequent call '
	DB	'of the func function should be able to link to the string ret'
	DB	'urned from the previous call and eventually get the complete '
	DB	'block of code. When the function returns nil or returns no va'
	DB	'lue, it indicates the end of the block.  ', 0aH, ' The load f'
	DB	'unction returns the resulting block of code as a function. Th'
	DB	'e environment that returns the function is the global environ'
	DB	'ment. If an error occurs, load returns the nil and error mess'
	DB	'ages. ', 0aH, ' Chunkname is used as the name of the block of'
	DB	' code and is used in error information and debug information.'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0FN@KPBHGFLD@?5Gets?5the?5code?5block?5from?5the?5fi@
CONST	SEGMENT
??_C@_0FN@KPBHGFLD@?5Gets?5the?5code?5block?5from?5the?5fi@ DB ' Gets the'
	DB	' code block from the file. If no file is specified, get it fr'
	DB	'om the standard input.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0KM@JGBEJALH@?5Returns?5three?5values?3?5the?5itera@
CONST	SEGMENT
??_C@_0KM@JGBEJALH@?5Returns?5three?5values?3?5the?5itera@ DB ' Returns t'
	DB	'hree values: the iterator, the incoming table t, and the valu'
	DB	'e 0. The iterator can obtain the values of i+1 and t[i+1] bas'
	DB	'ed on the incoming table t and index i.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LLHOPFNO@?5Display?5help?4?$AA@
CONST	SEGMENT
??_C@_0P@LLHOPFNO@?5Display?5help?4?$AA@ DB ' Display help.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0LO@DNFGBCFA@?5If?5the?5object?5does?5not?5have?5a?5m@
CONST	SEGMENT
??_C@_0LO@DNFGBCFA@?5If?5the?5object?5does?5not?5have?5a?5m@ DB ' If the '
	DB	'object does not have a meta table, it returns empty; if the o'
	DB	'bject has a __metatable field, the corresponding value is ret'
	DB	'urned; otherwise, the meta table of the object is returned.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MHOHDPLO@?5Get?5GC?5information?4?$AA@
CONST	SEGMENT
??_C@_0BF@MHOHDPLO@?5Get?5GC?5information?4?$AA@ DB ' Get GC information.'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PJKNDGCE@?5Exit?5environment?4?$AA@
CONST	SEGMENT
??_C@_0BD@PJKNDGCE@?5Exit?5environment?4?$AA@ DB ' Exit environment.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@EOKDBHAL@?5Terminates?5the?5protected?5functi@
CONST	SEGMENT
??_C@_0FC@EOKDBHAL@?5Terminates?5the?5protected?5functi@ DB ' Terminates '
	DB	'the protected function, throws the message message, and retur'
	DB	'ns none.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@DGJFFBHF@?5Open?5the?5file?5with?5the?5name?5and@
CONST	SEGMENT
??_C@_0EJ@DGJFFBHF@?5Open?5the?5file?5with?5the?5name?5and@ DB ' Open the'
	DB	' file with the name and execute the Lua code block in the fil'
	DB	'e.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@FOIOOHIH@?5Clear?5the?5contents?5of?5the?5curre@
CONST	SEGMENT
??_C@_0DM@FOIOOHIH@?5Clear?5the?5contents?5of?5the?5curre@ DB ' Clear the'
	DB	' contents of the current screen, just like clear.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@GIFDFOKH@?5Clear?5the?5current?5screen?5conten@
CONST	SEGMENT
??_C@_0CD@GIFDFOKH@?5Clear?5the?5current?5screen?5conten@ DB ' Clear the '
	DB	'current screen content.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CLG@MHPOFKFP@?5Garbage?5collection?5?6?5?$CCstop?$CC?3sto@
CONST	SEGMENT
??_C@_0CLG@MHPOFKFP@?5Garbage?5collection?5?6?5?$CCstop?$CC?3sto@ DB ' Ga'
	DB	'rbage collection ', 0aH, ' "stop":stop garbage recycling. ', 0aH
	DB	' "restart": restart garbage collection. ', 0aH, ' "collect": '
	DB	'executes the full cycle of garbage collection. ', 0aH, ' "cou'
	DB	'nt": returns the total memory used by Lua (Kb). ', 0aH, '  "s'
	DB	'tep": perform a step (step by step composition) garbage colle'
	DB	'ction. The number of steps can be controlled by the parameter'
	DB	' Arg (the larger the number, the more steps, and the 0 indica'
	DB	'tes the execution step (the smallest step). If the recycle cy'
	DB	'cle is completed after execution, returns true. ', 0aH, ' "se'
	DB	'tpause": take Arg / 100 as the new value of the garbage colle'
	DB	'ction parameter pause. ', 0aH, ' "setstepmul": take Arg / 100'
	DB	' as the new value of the garbage collection parameter step mu'
	DB	'tiplier.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@EGPKEPDF@?5Display?5Lua?5core?5library?5softwa@
CONST	SEGMENT
??_C@_0CL@EGPKEPDF@?5Display?5Lua?5core?5library?5softwa@ DB ' Display Lu'
	DB	'a core library software author.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0PL@PPGPJAOF@?5If?5the?5value?5of?5the?5parameter?5V@
CONST	SEGMENT
??_C@_0PL@PPGPJAOF@?5If?5the?5value?5of?5the?5parameter?5V@ DB ' If the v'
	DB	'alue of the parameter V is false (nil or false), it calls err'
	DB	'or; otherwise, all parameters are returned. In the error case'
	DB	', message refers to that error object; if this parameter is n'
	DB	'ot supplied, the parameter defaults to "assertion failed".', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OHKCJLJF@?5Pas?5de?5document?4?$AA@
CONST	SEGMENT
??_C@_0BC@OHKCJLJF@?5Pas?5de?5document?4?$AA@ DB ' Pas de document.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0NI@EGNKKADN@?5Et?5pcall?5F?0?5ARG1?0?4?4?4?$CJ?5similaire@
CONST	SEGMENT
??_C@_0NI@EGNKKADN@?5Et?5pcall?5F?0?5ARG1?0?4?4?4?$CJ?5similaire@ DB ' Et'
	DB	' pcall F, ARG1,...) similaires.C''est diff', 0a8H, 0a6H, 'ren'
	DB	't, si la fonction f lance une erreur, alors xpcall ne renvoie'
	DB	' des informations d''erreur de f jet', 0a8H, 0a6H, ', un mess'
	DB	'age d''erreur mais l''utilisation de la fonction renvoie Err.'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@PGJELJLM@?5Affiche?5le?5num?$KI?$KGro?5de?5version?5l@
CONST	SEGMENT
??_C@_0CE@PGJELJLM@?5Affiche?5le?5num?$KI?$KGro?5de?5version?5l@ DB ' Aff'
	DB	'iche le num', 0a8H, 0a6H, 'ro de version lua.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NBIOKOFO@?5Afficher?5l?8aide?5lua?4?$AA@
CONST	SEGMENT
??_C@_0BG@NBIOKOFO@?5Afficher?5l?8aide?5lua?4?$AA@ DB ' Afficher l''aide '
	DB	'lua.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0HG@JGIEAADH@?5Valeur?5de?5retour?5dans?5la?5table?0@
CONST	SEGMENT
??_C@_0HG@JGIEAADH@?5Valeur?5de?5retour?5dans?5la?5table?0@ DB ' Valeur d'
	DB	'e retour dans la table, chaque domaine ', 0a8H, 0a6H, 'quival'
	DB	'ent ', 0a8H, 0a4H, ': ', 0aH, ' return List [i], liste [i + 1'
	DB	'], ', 0a1H, 0a4H, ' ', 0a1H, 0a4H, ' ', 0a1H, 0a4H, ', liste '
	DB	'[j]', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0LN@LBNHJOBO@?5Type?5de?5retour?5de?5type?5V?0?5sous?5@
CONST	SEGMENT
??_C@_0LN@LBNHJOBO@?5Type?5de?5retour?5de?5type?5V?0?5sous?5@ DB ' Type d'
	DB	'e retour de type V, sous la forme d''une cha?ne de retour.Les'
	DB	' huit types de valeur de retour: "nil" ,  "number" , "string"'
	DB	' , "boolean" , "table" , "function" , "thread" , "userdata".', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BIE@IGMKAOCN@?5Peut?5?$KI?$LKtre?5tout?5type?5de?5convers@
CONST	SEGMENT
??_C@_0BIE@IGMKAOCN@?5Peut?5?$KI?$LKtre?5tout?5type?5de?5convers@ DB ' Pe'
	DB	'ut ', 0a8H, 0baH, 'tre tout type de conversion de la valeur d'
	DB	'e retour sous forme de cha?ne de caract', 0a8H, 0a8H, 'res ap'
	DB	'propri', 0a8H, 0a6H, '.Pour la commande de la conversion num', 0a8H
	DB	0a6H, 'rique de la forme d''une cha?ne de caract', 0a8H, 0a8H, 'r'
	DB	'es, ', 0a8H, 0a4H, ' l''aide de l'' string.format(formatstrin'
	DB	'g,...). n si les valeurs de corr', 0a8H, 0a6H, 'lation de la '
	DB	'table d''', 0a8H, 0a6H, 'l', 0a8H, 0a6H, 'ments a __tostring '
	DB	'de domaine, qui utilise le proc', 0a8H, 0a6H, 'd', 0a8H, 0a6H
	DB	' ', 0a8H, 0a4H, ' ', 0a8H, 0a6H, 'l', 0a8H, 0a6H, 'ments de d'
	DB	'omaine d''une cha?ne.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BIG@GOLMNLDL@?5Essayer?5de?5mettre?5e?5?$CIpremier?5pa@
CONST	SEGMENT
??_C@_0BIG@GOLMNLDL@?5Essayer?5de?5mettre?5e?5?$CIpremier?5pa@ DB ' Essay'
	DB	'er de mettre e (premier param', 0a8H, 0a8H, 'tre) pour conver'
	DB	'tir le nombre de d', 0a8H, 0a6H, 'cimales et de retour.Si vou'
	DB	's ne pouvez pas une transition revient ', 0a8H, 0a4H, ' z', 0a8H
	DB	0a6H, 'ro. n de base (un second param', 0a8H, 0a8H, 'tre) indi'
	DB	'quant des param', 0a8H, 0a8H, 'tres par d', 0a8H, 0a6H, 'faut'
	DB	' pour le binaire entrant, base 10.La base peut ', 0a8H, 0baH, 't'
	DB	're de la plage d''entr', 0a8H, 0a6H, 'e [2, 36].Sup', 0a8H, 0a6H
	DB	'rieure ', 0a8H, 0a4H, ' 10 chiffres par des lettres, a - Z re'
	DB	'pr', 0a8H, 0a6H, 'sentent respectivement 11 - 35.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0PO@FHCMBDIA@?5Une?5table?5d?8?$KI?$KGl?$KI?$KGments?5?$KI?$KE?5Assoc@
CONST	SEGMENT
??_C@_0PO@FHCMBDIA@?5Une?5table?5d?8?$KI?$KGl?$KI?$KGments?5?$KI?$KE?5Assoc@ DB ' '
	DB	'Une table d''', 0a8H, 0a6H, 'l', 0a8H, 0a6H, 'ments ', 0a8H, 0a4H
	DB	' Association de metatable.Param', 0a8H, 0a8H, 'tres de retour'
	DB	' de la table. n Si Yuan feuille d', 0a8H, 0a6H, 'finit __meta'
	DB	'table, lance une erreur.', 0aH, ' Cha?ne de param', 0a8H, 0a8H
	DB	'tres (deuxi', 0a8H, 0a8H, 'me param', 0a8H, 0a8H, 'tre) est n'
	DB	'ul de mat', 0a8H, 0a6H, 'riel d', 0a8H, 0a6H, 'j', 0a8H, 0a4H
	DB	' associ', 0a8H, 0a6H, ' ', 0a8H, 0a4H, ' la table d''', 0a8H, 0a6H
	DB	'l', 0a8H, 0a6H, 'ments.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BAI@LLPMMAEH@?5Index?5peuvent?5?$KI?$LKtre?5des?5nombres@
CONST	SEGMENT
??_C@_0BAI@LLPMMAEH@?5Index?5peuvent?5?$KI?$LKtre?5des?5nombres@ DB ' Ind'
	DB	'ex peuvent ', 0a8H, 0baH, 'tre des nombres ou caract', 0a8H, 0a8H
	DB	'res "#.Lorsqu''un index num', 0a8H, 0a6H, 'rique, les param', 0a8H
	DB	0a8H, 'tres de renvoyer un index + 1 de param', 0a8H, 0a8H, 't'
	DB	'res et ', 0a8H, 0a4H, ' l''arri', 0a8H, 0a8H, 're (index de s'
	DB	'outien n', 0a8H, 0a6H, 'gatif); lorsque l''#'' retour, le nom'
	DB	'bre de param', 0a8H, 0a8H, 'tres (non compris le premier para'
	DB	'm', 0a8H, 0a8H, 'tre).', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0MG@BGPJEELN@?5La?5valeur?5de?5table?5?$FLindex?$FN?5agen@
CONST	SEGMENT
??_C@_0MG@BGPJEELN@?5La?5valeur?5de?5table?5?$FLindex?$FN?5agen@ DB ' La '
	DB	'valeur de table [index] agenc', 0a8H, 0a6H, ' pour value.Une '
	DB	'table est une table, index ne peut pas ', 0a8H, 0baH, 'tre ni'
	DB	'l ou NaN.La valeur peut ', 0a8H, 0baH, 'tre n''importe quelle'
	DB	' valeur.De retour apr', 0a8H, 0a8H, 's la modification de la '
	DB	'table.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0HK@FGIOHHAI@?5Association?5de?5valeurs?5de?5cl?$KI?$KG?5@
CONST	SEGMENT
??_C@_0HK@FGIOHHAI@?5Association?5de?5valeurs?5de?5cl?$KI?$KG?5@ DB ' Ass'
	DB	'ociation de valeurs de cl', 0a8H, 0a6H, ' d''index de table t'
	DB	'able de param', 0a8H, 0a8H, 'tres, doit ', 0a8H, 0baH, 'tre u'
	DB	'ne table, ne trouve pas de retour nil.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0NG@LLAAJDGI@?5En?5fonction?5de?5brut?5comme?5pr?$KI?$KGf@
CONST	SEGMENT
??_C@_0NG@LLAAJDGI@?5En?5fonction?5de?5brut?5comme?5pr?$KI?$KGf@ DB ' En '
	DB	'fonction de brut comme pr', 0a8H, 0a6H, 'fixe ont exprim', 0a8H
	DB	0a6H, ' le cas dans cette m', 0a8H, 0a6H, 'thode de d', 0a8H, 0a6H
	DB	'clenchement de toute yuan appel de proc', 0a8H, 0a6H, 'd', 0a8H
	DB	0a6H, '.V1 et V2 de v', 0a8H, 0a6H, 'rifier rawequal ', 0aH, ' '
	DB	'si ', 0a8H, 0a6H, 'gale, et renvoie le r', 0a8H, 0a6H, 'sulta'
	DB	't de la comparaison.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0KE@GDPEMNBN@?5Uniquement?5comme?5un?5outil?5de?5v?$KI@
CONST	SEGMENT
??_C@_0KE@GDPEMNBN@?5Uniquement?5comme?5un?5outil?5de?5v?$KI@ DB ' Unique'
	DB	'ment comme un outil de v', 0a8H, 0a6H, 'rification rapide d'''
	DB	'une valeur de pas faire de format de sortie.Voir string.forma'
	DB	't officiellement de format de sortie et io.write.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BGK@CNELNDDM@?5En?5fonction?5de?5modes?5de?5protect@
CONST	SEGMENT
??_C@_0BGK@CNELNDDM@?5En?5fonction?5de?5modes?5de?5protect@ DB ' En fonct'
	DB	'ion de modes de protection d''un appel entrant, c''est - ', 0a8H
	DB	0a4H, ' - dire ne lance une erreur.Si l''erreur de capture ', 0a8H
	DB	0a4H, ' la lance, le premier param', 0a8H, 0a8H, 'tre renvoie '
	DB	'false, le second param', 0a8H, 0a8H, 'tre renvoie un message '
	DB	'd''erreur; si aucune erreur, le premier param', 0a8H, 0a8H, 't'
	DB	're de temp', 0a8H, 0a6H, 'rature de true, derri', 0a8H, 0a8H, 'r'
	DB	'e les param', 0a8H, 0a8H, 'tres de retour entrant en fonction'
	DB	' de la valeur de retour.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@GLINNKKE@?5Renvoie?5une?5table?5en?5entrant?5un@
CONST	SEGMENT
??_C@_0DH@GLINNKKE@?5Renvoie?5une?5table?5en?5entrant?5un@ DB ' Renvoie u'
	DB	'ne table en entrant une valeur de cl', 0a8H, 0a6H, ' pour.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@ILNELIKM@?5Et?5de?5charge?5similaires?0?5mais?5d@
CONST	SEGMENT
??_C@_0EP@ILNELIKM@?5Et?5de?5charge?5similaires?0?5mais?5d@ DB ' Et de ch'
	DB	'arge similaires, mais dans une cha?ne de blocs de code d''acq'
	DB	'uisition.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CMD@IPDNPDKH@?5En?5fonction?5de?5la?5valeur?5de?5ret@
CONST	SEGMENT
??_C@_0CMD@IPDNPDKH@?5En?5fonction?5de?5la?5valeur?5de?5ret@ DB ' En fonc'
	DB	'tion de la valeur de retour entrant pour obtenir des segments'
	DB	' de bloc de code de fonction.Cha?ne de func fonction apr', 0a8H
	DB	0a8H, 's une fois de retour d''appel devrait ', 0a8H, 0baH, 't'
	DB	're en mesure de cha?ne avant et une fois l''appel de retour r'
	DB	'eli', 0a8H, 0a6H, 's l''un ', 0a8H, 0a4H, ' l''autre, et, fin'
	DB	'alement, l''int', 0a8H, 0a6H, 'grit', 0a8H, 0a6H, ' du bloc d'
	DB	'e code.Lorsque la fonction de retour ', 0a8H, 0a4H, ' z', 0a8H
	DB	0a6H, 'ro ou non la valeur de retour dudit code fin de bloc. n'
	DB	' Load fonction sera de blocs de code en fonction de retour.Re'
	DB	'tour de l''environnement en fonction de l''environnement glob'
	DB	'al.Si une erreur se produit, load  des informations de retour'
	DB	' nil  et les erreurs.', 0aH, '  Chunkname  comme le nom de bl'
	DB	'ocs de code, utilis', 0a8H, 0a6H, ' dans des informations de '
	DB	'd', 0a8H, 0a6H, 'bogage et de fausses informations.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@JGJODJKM@?$DP?5partir?5d?8un?5fichier?5d?8un?5bloc?5@
CONST	SEGMENT
??_C@_0HC@JGJODJKM@?$DP?5partir?5d?8un?5fichier?5d?8un?5bloc?5@ DB '? par'
	DB	'tir d''un fichier d''un bloc de code, s''il n''y a pas de fic'
	DB	'hier sp', 0a8H, 0a6H, 'cifi', 0a8H, 0a6H, ', ', 0a8H, 0a4H, ' '
	DB	'partir de l''entr', 0a8H, 0a6H, 'e standard d''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0JO@JADFJLCG@?5Le?5retour?5de?5trois?5valeurs?3?5des@
CONST	SEGMENT
??_C@_0JO@JADFJLCG@?5Le?5retour?5de?5trois?5valeurs?3?5des@ DB ' Le retou'
	DB	'r de trois valeurs: des it', 0a8H, 0a6H, 'rateurs, tableau T,'
	DB	' pass', 0a8H, 0a6H, ' de valeur 0.Le g', 0a8H, 0a6H, 'n', 0a8H
	DB	0a6H, 'rateur selon I T et de la table d''index entrant la val'
	DB	'eur i+1 et t[i+1].', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CJGBKPP@?5L?8affichage?5d?8aide?4?$AA@
CONST	SEGMENT
??_C@_0BF@CJGBKPP@?5L?8affichage?5d?8aide?4?$AA@ DB ' L''affichage d''aid'
	DB	'e.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0LJ@FGEIIAGN@Si?5l?8objet?5n?8a?5pas?5d?8?$KI?$KGl?$KI?$KGment?5d@
CONST	SEGMENT
??_C@_0LJ@FGEIIAGN@Si?5l?8objet?5n?8a?5pas?5d?8?$KI?$KGl?$KI?$KGment?5d@ DB 'S'
	DB	'i l''objet n''a pas d''', 0a8H, 0a6H, 'l', 0a8H, 0a6H, 'ment '
	DB	'de table, de revenir ', 0a8H, 0a4H, ' vide; si l''objet a _ _'
	DB	' cha?ne de domaine correspondant ', 0a8H, 0a4H, ' la valeur d'
	DB	'e retour; sinon, retour des objets de la table d''', 0a8H, 0a6H
	DB	'l', 0a8H, 0a6H, 'ments.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@NALIMHDF@?5Pour?5acqu?$KI?$KGrir?5des?5informations@
CONST	SEGMENT
??_C@_0CI@NALIMHDF@?5Pour?5acqu?$KI?$KGrir?5des?5informations@ DB ' Pour '
	DB	'acqu', 0a8H, 0a6H, 'rir des informations de GC.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FGHNAFKD@?5Le?5retrait?5de?5l?8environnement?4?$AA@
CONST	SEGMENT
??_C@_0CA@FGHNAFKD@?5Le?5retrait?5de?5l?8environnement?4?$AA@ DB ' Le ret'
	DB	'rait de l''environnement.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@PIJCBEIB@?5La?5fonction?5de?5protection?5de?5fi@
CONST	SEGMENT
??_C@_0EP@PIJCBEIB@?5La?5fonction?5de?5protection?5de?5fi@ DB ' La foncti'
	DB	'on de protection de fin de message, lance le message, pas de '
	DB	'retour.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0FL@FAJHGOBG@?5Ouvrir?5un?5fichier?5pour?5le?5nom?5d@
CONST	SEGMENT
??_C@_0FL@FAJHGOBG@?5Ouvrir?5un?5fichier?5pour?5le?5nom?5d@ DB ' Ouvrir u'
	DB	'n fichier pour le nom de fichier, et de mettre en ?uvre dans '
	DB	'le bloc de code lua.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@JICLAMHJ@?5Efface?5le?5contenu?5d?8?$KI?$KGcran?5actu@
CONST	SEGMENT
??_C@_0DE@JICLAMHJ@?5Efface?5le?5contenu?5d?8?$KI?$KGcran?5actu@ DB ' Eff'
	DB	'ace le contenu d''', 0a8H, 0a6H, 'cran actuel, et clair comme'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FJGBEIFH@?5Efface?5le?5contenu?5d?8?$KI?$KGcran?5actu@
CONST	SEGMENT
??_C@_0CG@FJGBEIFH@?5Efface?5le?5contenu?5d?8?$KI?$KGcran?5actu@ DB ' Eff'
	DB	'ace le contenu d''', 0a8H, 0a6H, 'cran actuelle.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DGC@IPAKCGAD@?5Recyclage?5d?8ordures?5?6?5?$CCStop?$CC?3?5a@
CONST	SEGMENT
??_C@_0DGC@IPAKCGAD@?5Recyclage?5d?8ordures?5?6?5?$CCStop?$CC?3?5a@ DB ' '
	DB	'Recyclage d''ordures ', 0aH, ' "Stop": arr', 0a8H, 0baH, 'te '
	DB	'de recyclage d''ordures. n "red', 0a8H, 0a6H, 'marrage ": le '
	DB	'red', 0a8H, 0a6H, 'marrage de recyclage d''ordures. n "collec'
	DB	't ": le cycle complet de la mise en ?uvre de d', 0a8H, 0a6H, 'c'
	DB	'hets de recyclage. n "count": le retour de m', 0a8H, 0a6H, 'm'
	DB	'oire totale de l''utilisation actuelle de lua (unit', 0a8H, 0a6H
	DB	' pour KB). n "Step ": une ', 0a8H, 0a6H, 'tape d''ex', 0a8H, 0a6H
	DB	'cution (', 0a8H, 0a6H, 'tape peut ', 0a8H, 0baH, 'tre compos', 0a8H
	DB	0a6H, 'e de plusieurs ', 0a8H, 0a6H, 'tapes de r', 0a8H, 0a6H, 'c'
	DB	'up', 0a8H, 0a6H, 'ration de d', 0a8H, 0a6H, 'chets).Le nombre'
	DB	' de pas ', 0a8H, 0a4H, ' partir de param', 0a8H, 0a8H, 'tres '
	DB	'de commande peuvent ', 0a8H, 0baH, 'tre Arg (plus la valeur d'
	DB	'e nombre de pas plus de 0, et une ', 0a8H, 0a6H, 'tape d''ex', 0a8H
	DB	0a6H, 'cution (', 0a8H, 0a6H, 'tape un minimum)).Si la mise en'
	DB	' ?uvre de l''ach', 0a8H, 0a8H, 'vement de la r', 0a8H, 0a6H, 'c'
	DB	'up', 0a8H, 0a6H, 'ration de circulation, renvoie VRAI. n "set'
	DB	'pause ": ARG / 100 comme nouvelle valeur de param', 0a8H, 0a8H
	DB	'tres de r', 0a8H, 0a6H, 'cup', 0a8H, 0a6H, 'ration de pause d'
	DB	'''ordures. n "setstepmul ": ARG / 100 comme nouvelle valeur d'
	DB	'e param', 0a8H, 0a8H, 'tres de r', 0a8H, 0a6H, 'cup', 0a8H, 0a6H
	DB	'ration step mutiplier d''ordures.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@CDPJFCGL@?5Biblioth?$KI?$KIque?5centrale?5de?5logic@
CONST	SEGMENT
??_C@_0DC@CDPJFCGL@?5Biblioth?$KI?$KIque?5centrale?5de?5logic@ DB ' Bibli'
	DB	'oth', 0a8H, 0a8H, 'que centrale de logiciel d''auteur lua.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BAL@KMFOEKGD@?5Si?5la?5valeur?5de?5ses?5param?$KI?$KItres@
CONST	SEGMENT
??_C@_0BAL@KMFOEKGD@?5Si?5la?5valeur?5de?5ses?5param?$KI?$KItres@ DB ' Si'
	DB	' la valeur de ses param', 0a8H, 0a8H, 'tres de V est faux (0 '
	DB	'ou faux), qui appelle une erreur; sinon, le retour de tous le'
	DB	's param', 0a8H, 0a8H, 'tres.En cas d''erreur, le message de l'
	DB	'''objet d''erreur; si elle ne fournit pas de ce param', 0a8H, 0a8H
	DB	'tre, un param', 0a8H, 0a8H, 'tre par d', 0a8H, 0a6H, 'faut po'
	DB	'ur "assertion failed!".', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IMDOEIMN@?T?$NN?N?$NO?N?D?$LF?$LF?$AA@
CONST	SEGMENT
??_C@_08IMDOEIMN@?T?$NN?N?$NO?N?D?$LF?$LF?$AA@ DB 0d4H, 0ddH, 0ceH, 0deH, 0ceH
	DB	0c4H, 0b5H, 0b5H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0IK@CAPLCHMD@?S?k?5pcall?5?$CIf?0?5arg1?0?5?4?4?4?$CJ?5?$MA?$OA?K?F?$KB?$KD?$LC?$LL@
CONST	SEGMENT
??_C@_0IK@CAPLCHMD@?S?k?5pcall?5?$CIf?0?5arg1?0?5?4?4?4?$CJ?5?$MA?$OA?K?F?$KB?$KD?$LC?$LL@ DB 0d3H
	DB	0ebH, ' pcall (f, arg1, ...) ', 0c0H, 0e0H, 0cbH, 0c6H, 0a1H, 0a3H
	DB	0b2H, 0bbH, 0cdH, 0acH, 0b5H, 0c4H, 0caH, 0c7H, 0a3H, 0acH, 0c8H
	DB	0e7H, 0b9H, 0fbH, ' f ', 0baH, 0afH, 0caH, 0fdH, 0c5H, 0d7H, 0b3H
	DB	0f6H, 0c1H, 0cbH, 0b4H, 0edH, 0ceH, 0f3H, 0a3H, 0acH, 0c4H, 0c7H
	DB	0c3H, 0b4H, ' xpcall ', 0b2H, 0bbH, 0bbH, 0e1H, 0b7H, 0b5H, 0bbH
	DB	0d8H, 0b4H, 0d3H, ' f ', 0c5H, 0d7H, 0b3H, 0f6H, 0b5H, 0c4H, 0b4H
	DB	0edH, 0ceH, 0f3H, 0d0H, 0c5H, 0cfH, 0a2H, 0a3H, 0acH, 0b6H, 0f8H
	DB	0caH, 0c7H, 0caH, 0b9H, 0d3H, 0c3H, ' err ', 0baH, 0afH, 0caH, 0fdH
	DB	0b7H, 0b5H, 0bbH, 0d8H, 0b5H, 0c4H, 0b4H, 0edH, 0ceH, 0f3H, 0d0H
	DB	0c5H, 0cfH, 0a2H, 0a1H, 0a3H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EHKFACGH@?O?T?J?$LOlua?$LA?f?$LB?$LO?$LK?E?$AA@
CONST	SEGMENT
??_C@_0O@EHKFACGH@?O?T?J?$LOlua?$LA?f?$LB?$LO?$LK?E?$AA@ DB 0cfH, 0d4H, 0caH
	DB	0beH, 'lua', 0b0H, 0e6H, 0b1H, 0beH, 0baH, 0c5H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PFJHOPOH@?O?T?J?$LOlua?$LA?o?V?z?$AA@
CONST	SEGMENT
??_C@_0M@PFJHOPOH@?O?T?J?$LOlua?$LA?o?V?z?$AA@ DB 0cfH, 0d4H, 0caH, 0beH, 'l'
	DB	'ua', 0b0H, 0efH, 0d6H, 0faH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@NGIAAGBN@?$LH?$LF?$LL?X?$LB?m?V?P?$LF?D?$LI?w?$LI?v?S?r?$LF?D?V?$LF?0?$LF?H?$LM?$NL?S?Z?$KD?$LK?6?5r@
CONST	SEGMENT
??_C@_0EK@NGIAAGBN@?$LH?$LF?$LL?X?$LB?m?V?P?$LF?D?$LI?w?$LI?v?S?r?$LF?D?V?$LF?0?$LF?H?$LM?$NL?S?Z?$KD?$LK?6?5r@ DB 0b7H
	DB	0b5H, 0bbH, 0d8H, 0b1H, 0edH, 0d6H, 0d0H, 0b5H, 0c4H, 0b8H, 0f7H
	DB	0b8H, 0f6H, 0d3H, 0f2H, 0b5H, 0c4H, 0d6H, 0b5H, ',', 0b5H, 0c8H
	DB	0bcH, 0dbH, 0d3H, 0daH, 0a3H, 0baH, 0aH, ' return list[i], lis'
	DB	't[i+1], ', 0a1H, 0a4H, 0a1H, 0a4H, 0a1H, 0a4H, ', list[j]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FIONAGJL@unpack?$AA@
CONST	SEGMENT
??_C@_06FIONAGJL@unpack?$AA@ DB 'unpack', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0JD@IBGGALMK@?$LH?$LF?$LL?X?5v?5?$LF?D?$MA?$OA?P?M?$KD?$KM?$MA?$OA?P?M?R?T?W?V?$LH?$PL?$LE?$KO?P?N?J?$LN?$LH@
CONST	SEGMENT
??_C@_0JD@IBGGALMK@?$LH?$LF?$LL?X?5v?5?$LF?D?$MA?$OA?P?M?$KD?$KM?$MA?$OA?P?M?R?T?W?V?$LH?$PL?$LE?$KO?P?N?J?$LN?$LH@ DB 0b7H
	DB	0b5H, 0bbH, 0d8H, ' v ', 0b5H, 0c4H, 0c0H, 0e0H, 0d0H, 0cdH, 0a3H
	DB	0acH, 0c0H, 0e0H, 0d0H, 0cdH, 0d2H, 0d4H, 0d7H, 0d6H, 0b7H, 0fbH
	DB	0b4H, 0aeH, 0d0H, 0ceH, 0caH, 0bdH, 0b7H, 0b5H, 0bbH, 0d8H, 0a1H
	DB	0a3H, ' ', 0d3H, 0d0H, 0d2H, 0d4H, 0cfH, 0c2H, 0b0H, 0cbH, 0d6H
	DB	0d6H, 0b7H, 0b5H, 0bbH, 0d8H, 0d6H, 0b5H, 0a3H, 0baH, ' "nil" '
	DB	0a3H, 0acH, ' "number"', 0a3H, 0acH, ' "string"', 0a3H, 0acH, ' '
	DB	'"boolean"', 0a3H, 0acH, ' "table"', 0a3H, 0acH, ' "function"', 0a3H
	DB	0acH, ' "thread"', 0a3H, 0acH, ' "userdata"', 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0LH@BPMOIOAF@?D?$NM?$LN?$KL?H?N?R?b?$MA?$OA?P?M?$LF?D?V?$LF?W?$KK?$LL?$LL?N?$KK?$LK?O?J?J?$LF?D?W?V?$LH?$PL@
CONST	SEGMENT
??_C@_0LH@BPMOIOAF@?D?$NM?$LN?$KL?H?N?R?b?$MA?$OA?P?M?$LF?D?V?$LF?W?$KK?$LL?$LL?N?$KK?$LK?O?J?J?$LF?D?W?V?$LH?$PL@ DB 0c4H
	DB	0dcH, 0bdH, 0abH, 0c8H, 0ceH, 0d2H, 0e2H, 0c0H, 0e0H, 0d0H, 0cdH
	DB	0b5H, 0c4H, 0d6H, 0b5H, 0d7H, 0aaH, 0bbH, 0bbH, 0ceH, 0aaH, 0baH
	DB	0cfH, 0caH, 0caH, 0b5H, 0c4H, 0d7H, 0d6H, 0b7H, 0fbH, 0b4H, 0aeH
	DB	0d0H, 0ceH, 0caH, 0bdH, 0b7H, 0b5H, 0bbH, 0d8H, 0a1H, 0a3H, 0d2H
	DB	0aaH, 0bfH, 0d8H, 0d6H, 0c6H, 0caH, 0fdH, 0d7H, 0d6H, 0d7H, 0aaH
	DB	0bbH, 0bbH, 0ceH, 0aaH, 0d7H, 0d6H, 0b7H, 0fbH, 0b4H, 0aeH, 0b5H
	DB	0c4H, 0b7H, 0bdH, 0caH, 0bdH, 0a3H, 0acH, 0caH, 0b9H, 0d3H, 0c3H
	DB	' string.format(formatstring,...) ', 0a1H, 0a3H, ' ', 0aH, ' ', 0c8H
	DB	0e7H, 0b9H, 0fbH, 0d6H, 0b5H, 0cbH, 0f9H, 0b9H, 0d8H, 0c1H, 0aaH
	DB	0b5H, 0c4H, 0d4H, 0aaH, 0b1H, 0edH, 0d3H, 0d0H, ' __tostring ', 0d3H
	DB	0f2H, 0a3H, 0acH, 0d4H, 0f2H, 0caH, 0b9H, 0d3H, 0c3H, 0b8H, 0c3H
	DB	0d3H, 0f2H, 0b5H, 0c4H, 0d4H, 0aaH, 0b7H, 0bdH, 0b7H, 0a8H, 0bbH
	DB	0f1H, 0c8H, 0a1H, 0d7H, 0d6H, 0b7H, 0fbH, 0b4H, 0aeH, 0a1H, 0a3H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0ML@FKNGDJCH@?5?$LD?$KC?J?T?$LA?Q?5e?5?$KD?$KI?$LF?Z?R?$LL?$LC?N?J?$PN?$KD?$KJ?W?$KK?$LL?$LL?N?$KK?J?$KO?$LN?x@
CONST	SEGMENT
??_C@_0ML@FKNGDJCH@?5?$LD?$KC?J?T?$LA?Q?5e?5?$KD?$KI?$LF?Z?R?$LL?$LC?N?J?$PN?$KD?$KJ?W?$KK?$LL?$LL?N?$KK?J?$KO?$LN?x@ DB ' '
	DB	0b3H, 0a2H, 0caH, 0d4H, 0b0H, 0d1H, ' e ', 0a3H, 0a8H, 0b5H, 0daH
	DB	0d2H, 0bbH, 0b2H, 0ceH, 0caH, 0fdH, 0a3H, 0a9H, 0d7H, 0aaH, 0bbH
	DB	0bbH, 0ceH, 0aaH, 0caH, 0aeH, 0bdH, 0f8H, 0d6H, 0c6H, 0caH, 0fdH
	DB	0d6H, 0b5H, 0b2H, 0a2H, 0b7H, 0b5H, 0bbH, 0d8H, 0a1H, 0a3H, 0c8H
	DB	0e7H, 0b9H, 0fbH, 0ceH, 0deH, 0b7H, 0a8H, 0d7H, 0aaH, 0bbH, 0bbH
	DB	0b7H, 0b5H, 0bbH, 0d8H, ' nil ', 0a1H, 0a3H, ' ', 0aH, ' base', 0a3H
	DB	0a8H, 0b5H, 0daH, 0b6H, 0feH, 0b2H, 0ceH, 0caH, 0fdH, 0a3H, 0a9H
	DB	' ', 0b1H, 0edH, 0caH, 0beH, 0b4H, 0abH, 0c8H, 0ebH, 0b2H, 0ceH
	DB	0caH, 0fdH, 0b5H, 0c4H, 0bdH, 0f8H, 0d6H, 0c6H, 0a3H, 0acH, 0c4H
	DB	0acH, 0c8H, 0cfH, 0ceH, 0aaH, ' 10 ', 0bdH, 0f8H, 0d6H, 0c6H, 0a1H
	DB	0a3H, 'base ', 0b5H, 0c4H, 0bfH, 0c9H, 0caH, 0e4H, 0c8H, 0ebH, 0b7H
	DB	0b6H, 0ceH, 0a7H, '[2, 36]', 0a1H, 0a3H, 0b8H, 0dfH, 0d3H, 0daH
	DB	' 10 ', 0b5H, 0c4H, 0caH, 0fdH, 0d7H, 0d6H, 0d3H, 0c3H, 0d7H, 0d6H
	DB	0c4H, 0b8H, 0b1H, 0edH, 0caH, 0beH, 0a3H, 0acH, 'A - Z ', 0b7H
	DB	0d6H, 0b1H, 0f0H, 0b1H, 0edH, 0caH, 0beH, ' 11 - 35 ', 0a1H, 0a3H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0JI@CGNAGBNM@?$LI?x?5table?5?$LJ?X?A?$KK?T?$KK?$LB?m?5metatable?5?$KB?$KD?$LH?$LF@
CONST	SEGMENT
??_C@_0JI@CGNAGBNM@?$LI?x?5table?5?$LJ?X?A?$KK?T?$KK?$LB?m?5metatable?5?$KB?$KD?$LH?$LF@ DB 0b8H
	DB	0f8H, ' table ', 0b9H, 0d8H, 0c1H, 0aaH, 0d4H, 0aaH, 0b1H, 0edH
	DB	' metatable ', 0a1H, 0a3H, 0b7H, 0b5H, 0bbH, 0d8H, 0b2H, 0ceH, 0caH
	DB	0fdH, ' table ', 0a1H, 0a3H, 0aH, ' ', 0c8H, 0e7H, 0b9H, 0fbH, 0d4H
	DB	0aaH, 0b1H, 0edH, 0b6H, 0a8H, 0d2H, 0e5H, 0c1H, 0cbH, ' __meta'
	DB	'table ', 0d3H, 0f2H, 0a3H, 0acH, 0bbH, 0e1H, 0c5H, 0d7H, 0b3H
	DB	0f6H, 0b4H, 0edH, 0ceH, 0f3H, 0a1H, 0a3H, 0aH, ' metatable ', 0b2H
	DB	0ceH, 0caH, 0fdH, 0a3H, 0a8H, 0b5H, 0daH, 0b6H, 0feH, 0b2H, 0ceH
	DB	0caH, 0fdH, 0a3H, 0a9H, 0ceH, 0aaH, ' nil ', 0b1H, 0edH, 0caH, 0beH
	DB	0bdH, 0e2H, 0b3H, 0fdH, 0d2H, 0d1H, 0beH, 0adH, 0b9H, 0d8H, 0c1H
	DB	0aaH, 0b5H, 0c4H, 0d4H, 0aaH, 0b1H, 0edH, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0KI@BKGLFMBF@index?5?$LP?I?R?T?J?G?J?$PN?W?V?$LL?r?U?$NP?W?V?$LH?$PL?5?8?$CD?8?5?$KB?$KD?$LF@
CONST	SEGMENT
??_C@_0KI@BKGLFMBF@index?5?$LP?I?R?T?J?G?J?$PN?W?V?$LL?r?U?$NP?W?V?$LH?$PL?5?8?$CD?8?5?$KB?$KD?$LF@ DB 'i'
	DB	'ndex ', 0bfH, 0c9H, 0d2H, 0d4H, 0caH, 0c7H, 0caH, 0fdH, 0d7H, 0d6H
	DB	0bbH, 0f2H, 0d5H, 0dfH, 0d7H, 0d6H, 0b7H, 0fbH, ' ''#'' ', 0a1H
	DB	0a3H, 0b5H, 0b1H, ' index ', 0ceH, 0aaH, 0caH, 0fdH, 0d7H, 0d6H
	DB	0caH, 0b1H, 0a3H, 0acH, 0b7H, 0b5H, 0bbH, 0d8H, 0b5H, 0daH, ' '
	DB	'index + 1 ', 0b8H, 0f6H, 0b2H, 0ceH, 0caH, 0fdH, 0bcH, 0b0H, 0baH
	DB	0f3H, 0c3H, 0e6H, 0b5H, 0c4H, 0b2H, 0ceH, 0caH, 0fdH, 0a3H, 0a8H
	DB	0d6H, 0a7H, 0b3H, 0d6H, 0b8H, 0baH, 0caH, 0fdH, 0d0H, 0ceH, 0caH
	DB	0bdH, 0b5H, 0c4H, ' index', 0a3H, 0a9H, 0a3H, 0bbH, 0b5H, 0b1H
	DB	' index ', 0ceH, 0aaH, ' ''#'' ', 0caH, 0b1H, 0a3H, 0acH, 0b7H
	DB	0b5H, 0bbH, 0d8H, 0b2H, 0ceH, 0caH, 0fdH, 0b5H, 0c4H, 0b8H, 0f6H
	DB	0caH, 0fdH, 0a3H, 0a8H, 0b2H, 0bbH, 0b0H, 0fcH, 0c0H, 0a8H, 0b5H
	DB	0daH, 0d2H, 0bbH, 0b8H, 0f6H, 0b2H, 0ceH, 0caH, 0fdH, 0a3H, 0a9H
	DB	0a1H, 0a3H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0HL@JIGMHII@?$LN?$KL?5table?$FLindex?$FN?5?$LF?D?V?$LF?I?h?V?C?N?$KK?5value@
CONST	SEGMENT
??_C@_0HL@JIGMHII@?$LN?$KL?5table?$FLindex?$FN?5?$LF?D?V?$LF?I?h?V?C?N?$KK?5value@ DB 0bdH
	DB	0abH, ' table[index] ', 0b5H, 0c4H, 0d6H, 0b5H, 0c9H, 0e8H, 0d6H
	DB	0c3H, 0ceH, 0aaH, ' value ', 0a1H, 0a3H, 'table ', 0b1H, 0d8H, 0d0H
	DB	0ebH, 0caH, 0c7H, 0d2H, 0bbH, 0d5H, 0c5H, 0b1H, 0edH, 0a3H, 0acH
	DB	'index ', 0b2H, 0bbH, 0c4H, 0dcH, 0caH, 0c7H, ' nil ', 0bbH, 0f2H
	DB	' NaN ', 0a1H, 0a3H, 'value ', 0bfH, 0c9H, 0d2H, 0d4H, 0caH, 0c7H
	DB	0c8H, 0ceH, 0baH, 0ceH, 0d6H, 0b5H, 0a1H, 0a3H, 0b7H, 0b5H, 0bbH
	DB	0d8H, 0d0H, 0deH, 0b8H, 0c4H, 0baH, 0f3H, 0b5H, 0c4H, ' table '
	DB	0a1H, 0a3H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@HOOBFFHD@?$LL?q?H?$KB?5table?5?V?P?$LM?$PM?5index?5?$LF?D?$LJ?X?A?$KK?V?$LF?$KD?$KM@
CONST	SEGMENT
??_C@_0EK@HOOBFFHD@?$LL?q?H?$KB?5table?5?V?P?$LM?$PM?5index?5?$LF?D?$LJ?X?A?$KK?V?$LF?$KD?$KM@ DB 0bbH
	DB	0f1H, 0c8H, 0a1H, ' table ', 0d6H, 0d0H, 0bcH, 0fcH, ' index ', 0b5H
	DB	0c4H, 0b9H, 0d8H, 0c1H, 0aaH, 0d6H, 0b5H, 0a3H, 0acH, 'table ', 0b2H
	DB	0ceH, 0caH, 0fdH, 0b1H, 0d8H, 0d0H, 0ebH, 0caH, 0c7H, 0d2H, 0bbH
	DB	0b8H, 0f6H, 0b1H, 0edH, 0a3H, 0acH, 0d5H, 0d2H, 0b2H, 0bbH, 0b5H
	DB	0bdH, 0b7H, 0b5H, 0bbH, 0d8H, ' nil ', 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HD@KAAICMEO@?R?T?5raw?5?W?w?N?$KK?G?$LA?W?$LK?$LF?D?$LK?$KP?J?$PN?$LO?y?$LB?m?J?$LO?$LI?C?$LH?$LN?$LH@
CONST	SEGMENT
??_C@_0HD@KAAICMEO@?R?T?5raw?5?W?w?N?$KK?G?$LA?W?$LK?$LF?D?$LK?$KP?J?$PN?$LO?y?$LB?m?J?$LO?$LI?C?$LH?$LN?$LH@ DB 0d2H
	DB	0d4H, ' raw ', 0d7H, 0f7H, 0ceH, 0aaH, 0c7H, 0b0H, 0d7H, 0baH, 0b5H
	DB	0c4H, 0baH, 0afH, 0caH, 0fdH, 0beH, 0f9H, 0b1H, 0edH, 0caH, 0beH
	DB	0b8H, 0c3H, 0b7H, 0bdH, 0b7H, 0a8H, 0d4H, 0daH, 0b2H, 0bbH, 0b4H
	DB	0a5H, 0b7H, 0a2H, 0c8H, 0ceH, 0baH, 0ceH, 0d4H, 0aaH, 0b7H, 0bdH
	DB	0b7H, 0a8H, 0b5H, 0c4H, 0c7H, 0e9H, 0bfH, 0f6H, 0cfH, 0c2H, 0b5H
	DB	0f7H, 0d3H, 0c3H, 0a1H, 0a3H, 0aH, ' rawequal ', 0bcH, 0ecH, 0b2H
	DB	0e9H, ' v1 ', 0caH, 0c7H, 0b7H, 0f1H, 0d3H, 0ebH, ' v2 ', 0cfH
	DB	0e0H, 0b5H, 0c8H, 0a3H, 0acH, 0b7H, 0b5H, 0bbH, 0d8H, 0b1H, 0c8H
	DB	0bdH, 0cfH, 0bdH, 0e1H, 0b9H, 0fbH, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FN@GIFILDMN@?$LN?v?W?w?N?$KK?$LP?l?K?Y?$LC?i?$LP?$LE?D?$LD?$LI?v?V?$LF?$LF?D?$LJ?$KE?$LO?$NP?$KD?$KM?$LC?$LL?S?C@
CONST	SEGMENT
??_C@_0FN@GIFILDMN@?$LN?v?W?w?N?$KK?$LP?l?K?Y?$LC?i?$LP?$LE?D?$LD?$LI?v?V?$LF?$LF?D?$LJ?$KE?$LO?$NP?$KD?$KM?$LC?$LL?S?C@ DB 0bdH
	DB	0f6H, 0d7H, 0f7H, 0ceH, 0aaH, 0bfH, 0ecH, 0cbH, 0d9H, 0b2H, 0e9H
	DB	0bfH, 0b4H, 0c4H, 0b3H, 0b8H, 0f6H, 0d6H, 0b5H, 0b5H, 0c4H, 0b9H
	DB	0a4H, 0beH, 0dfH, 0a3H, 0acH, 0b2H, 0bbH, 0d3H, 0c3H, 0d7H, 0f6H
	DB	0b8H, 0f1H, 0caH, 0bdH, 0bbH, 0afH, 0caH, 0e4H, 0b3H, 0f6H, 0a1H
	DB	0a3H, 0d5H, 0fdH, 0caH, 0bdH, 0b5H, 0c4H, 0b8H, 0f1H, 0caH, 0bdH
	DB	0bbH, 0afH, 0caH, 0e4H, 0b3H, 0f6H, 0bcH, 0fbH, ' string.forma'
	DB	't ', 0d3H, 0ebH, ' io.write', 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0LM@CCOODELD@?R?T?$LB?$KD?$LL?$KE?D?$KD?J?$LN?$LF?w?S?C?$LE?$KL?H?k?$LF?D?$LK?$KP?J?$PN?$KD?$KM?R?$LC?$LO?M?J?G@
CONST	SEGMENT
??_C@_0LM@CCOODELD@?R?T?$LB?$KD?$LL?$KE?D?$KD?J?$LN?$LF?w?S?C?$LE?$KL?H?k?$LF?D?$LK?$KP?J?$PN?$KD?$KM?R?$LC?$LO?M?J?G@ DB 0d2H
	DB	0d4H, 0b1H, 0a3H, 0bbH, 0a4H, 0c4H, 0a3H, 0caH, 0bdH, 0b5H, 0f7H
	DB	0d3H, 0c3H, 0b4H, 0abH, 0c8H, 0ebH, 0b5H, 0c4H, 0baH, 0afH, 0caH
	DB	0fdH, 0a3H, 0acH, 0d2H, 0b2H, 0beH, 0cdH, 0caH, 0c7H, 0cbH, 0b5H
	DB	0b2H, 0bbH, 0bbH, 0e1H, 0c5H, 0d7H, 0b3H, 0f6H, 0b4H, 0edH, 0ceH
	DB	0f3H, 0a1H, 0a3H, 0c8H, 0e7H, 0b9H, 0fbH, 0b2H, 0b6H, 0bbH, 0f1H
	DB	0b5H, 0bdH, 0c5H, 0d7H, 0b3H, 0f6H, 0b5H, 0c4H, 0b4H, 0edH, 0ceH
	DB	0f3H, 0a3H, 0acH, 0b5H, 0daH, 0d2H, 0bbH, 0b8H, 0f6H, 0b2H, 0ceH
	DB	0caH, 0fdH, 0b7H, 0b5H, 0bbH, 0d8H, ' false', 0a3H, 0acH, 0b5H
	DB	0daH, 0b6H, 0feH, 0b8H, 0f6H, 0b2H, 0ceH, 0caH, 0fdH, 0b7H, 0b5H
	DB	0bbH, 0d8H, 0b4H, 0edH, 0ceH, 0f3H, 0d0H, 0c5H, 0cfH, 0a2H, 0a3H
	DB	0bbH, 0c8H, 0e7H, 0b9H, 0fbH, 0c3H, 0bbH, 0d3H, 0d0H, 0b3H, 0f6H
	DB	0cfH, 0d6H, 0b4H, 0edH, 0ceH, 0f3H, 0a3H, 0acH, 0b5H, 0daH, 0d2H
	DB	0bbH, 0b8H, 0f6H, 0b2H, 0ceH, 0caH, 0fdH, 0b7H, 0b5H, 0bbH, 0d8H
	DB	' ture', 0a3H, 0acH, 0baH, 0f3H, 0c3H, 0e6H, 0b5H, 0c4H, 0b2H, 0ceH
	DB	0caH, 0fdH, 0b7H, 0b5H, 0bbH, 0d8H, 0b4H, 0abH, 0c8H, 0ebH, 0baH
	DB	0afH, 0caH, 0fdH, 0b5H, 0c4H, 0b7H, 0b5H, 0bbH, 0d8H, 0d6H, 0b5H
	DB	0a1H, 0a3H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PBNINAND@?$LH?$LF?$LL?X?$LE?$KL?H?k?$LF?D?$LB?m?V?P?O?B?R?$LL?$LI?v?$LM?$PM?V?$LF?$LG?T?$AA@
CONST	SEGMENT
??_C@_0BL@PBNINAND@?$LH?$LF?$LL?X?$LE?$KL?H?k?$LF?D?$LB?m?V?P?O?B?R?$LL?$LI?v?$LM?$PM?V?$LF?$LG?T?$AA@ DB 0b7H
	DB	0b5H, 0bbH, 0d8H, 0b4H, 0abH, 0c8H, 0ebH, 0b5H, 0c4H, 0b1H, 0edH
	DB	0d6H, 0d0H, 0cfH, 0c2H, 0d2H, 0bbH, 0b8H, 0f6H, 0bcH, 0fcH, 0d6H
	DB	0b5H, 0b6H, 0d4H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@KDEJAEID@?S?k?5load?5?$MA?$OA?K?F?$KD?$KM?V?$LL?$LC?$LL?$LJ?$PN?J?G?$LE?S?W?V?$LH?$PL?$LE?$KO?V?P@
CONST	SEGMENT
??_C@_0CL@KDEJAEID@?S?k?5load?5?$MA?$OA?K?F?$KD?$KM?V?$LL?$LC?$LL?$LJ?$PN?J?G?$LE?S?W?V?$LH?$PL?$LE?$KO?V?P@ DB 0d3H
	DB	0ebH, ' load ', 0c0H, 0e0H, 0cbH, 0c6H, 0a3H, 0acH, 0d6H, 0bbH
	DB	0b2H, 0bbH, 0b9H, 0fdH, 0caH, 0c7H, 0b4H, 0d3H, 0d7H, 0d6H, 0b7H
	DB	0fbH, 0b4H, 0aeH, 0d6H, 0d0H, 0bbH, 0f1H, 0c8H, 0a1H, 0b4H, 0faH
	DB	0c2H, 0ebH, 0bfH, 0e9H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BFP@JCAMCHOC@?M?$KI?$LJ?$PN?$LE?$KL?H?k?$LK?$KP?J?$PN?5func?5?$LF?D?$LH?$LF?$LL?X?V?$LF?$LL?q?H?$KB?$LE?z@
CONST	SEGMENT
??_C@_0BFP@JCAMCHOC@?M?$KI?$LJ?$PN?$LE?$KL?H?k?$LK?$KP?J?$PN?5func?5?$LF?D?$LH?$LF?$LL?X?V?$LF?$LL?q?H?$KB?$LE?z@ DB 0cdH
	DB	0a8H, 0b9H, 0fdH, 0b4H, 0abH, 0c8H, 0ebH, 0baH, 0afH, 0caH, 0fdH
	DB	' func ', 0b5H, 0c4H, 0b7H, 0b5H, 0bbH, 0d8H, 0d6H, 0b5H, 0bbH
	DB	0f1H, 0c8H, 0a1H, 0b4H, 0faH, 0c2H, 0ebH, 0bfH, 0e9H, 0c6H, 0acH
	DB	0b6H, 0ceH, 0a1H, 0a3H, 'func ', 0baH, 0afH, 0caH, 0fdH, 0b5H, 0c4H
	DB	0baH, 0f3H, 0d2H, 0bbH, 0b4H, 0ceH, 0b5H, 0f7H, 0d3H, 0c3H, 0b7H
	DB	0b5H, 0bbH, 0d8H, 0b5H, 0c4H, 0d7H, 0d6H, 0b7H, 0fbH, 0b4H, 0aeH
	DB	0d3H, 0a6H, 0b5H, 0b1H, 0c4H, 0dcH, 0d3H, 0ebH, 0c7H, 0b0H, 0d2H
	DB	0bbH, 0b4H, 0ceH, 0b5H, 0f7H, 0d3H, 0c3H, 0b7H, 0b5H, 0bbH, 0d8H
	DB	0b5H, 0c4H, 0d7H, 0d6H, 0b7H, 0fbH, 0b4H, 0aeH, 0cfH, 0ceH, 0bdH
	DB	0d3H, 0d4H, 0daH, 0d2H, 0bbH, 0c6H, 0f0H, 0a3H, 0acH, 0d7H, 0eeH
	DB	0d6H, 0d5H, 0b5H, 0c3H, 0b5H, 0bdH, 0cdH, 0eaH, 0d5H, 0fbH, 0b5H
	DB	0c4H, 0b4H, 0faH, 0c2H, 0ebH, 0bfH, 0e9H, 0a1H, 0a3H, 0baH, 0afH
	DB	0caH, 0fdH, 0b7H, 0b5H, 0bbH, 0d8H, ' nil ', 0bbH, 0f2H, 0ceH, 0deH
	DB	0b7H, 0b5H, 0bbH, 0d8H, 0d6H, 0b5H, 0caH, 0b1H, 0b1H, 0edH, 0caH
	DB	0beH, 0b4H, 0faH, 0c2H, 0ebH, 0bfH, 0e9H, 0bdH, 0e1H, 0caH, 0f8H
	DB	0a1H, 0a3H, ' ', 0aH, ' load ', 0baH, 0afH, 0caH, 0fdH, 0bbH, 0e1H
	DB	0bdH, 0abH, 0b5H, 0c3H, 0b5H, 0bdH, 0b5H, 0c4H, 0b4H, 0faH, 0c2H
	DB	0ebH, 0bfH, 0e9H, 0d7H, 0f7H, 0ceH, 0aaH, 0baH, 0afH, 0caH, 0fdH
	DB	0b7H, 0b5H, 0bbH, 0d8H, 0a1H, 0a3H, 0b7H, 0b5H, 0bbH, 0d8H, 0baH
	DB	0afH, 0caH, 0fdH, 0b5H, 0c4H, 0bbH, 0b7H, 0beH, 0b3H, 0ceH, 0aaH
	DB	0c8H, 0abH, 0beH, 0d6H, 0bbH, 0b7H, 0beH, 0b3H, 0a1H, 0a3H, 0c8H
	DB	0e7H, 0b9H, 0fbH, 0b3H, 0f6H, 0cfH, 0d6H, 0b4H, 0edH, 0ceH, 0f3H
	DB	0a3H, 0acH, 'load ', 0bbH, 0e1H, 0b7H, 0b5H, 0bbH, 0d8H, ' nil'
	DB	' ', 0baH, 0cdH, ' ', 0b4H, 0edH, 0ceH, 0f3H, 0d0H, 0c5H, 0cfH
	DB	0a2H, 0a1H, 0a3H, ' ', 0aH, ' chunkname ', 0d7H, 0f7H, 0ceH, 0aaH
	DB	0b8H, 0c3H, 0b4H, 0faH, 0c2H, 0ebH, 0bfH, 0e9H, 0b5H, 0c4H, 0c3H
	DB	0fbH, 0b3H, 0c6H, 0a3H, 0acH, 0d3H, 0c3H, 0d4H, 0daH, 0b4H, 0edH
	DB	0ceH, 0f3H, 0d0H, 0c5H, 0cfH, 0a2H, 0d3H, 0ebH, 0b5H, 0f7H, 0caH
	DB	0d4H, 0d0H, 0c5H, 0cfH, 0a2H, 0d6H, 0d0H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@FJIPOJKF@?$LE?S?N?D?$LM?$PO?V?P?$LL?q?H?$KB?$LE?z?B?k?$LP?i?$KD?$KM?H?g?$LJ?$PL?C?$LL?S?P?V?$LI?$LG?$KI@
CONST	SEGMENT
??_C@_0DJ@FJIPOJKF@?$LE?S?N?D?$LM?$PO?V?P?$LL?q?H?$KB?$LE?z?B?k?$LP?i?$KD?$KM?H?g?$LJ?$PL?C?$LL?S?P?V?$LI?$LG?$KI@ DB 0b4H
	DB	0d3H, 0ceH, 0c4H, 0bcH, 0feH, 0d6H, 0d0H, 0bbH, 0f1H, 0c8H, 0a1H
	DB	0b4H, 0faH, 0c2H, 0ebH, 0bfH, 0e9H, 0a3H, 0acH, 0c8H, 0e7H, 0b9H
	DB	0fbH, 0c3H, 0bbH, 0d3H, 0d0H, 0d6H, 0b8H, 0b6H, 0a8H, 0ceH, 0c4H
	DB	0bcH, 0feH, 0a3H, 0acH, 0d4H, 0f2H, 0b4H, 0d3H, 0b1H, 0eaH, 0d7H
	DB	0bcH, 0caH, 0e4H, 0c8H, 0ebH, 0d6H, 0d0H, 0bbH, 0f1H, 0c8H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GD@BCHKILID@?$LH?$LF?$LL?X?H?$PN?$LI?v?V?$LF?$KD?$LK?$LF?$PM?$LE?z?F?w?$KB?$KC?$LE?$KL?H?k?$LF?D?$LB?m?5t?$KB?$KC@
CONST	SEGMENT
??_C@_0GD@BCHKILID@?$LH?$LF?$LL?X?H?$PN?$LI?v?V?$LF?$KD?$LK?$LF?$PM?$LE?z?F?w?$KB?$KC?$LE?$KL?H?k?$LF?D?$LB?m?5t?$KB?$KC@ DB 0b7H
	DB	0b5H, 0bbH, 0d8H, 0c8H, 0fdH, 0b8H, 0f6H, 0d6H, 0b5H, 0a3H, 0baH
	DB	0b5H, 0fcH, 0b4H, 0faH, 0c6H, 0f7H, 0a1H, 0a2H, 0b4H, 0abH, 0c8H
	DB	0ebH, 0b5H, 0c4H, 0b1H, 0edH, ' t', 0a1H, 0a2H, 0d6H, 0b5H, ' '
	DB	'0 ', 0a1H, 0a3H, 0b5H, 0fcH, 0b4H, 0faH, 0c6H, 0f7H, 0c4H, 0dcH
	DB	0b9H, 0bbH, 0b8H, 0f9H, 0beH, 0ddH, 0b4H, 0abH, 0c8H, 0ebH, 0b5H
	DB	0c4H, 0b1H, 0edH, ' t ', 0baH, 0cdH, 0cbH, 0f7H, 0d2H, 0fdH, ' '
	DB	'i ', 0b5H, 0c3H, 0b5H, 0bdH, ' i+1 ', 0baH, 0cdH, ' t[i+1] ', 0b5H
	DB	0c4H, 0d6H, 0b5H, 0a1H, 0a3H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08ENPOPECB@?O?T?J?$LO?$LA?o?V?z?$AA@
CONST	SEGMENT
??_C@_08ENPOPECB@?O?T?J?$LO?$LA?o?V?z?$AA@ DB 0cfH, 0d4H, 0caH, 0beH, 0b0H
	DB	0efH, 0d6H, 0faH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FI@LNEDBPAH@?H?g?$LJ?$PL?$LG?T?O?s?C?$LL?S?P?T?$KK?$LB?m?$KD?$KM?$LH?$LF?$LL?X?$LP?U?$KD?$LL?H?g?$LJ?$PL?$LG?T@
CONST	SEGMENT
??_C@_0FI@LNEDBPAH@?H?g?$LJ?$PL?$LG?T?O?s?C?$LL?S?P?T?$KK?$LB?m?$KD?$KM?$LH?$LF?$LL?X?$LP?U?$KD?$LL?H?g?$LJ?$PL?$LG?T@ DB 0c8H
	DB	0e7H, 0b9H, 0fbH, 0b6H, 0d4H, 0cfH, 0f3H, 0c3H, 0bbH, 0d3H, 0d0H
	DB	0d4H, 0aaH, 0b1H, 0edH, 0a3H, 0acH, 0b7H, 0b5H, 0bbH, 0d8H, 0bfH
	DB	0d5H, 0a3H, 0bbH, 0c8H, 0e7H, 0b9H, 0fbH, 0b6H, 0d4H, 0cfH, 0f3H
	DB	0d3H, 0d0H, ' __metatable ', 0d3H, 0f2H, 0a3H, 0acH, 0b7H, 0b5H
	DB	0bbH, 0d8H, 0b6H, 0d4H, 0d3H, 0a6H, 0b5H, 0c4H, 0d6H, 0b5H, 0a3H
	DB	0bbH, 0b7H, 0f1H, 0d4H, 0f2H, 0a3H, 0acH, 0b7H, 0b5H, 0bbH, 0d8H
	DB	0b6H, 0d4H, 0cfH, 0f3H, 0b5H, 0c4H, 0d4H, 0aaH, 0b1H, 0edH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HMHBHHNF@?$LL?q?H?$KBgc?P?E?O?$KC?$AA@
CONST	SEGMENT
??_C@_0L@HMHBHHNF@?$LL?q?H?$KBgc?P?E?O?$KC?$AA@ DB 0bbH, 0f1H, 0c8H, 0a1H
	DB	'gc', 0d0H, 0c5H, 0cfH, 0a2H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EDAGHKOI@gcinfo?$AA@
CONST	SEGMENT
??_C@_06EDAGHKOI@gcinfo?$AA@ DB 'gcinfo', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08ECHOJKFB@?M?K?$LD?v?$LL?$LH?$LO?$LD?$AA@
CONST	SEGMENT
??_C@_08ECHOJKFB@?M?K?$LD?v?$LL?$LH?$LO?$LD?$AA@ DB 0cdH, 0cbH, 0b3H, 0f6H
	DB	0bbH, 0b7H, 0beH, 0b3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@MGGLOCON@?V?U?V?$LJ?K?y?$LB?$KD?$LL?$KE?$LF?D?$LK?$KP?J?$PN?$KD?$KM?E?W?$LD?v?5message?5?O@
CONST	SEGMENT
??_C@_0CO@MGGLOCON@?V?U?V?$LJ?K?y?$LB?$KD?$LL?$KE?$LF?D?$LK?$KP?J?$PN?$KD?$KM?E?W?$LD?v?5message?5?O@ DB 0d6H
	DB	0d5H, 0d6H, 0b9H, 0cbH, 0f9H, 0b1H, 0a3H, 0bbH, 0a4H, 0b5H, 0c4H
	DB	0baH, 0afH, 0caH, 0fdH, 0a3H, 0acH, 0c5H, 0d7H, 0b3H, 0f6H, ' '
	DB	'message ', 0cfH, 0fbH, 0cfH, 0a2H, 0a3H, 0acH, 0b2H, 0bbH, 0d4H
	DB	0d9H, 0b7H, 0b5H, 0bbH, 0d8H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@BKHIOMOH@?$LE?r?$LP?$KK?$LI?C?C?$PL?W?V?$LF?D?N?D?$LM?$PO?$KD?$KM?$LC?$KC?V?$LE?P?P?N?D?$LM?$PO?V?P?$LF?D@
CONST	SEGMENT
??_C@_0CM@BKHIOMOH@?$LE?r?$LP?$KK?$LI?C?C?$PL?W?V?$LF?D?N?D?$LM?$PO?$KD?$KM?$LC?$KC?V?$LE?P?P?N?D?$LM?$PO?V?P?$LF?D@ DB 0b4H
	DB	0f2H, 0bfH, 0aaH, 0b8H, 0c3H, 0c3H, 0fbH, 0d7H, 0d6H, 0b5H, 0c4H
	DB	0ceH, 0c4H, 0bcH, 0feH, 0a3H, 0acH, 0b2H, 0a2H, 0d6H, 0b4H, 0d0H
	DB	0d0H, 0ceH, 0c4H, 0bcH, 0feH, 0d6H, 0d0H, 0b5H, 0c4H, ' Lua ', 0b4H
	DB	0faH, 0c2H, 0ebH, 0bfH, 0e9H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DIDGHNKN@?G?e?$LD?$PN?$LF?$LB?G?$LA?F?A?D?$LL?D?Z?H?$NN?$KD?$KM?S?kclear?R?$LL?Q?y?$AA@
CONST	SEGMENT
??_C@_0BO@DIDGHNKN@?G?e?$LD?$PN?$LF?$LB?G?$LA?F?A?D?$LL?D?Z?H?$NN?$KD?$KM?S?kclear?R?$LL?Q?y?$AA@ DB 0c7H
	DB	0e5H, 0b3H, 0fdH, 0b5H, 0b1H, 0c7H, 0b0H, 0c6H, 0c1H, 0c4H, 0bbH
	DB	0c4H, 0daH, 0c8H, 0ddH, 0a3H, 0acH, 0d3H, 0ebH, 'clear', 0d2H, 0bbH
	DB	0d1H, 0f9H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DLNNKEPM@?G?e?$LD?$PN?$LF?$LB?G?$LA?F?A?D?$LL?D?Z?H?$NN?$AA@
CONST	SEGMENT
??_C@_0BB@DLNNKEPM@?G?e?$LD?$PN?$LF?$LB?G?$LA?F?A?D?$LL?D?Z?H?$NN?$AA@ DB 0c7H
	DB	0e5H, 0b3H, 0fdH, 0b5H, 0b1H, 0c7H, 0b0H, 0c6H, 0c1H, 0c4H, 0bbH
	DB	0c4H, 0daH, 0c8H, 0ddH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BLJ@JAGMBHNF@?$MA?$KM?$LL?x?$LL?X?J?U?5?6?5?$CCstop?$CC?3?5?M?$KD?V?$LJ?$MA?$KM?$LL?x?$LL?X?J?U?$KB@
CONST	SEGMENT
??_C@_0BLJ@JAGMBHNF@?$MA?$KM?$LL?x?$LL?X?J?U?5?6?5?$CCstop?$CC?3?5?M?$KD?V?$LJ?$MA?$KM?$LL?x?$LL?X?J?U?$KB@ DB 0c0H
	DB	0acH, 0bbH, 0f8H, 0bbH, 0d8H, 0caH, 0d5H, ' ', 0aH, ' "stop": '
	DB	0cdH, 0a3H, 0d6H, 0b9H, 0c0H, 0acH, 0bbH, 0f8H, 0bbH, 0d8H, 0caH
	DB	0d5H, 0a1H, 0a3H, 0aH, ' "restart": ', 0d6H, 0d8H, 0c6H, 0f4H, 0c0H
	DB	0acH, 0bbH, 0f8H, 0bbH, 0d8H, 0caH, 0d5H, 0a1H, 0a3H, 0aH, ' "'
	DB	'collect" : ', 0d6H, 0b4H, 0d0H, 0d0H, 0c0H, 0acH, 0bbH, 0f8H, 0bbH
	DB	0d8H, 0caH, 0d5H, 0b5H, 0c4H, 0cdH, 0eaH, 0d5H, 0fbH, 0d1H, 0adH
	DB	0bbH, 0b7H, 0a1H, 0a3H, 0aH, ' "count" : ', 0b7H, 0b5H, 0bbH, 0d8H
	DB	' Lua ', 0b5H, 0b1H, 0c7H, 0b0H, 0caH, 0b9H, 0d3H, 0c3H, 0b5H, 0c4H
	DB	0d7H, 0dcH, 0c4H, 0daH, 0b4H, 0e6H, 0a3H, 0a8H, 0b5H, 0a5H, 0ceH
	DB	0bbH, 0ceH, 0aaH, ' Kb', 0a3H, 0a9H, 0a1H, 0a3H, 0aH, ' "step"'
	DB	' : ', 0d6H, 0b4H, 0d0H, 0d0H, 0d2H, 0bbH, 0b2H, 0bdH, 0a3H, 0a8H
	DB	0d2H, 0bbH, 0b2H, 0bdH, 0bfH, 0c9H, 0d3H, 0c9H, 0b6H, 0e0H, 0b2H
	DB	0bdH, 0d7H, 0e9H, 0b3H, 0c9H, 0a3H, 0a9H, 0c0H, 0acH, 0bbH, 0f8H
	DB	0bbH, 0d8H, 0caH, 0d5H, 0a1H, 0a3H, 0b2H, 0bdH, 0caH, 0fdH, 0bfH
	DB	0c9H, 0d3H, 0c9H, 0b2H, 0ceH, 0caH, 0fdH, ' arg ', 0bfH, 0d8H, 0d6H
	DB	0c6H, 0a3H, 0a8H, 0d6H, 0b5H, 0d4H, 0bdH, 0b4H, 0f3H, 0a3H, 0acH
	DB	0b2H, 0bdH, 0caH, 0fdH, 0d4H, 0bdH, 0b6H, 0e0H, 0a3H, 0acH, '0'
	DB	' ', 0b1H, 0edH, 0caH, 0beH, 0d6H, 0b4H, 0d0H, 0d0H, 0d2H, 0bbH
	DB	0b2H, 0bdH, 0a3H, 0a8H, 0d6H, 0b8H, 0d7H, 0eeH, 0d0H, 0a1H, 0b5H
	DB	0c4H, 0d2H, 0bbH, 0b2H, 0bdH, 0a3H, 0a9H, 0a3H, 0a9H, 0a1H, 0a3H
	DB	0c8H, 0e7H, 0b9H, 0fbH, 0d6H, 0b4H, 0d0H, 0d0H, 0baH, 0f3H, 0cdH
	DB	0eaH, 0b3H, 0c9H, 0c1H, 0cbH, 0bbH, 0d8H, 0caH, 0d5H, 0d1H, 0adH
	DB	0bbH, 0b7H, 0a3H, 0acH, 0b7H, 0b5H, 0bbH, 0d8H, ' true', 0a1H, 0a3H
	DB	0aH, ' "setpause" : ', 0b0H, 0d1H, ' arg / 100 ', 0d7H, 0f7H, 0ceH
	DB	0aaH, 0c0H, 0acH, 0bbH, 0f8H, 0bbH, 0d8H, 0caH, 0d5H, 0b2H, 0ceH
	DB	0caH, 0fdH, ' pause ', 0b5H, 0c4H, 0d0H, 0c2H, 0d6H, 0b5H, 0a1H
	DB	0a3H, 0aH, ' "setstepmul" : ', 0b0H, 0d1H, ' arg / 100 ', 0d7H
	DB	0f7H, 0ceH, 0aaH, 0c0H, 0acH, 0bbH, 0f8H, 0bbH, 0d8H, 0caH, 0d5H
	DB	0b2H, 0ceH, 0caH, 0fdH, ' step mutiplier ', 0b5H, 0c4H, 0d0H, 0c2H
	DB	0d6H, 0b5H, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EMONHILO@?O?T?J?$LOlua?$LK?K?P?D?$LP?b?H?m?$LM?$PO?W?w?U?$NP?$AA@
CONST	SEGMENT
??_C@_0BG@EMONHILO@?O?T?J?$LOlua?$LK?K?P?D?$LP?b?H?m?$LM?$PO?W?w?U?$NP?$AA@ DB 0cfH
	DB	0d4H, 0caH, 0beH, 'lua', 0baH, 0cbH, 0d0H, 0c4H, 0bfH, 0e2H, 0c8H
	DB	0edH, 0bcH, 0feH, 0d7H, 0f7H, 0d5H, 0dfH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0KO@JANFHFAH@?H?g?$LJ?$PL?F?d?$LC?N?J?$PN?5v?5?$LF?D?V?$LF?N?$KK?$LM?Y?$KD?$KInil?5?$LL?r?5fa@
CONST	SEGMENT
??_C@_0KO@JANFHFAH@?H?g?$LJ?$PL?F?d?$LC?N?J?$PN?5v?5?$LF?D?V?$LF?N?$KK?$LM?Y?$KD?$KInil?5?$LL?r?5fa@ DB 0c8H
	DB	0e7H, 0b9H, 0fbH, 0c6H, 0e4H, 0b2H, 0ceH, 0caH, 0fdH, ' v ', 0b5H
	DB	0c4H, 0d6H, 0b5H, 0ceH, 0aaH, 0bcH, 0d9H, 0a3H, 0a8H, 'nil ', 0bbH
	DB	0f2H, ' false', 0a3H, 0a9H, 0a3H, 0acH, ' ', 0cbH, 0fcH, 0beH, 0cdH
	DB	0b5H, 0f7H, 0d3H, 0c3H, ' error', 0a3H, 0bbH, ' ', 0b7H, 0f1H, 0d4H
	DB	0f2H, 0a3H, 0acH, 0b7H, 0b5H, 0bbH, 0d8H, 0cbH, 0f9H, 0d3H, 0d0H
	DB	0b5H, 0c4H, 0b2H, 0ceH, 0caH, 0fdH, 0a1H, 0a3H, ' ', 0d4H, 0daH
	DB	0b4H, 0edH, 0ceH, 0f3H, 0c7H, 0e9H, 0bfH, 0f6H, 0caH, 0b1H, 0a3H
	DB	0acH, ' message ', 0d6H, 0b8H, 0c4H, 0c7H, 0b8H, 0f6H, 0b4H, 0edH
	DB	0ceH, 0f3H, 0b6H, 0d4H, 0cfH, 0f3H, 0a3H, 0bbH, ' ', 0c8H, 0e7H
	DB	0b9H, 0fbH, 0b2H, 0bbH, 0ccH, 0e1H, 0b9H, 0a9H, 0d5H, 0e2H, 0b8H
	DB	0f6H, 0b2H, 0ceH, 0caH, 0fdH, 0a3H, 0acH, 0b2H, 0ceH, 0caH, 0fdH
	DB	0c4H, 0acH, 0c8H, 0cfH, 0ceH, 0aaH, ' "assertion failed!" ', 0a1H
	DB	0a3H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08PMLCGGEP@_VERSION?$AA@
CONST	SEGMENT
??_C@_08PMLCGGEP@_VERSION?$AA@ DB '_VERSION', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02NIGGJGKC@_G?$AA@
CONST	SEGMENT
??_C@_02NIGGJGKC@_G?$AA@ DB '_G', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PJMKFLDO@ztest?$AA@
CONST	SEGMENT
??_C@_05PJMKFLDO@ztest?$AA@ DB 'ztest', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GDLLDIBI@xpcall?$AA@
CONST	SEGMENT
??_C@_06GDLLDIBI@xpcall?$AA@ DB 'xpcall', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CPCPJPKL@version?$AA@
CONST	SEGMENT
??_C@_07CPCPJPKL@version?$AA@ DB 'version', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HNCIIKBA@usage?$AA@
CONST	SEGMENT
??_C@_05HNCIIKBA@usage?$AA@ DB 'usage', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GPMDFGEJ@type?$AA@
CONST	SEGMENT
??_C@_04GPMDFGEJ@type?$AA@ DB 'type', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JOIMPOJO@tonumber?$AA@
CONST	SEGMENT
??_C@_08JOIMPOJO@tonumber?$AA@ DB 'tonumber', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MCAAIDEK@setmetatable?$AA@
CONST	SEGMENT
??_C@_0N@MCAAIDEK@setmetatable?$AA@ DB 'setmetatable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LGNCCACI@select?$AA@
CONST	SEGMENT
??_C@_06LGNCCACI@select?$AA@ DB 'select', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06ONPLLLOI@rawset?$AA@
CONST	SEGMENT
??_C@_06ONPLLLOI@rawset?$AA@ DB 'rawset', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DCIAHLCA@rawget?$AA@
CONST	SEGMENT
??_C@_06DCIAHLCA@rawget?$AA@ DB 'rawget', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FFKMAGPK@rawlen?$AA@
CONST	SEGMENT
??_C@_06FFKMAGPK@rawlen?$AA@ DB 'rawlen', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LCBKMMAG@rawequal?$AA@
CONST	SEGMENT
??_C@_08LCBKMMAG@rawequal?$AA@ DB 'rawequal', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05IJDJACGD@print?$AA@
CONST	SEGMENT
??_C@_05IJDJACGD@print?$AA@ DB 'print', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JAJCNIIJ@pcall?$AA@
CONST	SEGMENT
??_C@_05JAJCNIIJ@pcall?$AA@ DB 'pcall', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PEAECDOC@pairs?$AA@
CONST	SEGMENT
??_C@_05PEAECDOC@pairs?$AA@ DB 'pairs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CJGEDOF@next?$AA@
CONST	SEGMENT
??_C@_04CJGEDOF@next?$AA@ DB 'next', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BBBJLLLK@loadstring?$AA@
CONST	SEGMENT
??_C@_0L@BBBJLLLK@loadstring?$AA@ DB 'loadstring', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04EONOHKEP@load?$AA@
CONST	SEGMENT
??_C@_04EONOHKEP@load?$AA@ DB 'load', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BNNFLGCJ@loadfile?$AA@
CONST	SEGMENT
??_C@_08BNNFLGCJ@loadfile?$AA@ DB 'loadfile', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06MGIEFEAJ@ipairs?$AA@
CONST	SEGMENT
??_C@_06MGIEFEAJ@ipairs?$AA@ DB 'ipairs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PCJFHION@help?$AA@
CONST	SEGMENT
??_C@_04PCJFHION@help?$AA@ DB 'help', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LGLOEPAG@getmetatable?$AA@
CONST	SEGMENT
??_C@_0N@LGLOEPAG@getmetatable?$AA@ DB 'getmetatable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MKNBDEPB@exit?$AA@
CONST	SEGMENT
??_C@_04MKNBDEPB@exit?$AA@ DB 'exit', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05KKCIMGE@error?$AA@
CONST	SEGMENT
??_C@_05KKCIMGE@error?$AA@ DB 'error', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06ONNDGCDK@dofile?$AA@
CONST	SEGMENT
??_C@_06ONNDGCDK@dofile?$AA@ DB 'dofile', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04EBPADADD@desc?$AA@
CONST	SEGMENT
??_C@_04EBPADADD@desc?$AA@ DB 'desc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PPJNHBMP@description?$AA@
CONST	SEGMENT
??_C@_0M@PPJNHBMP@description?$AA@ DB 'description', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03LCPHGAHP@cls?$AA@
CONST	SEGMENT
??_C@_03LCPHGAHP@cls?$AA@ DB 'cls', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05MEHLAELG@clear?$AA@
CONST	SEGMENT
??_C@_05MEHLAELG@clear?$AA@ DB 'clear', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CKFEAJJE@collectgarbage?$AA@
CONST	SEGMENT
??_C@_0P@CKFEAJJE@collectgarbage?$AA@ DB 'collectgarbage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DBBPHNDK@authors?$AA@
CONST	SEGMENT
??_C@_07DBBPHNDK@authors?$AA@ DB 'authors', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GMEIIFFN@assert?$AA@
CONST	SEGMENT
??_C@_06GMEIIFFN@assert?$AA@ DB 'assert', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JCKLCKIH@isrunning?$AA@
CONST	SEGMENT
??_C@_09JCKLCKIH@isrunning?$AA@ DB 'isrunning', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KABEJKKP@setstepmul?$AA@
CONST	SEGMENT
??_C@_0L@KABEJKKP@setstepmul?$AA@ DB 'setstepmul', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08ONFIAENP@setpause?$AA@
CONST	SEGMENT
??_C@_08ONFIAENP@setpause?$AA@ DB 'setpause', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04CNBNFAL@step?$AA@
CONST	SEGMENT
??_C@_04CNBNFAL@step?$AA@ DB 'step', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05IOMEMJEC@count?$AA@
CONST	SEGMENT
??_C@_05IOMEMJEC@count?$AA@ DB 'count', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JHIJCABF@collect?$AA@
CONST	SEGMENT
??_C@_07JHIJCABF@collect?$AA@ DB 'collect', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LDHOHMPD@restart?$AA@
CONST	SEGMENT
??_C@_07LDHOHMPD@restart?$AA@ DB 'restart', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PEGFANN@stop?$AA@
CONST	SEGMENT
??_C@_04PEGFANN@stop?$AA@ DB 'stop', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
?opts@?1??luaB_collectgarbage@@9@9 DQ FLAT:??_C@_04PEGFANN@stop?$AA@ ; `luaB_collectgarbage'::`2'::opts
	DQ	FLAT:??_C@_07LDHOHMPD@restart?$AA@
	DQ	FLAT:??_C@_07JHIJCABF@collect?$AA@
	DQ	FLAT:??_C@_05IOMEMJEC@count?$AA@
	DQ	FLAT:??_C@_04CNBNFAL@step?$AA@
	DQ	FLAT:??_C@_08ONFIAENP@setpause?$AA@
	DQ	FLAT:??_C@_0L@KABEJKKP@setstepmul?$AA@
	DQ	FLAT:??_C@_09JCKLCKIH@isrunning?$AA@
	DQ	0000000000000000H
?optsnum@?1??luaB_collectgarbage@@9@9 DD 00H		; `luaB_collectgarbage'::`2'::optsnum
	DD	01H
	DD	02H
	DD	03H
	DD	05H
	DD	06H
	DD	07H
	DD	09H
	ORG $+8
base_funcs DQ	FLAT:??_C@_06GMEIIFFN@assert?$AA@
	DQ	FLAT:luaB_assert
	DQ	FLAT:??_C@_07DBBPHNDK@authors?$AA@
	DQ	FLAT:luaB_authors
	DQ	FLAT:??_C@_0P@CKFEAJJE@collectgarbage?$AA@
	DQ	FLAT:luaB_collectgarbage
	DQ	FLAT:??_C@_05MEHLAELG@clear?$AA@
	DQ	FLAT:luaB_clear
	DQ	FLAT:??_C@_03LCPHGAHP@cls?$AA@
	DQ	FLAT:luaB_clear
	DQ	FLAT:??_C@_0M@PPJNHBMP@description?$AA@
	DQ	FLAT:luaB_getDescription
	DQ	FLAT:??_C@_04EBPADADD@desc?$AA@
	DQ	FLAT:luaB_getDescription
	DQ	FLAT:??_C@_06ONNDGCDK@dofile?$AA@
	DQ	FLAT:luaB_dofile
	DQ	FLAT:??_C@_05KKCIMGE@error?$AA@
	DQ	FLAT:luaB_error
	DQ	FLAT:??_C@_04MKNBDEPB@exit?$AA@
	DQ	FLAT:luaB_exit
	DQ	FLAT:??_C@_0N@LGLOEPAG@getmetatable?$AA@
	DQ	FLAT:luaB_getmetatable
	DQ	FLAT:??_C@_04PCJFHION@help?$AA@
	DQ	FLAT:luaB_help
	DQ	FLAT:??_C@_06MGIEFEAJ@ipairs?$AA@
	DQ	FLAT:luaB_ipairs
	DQ	FLAT:??_C@_08BNNFLGCJ@loadfile?$AA@
	DQ	FLAT:luaB_loadfile
	DQ	FLAT:??_C@_04EONOHKEP@load?$AA@
	DQ	FLAT:luaB_load
	DQ	FLAT:??_C@_0L@BBBJLLLK@loadstring?$AA@
	DQ	FLAT:luaB_load
	DQ	FLAT:??_C@_04CJGEDOF@next?$AA@
	DQ	FLAT:luaB_next
	DQ	FLAT:??_C@_05PEAECDOC@pairs?$AA@
	DQ	FLAT:luaB_pairs
	DQ	FLAT:??_C@_05JAJCNIIJ@pcall?$AA@
	DQ	FLAT:luaB_pcall
	DQ	FLAT:??_C@_05IJDJACGD@print?$AA@
	DQ	FLAT:luaB_print
	DQ	FLAT:??_C@_08LCBKMMAG@rawequal?$AA@
	DQ	FLAT:luaB_rawequal
	DQ	FLAT:??_C@_06FFKMAGPK@rawlen?$AA@
	DQ	FLAT:luaB_rawlen
	DQ	FLAT:??_C@_06DCIAHLCA@rawget?$AA@
	DQ	FLAT:luaB_rawget
	DQ	FLAT:??_C@_06ONPLLLOI@rawset?$AA@
	DQ	FLAT:luaB_rawset
	DQ	FLAT:??_C@_06LGNCCACI@select?$AA@
	DQ	FLAT:luaB_select
	DQ	FLAT:??_C@_0N@MCAAIDEK@setmetatable?$AA@
	DQ	FLAT:luaB_setmetatable
	DQ	FLAT:??_C@_08JOIMPOJO@tonumber?$AA@
	DQ	FLAT:luaB_tonumber
	DQ	FLAT:??_C@_08FNIIFOJC@tostring?$AA@
	DQ	FLAT:luaB_tostring
	DQ	FLAT:??_C@_04GPMDFGEJ@type?$AA@
	DQ	FLAT:luaB_type
	DQ	FLAT:??_C@_05HNCIIKBA@usage?$AA@
	DQ	FLAT:luaB_usage
	DQ	FLAT:??_C@_07CPCPJPKL@version?$AA@
	DQ	FLAT:luaB_version
	DQ	FLAT:??_C@_06GDLLDIBI@xpcall?$AA@
	DQ	FLAT:luaB_xpcall
	DQ	FLAT:??_C@_05PJMKFLDO@ztest?$AA@
	DQ	FLAT:luaB_ztest
	DQ	FLAT:??_C@_02NIGGJGKC@_G?$AA@
	DQ	0000000000000000H
	DQ	FLAT:??_C@_08PMLCGGEP@_VERSION?$AA@
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
base_funcs_note_chs DQ FLAT:??_C@_06GMEIIFFN@assert?$AA@
	DQ	FLAT:??_C@_0KO@JANFHFAH@?H?g?$LJ?$PL?F?d?$LC?N?J?$PN?5v?5?$LF?D?V?$LF?N?$KK?$LM?Y?$KD?$KInil?5?$LL?r?5fa@
	DQ	FLAT:??_C@_07DBBPHNDK@authors?$AA@
	DQ	FLAT:??_C@_0BG@EMONHILO@?O?T?J?$LOlua?$LK?K?P?D?$LP?b?H?m?$LM?$PO?W?w?U?$NP?$AA@
	DQ	FLAT:??_C@_0P@CKFEAJJE@collectgarbage?$AA@
	DQ	FLAT:??_C@_0BLJ@JAGMBHNF@?$MA?$KM?$LL?x?$LL?X?J?U?5?6?5?$CCstop?$CC?3?5?M?$KD?V?$LJ?$MA?$KM?$LL?x?$LL?X?J?U?$KB@
	DQ	FLAT:??_C@_05MEHLAELG@clear?$AA@
	DQ	FLAT:??_C@_0BB@DLNNKEPM@?G?e?$LD?$PN?$LF?$LB?G?$LA?F?A?D?$LL?D?Z?H?$NN?$AA@
	DQ	FLAT:??_C@_03LCPHGAHP@cls?$AA@
	DQ	FLAT:??_C@_0BO@DIDGHNKN@?G?e?$LD?$PN?$LF?$LB?G?$LA?F?A?D?$LL?D?Z?H?$NN?$KD?$KM?S?kclear?R?$LL?Q?y?$AA@
	DQ	FLAT:??_C@_06ONNDGCDK@dofile?$AA@
	DQ	FLAT:??_C@_0CM@BKHIOMOH@?$LE?r?$LP?$KK?$LI?C?C?$PL?W?V?$LF?D?N?D?$LM?$PO?$KD?$KM?$LC?$KC?V?$LE?P?P?N?D?$LM?$PO?V?P?$LF?D@
	DQ	FLAT:??_C@_05KKCIMGE@error?$AA@
	DQ	FLAT:??_C@_0CO@MGGLOCON@?V?U?V?$LJ?K?y?$LB?$KD?$LL?$KE?$LF?D?$LK?$KP?J?$PN?$KD?$KM?E?W?$LD?v?5message?5?O@
	DQ	FLAT:??_C@_04MKNBDEPB@exit?$AA@
	DQ	FLAT:??_C@_08ECHOJKFB@?M?K?$LD?v?$LL?$LH?$LO?$LD?$AA@
	DQ	FLAT:??_C@_06EDAGHKOI@gcinfo?$AA@
	DQ	FLAT:??_C@_0L@HMHBHHNF@?$LL?q?H?$KBgc?P?E?O?$KC?$AA@
	DQ	FLAT:??_C@_0N@LGLOEPAG@getmetatable?$AA@
	DQ	FLAT:??_C@_0FI@LNEDBPAH@?H?g?$LJ?$PL?$LG?T?O?s?C?$LL?S?P?T?$KK?$LB?m?$KD?$KM?$LH?$LF?$LL?X?$LP?U?$KD?$LL?H?g?$LJ?$PL?$LG?T@
	DQ	FLAT:??_C@_04PCJFHION@help?$AA@
	DQ	FLAT:??_C@_08ENPOPECB@?O?T?J?$LO?$LA?o?V?z?$AA@
	DQ	FLAT:??_C@_06MGIEFEAJ@ipairs?$AA@
	DQ	FLAT:??_C@_0GD@BCHKILID@?$LH?$LF?$LL?X?H?$PN?$LI?v?V?$LF?$KD?$LK?$LF?$PM?$LE?z?F?w?$KB?$KC?$LE?$KL?H?k?$LF?D?$LB?m?5t?$KB?$KC@
	DQ	FLAT:??_C@_08BNNFLGCJ@loadfile?$AA@
	DQ	FLAT:??_C@_0DJ@FJIPOJKF@?$LE?S?N?D?$LM?$PO?V?P?$LL?q?H?$KB?$LE?z?B?k?$LP?i?$KD?$KM?H?g?$LJ?$PL?C?$LL?S?P?V?$LI?$LG?$KI@
	DQ	FLAT:??_C@_04EONOHKEP@load?$AA@
	DQ	FLAT:??_C@_0BFP@JCAMCHOC@?M?$KI?$LJ?$PN?$LE?$KL?H?k?$LK?$KP?J?$PN?5func?5?$LF?D?$LH?$LF?$LL?X?V?$LF?$LL?q?H?$KB?$LE?z@
	DQ	FLAT:??_C@_0L@BBBJLLLK@loadstring?$AA@
	DQ	FLAT:??_C@_0CL@KDEJAEID@?S?k?5load?5?$MA?$OA?K?F?$KD?$KM?V?$LL?$LC?$LL?$LJ?$PN?J?G?$LE?S?W?V?$LH?$PL?$LE?$KO?V?P@
	DQ	FLAT:??_C@_04CJGEDOF@next?$AA@
	DQ	FLAT:??_C@_0BL@PBNINAND@?$LH?$LF?$LL?X?$LE?$KL?H?k?$LF?D?$LB?m?V?P?O?B?R?$LL?$LI?v?$LM?$PM?V?$LF?$LG?T?$AA@
	DQ	FLAT:??_C@_05JAJCNIIJ@pcall?$AA@
	DQ	FLAT:??_C@_0LM@CCOODELD@?R?T?$LB?$KD?$LL?$KE?D?$KD?J?$LN?$LF?w?S?C?$LE?$KL?H?k?$LF?D?$LK?$KP?J?$PN?$KD?$KM?R?$LC?$LO?M?J?G@
	DQ	FLAT:??_C@_05IJDJACGD@print?$AA@
	DQ	FLAT:??_C@_0FN@GIFILDMN@?$LN?v?W?w?N?$KK?$LP?l?K?Y?$LC?i?$LP?$LE?D?$LD?$LI?v?V?$LF?$LF?D?$LJ?$KE?$LO?$NP?$KD?$KM?$LC?$LL?S?C@
	DQ	FLAT:??_C@_08LCBKMMAG@rawequal?$AA@
	DQ	FLAT:??_C@_0HD@KAAICMEO@?R?T?5raw?5?W?w?N?$KK?G?$LA?W?$LK?$LF?D?$LK?$KP?J?$PN?$LO?y?$LB?m?J?$LO?$LI?C?$LH?$LN?$LH@
	DQ	FLAT:??_C@_06DCIAHLCA@rawget?$AA@
	DQ	FLAT:??_C@_0EK@HOOBFFHD@?$LL?q?H?$KB?5table?5?V?P?$LM?$PM?5index?5?$LF?D?$LJ?X?A?$KK?V?$LF?$KD?$KM@
	DQ	FLAT:??_C@_06ONPLLLOI@rawset?$AA@
	DQ	FLAT:??_C@_0HL@JIGMHII@?$LN?$KL?5table?$FLindex?$FN?5?$LF?D?V?$LF?I?h?V?C?N?$KK?5value@
	DQ	FLAT:??_C@_06LGNCCACI@select?$AA@
	DQ	FLAT:??_C@_0KI@BKGLFMBF@index?5?$LP?I?R?T?J?G?J?$PN?W?V?$LL?r?U?$NP?W?V?$LH?$PL?5?8?$CD?8?5?$KB?$KD?$LF@
	DQ	FLAT:??_C@_0N@MCAAIDEK@setmetatable?$AA@
	DQ	FLAT:??_C@_0JI@CGNAGBNM@?$LI?x?5table?5?$LJ?X?A?$KK?T?$KK?$LB?m?5metatable?5?$KB?$KD?$LH?$LF@
	DQ	FLAT:??_C@_08JOIMPOJO@tonumber?$AA@
	DQ	FLAT:??_C@_0ML@FKNGDJCH@?5?$LD?$KC?J?T?$LA?Q?5e?5?$KD?$KI?$LF?Z?R?$LL?$LC?N?J?$PN?$KD?$KJ?W?$KK?$LL?$LL?N?$KK?J?$KO?$LN?x@
	DQ	FLAT:??_C@_08FNIIFOJC@tostring?$AA@
	DQ	FLAT:??_C@_0LH@BPMOIOAF@?D?$NM?$LN?$KL?H?N?R?b?$MA?$OA?P?M?$LF?D?V?$LF?W?$KK?$LL?$LL?N?$KK?$LK?O?J?J?$LF?D?W?V?$LH?$PL@
	DQ	FLAT:??_C@_04GPMDFGEJ@type?$AA@
	DQ	FLAT:??_C@_0JD@IBGGALMK@?$LH?$LF?$LL?X?5v?5?$LF?D?$MA?$OA?P?M?$KD?$KM?$MA?$OA?P?M?R?T?W?V?$LH?$PL?$LE?$KO?P?N?J?$LN?$LH@
	DQ	FLAT:??_C@_06FIONAGJL@unpack?$AA@
	DQ	FLAT:??_C@_0EK@NGIAAGBN@?$LH?$LF?$LL?X?$LB?m?V?P?$LF?D?$LI?w?$LI?v?S?r?$LF?D?V?$LF?0?$LF?H?$LM?$NL?S?Z?$KD?$LK?6?5r@
	DQ	FLAT:??_C@_05HNCIIKBA@usage?$AA@
	DQ	FLAT:??_C@_0M@PFJHOPOH@?O?T?J?$LOlua?$LA?o?V?z?$AA@
	DQ	FLAT:??_C@_07CPCPJPKL@version?$AA@
	DQ	FLAT:??_C@_0O@EHKFACGH@?O?T?J?$LOlua?$LA?f?$LB?$LO?$LK?E?$AA@
	DQ	FLAT:??_C@_06GDLLDIBI@xpcall?$AA@
	DQ	FLAT:??_C@_0IK@CAPLCHMD@?S?k?5pcall?5?$CIf?0?5arg1?0?5?4?4?4?$CJ?5?$MA?$OA?K?F?$KB?$KD?$LC?$LL@
	DQ	FLAT:??_C@_05PJMKFLDO@ztest?$AA@
	DQ	FLAT:??_C@_08IMDOEIMN@?T?$NN?N?$NO?N?D?$LF?$LF?$AA@
base_funcs_note_fre DQ FLAT:??_C@_06GMEIIFFN@assert?$AA@
	DQ	FLAT:??_C@_0BAL@KMFOEKGD@?5Si?5la?5valeur?5de?5ses?5param?$KI?$KItres@
	DQ	FLAT:??_C@_07DBBPHNDK@authors?$AA@
	DQ	FLAT:??_C@_0DC@CDPJFCGL@?5Biblioth?$KI?$KIque?5centrale?5de?5logic@
	DQ	FLAT:??_C@_0P@CKFEAJJE@collectgarbage?$AA@
	DQ	FLAT:??_C@_0DGC@IPAKCGAD@?5Recyclage?5d?8ordures?5?6?5?$CCStop?$CC?3?5a@
	DQ	FLAT:??_C@_05MEHLAELG@clear?$AA@
	DQ	FLAT:??_C@_0CG@FJGBEIFH@?5Efface?5le?5contenu?5d?8?$KI?$KGcran?5actu@
	DQ	FLAT:??_C@_03LCPHGAHP@cls?$AA@
	DQ	FLAT:??_C@_0DE@JICLAMHJ@?5Efface?5le?5contenu?5d?8?$KI?$KGcran?5actu@
	DQ	FLAT:??_C@_06ONNDGCDK@dofile?$AA@
	DQ	FLAT:??_C@_0FL@FAJHGOBG@?5Ouvrir?5un?5fichier?5pour?5le?5nom?5d@
	DQ	FLAT:??_C@_05KKCIMGE@error?$AA@
	DQ	FLAT:??_C@_0EP@PIJCBEIB@?5La?5fonction?5de?5protection?5de?5fi@
	DQ	FLAT:??_C@_04MKNBDEPB@exit?$AA@
	DQ	FLAT:??_C@_0CA@FGHNAFKD@?5Le?5retrait?5de?5l?8environnement?4?$AA@
	DQ	FLAT:??_C@_06EDAGHKOI@gcinfo?$AA@
	DQ	FLAT:??_C@_0CI@NALIMHDF@?5Pour?5acqu?$KI?$KGrir?5des?5informations@
	DQ	FLAT:??_C@_0N@LGLOEPAG@getmetatable?$AA@
	DQ	FLAT:??_C@_0LJ@FGEIIAGN@Si?5l?8objet?5n?8a?5pas?5d?8?$KI?$KGl?$KI?$KGment?5d@
	DQ	FLAT:??_C@_04PCJFHION@help?$AA@
	DQ	FLAT:??_C@_0BF@CJGBKPP@?5L?8affichage?5d?8aide?4?$AA@
	DQ	FLAT:??_C@_06MGIEFEAJ@ipairs?$AA@
	DQ	FLAT:??_C@_0JO@JADFJLCG@?5Le?5retour?5de?5trois?5valeurs?3?5des@
	DQ	FLAT:??_C@_08BNNFLGCJ@loadfile?$AA@
	DQ	FLAT:??_C@_0HC@JGJODJKM@?$DP?5partir?5d?8un?5fichier?5d?8un?5bloc?5@
	DQ	FLAT:??_C@_04EONOHKEP@load?$AA@
	DQ	FLAT:??_C@_0CMD@IPDNPDKH@?5En?5fonction?5de?5la?5valeur?5de?5ret@
	DQ	FLAT:??_C@_0L@BBBJLLLK@loadstring?$AA@
	DQ	FLAT:??_C@_0EP@ILNELIKM@?5Et?5de?5charge?5similaires?0?5mais?5d@
	DQ	FLAT:??_C@_04CJGEDOF@next?$AA@
	DQ	FLAT:??_C@_0DH@GLINNKKE@?5Renvoie?5une?5table?5en?5entrant?5un@
	DQ	FLAT:??_C@_05JAJCNIIJ@pcall?$AA@
	DQ	FLAT:??_C@_0BGK@CNELNDDM@?5En?5fonction?5de?5modes?5de?5protect@
	DQ	FLAT:??_C@_05IJDJACGD@print?$AA@
	DQ	FLAT:??_C@_0KE@GDPEMNBN@?5Uniquement?5comme?5un?5outil?5de?5v?$KI@
	DQ	FLAT:??_C@_08LCBKMMAG@rawequal?$AA@
	DQ	FLAT:??_C@_0NG@LLAAJDGI@?5En?5fonction?5de?5brut?5comme?5pr?$KI?$KGf@
	DQ	FLAT:??_C@_06DCIAHLCA@rawget?$AA@
	DQ	FLAT:??_C@_0HK@FGIOHHAI@?5Association?5de?5valeurs?5de?5cl?$KI?$KG?5@
	DQ	FLAT:??_C@_06ONPLLLOI@rawset?$AA@
	DQ	FLAT:??_C@_0MG@BGPJEELN@?5La?5valeur?5de?5table?5?$FLindex?$FN?5agen@
	DQ	FLAT:??_C@_06LGNCCACI@select?$AA@
	DQ	FLAT:??_C@_0BAI@LLPMMAEH@?5Index?5peuvent?5?$KI?$LKtre?5des?5nombres@
	DQ	FLAT:??_C@_0N@MCAAIDEK@setmetatable?$AA@
	DQ	FLAT:??_C@_0PO@FHCMBDIA@?5Une?5table?5d?8?$KI?$KGl?$KI?$KGments?5?$KI?$KE?5Assoc@
	DQ	FLAT:??_C@_08JOIMPOJO@tonumber?$AA@
	DQ	FLAT:??_C@_0BIG@GOLMNLDL@?5Essayer?5de?5mettre?5e?5?$CIpremier?5pa@
	DQ	FLAT:??_C@_08FNIIFOJC@tostring?$AA@
	DQ	FLAT:??_C@_0BIE@IGMKAOCN@?5Peut?5?$KI?$LKtre?5tout?5type?5de?5convers@
	DQ	FLAT:??_C@_04GPMDFGEJ@type?$AA@
	DQ	FLAT:??_C@_0LN@LBNHJOBO@?5Type?5de?5retour?5de?5type?5V?0?5sous?5@
	DQ	FLAT:??_C@_06FIONAGJL@unpack?$AA@
	DQ	FLAT:??_C@_0HG@JGIEAADH@?5Valeur?5de?5retour?5dans?5la?5table?0@
	DQ	FLAT:??_C@_05HNCIIKBA@usage?$AA@
	DQ	FLAT:??_C@_0BG@NBIOKOFO@?5Afficher?5l?8aide?5lua?4?$AA@
	DQ	FLAT:??_C@_07CPCPJPKL@version?$AA@
	DQ	FLAT:??_C@_0CE@PGJELJLM@?5Affiche?5le?5num?$KI?$KGro?5de?5version?5l@
	DQ	FLAT:??_C@_06GDLLDIBI@xpcall?$AA@
	DQ	FLAT:??_C@_0NI@EGNKKADN@?5Et?5pcall?5F?0?5ARG1?0?4?4?4?$CJ?5similaire@
	DQ	FLAT:??_C@_05PJMKFLDO@ztest?$AA@
	DQ	FLAT:??_C@_0BC@OHKCJLJF@?5Pas?5de?5document?4?$AA@
base_funcs_note_eng DQ FLAT:??_C@_06GMEIIFFN@assert?$AA@
	DQ	FLAT:??_C@_0PL@PPGPJAOF@?5If?5the?5value?5of?5the?5parameter?5V@
	DQ	FLAT:??_C@_07DBBPHNDK@authors?$AA@
	DQ	FLAT:??_C@_0CL@EGPKEPDF@?5Display?5Lua?5core?5library?5softwa@
	DQ	FLAT:??_C@_0P@CKFEAJJE@collectgarbage?$AA@
	DQ	FLAT:??_C@_0CLG@MHPOFKFP@?5Garbage?5collection?5?6?5?$CCstop?$CC?3sto@
	DQ	FLAT:??_C@_05MEHLAELG@clear?$AA@
	DQ	FLAT:??_C@_0CD@GIFDFOKH@?5Clear?5the?5current?5screen?5conten@
	DQ	FLAT:??_C@_03LCPHGAHP@cls?$AA@
	DQ	FLAT:??_C@_0DM@FOIOOHIH@?5Clear?5the?5contents?5of?5the?5curre@
	DQ	FLAT:??_C@_06ONNDGCDK@dofile?$AA@
	DQ	FLAT:??_C@_0EJ@DGJFFBHF@?5Open?5the?5file?5with?5the?5name?5and@
	DQ	FLAT:??_C@_05KKCIMGE@error?$AA@
	DQ	FLAT:??_C@_0FC@EOKDBHAL@?5Terminates?5the?5protected?5functi@
	DQ	FLAT:??_C@_04MKNBDEPB@exit?$AA@
	DQ	FLAT:??_C@_0BD@PJKNDGCE@?5Exit?5environment?4?$AA@
	DQ	FLAT:??_C@_06EDAGHKOI@gcinfo?$AA@
	DQ	FLAT:??_C@_0BF@MHOHDPLO@?5Get?5GC?5information?4?$AA@
	DQ	FLAT:??_C@_0N@LGLOEPAG@getmetatable?$AA@
	DQ	FLAT:??_C@_0LO@DNFGBCFA@?5If?5the?5object?5does?5not?5have?5a?5m@
	DQ	FLAT:??_C@_04PCJFHION@help?$AA@
	DQ	FLAT:??_C@_0P@LLHOPFNO@?5Display?5help?4?$AA@
	DQ	FLAT:??_C@_06MGIEFEAJ@ipairs?$AA@
	DQ	FLAT:??_C@_0KM@JGBEJALH@?5Returns?5three?5values?3?5the?5itera@
	DQ	FLAT:??_C@_08BNNFLGCJ@loadfile?$AA@
	DQ	FLAT:??_C@_0FN@KPBHGFLD@?5Gets?5the?5code?5block?5from?5the?5fi@
	DQ	FLAT:??_C@_04EONOHKEP@load?$AA@
	DQ	FLAT:??_C@_0CJJ@GDHFJCG@?5Gets?5a?5block?5of?5code?5fragments?5@
	DQ	FLAT:??_C@_0L@BBBJLLLK@loadstring?$AA@
	DQ	FLAT:??_C@_0DI@GMENKGGP@?5Like?5load?0?5it?8s?5just?5getting?5co@
	DQ	FLAT:??_C@_04CJGEDOF@next?$AA@
	DQ	FLAT:??_C@_0DG@HFJGEFJL@?5Returns?5the?5next?5key?5key?5pair?5i@
	DQ	FLAT:??_C@_05JAJCNIIJ@pcall?$AA@
	DQ	FLAT:??_C@_0BCK@BOCGOANJ@?5Call?5the?5incoming?5function?5in?5p@
	DQ	FLAT:??_C@_05IJDJACGD@print?$AA@
	DQ	FLAT:??_C@_0IK@GDKDFCKG@?5As?5a?5tool?5for?5quickly?5looking?5a@
	DQ	FLAT:??_C@_08LCBKMMAG@rawequal?$AA@
	DQ	FLAT:??_C@_0LF@PKNDHPCC@?5Functions?5that?5use?5raw?5as?5a?5pre@
	DQ	FLAT:??_C@_06DCIAHLCA@rawget?$AA@
	DQ	FLAT:??_C@_0HO@HGCBPGHB@?5Gets?5the?5associated?5value?5of?5th@
	DQ	FLAT:??_C@_06ONPLLLOI@rawset?$AA@
	DQ	FLAT:??_C@_0JE@BFCHJBJB@?5Set?5the?5value?5of?5table?$FLindex?$FN?5t@
	DQ	FLAT:??_C@_06LGNCCACI@select?$AA@
	DQ	FLAT:??_C@_0PD@CBLGHCJO@?5Index?5can?5be?5a?5number?5or?5charac@
	DQ	FLAT:??_C@_0N@MCAAIDEK@setmetatable?$AA@
	DQ	FLAT:??_C@_0PO@NGGJNABH@?5Give?5the?5?$CCtable?$CC?5to?5associated?5@
	DQ	FLAT:??_C@_08JOIMPOJO@tonumber?$AA@
	DQ	FLAT:??_C@_0BFM@CFFEGNIJ@?5Try?5converting?5e?5?$CIfirst?5paramet@
	DQ	FLAT:??_C@_08FNIIFOJC@tostring?$AA@
	DQ	FLAT:??_C@_0BBB@PJNMCJFP@?5Converts?5any?5type?5of?5value?5to?5t@
	DQ	FLAT:??_C@_04GPMDFGEJ@type?$AA@
	DQ	FLAT:??_C@_0LC@DPMGNINL@?5Returns?5the?5type?5of?5v?0?5and?5the?5@
	DQ	FLAT:??_C@_06FIONAGJL@unpack?$AA@
	DQ	FLAT:??_C@_0GO@DDDBPCFJ@Returns?5the?5value?5of?5each?5domain@
	DQ	FLAT:??_C@_05HNCIIKBA@usage?$AA@
	DQ	FLAT:??_C@_0BD@GMPIGENL@?5Display?5Lua?5help?4?$AA@
	DQ	FLAT:??_C@_07CPCPJPKL@version?$AA@
	DQ	FLAT:??_C@_0CB@NHLIKOMI@?5Display?5the?5Lua?5version?5number?4@
	DQ	FLAT:??_C@_06GDLLDIBI@xpcall?$AA@
	DQ	FLAT:??_C@_0OE@KLGOIKF@?5Similar?5to?5pcall?5?$CIF?0?5arg1?0?4?4?4?$CJ?4@
	DQ	FLAT:??_C@_05PJMKFLDO@ztest?$AA@
	DQ	FLAT:??_C@_0O@KFENAANH@?5No?5document?4?$AA@
CONST	ENDS
;	COMDAT ??_C@_08FNIIFOJC@tostring?$AA@
CONST	SEGMENT
??_C@_08FNIIFOJC@tostring?$AA@ DB 'tostring', 00H	; `string'
CONST	ENDS
PUBLIC	luaB_print_spec
PUBLIC	luaopen_base
PUBLIC	??_C@_0CL@KMHHCBJA@?8tostring?8?5must?5return?5a?5string?5@ ; `string'
PUBLIC	??_C@_01GPOEFGEJ@?7?$AA@			; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_06IOBDPLFO@?5?$AM?6?$AN?7?$AL?$AA@	; `string'
PUBLIC	??_C@_0BC@GGLHLOMM@base?5out?5of?5range?$AA@	; `string'
PUBLIC	??_C@_0M@OKDMMFBL@__metatable?$AA@		; `string'
PUBLIC	??_C@_0BG@HDIIKINN@nil?5or?5table?5expected?$AA@ ; `string'
PUBLIC	??_C@_0CE@LJKICCEL@cannot?5change?5a?5protected?5metata@ ; `string'
PUBLIC	??_C@_0BJ@DDKMCJJM@table?5or?5string?5expected?$AA@ ; `string'
PUBLIC	??_C@_0P@PDHEKNMA@value?5expected?$AA@		; `string'
PUBLIC	??_C@_07HJHPCFBM@__pairs?$AA@			; `string'
PUBLIC	??_C@_08JMAMPABE@__ipairs?$AA@			; `string'
PUBLIC	??_C@_0BK@NJPFPDBN@too?5many?5nested?5functions?$AA@ ; `string'
PUBLIC	??_C@_0CF@IPNALDCD@reader?5function?5must?5return?5a?5st@ ; `string'
PUBLIC	??_C@_02LOIFFB@bt?$AA@				; `string'
PUBLIC	??_C@_07JEBBFCAN@?$DN?$CIload?$CJ?$AA@		; `string'
PUBLIC	??_C@_0BC@ONMFJPBH@assertion?5failed?$CB?$AA@	; `string'
PUBLIC	??_C@_0BD@ILOGJALA@index?5out?5of?5range?$AA@	; `string'
PUBLIC	??_C@_0M@PBPDJEBJ@Lua?5spq?51?41?$AA@		; `string'
PUBLIC	??_C@_0BDD@BBDJGOCB@usage?3?5?$CFs?5?$FLoptions?$FN?5?$FLscript?5?$FLarg@ ; `string'
PUBLIC	??_C@_0BG@HFJBOPML@This?5is?5a?5easter?5egg?4?$AA@ ; `string'
PUBLIC	??_C@_0BK@EADLKGKP@Easter?5egg?5author?3Q?4?5John?$AA@ ; `string'
PUBLIC	??_C@_0DI@IIMDNMFJ@R?4?5Ierusalimschy?0?5L?4?5H?4?5de?5Figue@ ; `string'
PUBLIC	??_C@_0BF@FOKLKONM@Functions?5size?5is?3?$CFd?$AA@ ; `string'
PUBLIC	??_C@_0O@JIOMGDOO@Lua?5spq?51?41?41?$AA@	; `string'
PUBLIC	__real@3f50000000000000
EXTRN	__imp_isdigit:PROC
EXTRN	__imp_isalnum:PROC
EXTRN	__imp_toupper:PROC
EXTRN	__imp_strspn:PROC
EXTRN	__imp_GetStdHandle:PROC
EXTRN	__imp_GetSystemDefaultLangID:PROC
EXTRN	__imp_FillConsoleOutputCharacterA:PROC
EXTRN	__imp_FillConsoleOutputAttribute:PROC
EXTRN	__imp_GetConsoleScreenBufferInfo:PROC
EXTRN	__imp_SetConsoleCursorPosition:PROC
EXTRN	__imp_exit:PROC
EXTRN	__imp___iob_func:PROC
EXTRN	__imp_fflush:PROC
EXTRN	__imp_fprintf:PROC
EXTRN	__imp_fputs:PROC
EXTRN	__imp_fwrite:PROC
EXTRN	__imp_printf:PROC
EXTRN	__imp_sprintf_s:PROC
EXTRN	lua_gettop:PROC
EXTRN	lua_settop:PROC
EXTRN	lua_pushvalue:PROC
EXTRN	lua_rotate:PROC
EXTRN	lua_copy:PROC
EXTRN	lua_isstring:PROC
EXTRN	lua_type:PROC
EXTRN	lua_typename:PROC
EXTRN	lua_toboolean:PROC
EXTRN	lua_tolstring:PROC
EXTRN	lua_rawlen:PROC
EXTRN	lua_rawequal:PROC
EXTRN	lua_pushnil:PROC
EXTRN	lua_pushnumber:PROC
EXTRN	lua_pushinteger:PROC
EXTRN	lua_pushstring:PROC
EXTRN	lua_pushcclosure:PROC
EXTRN	lua_pushboolean:PROC
EXTRN	lua_getglobal:PROC
EXTRN	lua_geti:PROC
EXTRN	lua_rawget:PROC
EXTRN	lua_rawgeti:PROC
EXTRN	lua_getmetatable:PROC
EXTRN	lua_setfield:PROC
EXTRN	lua_rawset:PROC
EXTRN	lua_setmetatable:PROC
EXTRN	lua_callk:PROC
EXTRN	lua_pcallk:PROC
EXTRN	lua_load:PROC
EXTRN	lua_gc:PROC
EXTRN	lua_error:PROC
EXTRN	lua_next:PROC
EXTRN	lua_concat:PROC
EXTRN	lua_stringtonumber:PROC
EXTRN	lua_setupvalue:PROC
EXTRN	luaL_getmetafield:PROC
EXTRN	luaL_tolstring:PROC
EXTRN	luaL_argerror:PROC
EXTRN	luaL_optlstring:PROC
EXTRN	luaL_checkinteger:PROC
EXTRN	luaL_optinteger:PROC
EXTRN	luaL_checkstack:PROC
EXTRN	luaL_checktype:PROC
EXTRN	luaL_checkany:PROC
EXTRN	luaL_where:PROC
EXTRN	luaL_error:PROC
EXTRN	luaL_checkoption:PROC
EXTRN	luaL_loadfilex:PROC
EXTRN	luaL_loadbufferx:PROC
EXTRN	luaL_setfuncs:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_authors DD imagerel $LN6
	DD	imagerel $LN6+76
	DD	imagerel $unwind$luaB_authors
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_clear DD imagerel $LN4
	DD	imagerel $LN4+16
	DD	imagerel $unwind$luaB_clear
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_exit DD imagerel $LN4
	DD	imagerel $LN4+13
	DD	imagerel $unwind$luaB_exit
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_getDescription DD imagerel $LN17
	DD	imagerel $LN17+133
	DD	imagerel $unwind$luaB_getDescription
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$luaB_getDescription DD imagerel $LN17+133
	DD	imagerel $LN17+205
	DD	imagerel $chain$0$luaB_getDescription
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$luaB_getDescription DD imagerel $LN17+205
	DD	imagerel $LN17+213
	DD	imagerel $chain$1$luaB_getDescription
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_help DD imagerel $LN45
	DD	imagerel $LN45+560
	DD	imagerel $unwind$luaB_help
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_usage DD imagerel $LN6
	DD	imagerel $LN6+57
	DD	imagerel $unwind$luaB_usage
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_version DD imagerel $LN6
	DD	imagerel $LN6+76
	DD	imagerel $unwind$luaB_version
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_ztest DD imagerel $LN4
	DD	imagerel $LN4+16
	DD	imagerel $unwind$luaB_ztest
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_print_spec DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$luaB_print_spec
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaopen_base DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$luaopen_base
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_print DD imagerel luaB_print
	DD	imagerel luaB_print+310
	DD	imagerel $unwind$luaB_print
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$b_str2int DD imagerel b_str2int
	DD	imagerel b_str2int+217
	DD	imagerel $unwind$b_str2int
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_tonumber DD imagerel luaB_tonumber
	DD	imagerel luaB_tonumber+141
	DD	imagerel $unwind$luaB_tonumber
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$luaB_tonumber DD imagerel luaB_tonumber+141
	DD	imagerel luaB_tonumber+278
	DD	imagerel $chain$1$luaB_tonumber
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$luaB_tonumber DD imagerel luaB_tonumber+278
	DD	imagerel luaB_tonumber+302
	DD	imagerel $chain$2$luaB_tonumber
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_error DD imagerel luaB_error
	DD	imagerel luaB_error+118
	DD	imagerel $unwind$luaB_error
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_getmetatable DD imagerel luaB_getmetatable
	DD	imagerel luaB_getmetatable+83
	DD	imagerel $unwind$luaB_getmetatable
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_setmetatable DD imagerel luaB_setmetatable
	DD	imagerel luaB_setmetatable+159
	DD	imagerel $unwind$luaB_setmetatable
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_rawequal DD imagerel luaB_rawequal
	DD	imagerel luaB_rawequal+70
	DD	imagerel $unwind$luaB_rawequal
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_rawlen DD imagerel luaB_rawlen
	DD	imagerel luaB_rawlen+82
	DD	imagerel $unwind$luaB_rawlen
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_rawget DD imagerel luaB_rawget
	DD	imagerel luaB_rawget+73
	DD	imagerel $unwind$luaB_rawget
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_rawset DD imagerel luaB_rawset
	DD	imagerel luaB_rawset+86
	DD	imagerel $unwind$luaB_rawset
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_collectgarbage DD imagerel luaB_collectgarbage
	DD	imagerel luaB_collectgarbage+196
	DD	imagerel $unwind$luaB_collectgarbage
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_type DD imagerel luaB_type
	DD	imagerel luaB_type+85
	DD	imagerel $unwind$luaB_type
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$pairsmeta DD imagerel pairsmeta
	DD	imagerel pairsmeta+162
	DD	imagerel $unwind$pairsmeta
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_next DD imagerel luaB_next
	DD	imagerel luaB_next+83
	DD	imagerel $unwind$luaB_next
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_pairs DD imagerel luaB_pairs
	DD	imagerel luaB_pairs+141
	DD	imagerel $unwind$luaB_pairs
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ipairsaux DD imagerel ipairsaux
	DD	imagerel ipairsaux+76
	DD	imagerel $unwind$ipairsaux
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_ipairs DD imagerel luaB_ipairs
	DD	imagerel luaB_ipairs+143
	DD	imagerel $unwind$luaB_ipairs
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$load_aux DD imagerel load_aux
	DD	imagerel load_aux+103
	DD	imagerel $unwind$load_aux
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_loadfile DD imagerel luaB_loadfile
	DD	imagerel luaB_loadfile+222
	DD	imagerel $unwind$luaB_loadfile
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$generic_reader DD imagerel generic_reader
	DD	imagerel generic_reader+201
	DD	imagerel $unwind$generic_reader
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_load DD imagerel luaB_load
	DD	imagerel luaB_load+317
	DD	imagerel $unwind$luaB_load
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$dofilecont DD imagerel dofilecont
	DD	imagerel dofilecont+16
	DD	imagerel $unwind$dofilecont
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_dofile DD imagerel luaB_dofile
	DD	imagerel luaB_dofile+127
	DD	imagerel $unwind$luaB_dofile
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_assert DD imagerel luaB_assert
	DD	imagerel luaB_assert+116
	DD	imagerel $unwind$luaB_assert
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_select DD imagerel luaB_select
	DD	imagerel luaB_select+172
	DD	imagerel $unwind$luaB_select
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$finishpcall DD imagerel finishpcall
	DD	imagerel finishpcall+75
	DD	imagerel $unwind$finishpcall
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_pcall DD imagerel luaB_pcall
	DD	imagerel luaB_pcall+144
	DD	imagerel $unwind$luaB_pcall
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_xpcall DD imagerel luaB_xpcall
	DD	imagerel luaB_xpcall+185
	DD	imagerel $unwind$luaB_xpcall
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_tostring DD imagerel luaB_tostring
	DD	imagerel luaB_tostring+45
	DD	imagerel $unwind$luaB_tostring
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$clrscr DD imagerel clrscr
	DD	imagerel clrscr+184
	DD	imagerel $unwind$clrscr
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$print_usage DD imagerel print_usage
	DD	imagerel print_usage+45
	DD	imagerel $unwind$print_usage
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$Test DD	imagerel Test
	DD	imagerel Test+133
	DD	imagerel $unwind$Test
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaB_print_spec3 DD imagerel luaB_print_spec3
	DD	imagerel luaB_print_spec3+43
	DD	imagerel $unwind$luaB_print_spec3
pdata	ENDS
;	COMDAT __real@3f50000000000000
CONST	SEGMENT
__real@3f50000000000000 DQ 03f50000000000000r	; 0.000976563
CONST	ENDS
;	COMDAT ??_C@_0O@JIOMGDOO@Lua?5spq?51?41?41?$AA@
CONST	SEGMENT
??_C@_0O@JIOMGDOO@Lua?5spq?51?41?41?$AA@ DB 'Lua spq 1.1.1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FOKLKONM@Functions?5size?5is?3?$CFd?$AA@
CONST	SEGMENT
??_C@_0BF@FOKLKONM@Functions?5size?5is?3?$CFd?$AA@ DB 'Functions size is:'
	DB	'%d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@IIMDNMFJ@R?4?5Ierusalimschy?0?5L?4?5H?4?5de?5Figue@
CONST	SEGMENT
??_C@_0DI@IIMDNMFJ@R?4?5Ierusalimschy?0?5L?4?5H?4?5de?5Figue@ DB 'R. Ieru'
	DB	'salimschy, L. H. de Figueiredo, W. Celes,Q. John', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EADLKGKP@Easter?5egg?5author?3Q?4?5John?$AA@
CONST	SEGMENT
??_C@_0BK@EADLKGKP@Easter?5egg?5author?3Q?4?5John?$AA@ DB 'Easter egg aut'
	DB	'hor:Q. John', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HFJBOPML@This?5is?5a?5easter?5egg?4?$AA@
CONST	SEGMENT
??_C@_0BG@HFJBOPML@This?5is?5a?5easter?5egg?4?$AA@ DB 'This is a easter e'
	DB	'gg.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BDD@BBDJGOCB@usage?3?5?$CFs?5?$FLoptions?$FN?5?$FLscript?5?$FLarg@
CONST	SEGMENT
??_C@_0BDD@BBDJGOCB@usage?3?5?$CFs?5?$FLoptions?$FN?5?$FLscript?5?$FLarg@ DB 'u'
	DB	'sage: %s [options] [script [args]].', 0aH, 'Available options'
	DB	' are:', 0aH, '  -e stat  execute string ''stat''', 0aH, '  -l'
	DB	' name  require library ''name''', 0aH, '  -i       enter inte'
	DB	'ractive mode after executing ''script''', 0aH, '  -v       sh'
	DB	'ow version information', 0aH, '  --       stop handling optio'
	DB	'ns', 0aH, '  -        execute stdin and stop handling options'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PBPDJEBJ@Lua?5spq?51?41?$AA@
CONST	SEGMENT
??_C@_0M@PBPDJEBJ@Lua?5spq?51?41?$AA@ DB 'Lua spq 1.1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ILOGJALA@index?5out?5of?5range?$AA@
CONST	SEGMENT
??_C@_0BD@ILOGJALA@index?5out?5of?5range?$AA@ DB 'index out of range', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ONMFJPBH@assertion?5failed?$CB?$AA@
CONST	SEGMENT
??_C@_0BC@ONMFJPBH@assertion?5failed?$CB?$AA@ DB 'assertion failed!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JEBBFCAN@?$DN?$CIload?$CJ?$AA@
CONST	SEGMENT
??_C@_07JEBBFCAN@?$DN?$CIload?$CJ?$AA@ DB '=(load)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02LOIFFB@bt?$AA@
CONST	SEGMENT
??_C@_02LOIFFB@bt?$AA@ DB 'bt', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@IPNALDCD@reader?5function?5must?5return?5a?5st@
CONST	SEGMENT
??_C@_0CF@IPNALDCD@reader?5function?5must?5return?5a?5st@ DB 'reader func'
	DB	'tion must return a string', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NJPFPDBN@too?5many?5nested?5functions?$AA@
CONST	SEGMENT
??_C@_0BK@NJPFPDBN@too?5many?5nested?5functions?$AA@ DB 'too many nested '
	DB	'functions', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08JMAMPABE@__ipairs?$AA@
CONST	SEGMENT
??_C@_08JMAMPABE@__ipairs?$AA@ DB '__ipairs', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07HJHPCFBM@__pairs?$AA@
CONST	SEGMENT
??_C@_07HJHPCFBM@__pairs?$AA@ DB '__pairs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PDHEKNMA@value?5expected?$AA@
CONST	SEGMENT
??_C@_0P@PDHEKNMA@value?5expected?$AA@ DB 'value expected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DDKMCJJM@table?5or?5string?5expected?$AA@
CONST	SEGMENT
??_C@_0BJ@DDKMCJJM@table?5or?5string?5expected?$AA@ DB 'table or string e'
	DB	'xpected', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@LJKICCEL@cannot?5change?5a?5protected?5metata@
CONST	SEGMENT
??_C@_0CE@LJKICCEL@cannot?5change?5a?5protected?5metata@ DB 'cannot chang'
	DB	'e a protected metatable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HDIIKINN@nil?5or?5table?5expected?$AA@
CONST	SEGMENT
??_C@_0BG@HDIIKINN@nil?5or?5table?5expected?$AA@ DB 'nil or table expecte'
	DB	'd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OKDMMFBL@__metatable?$AA@
CONST	SEGMENT
??_C@_0M@OKDMMFBL@__metatable?$AA@ DB '__metatable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GGLHLOMM@base?5out?5of?5range?$AA@
CONST	SEGMENT
??_C@_0BC@GGLHLOMM@base?5out?5of?5range?$AA@ DB 'base out of range', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06IOBDPLFO@?5?$AM?6?$AN?7?$AL?$AA@
CONST	SEGMENT
??_C@_06IOBDPLFO@?5?$AM?6?$AN?7?$AL?$AA@ DB ' ', 0cH, 0aH, 0dH, 09H, 0bH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01GPOEFGEJ@?7?$AA@
CONST	SEGMENT
??_C@_01GPOEFGEJ@?7?$AA@ DB 09H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@KMHHCBJA@?8tostring?8?5must?5return?5a?5string?5@
CONST	SEGMENT
??_C@_0CL@KMHHCBJA@?8tostring?8?5must?5return?5a?5string?5@ DB '''tostrin'
	DB	'g'' must return a string to ''print''', 00H	; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_print_spec3 DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$Test DD	020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$print_usage DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$clrscr DD 041919H
	DD	0e640aH
	DD	07006b20aH
	DD	imagerel __GSHandlerCheck
	DD	050H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_tostring DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_xpcall DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_pcall DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$finishpcall DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_select DD 066501H
	DD	063465H
	DD	07640aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_assert DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_dofile DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$dofilecont DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_load DD 081201H
	DD	0c5412H
	DD	0a3412H
	DD	0e00e5212H
	DD	0600b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$generic_reader DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_loadfile DD 0a1a01H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0e016321aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$load_aux DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_ipairs DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ipairsaux DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_pairs DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_next DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$pairsmeta DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_type DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_collectgarbage DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_rawset DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_rawget DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_rawlen DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_rawequal DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_setmetatable DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_getmetatable DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_error DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$luaB_tonumber DD 021H
	DD	imagerel luaB_tonumber
	DD	imagerel luaB_tonumber+141
	DD	imagerel $unwind$luaB_tonumber
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$luaB_tonumber DD 041321H
	DD	097413H
	DD	066405H
	DD	imagerel luaB_tonumber
	DD	imagerel luaB_tonumber+141
	DD	imagerel $unwind$luaB_tonumber
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_tonumber DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$b_str2int DD 0a1a01H
	DD	09741aH
	DD	08641aH
	DD	07541aH
	DD	06341aH
	DD	0e016321aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_print DD 081201H
	DD	0c5412H
	DD	0a3412H
	DD	0e00e5212H
	DD	0600b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaopen_base DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_print_spec DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_ztest DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_version DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_usage DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_help DD 072419H
	DD	0186412H
	DD	0173412H
	DD	0140112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck
	DD	090H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$luaB_getDescription DD 021H
	DD	imagerel $LN17
	DD	imagerel $LN17+133
	DD	imagerel $unwind$luaB_getDescription
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$luaB_getDescription DD 020521H
	DD	063405H
	DD	imagerel $LN17
	DD	imagerel $LN17+133
	DD	imagerel $unwind$luaB_getDescription
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_getDescription DD 020601H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_exit DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_clear DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaB_authors DD 020601H
	DD	030023206H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_print_spec3
_TEXT	SEGMENT
cc1$ = 48
cc2$ = 56
luaB_print_spec3 PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 857
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b da	 mov	 rbx, rdx
; Line 858
  00009	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_printf
; Line 859
  0000f	48 8b cb	 mov	 rcx, rbx
  00012	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_printf
; Line 860
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
; Line 861
  0001f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00023	5b		 pop	 rbx
; Line 860
  00024	48 ff 25 00 00
	00 00		 rex_jmp QWORD PTR __imp_printf
luaB_print_spec3 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT Test
_TEXT	SEGMENT
L$ = 48
Test	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 730
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
; Line 732
  00009	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@HFJBOPML@This?5is?5a?5easter?5egg?4?$AA@
  00016	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
  0001a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputs
  00020	ba fe ff ff ff	 mov	 edx, -2
  00025	48 8b cb	 mov	 rcx, rbx
  00028	e8 00 00 00 00	 call	 lua_settop
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  0003a	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
  0003e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputs
; Line 734
  00044	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@EADLKGKP@Easter?5egg?5author?3Q?4?5John?$AA@
  00051	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
  00055	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputs
  0005b	ba fe ff ff ff	 mov	 edx, -2
  00060	48 8b cb	 mov	 rcx, rbx
  00063	e8 00 00 00 00	 call	 lua_settop
  00068	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  0006e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  00075	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
; Line 735
  00079	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007d	5b		 pop	 rbx
; Line 734
  0007e	48 ff 25 00 00
	00 00		 rex_jmp QWORD PTR __imp_fputs
Test	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT print_usage
_TEXT	SEGMENT
f$ = 48
print_usage PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 713
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 724
  00004	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR progname
  0000b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BDD@BBDJGOCB@usage?3?5?$CFs?5?$FLoptions?$FN?5?$FLscript?5?$FLarg@
  00012	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fprintf
; Line 725
  00018	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  0001e	48 8d 48 60	 lea	 rcx, QWORD PTR [rax+96]
; Line 726
  00022	48 83 c4 28	 add	 rsp, 40			; 00000028H
; Line 725
  00026	48 ff 25 00 00
	00 00		 rex_jmp QWORD PTR __imp_fflush
print_usage ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT clrscr
_TEXT	SEGMENT
coordScreen$ = 48
cCharsWritten$ = 52
csbi$ = 56
__$ArrayPad$ = 80
clrscr	PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 653
  00000	48 89 74 24 08	 mov	 QWORD PTR [rsp+8], rsi
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00011	48 33 c4	 xor	 rax, rsp
  00014	48 89 44 24 50	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
; Line 654
  00019	33 c0		 xor	 eax, eax
; Line 658
  0001b	b9 f5 ff ff ff	 mov	 ecx, -11		; fffffff5H
  00020	89 44 24 30	 mov	 DWORD PTR coordScreen$[rsp], eax
  00024	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetStdHandle
; Line 660
  0002a	48 8d 54 24 38	 lea	 rdx, QWORD PTR csbi$[rsp]
  0002f	48 8b c8	 mov	 rcx, rax
  00032	48 8b f0	 mov	 rsi, rax
  00035	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetConsoleScreenBufferInfo
; Line 661
  0003b	0f bf 4c 24 38	 movsx	 ecx, WORD PTR csbi$[rsp]
  00040	0f bf 7c 24 3a	 movsx	 edi, WORD PTR csbi$[rsp+2]
  00045	0f af f9	 imul	 edi, ecx
; Line 662
  00048	44 8b 4c 24 30	 mov	 r9d, DWORD PTR coordScreen$[rsp]
  0004d	48 8d 44 24 34	 lea	 rax, QWORD PTR cCharsWritten$[rsp]
  00052	b2 20		 mov	 dl, 32			; 00000020H
  00054	44 8b c7	 mov	 r8d, edi
  00057	48 8b ce	 mov	 rcx, rsi
  0005a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0005f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_FillConsoleOutputCharacterA
; Line 663
  00065	48 8d 54 24 38	 lea	 rdx, QWORD PTR csbi$[rsp]
  0006a	48 8b ce	 mov	 rcx, rsi
  0006d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetConsoleScreenBufferInfo
; Line 664
  00073	44 8b 4c 24 30	 mov	 r9d, DWORD PTR coordScreen$[rsp]
  00078	0f b7 54 24 40	 movzx	 edx, WORD PTR csbi$[rsp+8]
  0007d	48 8d 44 24 34	 lea	 rax, QWORD PTR cCharsWritten$[rsp]
  00082	44 8b c7	 mov	 r8d, edi
  00085	48 8b ce	 mov	 rcx, rsi
  00088	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0008d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_FillConsoleOutputAttribute
; Line 665
  00093	8b 54 24 30	 mov	 edx, DWORD PTR coordScreen$[rsp]
  00097	48 8b ce	 mov	 rcx, rsi
  0009a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetConsoleCursorPosition
; Line 666
  000a0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000a5	48 33 cc	 xor	 rcx, rsp
  000a8	e8 00 00 00 00	 call	 __security_check_cookie
  000ad	48 8b 74 24 70	 mov	 rsi, QWORD PTR [rsp+112]
  000b2	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000b6	5f		 pop	 rdi
  000b7	c3		 ret	 0
clrscr	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_tostring
_TEXT	SEGMENT
L$ = 48
luaB_tostring PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 449
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 450
  00006	ba 01 00 00 00	 mov	 edx, 1
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 luaL_checkany
; Line 451
  00013	45 33 c0	 xor	 r8d, r8d
  00016	48 8b cb	 mov	 rcx, rbx
  00019	41 8d 50 01	 lea	 edx, QWORD PTR [r8+1]
  0001d	e8 00 00 00 00	 call	 luaL_tolstring
; Line 452
  00022	b8 01 00 00 00	 mov	 eax, 1
; Line 453
  00027	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002b	5b		 pop	 rbx
  0002c	c3		 ret	 0
luaB_tostring ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_xpcall
_TEXT	SEGMENT
L$ = 64
luaB_xpcall PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 437
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b f9	 mov	 rdi, rcx
; Line 439
  0000d	e8 00 00 00 00	 call	 lua_gettop
; Line 440
  00012	ba 02 00 00 00	 mov	 edx, 2
  00017	44 8d 42 04	 lea	 r8d, QWORD PTR [rdx+4]
  0001b	48 8b cf	 mov	 rcx, rdi
  0001e	8b d8		 mov	 ebx, eax
  00020	e8 00 00 00 00	 call	 luaL_checktype
; Line 441
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b cf	 mov	 rcx, rdi
  0002d	e8 00 00 00 00	 call	 lua_pushboolean
; Line 442
  00032	ba 01 00 00 00	 mov	 edx, 1
  00037	48 8b cf	 mov	 rcx, rdi
  0003a	e8 00 00 00 00	 call	 lua_pushvalue
; Line 443
  0003f	ba 03 00 00 00	 mov	 edx, 3
  00044	48 8b cf	 mov	 rcx, rdi
  00047	44 8d 42 ff	 lea	 r8d, QWORD PTR [rdx-1]
  0004b	e8 00 00 00 00	 call	 lua_rotate
; Line 444
  00050	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:finishpcall
  00057	8d 53 fe	 lea	 edx, DWORD PTR [rbx-2]
  0005a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005f	41 b9 02 00 00
	00		 mov	 r9d, 2
  00065	41 83 c8 ff	 or	 r8d, -1
  00069	48 8b cf	 mov	 rcx, rdi
  0006c	48 c7 44 24 20
	02 00 00 00	 mov	 QWORD PTR [rsp+32], 2
  00075	e8 00 00 00 00	 call	 lua_pcallk
; Line 445
  0007a	48 8b cf	 mov	 rcx, rdi
  0007d	83 f8 01	 cmp	 eax, 1
  00080	76 24		 jbe	 SHORT $LN4@luaB_xpcal
  00082	33 d2		 xor	 edx, edx
  00084	e8 00 00 00 00	 call	 lua_pushboolean
  00089	ba fe ff ff ff	 mov	 edx, -2
  0008e	48 8b cf	 mov	 rcx, rdi
  00091	e8 00 00 00 00	 call	 lua_pushvalue
  00096	b8 02 00 00 00	 mov	 eax, 2
; Line 446
  0009b	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000a0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
; Line 445
$LN4@luaB_xpcal:
  000a6	e8 00 00 00 00	 call	 lua_gettop
; Line 446
  000ab	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000b0	83 e8 02	 sub	 eax, 2
  000b3	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b7	5f		 pop	 rdi
  000b8	c3		 ret	 0
luaB_xpcall ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_pcall
_TEXT	SEGMENT
L$ = 64
luaB_pcall PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 422
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 424
  00006	ba 01 00 00 00	 mov	 edx, 1
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 luaL_checkany
; Line 425
  00013	ba 01 00 00 00	 mov	 edx, 1
  00018	48 8b cb	 mov	 rcx, rbx
  0001b	e8 00 00 00 00	 call	 lua_pushboolean
; Line 426
  00020	ba 01 00 00 00	 mov	 edx, 1
  00025	48 8b cb	 mov	 rcx, rbx
  00028	44 8b c2	 mov	 r8d, edx
  0002b	e8 00 00 00 00	 call	 lua_rotate
; Line 427
  00030	48 8b cb	 mov	 rcx, rbx
  00033	e8 00 00 00 00	 call	 lua_gettop
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:finishpcall
  0003f	45 33 c9	 xor	 r9d, r9d
  00042	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00047	8d 50 fe	 lea	 edx, DWORD PTR [rax-2]
  0004a	41 83 c8 ff	 or	 r8d, -1
  0004e	48 8b cb	 mov	 rcx, rbx
  00051	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0005a	e8 00 00 00 00	 call	 lua_pcallk
; Line 428
  0005f	48 8b cb	 mov	 rcx, rbx
  00062	83 f8 01	 cmp	 eax, 1
  00065	76 1f		 jbe	 SHORT $LN4@luaB_pcall
  00067	33 d2		 xor	 edx, edx
  00069	e8 00 00 00 00	 call	 lua_pushboolean
  0006e	ba fe ff ff ff	 mov	 edx, -2
  00073	48 8b cb	 mov	 rcx, rbx
  00076	e8 00 00 00 00	 call	 lua_pushvalue
  0007b	b8 02 00 00 00	 mov	 eax, 2
; Line 429
  00080	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00084	5b		 pop	 rbx
  00085	c3		 ret	 0
; Line 428
$LN4@luaB_pcall:
; Line 429
  00086	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008a	5b		 pop	 rbx
; Line 428
  0008b	e9 00 00 00 00	 jmp	 lua_gettop
luaB_pcall ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT finishpcall
_TEXT	SEGMENT
L$ = 48
status$ = 56
extra$ = 64
finishpcall PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 411
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	49 8b f8	 mov	 rdi, r8
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	83 fa 01	 cmp	 edx, 1
  00013	76 24		 jbe	 SHORT $LN2@finishpcal
; Line 413
  00015	33 d2		 xor	 edx, edx
  00017	e8 00 00 00 00	 call	 lua_pushboolean
; Line 414
  0001c	ba fe ff ff ff	 mov	 edx, -2
  00021	48 8b cb	 mov	 rcx, rbx
  00024	e8 00 00 00 00	 call	 lua_pushvalue
; Line 415
  00029	b8 02 00 00 00	 mov	 eax, 2
; Line 419
  0002e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
$LN2@finishpcal:
; Line 418
  00039	e8 00 00 00 00	 call	 lua_gettop
; Line 419
  0003e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00043	2b c7		 sub	 eax, edi
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
finishpcall ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_select
_TEXT	SEGMENT
L$ = 48
luaB_select PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 388
  00000	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b f1	 mov	 rsi, rcx
; Line 389
  0000d	e8 00 00 00 00	 call	 lua_gettop
; Line 390
  00012	ba 01 00 00 00	 mov	 edx, 1
  00017	48 8b ce	 mov	 rcx, rsi
  0001a	48 63 f8	 movsxd	 rdi, eax
  0001d	e8 00 00 00 00	 call	 lua_type
  00022	83 f8 04	 cmp	 eax, 4
  00025	75 31		 jne	 SHORT $LN5@luaB_selec
  00027	8d 50 fd	 lea	 edx, QWORD PTR [rax-3]
  0002a	45 33 c0	 xor	 r8d, r8d
  0002d	48 8b ce	 mov	 rcx, rsi
  00030	e8 00 00 00 00	 call	 lua_tolstring
  00035	80 38 23	 cmp	 BYTE PTR [rax], 35	; 00000023H
  00038	75 1e		 jne	 SHORT $LN5@luaB_selec
; Line 391
  0003a	8d 4f ff	 lea	 ecx, DWORD PTR [rdi-1]
  0003d	48 63 d1	 movsxd	 rdx, ecx
  00040	48 8b ce	 mov	 rcx, rsi
  00043	e8 00 00 00 00	 call	 lua_pushinteger
; Line 392
  00048	b8 01 00 00 00	 mov	 eax, 1
; Line 401
  0004d	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5f		 pop	 rdi
  00057	c3		 ret	 0
$LN5@luaB_selec:
; Line 395
  00058	ba 01 00 00 00	 mov	 edx, 1
  0005d	48 8b ce	 mov	 rcx, rsi
  00060	48 89 5c 24 30	 mov	 QWORD PTR [rsp+48], rbx
  00065	e8 00 00 00 00	 call	 luaL_checkinteger
  0006a	48 8b d8	 mov	 rbx, rax
; Line 396
  0006d	48 85 c0	 test	 rax, rax
  00070	79 05		 jns	 SHORT $LN3@luaB_selec
  00072	48 03 df	 add	 rbx, rdi
  00075	eb 07		 jmp	 SHORT $LN1@luaB_selec
$LN3@luaB_selec:
; Line 397
  00077	48 3b c7	 cmp	 rax, rdi
  0007a	48 0f 4f df	 cmovg	 rbx, rdi
$LN1@luaB_selec:
; Line 398
  0007e	48 83 fb 01	 cmp	 rbx, 1
  00082	7d 14		 jge	 SHORT $LN8@luaB_selec
  00084	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0BD@ILOGJALA@index?5out?5of?5range?$AA@
  0008b	ba 01 00 00 00	 mov	 edx, 1
  00090	48 8b ce	 mov	 rcx, rsi
  00093	e8 00 00 00 00	 call	 luaL_argerror
$LN8@luaB_selec:
; Line 401
  00098	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0009d	2b fb		 sub	 edi, ebx
  0009f	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000a4	8b c7		 mov	 eax, edi
  000a6	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
luaB_select ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_assert
_TEXT	SEGMENT
L$ = 48
luaB_assert PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 375
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 376
  00006	ba 01 00 00 00	 mov	 edx, 1
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 lua_toboolean
; Line 377
  00013	48 8b cb	 mov	 rcx, rbx
  00016	85 c0		 test	 eax, eax
  00018	74 0a		 je	 SHORT $LN2@luaB_asser
; Line 385
  0001a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001e	5b		 pop	 rbx
; Line 377
  0001f	e9 00 00 00 00	 jmp	 lua_gettop
$LN2@luaB_asser:
; Line 379
  00024	ba 01 00 00 00	 mov	 edx, 1
  00029	e8 00 00 00 00	 call	 luaL_checkany
; Line 380
  0002e	41 83 c8 ff	 or	 r8d, -1
  00032	48 8b cb	 mov	 rcx, rbx
  00035	41 8d 50 02	 lea	 edx, QWORD PTR [r8+2]
  00039	e8 00 00 00 00	 call	 lua_rotate
  0003e	ba fe ff ff ff	 mov	 edx, -2
  00043	48 8b cb	 mov	 rcx, rbx
  00046	e8 00 00 00 00	 call	 lua_settop
; Line 381
  0004b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@ONMFJPBH@assertion?5failed?$CB?$AA@
  00052	48 8b cb	 mov	 rcx, rbx
  00055	e8 00 00 00 00	 call	 lua_pushstring
; Line 382
  0005a	ba 01 00 00 00	 mov	 edx, 1
  0005f	48 8b cb	 mov	 rcx, rbx
  00062	e8 00 00 00 00	 call	 lua_settop
; Line 383
  00067	48 8b cb	 mov	 rcx, rbx
; Line 385
  0006a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006e	5b		 pop	 rbx
; Line 383
  0006f	e9 00 00 00 00	 jmp	 luaB_error
luaB_assert ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_dofile
_TEXT	SEGMENT
L$ = 64
luaB_dofile PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 365
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 366
  0000a	45 33 c9	 xor	 r9d, r9d
  0000d	45 33 c0	 xor	 r8d, r8d
  00010	48 8b f9	 mov	 rdi, rcx
  00013	41 8d 51 01	 lea	 edx, QWORD PTR [r9+1]
  00017	e8 00 00 00 00	 call	 luaL_optlstring
; Line 367
  0001c	ba 01 00 00 00	 mov	 edx, 1
  00021	48 8b cf	 mov	 rcx, rdi
  00024	48 8b d8	 mov	 rbx, rax
  00027	e8 00 00 00 00	 call	 lua_settop
; Line 368
  0002c	45 33 c0	 xor	 r8d, r8d
  0002f	48 8b d3	 mov	 rdx, rbx
  00032	48 8b cf	 mov	 rcx, rdi
  00035	e8 00 00 00 00	 call	 luaL_loadfilex
; Line 369
  0003a	48 8b cf	 mov	 rcx, rdi
  0003d	85 c0		 test	 eax, eax
  0003f	74 0f		 je	 SHORT $LN1@luaB_dofil
; Line 372
  00041	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
; Line 369
  0004b	e9 00 00 00 00	 jmp	 lua_error
$LN1@luaB_dofil:
; Line 370
  00050	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:dofilecont
  00057	45 33 c9	 xor	 r9d, r9d
  0005a	41 83 c8 ff	 or	 r8d, -1
  0005e	33 d2		 xor	 edx, edx
  00060	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00065	e8 00 00 00 00	 call	 lua_callk
; Line 371
  0006a	48 8b cf	 mov	 rcx, rdi
  0006d	e8 00 00 00 00	 call	 lua_gettop
; Line 372
  00072	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00077	ff c8		 dec	 eax
  00079	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007d	5f		 pop	 rdi
  0007e	c3		 ret	 0
luaB_dofile ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT dofilecont
_TEXT	SEGMENT
L$ = 48
d1$ = 56
d2$ = 64
dofilecont PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 359
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 361
  00004	e8 00 00 00 00	 call	 lua_gettop
  00009	ff c8		 dec	 eax
; Line 362
  0000b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000f	c3		 ret	 0
dofilecont ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_load
_TEXT	SEGMENT
L$ = 80
l$ = 88
luaB_load PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 337
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	41 56		 push	 r14
  0000e	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 340
  00012	4c 8d 44 24 58	 lea	 r8, QWORD PTR l$[rsp]
  00017	ba 01 00 00 00	 mov	 edx, 1
  0001c	48 8b f9	 mov	 rdi, rcx
  0001f	e8 00 00 00 00	 call	 lua_tolstring
; Line 341
  00024	45 33 c9	 xor	 r9d, r9d
  00027	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02LOIFFB@bt?$AA@
  0002e	41 8d 51 03	 lea	 edx, QWORD PTR [r9+3]
  00032	48 8b cf	 mov	 rcx, rdi
  00035	48 8b d8	 mov	 rbx, rax
  00038	e8 00 00 00 00	 call	 luaL_optlstring
; Line 342
  0003d	41 be 04 00 00
	00		 mov	 r14d, 4
  00043	48 8b cf	 mov	 rcx, rdi
  00046	41 8b d6	 mov	 edx, r14d
  00049	48 8b e8	 mov	 rbp, rax
  0004c	e8 00 00 00 00	 call	 lua_type
  00051	33 f6		 xor	 esi, esi
; Line 344
  00053	41 8d 56 fe	 lea	 edx, QWORD PTR [r14-2]
  00057	83 f8 ff	 cmp	 eax, -1
  0005a	48 8b cf	 mov	 rcx, rdi
  0005d	41 0f 45 f6	 cmovne	 esi, r14d
  00061	45 33 c9	 xor	 r9d, r9d
  00064	48 85 db	 test	 rbx, rbx
  00067	74 22		 je	 SHORT $LN2@luaB_load
  00069	4c 8b c3	 mov	 r8, rbx
  0006c	e8 00 00 00 00	 call	 luaL_optlstring
; Line 345
  00071	4c 8b 44 24 58	 mov	 r8, QWORD PTR l$[rsp]
  00076	48 8b d3	 mov	 rdx, rbx
  00079	48 8b cf	 mov	 rcx, rdi
  0007c	4c 8b c8	 mov	 r9, rax
  0007f	48 89 6c 24 20	 mov	 QWORD PTR [rsp+32], rbp
  00084	e8 00 00 00 00	 call	 luaL_loadbufferx
; Line 347
  00089	eb 47		 jmp	 SHORT $LN1@luaB_load
$LN2@luaB_load:
; Line 348
  0008b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_07JEBBFCAN@?$DN?$CIload?$CJ?$AA@
  00092	e8 00 00 00 00	 call	 luaL_optlstring
; Line 349
  00097	ba 01 00 00 00	 mov	 edx, 1
  0009c	48 8b cf	 mov	 rcx, rdi
  0009f	44 8d 42 05	 lea	 r8d, QWORD PTR [rdx+5]
  000a3	48 8b d8	 mov	 rbx, rax
  000a6	e8 00 00 00 00	 call	 luaL_checktype
; Line 350
  000ab	ba 05 00 00 00	 mov	 edx, 5
  000b0	48 8b cf	 mov	 rcx, rdi
  000b3	e8 00 00 00 00	 call	 lua_settop
; Line 351
  000b8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:generic_reader
  000bf	4c 8b cb	 mov	 r9, rbx
  000c2	45 33 c0	 xor	 r8d, r8d
  000c5	48 8b cf	 mov	 rcx, rdi
  000c8	48 89 6c 24 20	 mov	 QWORD PTR [rsp+32], rbp
  000cd	e8 00 00 00 00	 call	 lua_load
$LN1@luaB_load:
; Line 353
  000d2	85 c0		 test	 eax, eax
  000d4	75 36		 jne	 SHORT $LN8@luaB_load
  000d6	85 f6		 test	 esi, esi
  000d8	74 2b		 je	 SHORT $LN6@luaB_load
  000da	8b d6		 mov	 edx, esi
  000dc	48 8b cf	 mov	 rcx, rdi
  000df	e8 00 00 00 00	 call	 lua_pushvalue
  000e4	ba fe ff ff ff	 mov	 edx, -2
  000e9	48 8b cf	 mov	 rcx, rdi
  000ec	44 8d 42 03	 lea	 r8d, QWORD PTR [rdx+3]
  000f0	e8 00 00 00 00	 call	 lua_setupvalue
  000f5	48 85 c0	 test	 rax, rax
  000f8	75 0b		 jne	 SHORT $LN6@luaB_load
  000fa	8d 50 fe	 lea	 edx, QWORD PTR [rax-2]
  000fd	48 8b cf	 mov	 rcx, rdi
  00100	e8 00 00 00 00	 call	 lua_settop
$LN6@luaB_load:
  00105	b8 01 00 00 00	 mov	 eax, 1
  0010a	eb 1e		 jmp	 SHORT $LN5@luaB_load
$LN8@luaB_load:
  0010c	48 8b cf	 mov	 rcx, rdi
  0010f	e8 00 00 00 00	 call	 lua_pushnil
  00114	ba fe ff ff ff	 mov	 edx, -2
  00119	48 8b cf	 mov	 rcx, rdi
  0011c	44 8d 42 03	 lea	 r8d, QWORD PTR [rdx+3]
  00120	e8 00 00 00 00	 call	 lua_rotate
  00125	b8 02 00 00 00	 mov	 eax, 2
$LN5@luaB_load:
; Line 354
  0012a	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  0012f	48 8b 6c 24 60	 mov	 rbp, QWORD PTR [rsp+96]
  00134	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00138	41 5e		 pop	 r14
  0013a	5f		 pop	 rdi
  0013b	5e		 pop	 rsi
  0013c	c3		 ret	 0
luaB_load ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT generic_reader
_TEXT	SEGMENT
L$ = 64
ud$ = 72
size$ = 80
generic_reader PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 320
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	49 8b f8	 mov	 rdi, r8
; Line 322
  0000d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0BK@NJPFPDBN@too?5many?5nested?5functions?$AA@
  00014	ba 02 00 00 00	 mov	 edx, 2
  00019	48 8b d9	 mov	 rbx, rcx
  0001c	e8 00 00 00 00	 call	 luaL_checkstack
; Line 323
  00021	ba 01 00 00 00	 mov	 edx, 1
  00026	48 8b cb	 mov	 rcx, rbx
  00029	e8 00 00 00 00	 call	 lua_pushvalue
; Line 324
  0002e	45 33 c9	 xor	 r9d, r9d
  00031	33 d2		 xor	 edx, edx
  00033	45 8d 41 01	 lea	 r8d, QWORD PTR [r9+1]
  00037	48 8b cb	 mov	 rcx, rbx
  0003a	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00043	e8 00 00 00 00	 call	 lua_callk
; Line 325
  00048	83 ca ff	 or	 edx, -1
  0004b	48 8b cb	 mov	 rcx, rbx
  0004e	e8 00 00 00 00	 call	 lua_type
; Line 326
  00053	48 8b cb	 mov	 rcx, rbx
  00056	85 c0		 test	 eax, eax
  00058	75 1c		 jne	 SHORT $LN3@generic_re
  0005a	8d 50 fe	 lea	 edx, QWORD PTR [rax-2]
  0005d	e8 00 00 00 00	 call	 lua_settop
; Line 327
  00062	48 c7 07 00 00
	00 00		 mov	 QWORD PTR [rdi], 0
; Line 328
  00069	33 c0		 xor	 eax, eax
; Line 334
  0006b	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00070	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00074	5f		 pop	 rdi
  00075	c3		 ret	 0
$LN3@generic_re:
; Line 330
  00076	83 ca ff	 or	 edx, -1
  00079	e8 00 00 00 00	 call	 lua_isstring
  0007e	85 c0		 test	 eax, eax
  00080	75 0f		 jne	 SHORT $LN1@generic_re
; Line 331
  00082	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CF@IPNALDCD@reader?5function?5must?5return?5a?5st@
  00089	48 8b cb	 mov	 rcx, rbx
  0008c	e8 00 00 00 00	 call	 luaL_error
$LN1@generic_re:
; Line 332
  00091	41 b8 05 00 00
	00		 mov	 r8d, 5
  00097	83 ca ff	 or	 edx, -1
  0009a	48 8b cb	 mov	 rcx, rbx
  0009d	e8 00 00 00 00	 call	 lua_copy
  000a2	ba fe ff ff ff	 mov	 edx, -2
  000a7	48 8b cb	 mov	 rcx, rbx
  000aa	e8 00 00 00 00	 call	 lua_settop
; Line 333
  000af	4c 8b c7	 mov	 r8, rdi
  000b2	ba 05 00 00 00	 mov	 edx, 5
  000b7	48 8b cb	 mov	 rcx, rbx
; Line 334
  000ba	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000bf	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c3	5f		 pop	 rdi
; Line 333
  000c4	e9 00 00 00 00	 jmp	 lua_tolstring
generic_reader ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_loadfile
_TEXT	SEGMENT
L$ = 48
luaB_loadfile PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 290
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00014	41 56		 push	 r14
  00016	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 291
  0001a	45 33 c9	 xor	 r9d, r9d
  0001d	45 33 c0	 xor	 r8d, r8d
  00020	48 8b f1	 mov	 rsi, rcx
  00023	41 8d 51 01	 lea	 edx, QWORD PTR [r9+1]
  00027	e8 00 00 00 00	 call	 luaL_optlstring
; Line 292
  0002c	45 33 c9	 xor	 r9d, r9d
  0002f	45 33 c0	 xor	 r8d, r8d
  00032	41 8d 51 02	 lea	 edx, QWORD PTR [r9+2]
  00036	48 8b ce	 mov	 rcx, rsi
  00039	48 8b f8	 mov	 rdi, rax
  0003c	e8 00 00 00 00	 call	 luaL_optlstring
; Line 293
  00041	41 be 03 00 00
	00		 mov	 r14d, 3
  00047	48 8b ce	 mov	 rcx, rsi
  0004a	41 8b d6	 mov	 edx, r14d
  0004d	48 8b d8	 mov	 rbx, rax
  00050	e8 00 00 00 00	 call	 lua_type
  00055	33 ed		 xor	 ebp, ebp
; Line 294
  00057	4c 8b c3	 mov	 r8, rbx
  0005a	83 f8 ff	 cmp	 eax, -1
  0005d	48 8b d7	 mov	 rdx, rdi
  00060	48 8b ce	 mov	 rcx, rsi
  00063	41 0f 45 ee	 cmovne	 ebp, r14d
  00067	e8 00 00 00 00	 call	 luaL_loadfilex
; Line 295
  0006c	85 c0		 test	 eax, eax
  0006e	75 35		 jne	 SHORT $LN6@luaB_loadf
  00070	85 ed		 test	 ebp, ebp
  00072	74 2a		 je	 SHORT $LN4@luaB_loadf
  00074	8b d5		 mov	 edx, ebp
  00076	48 8b ce	 mov	 rcx, rsi
  00079	e8 00 00 00 00	 call	 lua_pushvalue
  0007e	41 8d 56 fb	 lea	 edx, QWORD PTR [r14-5]
  00082	45 8d 46 fe	 lea	 r8d, QWORD PTR [r14-2]
  00086	48 8b ce	 mov	 rcx, rsi
  00089	e8 00 00 00 00	 call	 lua_setupvalue
  0008e	48 85 c0	 test	 rax, rax
  00091	75 0b		 jne	 SHORT $LN4@luaB_loadf
  00093	8d 50 fe	 lea	 edx, QWORD PTR [rax-2]
  00096	48 8b ce	 mov	 rcx, rsi
  00099	e8 00 00 00 00	 call	 lua_settop
$LN4@luaB_loadf:
  0009e	b8 01 00 00 00	 mov	 eax, 1
  000a3	eb 1e		 jmp	 SHORT $LN3@luaB_loadf
$LN6@luaB_loadf:
  000a5	48 8b ce	 mov	 rcx, rsi
  000a8	e8 00 00 00 00	 call	 lua_pushnil
  000ad	ba fe ff ff ff	 mov	 edx, -2
  000b2	48 8b ce	 mov	 rcx, rsi
  000b5	44 8d 42 03	 lea	 r8d, QWORD PTR [rdx+3]
  000b9	e8 00 00 00 00	 call	 lua_rotate
  000be	b8 02 00 00 00	 mov	 eax, 2
$LN3@luaB_loadf:
; Line 296
  000c3	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000c8	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  000cd	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  000d2	48 8b 7c 24 48	 mov	 rdi, QWORD PTR [rsp+72]
  000d7	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000db	41 5e		 pop	 r14
  000dd	c3		 ret	 0
luaB_loadfile ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT load_aux
_TEXT	SEGMENT
L$ = 48
status$ = 56
envidx$ = 64
load_aux PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 273
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
; Line 274
  00009	85 d2		 test	 edx, edx
  0000b	75 39		 jne	 SHORT $LN4@load_aux
; Line 275
  0000d	45 85 c0	 test	 r8d, r8d
  00010	74 29		 je	 SHORT $LN2@load_aux
; Line 276
  00012	41 8b d0	 mov	 edx, r8d
  00015	e8 00 00 00 00	 call	 lua_pushvalue
; Line 277
  0001a	ba fe ff ff ff	 mov	 edx, -2
  0001f	48 8b cb	 mov	 rcx, rbx
  00022	44 8d 42 03	 lea	 r8d, QWORD PTR [rdx+3]
  00026	e8 00 00 00 00	 call	 lua_setupvalue
  0002b	48 85 c0	 test	 rax, rax
  0002e	75 0b		 jne	 SHORT $LN2@load_aux
; Line 278
  00030	8d 50 fe	 lea	 edx, QWORD PTR [rax-2]
  00033	48 8b cb	 mov	 rcx, rbx
  00036	e8 00 00 00 00	 call	 lua_settop
$LN2@load_aux:
; Line 280
  0003b	b8 01 00 00 00	 mov	 eax, 1
; Line 287
  00040	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00044	5b		 pop	 rbx
  00045	c3		 ret	 0
$LN4@load_aux:
; Line 283
  00046	e8 00 00 00 00	 call	 lua_pushnil
; Line 284
  0004b	ba fe ff ff ff	 mov	 edx, -2
  00050	48 8b cb	 mov	 rcx, rbx
  00053	44 8d 42 03	 lea	 r8d, QWORD PTR [rdx+3]
  00057	e8 00 00 00 00	 call	 lua_rotate
; Line 285
  0005c	b8 02 00 00 00	 mov	 eax, 2
; Line 287
  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5b		 pop	 rbx
  00066	c3		 ret	 0
load_aux ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_ipairs
_TEXT	SEGMENT
L$ = 64
luaB_ipairs PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 260
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 262
  00006	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_08JMAMPABE@__ipairs?$AA@
  0000d	ba 01 00 00 00	 mov	 edx, 1
  00012	48 8b d9	 mov	 rbx, rcx
  00015	e8 00 00 00 00	 call	 luaL_getmetafield
  0001a	ba 01 00 00 00	 mov	 edx, 1
  0001f	48 8b cb	 mov	 rcx, rbx
  00022	85 c0		 test	 eax, eax
  00024	75 3d		 jne	 SHORT $LN6@luaB_ipair
  00026	44 8d 42 04	 lea	 r8d, QWORD PTR [rdx+4]
  0002a	e8 00 00 00 00	 call	 luaL_checktype
  0002f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:ipairsaux
  00036	45 33 c0	 xor	 r8d, r8d
  00039	48 8b cb	 mov	 rcx, rbx
  0003c	e8 00 00 00 00	 call	 lua_pushcclosure
  00041	ba 01 00 00 00	 mov	 edx, 1
  00046	48 8b cb	 mov	 rcx, rbx
  00049	e8 00 00 00 00	 call	 lua_pushvalue
  0004e	33 d2		 xor	 edx, edx
  00050	48 8b cb	 mov	 rcx, rbx
  00053	e8 00 00 00 00	 call	 lua_pushinteger
  00058	b8 03 00 00 00	 mov	 eax, 3
; Line 270
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5b		 pop	 rbx
  00062	c3		 ret	 0
; Line 262
$LN6@luaB_ipair:
  00063	e8 00 00 00 00	 call	 lua_pushvalue
  00068	45 33 c9	 xor	 r9d, r9d
  0006b	48 8b cb	 mov	 rcx, rbx
  0006e	41 8d 51 01	 lea	 edx, QWORD PTR [r9+1]
  00072	45 8d 41 03	 lea	 r8d, QWORD PTR [r9+3]
  00076	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007f	e8 00 00 00 00	 call	 lua_callk
  00084	b8 03 00 00 00	 mov	 eax, 3
; Line 270
  00089	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008d	5b		 pop	 rbx
  0008e	c3		 ret	 0
luaB_ipairs ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ipairsaux
_TEXT	SEGMENT
L$ = 48
ipairsaux PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 248
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 249
  0000a	ba 02 00 00 00	 mov	 edx, 2
  0000f	48 8b f9	 mov	 rdi, rcx
  00012	e8 00 00 00 00	 call	 luaL_checkinteger
; Line 250
  00017	48 8b cf	 mov	 rcx, rdi
  0001a	48 8d 50 01	 lea	 rdx, QWORD PTR [rax+1]
  0001e	48 8b d8	 mov	 rbx, rax
  00021	e8 00 00 00 00	 call	 lua_pushinteger
; Line 251
  00026	4c 8d 43 01	 lea	 r8, QWORD PTR [rbx+1]
  0002a	ba 01 00 00 00	 mov	 edx, 1
  0002f	48 8b cf	 mov	 rcx, rdi
  00032	e8 00 00 00 00	 call	 lua_geti
; Line 252
  00037	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003c	33 c9		 xor	 ecx, ecx
  0003e	85 c0		 test	 eax, eax
  00040	0f 95 c1	 setne	 cl
  00043	8d 41 01	 lea	 eax, DWORD PTR [rcx+1]
  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
ipairsaux ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_pairs
_TEXT	SEGMENT
L$ = 64
luaB_pairs PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 240
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
; Line 241
  00006	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_07HJHPCFBM@__pairs?$AA@
  0000d	ba 01 00 00 00	 mov	 edx, 1
  00012	48 8b d9	 mov	 rbx, rcx
  00015	e8 00 00 00 00	 call	 luaL_getmetafield
  0001a	ba 01 00 00 00	 mov	 edx, 1
  0001f	48 8b cb	 mov	 rcx, rbx
  00022	85 c0		 test	 eax, eax
  00024	75 3b		 jne	 SHORT $LN6@luaB_pairs
  00026	44 8d 42 04	 lea	 r8d, QWORD PTR [rdx+4]
  0002a	e8 00 00 00 00	 call	 luaL_checktype
  0002f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:luaB_next
  00036	45 33 c0	 xor	 r8d, r8d
  00039	48 8b cb	 mov	 rcx, rbx
  0003c	e8 00 00 00 00	 call	 lua_pushcclosure
  00041	ba 01 00 00 00	 mov	 edx, 1
  00046	48 8b cb	 mov	 rcx, rbx
  00049	e8 00 00 00 00	 call	 lua_pushvalue
  0004e	48 8b cb	 mov	 rcx, rbx
  00051	e8 00 00 00 00	 call	 lua_pushnil
  00056	b8 03 00 00 00	 mov	 eax, 3
; Line 242
  0005b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005f	5b		 pop	 rbx
  00060	c3		 ret	 0
; Line 241
$LN6@luaB_pairs:
  00061	e8 00 00 00 00	 call	 lua_pushvalue
  00066	45 33 c9	 xor	 r9d, r9d
  00069	48 8b cb	 mov	 rcx, rbx
  0006c	41 8d 51 01	 lea	 edx, QWORD PTR [r9+1]
  00070	45 8d 41 03	 lea	 r8d, QWORD PTR [r9+3]
  00074	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007d	e8 00 00 00 00	 call	 lua_callk
  00082	b8 03 00 00 00	 mov	 eax, 3
; Line 242
  00087	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008b	5b		 pop	 rbx
  0008c	c3		 ret	 0
luaB_pairs ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_next
_TEXT	SEGMENT
L$ = 48
luaB_next PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 228
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 229
  00006	ba 01 00 00 00	 mov	 edx, 1
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	44 8d 42 04	 lea	 r8d, QWORD PTR [rdx+4]
  00012	e8 00 00 00 00	 call	 luaL_checktype
; Line 230
  00017	ba 02 00 00 00	 mov	 edx, 2
  0001c	48 8b cb	 mov	 rcx, rbx
  0001f	e8 00 00 00 00	 call	 lua_settop
; Line 231
  00024	ba 01 00 00 00	 mov	 edx, 1
  00029	48 8b cb	 mov	 rcx, rbx
  0002c	e8 00 00 00 00	 call	 lua_next
  00031	85 c0		 test	 eax, eax
  00033	74 0b		 je	 SHORT $LN2@luaB_next
; Line 232
  00035	b8 02 00 00 00	 mov	 eax, 2
; Line 237
  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5b		 pop	 rbx
  0003f	c3		 ret	 0
$LN2@luaB_next:
; Line 234
  00040	48 8b cb	 mov	 rcx, rbx
  00043	e8 00 00 00 00	 call	 lua_pushnil
; Line 235
  00048	b8 01 00 00 00	 mov	 eax, 1
; Line 237
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5b		 pop	 rbx
  00052	c3		 ret	 0
luaB_next ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT pairsmeta
_TEXT	SEGMENT
L$ = 64
method$ = 72
iszero$ = 80
iter$ = 88
pairsmeta PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 212
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	41 8b f0	 mov	 esi, r8d
; Line 213
  00012	4c 8b c2	 mov	 r8, rdx
  00015	ba 01 00 00 00	 mov	 edx, 1
  0001a	49 8b f9	 mov	 rdi, r9
  0001d	48 8b d9	 mov	 rbx, rcx
  00020	e8 00 00 00 00	 call	 luaL_getmetafield
; Line 214
  00025	ba 01 00 00 00	 mov	 edx, 1
  0002a	48 8b cb	 mov	 rcx, rbx
  0002d	85 c0		 test	 eax, eax
  0002f	75 3b		 jne	 SHORT $LN4@pairsmeta
  00031	44 8d 42 04	 lea	 r8d, QWORD PTR [rdx+4]
  00035	e8 00 00 00 00	 call	 luaL_checktype
; Line 215
  0003a	45 33 c0	 xor	 r8d, r8d
  0003d	48 8b d7	 mov	 rdx, rdi
  00040	48 8b cb	 mov	 rcx, rbx
  00043	e8 00 00 00 00	 call	 lua_pushcclosure
; Line 216
  00048	ba 01 00 00 00	 mov	 edx, 1
  0004d	48 8b cb	 mov	 rcx, rbx
  00050	e8 00 00 00 00	 call	 lua_pushvalue
; Line 217
  00055	48 8b cb	 mov	 rcx, rbx
  00058	85 f6		 test	 esi, esi
  0005a	74 09		 je	 SHORT $LN3@pairsmeta
  0005c	33 d2		 xor	 edx, edx
  0005e	e8 00 00 00 00	 call	 lua_pushinteger
  00063	eb 28		 jmp	 SHORT $LN7@pairsmeta
$LN3@pairsmeta:
; Line 218
  00065	e8 00 00 00 00	 call	 lua_pushnil
; Line 220
  0006a	eb 21		 jmp	 SHORT $LN7@pairsmeta
$LN4@pairsmeta:
; Line 221
  0006c	e8 00 00 00 00	 call	 lua_pushvalue
; Line 222
  00071	45 33 c9	 xor	 r9d, r9d
  00074	48 8b cb	 mov	 rcx, rbx
  00077	41 8d 51 01	 lea	 edx, QWORD PTR [r9+1]
  0007b	45 8d 41 03	 lea	 r8d, QWORD PTR [r9+3]
  0007f	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00088	e8 00 00 00 00	 call	 lua_callk
$LN7@pairsmeta:
; Line 225
  0008d	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00092	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00097	b8 03 00 00 00	 mov	 eax, 3
  0009c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a0	5f		 pop	 rdi
  000a1	c3		 ret	 0
pairsmeta ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_type
_TEXT	SEGMENT
L$ = 48
luaB_type PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 203
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 204
  0000a	ba 01 00 00 00	 mov	 edx, 1
  0000f	48 8b d9	 mov	 rbx, rcx
  00012	e8 00 00 00 00	 call	 lua_type
  00017	8b f8		 mov	 edi, eax
; Line 205
  00019	83 f8 ff	 cmp	 eax, -1
  0001c	75 12		 jne	 SHORT $LN3@luaB_type
  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0P@PDHEKNMA@value?5expected?$AA@
  00025	8d 50 02	 lea	 edx, QWORD PTR [rax+2]
  00028	48 8b cb	 mov	 rcx, rbx
  0002b	e8 00 00 00 00	 call	 luaL_argerror
$LN3@luaB_type:
; Line 206
  00030	8b d7		 mov	 edx, edi
  00032	48 8b cb	 mov	 rcx, rbx
  00035	e8 00 00 00 00	 call	 lua_typename
  0003a	48 8b cb	 mov	 rcx, rbx
  0003d	48 8b d0	 mov	 rdx, rax
  00040	e8 00 00 00 00	 call	 lua_pushstring
; Line 208
  00045	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004a	b8 01 00 00 00	 mov	 eax, 1
  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
luaB_type ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_collectgarbage
_TEXT	SEGMENT
L$ = 48
luaB_collectgarbage PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 175
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 182
  0000f	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:?opts@?1??luaB_collectgarbage@@9@9
  00016	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_07JHIJCABF@collect?$AA@
  0001d	ba 01 00 00 00	 mov	 edx, 1
  00022	48 8b d9	 mov	 rbx, rcx
  00025	e8 00 00 00 00	 call	 luaL_checkoption
; Line 183
  0002a	45 33 c0	 xor	 r8d, r8d
  0002d	48 63 d0	 movsxd	 rdx, eax
  00030	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?optsnum@?1??luaB_collectgarbage@@9@9
  00037	48 8b cb	 mov	 rcx, rbx
  0003a	8b 34 90	 mov	 esi, DWORD PTR [rax+rdx*4]
  0003d	41 8d 50 02	 lea	 edx, QWORD PTR [r8+2]
  00041	e8 00 00 00 00	 call	 luaL_optinteger
; Line 184
  00046	8b d6		 mov	 edx, esi
  00048	48 8b cb	 mov	 rcx, rbx
  0004b	44 8b c0	 mov	 r8d, eax
  0004e	e8 00 00 00 00	 call	 lua_gc
  00053	48 63 f8	 movsxd	 rdi, eax
; Line 185
  00056	83 fe 03	 cmp	 esi, 3
  00059	74 21		 je	 SHORT $LN3@luaB_colle
; Line 196
  0005b	8d 4e fb	 lea	 ecx, DWORD PTR [rsi-5]
  0005e	f7 c1 fb ff ff
	ff		 test	 ecx, -5			; fffffffbH
  00064	48 8b cb	 mov	 rcx, rbx
  00067	74 0a		 je	 SHORT $LN2@luaB_colle
  00069	48 8b d7	 mov	 rdx, rdi
  0006c	e8 00 00 00 00	 call	 lua_pushinteger
; Line 197
  00071	eb 3c		 jmp	 SHORT $LN9@luaB_colle
$LN2@luaB_colle:
; Line 192
  00073	8b d7		 mov	 edx, edi
  00075	e8 00 00 00 00	 call	 lua_pushboolean
; Line 193
  0007a	eb 33		 jmp	 SHORT $LN9@luaB_colle
$LN3@luaB_colle:
; Line 187
  0007c	45 33 c0	 xor	 r8d, r8d
  0007f	48 8b cb	 mov	 rcx, rbx
  00082	41 8d 50 04	 lea	 edx, QWORD PTR [r8+4]
  00086	e8 00 00 00 00	 call	 lua_gc
; Line 188
  0008b	48 8b cb	 mov	 rcx, rbx
  0008e	66 0f 6e c7	 movd	 xmm0, edi
  00092	66 0f 6e c8	 movd	 xmm1, eax
  00096	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0009a	f3 0f e6 c9	 cvtdq2pd xmm1, xmm1
  0009e	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3f50000000000000
  000a6	f2 0f 58 c8	 addsd	 xmm1, xmm0
  000aa	e8 00 00 00 00	 call	 lua_pushnumber
$LN9@luaB_colle:
; Line 200
  000af	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000b4	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000b9	b8 01 00 00 00	 mov	 eax, 1
  000be	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000c2	5f		 pop	 rdi
  000c3	c3		 ret	 0
luaB_collectgarbage ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_rawset
_TEXT	SEGMENT
L$ = 48
luaB_rawset PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 165
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 166
  00006	ba 01 00 00 00	 mov	 edx, 1
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	44 8d 42 04	 lea	 r8d, QWORD PTR [rdx+4]
  00012	e8 00 00 00 00	 call	 luaL_checktype
; Line 167
  00017	ba 02 00 00 00	 mov	 edx, 2
  0001c	48 8b cb	 mov	 rcx, rbx
  0001f	e8 00 00 00 00	 call	 luaL_checkany
; Line 168
  00024	ba 03 00 00 00	 mov	 edx, 3
  00029	48 8b cb	 mov	 rcx, rbx
  0002c	e8 00 00 00 00	 call	 luaL_checkany
; Line 169
  00031	ba 03 00 00 00	 mov	 edx, 3
  00036	48 8b cb	 mov	 rcx, rbx
  00039	e8 00 00 00 00	 call	 lua_settop
; Line 170
  0003e	ba 01 00 00 00	 mov	 edx, 1
  00043	48 8b cb	 mov	 rcx, rbx
  00046	e8 00 00 00 00	 call	 lua_rawset
; Line 171
  0004b	b8 01 00 00 00	 mov	 eax, 1
; Line 172
  00050	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00054	5b		 pop	 rbx
  00055	c3		 ret	 0
luaB_rawset ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_rawget
_TEXT	SEGMENT
L$ = 48
luaB_rawget PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 157
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 158
  00006	ba 01 00 00 00	 mov	 edx, 1
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	44 8d 42 04	 lea	 r8d, QWORD PTR [rdx+4]
  00012	e8 00 00 00 00	 call	 luaL_checktype
; Line 159
  00017	ba 02 00 00 00	 mov	 edx, 2
  0001c	48 8b cb	 mov	 rcx, rbx
  0001f	e8 00 00 00 00	 call	 luaL_checkany
; Line 160
  00024	ba 02 00 00 00	 mov	 edx, 2
  00029	48 8b cb	 mov	 rcx, rbx
  0002c	e8 00 00 00 00	 call	 lua_settop
; Line 161
  00031	ba 01 00 00 00	 mov	 edx, 1
  00036	48 8b cb	 mov	 rcx, rbx
  00039	e8 00 00 00 00	 call	 lua_rawget
; Line 162
  0003e	b8 01 00 00 00	 mov	 eax, 1
; Line 163
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5b		 pop	 rbx
  00048	c3		 ret	 0
luaB_rawget ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_rawlen
_TEXT	SEGMENT
L$ = 48
luaB_rawlen PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 148
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 149
  00006	ba 01 00 00 00	 mov	 edx, 1
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 lua_type
  00013	83 c0 fc	 add	 eax, -4			; fffffffcH
  00016	83 f8 01	 cmp	 eax, 1
  00019	76 14		 jbe	 SHORT $LN3@luaB_rawle
; Line 151
  0001b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0BJ@DDKMCJJM@table?5or?5string?5expected?$AA@
  00022	ba 01 00 00 00	 mov	 edx, 1
  00027	48 8b cb	 mov	 rcx, rbx
  0002a	e8 00 00 00 00	 call	 luaL_argerror
$LN3@luaB_rawle:
; Line 152
  0002f	ba 01 00 00 00	 mov	 edx, 1
  00034	48 8b cb	 mov	 rcx, rbx
  00037	e8 00 00 00 00	 call	 lua_rawlen
  0003c	48 8b cb	 mov	 rcx, rbx
  0003f	48 8b d0	 mov	 rdx, rax
  00042	e8 00 00 00 00	 call	 lua_pushinteger
; Line 153
  00047	b8 01 00 00 00	 mov	 eax, 1
; Line 154
  0004c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00050	5b		 pop	 rbx
  00051	c3		 ret	 0
luaB_rawlen ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_rawequal
_TEXT	SEGMENT
L$ = 48
luaB_rawequal PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 140
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 141
  00006	ba 01 00 00 00	 mov	 edx, 1
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 luaL_checkany
; Line 142
  00013	ba 02 00 00 00	 mov	 edx, 2
  00018	48 8b cb	 mov	 rcx, rbx
  0001b	e8 00 00 00 00	 call	 luaL_checkany
; Line 143
  00020	ba 01 00 00 00	 mov	 edx, 1
  00025	48 8b cb	 mov	 rcx, rbx
  00028	44 8d 42 01	 lea	 r8d, QWORD PTR [rdx+1]
  0002c	e8 00 00 00 00	 call	 lua_rawequal
  00031	48 8b cb	 mov	 rcx, rbx
  00034	8b d0		 mov	 edx, eax
  00036	e8 00 00 00 00	 call	 lua_pushboolean
; Line 144
  0003b	b8 01 00 00 00	 mov	 eax, 1
; Line 145
  00040	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00044	5b		 pop	 rbx
  00045	c3		 ret	 0
luaB_rawequal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_setmetatable
_TEXT	SEGMENT
L$ = 48
luaB_setmetatable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 127
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 128
  0000a	ba 02 00 00 00	 mov	 edx, 2
  0000f	48 8b d9	 mov	 rbx, rcx
  00012	e8 00 00 00 00	 call	 lua_type
; Line 129
  00017	ba 01 00 00 00	 mov	 edx, 1
  0001c	48 8b cb	 mov	 rcx, rbx
  0001f	44 8d 42 04	 lea	 r8d, QWORD PTR [rdx+4]
  00023	8b f8		 mov	 edi, eax
  00025	e8 00 00 00 00	 call	 luaL_checktype
; Line 131
  0002a	85 ff		 test	 edi, edi
  0002c	74 19		 je	 SHORT $LN4@luaB_setme
  0002e	83 ff 05	 cmp	 edi, 5
  00031	74 14		 je	 SHORT $LN4@luaB_setme
  00033	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0BG@HDIIKINN@nil?5or?5table?5expected?$AA@
  0003a	ba 02 00 00 00	 mov	 edx, 2
  0003f	48 8b cb	 mov	 rcx, rbx
  00042	e8 00 00 00 00	 call	 luaL_argerror
$LN4@luaB_setme:
; Line 132
  00047	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0M@OKDMMFBL@__metatable?$AA@
  0004e	ba 01 00 00 00	 mov	 edx, 1
  00053	48 8b cb	 mov	 rcx, rbx
  00056	e8 00 00 00 00	 call	 luaL_getmetafield
; Line 133
  0005b	48 8b cb	 mov	 rcx, rbx
  0005e	85 c0		 test	 eax, eax
  00060	74 16		 je	 SHORT $LN1@luaB_setme
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CE@LJKICCEL@cannot?5change?5a?5protected?5metata@
; Line 137
  00069	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00072	5f		 pop	 rdi
; Line 133
  00073	e9 00 00 00 00	 jmp	 luaL_error
$LN1@luaB_setme:
; Line 134
  00078	ba 02 00 00 00	 mov	 edx, 2
  0007d	e8 00 00 00 00	 call	 lua_settop
; Line 135
  00082	ba 01 00 00 00	 mov	 edx, 1
  00087	48 8b cb	 mov	 rcx, rbx
  0008a	e8 00 00 00 00	 call	 lua_setmetatable
; Line 137
  0008f	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00094	b8 01 00 00 00	 mov	 eax, 1
  00099	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0009d	5f		 pop	 rdi
  0009e	c3		 ret	 0
luaB_setmetatable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_getmetatable
_TEXT	SEGMENT
L$ = 48
luaB_getmetatable PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 116
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 117
  00006	ba 01 00 00 00	 mov	 edx, 1
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 luaL_checkany
; Line 118
  00013	ba 01 00 00 00	 mov	 edx, 1
  00018	48 8b cb	 mov	 rcx, rbx
  0001b	e8 00 00 00 00	 call	 lua_getmetatable
; Line 119
  00020	48 8b cb	 mov	 rcx, rbx
  00023	85 c0		 test	 eax, eax
  00025	75 10		 jne	 SHORT $LN1@luaB_getme
  00027	e8 00 00 00 00	 call	 lua_pushnil
; Line 123
  0002c	b8 01 00 00 00	 mov	 eax, 1
; Line 124
  00031	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00035	5b		 pop	 rbx
  00036	c3		 ret	 0
$LN1@luaB_getme:
; Line 122
  00037	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0M@OKDMMFBL@__metatable?$AA@
  0003e	ba 01 00 00 00	 mov	 edx, 1
  00043	e8 00 00 00 00	 call	 luaL_getmetafield
; Line 123
  00048	b8 01 00 00 00	 mov	 eax, 1
; Line 124
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5b		 pop	 rbx
  00052	c3		 ret	 0
luaB_getmetatable ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_error
_TEXT	SEGMENT
L$ = 48
luaB_error PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 104
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 105
  0000a	ba 02 00 00 00	 mov	 edx, 2
  0000f	48 8b d9	 mov	 rbx, rcx
  00012	44 8d 42 ff	 lea	 r8d, QWORD PTR [rdx-1]
  00016	e8 00 00 00 00	 call	 luaL_optinteger
; Line 106
  0001b	ba 01 00 00 00	 mov	 edx, 1
  00020	48 8b cb	 mov	 rcx, rbx
  00023	48 8b f8	 mov	 rdi, rax
  00026	e8 00 00 00 00	 call	 lua_settop
; Line 107
  0002b	ba 01 00 00 00	 mov	 edx, 1
  00030	48 8b cb	 mov	 rcx, rbx
  00033	e8 00 00 00 00	 call	 lua_isstring
  00038	85 c0		 test	 eax, eax
  0003a	74 28		 je	 SHORT $LN1@luaB_error
  0003c	85 ff		 test	 edi, edi
  0003e	7e 24		 jle	 SHORT $LN1@luaB_error
; Line 108
  00040	8b d7		 mov	 edx, edi
  00042	48 8b cb	 mov	 rcx, rbx
  00045	e8 00 00 00 00	 call	 luaL_where
; Line 109
  0004a	ba 01 00 00 00	 mov	 edx, 1
  0004f	48 8b cb	 mov	 rcx, rbx
  00052	e8 00 00 00 00	 call	 lua_pushvalue
; Line 110
  00057	ba 02 00 00 00	 mov	 edx, 2
  0005c	48 8b cb	 mov	 rcx, rbx
  0005f	e8 00 00 00 00	 call	 lua_concat
$LN1@luaB_error:
; Line 112
  00064	48 8b cb	 mov	 rcx, rbx
; Line 113
  00067	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00070	5f		 pop	 rdi
; Line 112
  00071	e9 00 00 00 00	 jmp	 lua_error
luaB_error ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_tonumber
_TEXT	SEGMENT
L$ = 48
n$1 = 56
l$2 = 56
l$3 = 64
luaB_tonumber PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 71
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 72
  00006	ba 02 00 00 00	 mov	 edx, 2
  0000b	48 8b d9	 mov	 rbx, rcx
  0000e	e8 00 00 00 00	 call	 lua_type
; Line 73
  00013	48 8b cb	 mov	 rcx, rbx
  00016	85 c0		 test	 eax, eax
  00018	7f 6e		 jg	 SHORT $LN6@luaB_tonum
  0001a	ba 01 00 00 00	 mov	 edx, 1
  0001f	e8 00 00 00 00	 call	 luaL_checkany
; Line 74
  00024	ba 01 00 00 00	 mov	 edx, 1
  00029	48 8b cb	 mov	 rcx, rbx
  0002c	e8 00 00 00 00	 call	 lua_type
; Line 75
  00031	ba 01 00 00 00	 mov	 edx, 1
  00036	48 8b cb	 mov	 rcx, rbx
  00039	83 f8 03	 cmp	 eax, 3
  0003c	75 10		 jne	 SHORT $LN5@luaB_tonum
  0003e	e8 00 00 00 00	 call	 lua_settop
; Line 100
  00043	b8 01 00 00 00	 mov	 eax, 1
; Line 101
  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5b		 pop	 rbx
  0004d	c3		 ret	 0
$LN5@luaB_tonum:
; Line 80
  0004e	4c 8d 44 24 38	 lea	 r8, QWORD PTR l$2[rsp]
  00053	e8 00 00 00 00	 call	 lua_tolstring
; Line 81
  00058	48 85 c0	 test	 rax, rax
  0005b	74 18		 je	 SHORT $LN1@luaB_tonum
  0005d	48 8b d0	 mov	 rdx, rax
  00060	48 8b cb	 mov	 rcx, rbx
  00063	e8 00 00 00 00	 call	 lua_stringtonumber
  00068	48 8b 4c 24 38	 mov	 rcx, QWORD PTR l$2[rsp]
  0006d	48 ff c1	 inc	 rcx
  00070	48 3b c1	 cmp	 rax, rcx
  00073	74 08		 je	 SHORT $LN12@luaB_tonum
$LN1@luaB_tonum:
; Line 99
  00075	48 8b cb	 mov	 rcx, rbx
  00078	e8 00 00 00 00	 call	 lua_pushnil
$LN12@luaB_tonum:
; Line 100
  0007d	b8 01 00 00 00	 mov	 eax, 1
; Line 101
  00082	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00086	5b		 pop	 rbx
  00087	c3		 ret	 0
$LN6@luaB_tonum:
; Line 90
  00088	ba 02 00 00 00	 mov	 edx, 2
  0008d	48 89 74 24 30	 mov	 QWORD PTR [rsp+48], rsi
  00092	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR n$1[rsp], 0
  0009b	48 89 7c 24 48	 mov	 QWORD PTR [rsp+72], rdi
  000a0	e8 00 00 00 00	 call	 luaL_checkinteger
; Line 91
  000a5	ba 01 00 00 00	 mov	 edx, 1
  000aa	44 8d 42 03	 lea	 r8d, QWORD PTR [rdx+3]
  000ae	48 8b cb	 mov	 rcx, rbx
  000b1	48 8b f0	 mov	 rsi, rax
  000b4	e8 00 00 00 00	 call	 luaL_checktype
; Line 92
  000b9	4c 8d 44 24 40	 lea	 r8, QWORD PTR l$3[rsp]
  000be	ba 01 00 00 00	 mov	 edx, 1
  000c3	48 8b cb	 mov	 rcx, rbx
  000c6	e8 00 00 00 00	 call	 lua_tolstring
  000cb	48 8d 4e fe	 lea	 rcx, QWORD PTR [rsi-2]
  000cf	48 8b f8	 mov	 rdi, rax
  000d2	48 83 f9 22	 cmp	 rcx, 34			; 00000022H
  000d6	76 14		 jbe	 SHORT $LN10@luaB_tonum
; Line 93
  000d8	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0BC@GGLHLOMM@base?5out?5of?5range?$AA@
  000df	ba 02 00 00 00	 mov	 edx, 2
  000e4	48 8b cb	 mov	 rcx, rbx
  000e7	e8 00 00 00 00	 call	 luaL_argerror
$LN10@luaB_tonum:
; Line 94
  000ec	4c 8d 44 24 38	 lea	 r8, QWORD PTR n$1[rsp]
  000f1	8b d6		 mov	 edx, esi
  000f3	48 8b cf	 mov	 rcx, rdi
  000f6	e8 00 00 00 00	 call	 b_str2int
  000fb	48 8b 54 24 40	 mov	 rdx, QWORD PTR l$3[rsp]
  00100	48 8b 74 24 30	 mov	 rsi, QWORD PTR [rsp+48]
  00105	48 03 d7	 add	 rdx, rdi
  00108	48 8b 7c 24 48	 mov	 rdi, QWORD PTR [rsp+72]
  0010d	48 3b c2	 cmp	 rax, rdx
  00110	0f 85 5f ff ff
	ff		 jne	 $LN1@luaB_tonum
; Line 95
  00116	48 8b 54 24 38	 mov	 rdx, QWORD PTR n$1[rsp]
  0011b	48 8b cb	 mov	 rcx, rbx
  0011e	e8 00 00 00 00	 call	 lua_pushinteger
; Line 100
  00123	b8 01 00 00 00	 mov	 eax, 1
; Line 101
  00128	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0012c	5b		 pop	 rbx
  0012d	c3		 ret	 0
luaB_tonumber ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT b_str2int
_TEXT	SEGMENT
s$ = 48
base$ = 56
pn$ = 64
b_str2int PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 50
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00014	41 56		 push	 r14
  00016	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0001a	48 63 f2	 movsxd	 rsi, edx
; Line 53
  0001d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IOBDPLFO@?5?$AM?6?$AN?7?$AL?$AA@
  00024	33 ff		 xor	 edi, edi
  00026	4d 8b f0	 mov	 r14, r8
  00029	48 8b d9	 mov	 rbx, rcx
  0002c	8b ef		 mov	 ebp, edi
  0002e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strspn
  00034	48 03 d8	 add	 rbx, rax
; Line 54
  00037	0f b6 03	 movzx	 eax, BYTE PTR [rbx]
  0003a	3c 2d		 cmp	 al, 45			; 0000002dH
  0003c	75 05		 jne	 SHORT $LN8@b_str2int
  0003e	8d 6f 01	 lea	 ebp, QWORD PTR [rdi+1]
  00041	eb 04		 jmp	 SHORT $LN26@b_str2int
$LN8@b_str2int:
; Line 55
  00043	3c 2b		 cmp	 al, 43			; 0000002bH
  00045	75 03		 jne	 SHORT $LN6@b_str2int
$LN26@b_str2int:
  00047	48 ff c3	 inc	 rbx
$LN6@b_str2int:
; Line 56
  0004a	0f b6 0b	 movzx	 ecx, BYTE PTR [rbx]
  0004d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_isalnum
  00053	85 c0		 test	 eax, eax
  00055	74 65		 je	 SHORT $LN16@b_str2int
$LL4@b_str2int:
; Line 60
  00057	0f b6 0b	 movzx	 ecx, BYTE PTR [rbx]
  0005a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_isdigit
  00060	85 c0		 test	 eax, eax
  00062	74 08		 je	 SHORT $LN11@b_str2int
  00064	0f be 03	 movsx	 eax, BYTE PTR [rbx]
  00067	83 e8 30	 sub	 eax, 48			; 00000030H
  0006a	eb 0c		 jmp	 SHORT $LN12@b_str2int
$LN11@b_str2int:
  0006c	0f b6 0b	 movzx	 ecx, BYTE PTR [rbx]
  0006f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_toupper
  00075	83 e8 37	 sub	 eax, 55			; 00000037H
$LN12@b_str2int:
; Line 61
  00078	3b c6		 cmp	 eax, esi
  0007a	7d 40		 jge	 SHORT $LN16@b_str2int
; Line 64
  0007c	0f b6 4b 01	 movzx	 ecx, BYTE PTR [rbx+1]
  00080	4c 8b c6	 mov	 r8, rsi
  00083	48 ff c3	 inc	 rbx
  00086	4c 0f af c7	 imul	 r8, rdi
  0008a	48 63 f8	 movsxd	 rdi, eax
  0008d	49 03 f8	 add	 rdi, r8
  00090	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_isalnum
  00096	85 c0		 test	 eax, eax
  00098	75 bd		 jne	 SHORT $LL4@b_str2int
; Line 65
  0009a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IOBDPLFO@?5?$AM?6?$AN?7?$AL?$AA@
  000a1	48 8b cb	 mov	 rcx, rbx
  000a4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strspn
  000aa	48 03 d8	 add	 rbx, rax
; Line 66
  000ad	85 ed		 test	 ebp, ebp
  000af	74 03		 je	 SHORT $LN13@b_str2int
  000b1	48 f7 df	 neg	 rdi
$LN13@b_str2int:
  000b4	49 89 3e	 mov	 QWORD PTR [r14], rdi
; Line 67
  000b7	48 8b c3	 mov	 rax, rbx
  000ba	eb 02		 jmp	 SHORT $LN9@b_str2int
$LN16@b_str2int:
; Line 61
  000bc	33 c0		 xor	 eax, eax
$LN9@b_str2int:
; Line 68
  000be	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000c3	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  000c8	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  000cd	48 8b 7c 24 48	 mov	 rdi, QWORD PTR [rsp+72]
  000d2	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000d6	41 5e		 pop	 r14
  000d8	c3		 ret	 0
b_str2int ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_print
_TEXT	SEGMENT
L$ = 80
l$1 = 88
luaB_print PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 26
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	41 56		 push	 r14
  0000e	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00012	48 8b f9	 mov	 rdi, rcx
; Line 27
  00015	e8 00 00 00 00	 call	 lua_gettop
; Line 29
  0001a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08FNIIFOJC@tostring?$AA@
  00021	48 8b cf	 mov	 rcx, rdi
  00024	8b e8		 mov	 ebp, eax
  00026	e8 00 00 00 00	 call	 lua_getglobal
; Line 30
  0002b	bb 01 00 00 00	 mov	 ebx, 1
  00030	3b eb		 cmp	 ebp, ebx
  00032	0f 8c a9 00 00
	00		 jl	 $LN3@luaB_print
  00038	45 33 f6	 xor	 r14d, r14d
  0003b	0f 1f 44 00 00	 npad	 5
$LL5@luaB_print:
; Line 33
  00040	83 ca ff	 or	 edx, -1
  00043	48 8b cf	 mov	 rcx, rdi
  00046	e8 00 00 00 00	 call	 lua_pushvalue
; Line 34
  0004b	8b d3		 mov	 edx, ebx
  0004d	48 8b cf	 mov	 rcx, rdi
  00050	e8 00 00 00 00	 call	 lua_pushvalue
; Line 35
  00055	ba 01 00 00 00	 mov	 edx, 1
  0005a	45 33 c9	 xor	 r9d, r9d
  0005d	48 8b cf	 mov	 rcx, rdi
  00060	44 8b c2	 mov	 r8d, edx
  00063	4c 89 74 24 20	 mov	 QWORD PTR [rsp+32], r14
  00068	e8 00 00 00 00	 call	 lua_callk
; Line 36
  0006d	4c 8d 44 24 58	 lea	 r8, QWORD PTR l$1[rsp]
  00072	83 ca ff	 or	 edx, -1
  00075	48 8b cf	 mov	 rcx, rdi
  00078	e8 00 00 00 00	 call	 lua_tolstring
  0007d	48 8b f0	 mov	 rsi, rax
; Line 37
  00080	48 85 c0	 test	 rax, rax
  00083	0f 84 9c 00 00
	00		 je	 $LN9@luaB_print
; Line 39
  00089	83 fb 01	 cmp	 ebx, 1
  0008c	7e 1f		 jle	 SHORT $LN1@luaB_print
  0008e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  00094	ba 01 00 00 00	 mov	 edx, 1
  00099	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01GPOEFGEJ@?7?$AA@
  000a0	4c 8d 48 30	 lea	 r9, QWORD PTR [rax+48]
  000a4	44 8b c2	 mov	 r8d, edx
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
$LN1@luaB_print:
; Line 40
  000ad	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  000b3	4c 8b 44 24 58	 mov	 r8, QWORD PTR l$1[rsp]
  000b8	ba 01 00 00 00	 mov	 edx, 1
  000bd	4c 8d 48 30	 lea	 r9, QWORD PTR [rax+48]
  000c1	48 8b ce	 mov	 rcx, rsi
  000c4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
; Line 41
  000ca	ba fe ff ff ff	 mov	 edx, -2
  000cf	48 8b cf	 mov	 rcx, rdi
  000d2	e8 00 00 00 00	 call	 lua_settop
  000d7	ff c3		 inc	 ebx
  000d9	3b dd		 cmp	 ebx, ebp
  000db	0f 8e 5f ff ff
	ff		 jle	 $LL5@luaB_print
$LN3@luaB_print:
; Line 43
  000e1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  000e7	ba 01 00 00 00	 mov	 edx, 1
  000ec	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  000f3	4c 8d 48 30	 lea	 r9, QWORD PTR [rax+48]
  000f7	44 8b c2	 mov	 r8d, edx
  000fa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  00100	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  00106	48 8d 48 30	 lea	 rcx, QWORD PTR [rax+48]
  0010a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fflush
; Line 44
  00110	33 c0		 xor	 eax, eax
$LN6@luaB_print:
; Line 45
  00112	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  00117	48 8b 6c 24 60	 mov	 rbp, QWORD PTR [rsp+96]
  0011c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00120	41 5e		 pop	 r14
  00122	5f		 pop	 rdi
  00123	5e		 pop	 rsi
  00124	c3		 ret	 0
$LN9@luaB_print:
; Line 38
  00125	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CL@KMHHCBJA@?8tostring?8?5must?5return?5a?5string?5@
  0012c	48 8b cf	 mov	 rcx, rdi
  0012f	e8 00 00 00 00	 call	 luaL_error
  00134	eb dc		 jmp	 SHORT $LN6@luaB_print
luaB_print ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaopen_base
_TEXT	SEGMENT
L$ = 48
luaopen_base PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 530
$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 532
  00006	ba d8 b9 f0 ff	 mov	 edx, -1001000		; fffffffffff0b9d8H
  0000b	41 b8 02 00 00
	00		 mov	 r8d, 2
  00011	48 8b d9	 mov	 rbx, rcx
  00014	e8 00 00 00 00	 call	 lua_rawgeti
; Line 533
  00019	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:base_funcs
  00020	45 33 c0	 xor	 r8d, r8d
  00023	48 8b cb	 mov	 rcx, rbx
  00026	e8 00 00 00 00	 call	 luaL_setfuncs
; Line 535
  0002b	83 ca ff	 or	 edx, -1
  0002e	48 8b cb	 mov	 rcx, rbx
  00031	e8 00 00 00 00	 call	 lua_pushvalue
; Line 536
  00036	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02NIGGJGKC@_G?$AA@
  0003d	ba fe ff ff ff	 mov	 edx, -2
  00042	48 8b cb	 mov	 rcx, rbx
  00045	e8 00 00 00 00	 call	 lua_setfield
; Line 538
  0004a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@PBPDJEBJ@Lua?5spq?51?41?$AA@
  00051	48 8b cb	 mov	 rcx, rbx
  00054	e8 00 00 00 00	 call	 lua_pushstring
; Line 539
  00059	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_08PMLCGGEP@_VERSION?$AA@
  00060	ba fe ff ff ff	 mov	 edx, -2
  00065	48 8b cb	 mov	 rcx, rbx
  00068	e8 00 00 00 00	 call	 lua_setfield
; Line 540
  0006d	b8 01 00 00 00	 mov	 eax, 1
; Line 541
  00072	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00076	5b		 pop	 rbx
  00077	c3		 ret	 0
luaopen_base ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_print_spec
_TEXT	SEGMENT
L$ = 48
cc$ = 56
luaB_print_spec PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 752
$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	48 8b f9	 mov	 rdi, rcx
; Line 753
  00010	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  00016	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
  0001a	48 8b cb	 mov	 rcx, rbx
  0001d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputs
; Line 754
  00023	ba fe ff ff ff	 mov	 edx, -2
  00028	48 8b cf	 mov	 rcx, rdi
  0002b	e8 00 00 00 00	 call	 lua_settop
; Line 755
  00030	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  00036	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  0003d	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
  00041	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputs
; Line 757
  00047	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004c	33 c0		 xor	 eax, eax
  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
luaB_print_spec ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_ztest
_TEXT	SEGMENT
L$ = 48
luaB_ztest PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 736
$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 737
  00004	e8 00 00 00 00	 call	 Test
; Line 738
  00009	33 c0		 xor	 eax, eax
; Line 739
  0000b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000f	c3		 ret	 0
luaB_ztest ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_version
_TEXT	SEGMENT
L$ = 48
luaB_version PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 816
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
; Line 817
  00009	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0O@JIOMGDOO@Lua?5spq?51?41?41?$AA@
  00016	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
  0001a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputs
  00020	ba fe ff ff ff	 mov	 edx, -2
  00025	48 8b cb	 mov	 rcx, rbx
  00028	e8 00 00 00 00	 call	 lua_settop
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  0003a	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
  0003e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputs
  00044	33 c0		 xor	 eax, eax
; Line 818
  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5b		 pop	 rbx
  0004b	c3		 ret	 0
luaB_version ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_usage
_TEXT	SEGMENT
L$ = 48
luaB_usage PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 747
$LN6:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 748
  00004	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  0000a	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR progname
  00011	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BDD@BBDJGOCB@usage?3?5?$CFs?5?$FLoptions?$FN?5?$FLscript?5?$FLarg@
  00018	48 8d 48 30	 lea	 rcx, QWORD PTR [rax+48]
  0001c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fprintf
  00022	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  00028	48 8d 48 60	 lea	 rcx, QWORD PTR [rax+96]
  0002c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fflush
; Line 749
  00032	33 c0		 xor	 eax, eax
; Line 750
  00034	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00038	c3		 ret	 0
luaB_usage ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_help
_TEXT	SEGMENT
result$ = 32
__$ArrayPad$ = 144
L$ = 176
luaB_help PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 759
$LN45:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00012	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00019	48 33 c4	 xor	 rax, rsp
  0001c	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00024	48 8b d9	 mov	 rbx, rcx
; Line 760
  00027	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetSystemDefaultLangID
; Line 768
  0002d	41 b9 1f 00 00
	00		 mov	 r9d, 31
  00033	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0BF@FOKLKONM@Functions?5size?5is?3?$CFd?$AA@
  0003a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR result$[rsp]
  0003f	41 8d 51 45	 lea	 edx, QWORD PTR [r9+69]
  00043	0f b7 f8	 movzx	 edi, ax
  00046	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_sprintf_s
; Line 769
  0004c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  00052	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
  00056	48 8d 4c 24 20	 lea	 rcx, QWORD PTR result$[rsp]
  0005b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputs
  00061	ba fe ff ff ff	 mov	 edx, -2
  00066	48 8b cb	 mov	 rcx, rbx
  00069	e8 00 00 00 00	 call	 lua_settop
  0006e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  00074	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  0007b	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
  0007f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputs
; Line 770
  00085	8b cf		 mov	 ecx, edi
  00087	81 ff 0c 10 00
	00		 cmp	 edi, 4108		; 0000100cH
  0008d	0f 8f 9b 00 00
	00		 jg	 $LN17@luaB_help
  00093	81 f9 0c 10 00
	00		 cmp	 ecx, 4108		; 0000100cH
  00099	0f 84 c3 00 00
	00		 je	 $LN4@luaB_help
  0009f	81 f9 0c 08 00
	00		 cmp	 ecx, 2060		; 0000080cH
  000a5	7f 31		 jg	 SHORT $LN18@luaB_help
  000a7	0f 84 b5 00 00
	00		 je	 $LN4@luaB_help
  000ad	81 e9 09 04 00
	00		 sub	 ecx, 1033		; 00000409H
$LN43@luaB_help:
  000b3	0f 84 07 01 00
	00		 je	 $LN8@luaB_help
  000b9	83 e9 03	 sub	 ecx, 3
  000bc	0f 84 a0 00 00
	00		 je	 $LN4@luaB_help
  000c2	81 e9 f8 03 00
	00		 sub	 ecx, 1016		; 000003f8H
  000c8	74 16		 je	 SHORT $LN12@luaB_help
  000ca	83 f9 05	 cmp	 ecx, 5
  000cd	0f 84 ed 00 00
	00		 je	 $LN8@luaB_help
  000d3	e9 31 01 00 00	 jmp	 $LN42@luaB_help
$LN18@luaB_help:
  000d8	81 e9 09 0c 00
	00		 sub	 ecx, 3081		; 00000c09H
  000de	eb d3		 jmp	 SHORT $LN43@luaB_help
$LN12@luaB_help:
; Line 777
  000e0	33 db		 xor	 ebx, ebx
  000e2	48 8d 35 00 00
	00 00		 lea	 rsi, OFFSET FLAT:__ImageBase
  000e9	0f 1f 80 00 00
	00 00		 npad	 7
$LL11@luaB_help:
; Line 779
  000f0	48 8b 8c 33 00
	00 00 00	 mov	 rcx, QWORD PTR base_funcs_note_chs[rbx+rsi]
  000f8	48 8b bc 33 08
	00 00 00	 mov	 rdi, QWORD PTR base_funcs_note_chs[rbx+rsi+8]
  00100	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_printf
  00106	48 8b cf	 mov	 rcx, rdi
  00109	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_printf
  0010f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  00116	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_printf
  0011c	48 83 c3 10	 add	 rbx, 16
  00120	48 81 fb f0 01
	00 00		 cmp	 rbx, 496		; 000001f0H
  00127	72 c7		 jb	 SHORT $LL11@luaB_help
; Line 781
  00129	e9 db 00 00 00	 jmp	 $LN42@luaB_help
$LN17@luaB_help:
; Line 770
  0012e	81 f9 09 20 00
	00		 cmp	 ecx, 8201		; 00002009H
  00134	7f 75		 jg	 SHORT $LN19@luaB_help
  00136	0f 84 84 00 00
	00		 je	 $LN8@luaB_help
  0013c	81 e9 09 14 00
	00		 sub	 ecx, 5129		; 00001409H
  00142	0f 84 78 00 00
	00		 je	 $LN8@luaB_help
  00148	83 e9 03	 sub	 ecx, 3
  0014b	74 15		 je	 SHORT $LN4@luaB_help
  0014d	81 e9 fd 03 00
	00		 sub	 ecx, 1021		; 000003fdH
  00153	74 6b		 je	 SHORT $LN8@luaB_help
  00155	81 f9 00 04 00
	00		 cmp	 ecx, 1024		; 00000400H
  0015b	74 63		 je	 SHORT $LN8@luaB_help
  0015d	e9 a7 00 00 00	 jmp	 $LN42@luaB_help
$LN4@luaB_help:
; Line 807
  00162	33 db		 xor	 ebx, ebx
  00164	48 8d 35 00 00
	00 00		 lea	 rsi, OFFSET FLAT:__ImageBase
  0016b	0f 1f 44 00 00	 npad	 5
$LL3@luaB_help:
; Line 809
  00170	48 8b 8c 33 00
	00 00 00	 mov	 rcx, QWORD PTR base_funcs_note_fre[rbx+rsi]
  00178	48 8b bc 33 08
	00 00 00	 mov	 rdi, QWORD PTR base_funcs_note_fre[rbx+rsi+8]
  00180	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_printf
  00186	48 8b cf	 mov	 rcx, rdi
  00189	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_printf
  0018f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  00196	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_printf
  0019c	48 83 c3 10	 add	 rbx, 16
  001a0	48 81 fb f0 01
	00 00		 cmp	 rbx, 496		; 000001f0H
  001a7	72 c7		 jb	 SHORT $LL3@luaB_help
; Line 811
  001a9	eb 5e		 jmp	 SHORT $LN42@luaB_help
$LN19@luaB_help:
  001ab	8d 87 f7 db ff
	ff		 lea	 eax, DWORD PTR [rdi-9225]
  001b1	a9 ff f3 ff ff	 test	 eax, -3073		; fffff3ffH
  001b6	75 51		 jne	 SHORT $LN42@luaB_help
  001b8	81 f9 09 30 00
	00		 cmp	 ecx, 12297		; 00003009H
  001be	74 49		 je	 SHORT $LN42@luaB_help
$LN8@luaB_help:
; Line 795
  001c0	33 db		 xor	 ebx, ebx
  001c2	48 8d 35 00 00
	00 00		 lea	 rsi, OFFSET FLAT:__ImageBase
  001c9	0f 1f 80 00 00
	00 00		 npad	 7
$LL7@luaB_help:
; Line 797
  001d0	48 8b 8c 33 00
	00 00 00	 mov	 rcx, QWORD PTR base_funcs_note_eng[rbx+rsi]
  001d8	48 8b bc 33 08
	00 00 00	 mov	 rdi, QWORD PTR base_funcs_note_eng[rbx+rsi+8]
  001e0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_printf
  001e6	48 8b cf	 mov	 rcx, rdi
  001e9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_printf
  001ef	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  001f6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_printf
  001fc	48 83 c3 10	 add	 rbx, 16
  00200	48 81 fb f0 01
	00 00		 cmp	 rbx, 496		; 000001f0H
  00207	72 c7		 jb	 SHORT $LL7@luaB_help
$LN42@luaB_help:
; Line 814
  00209	33 c0		 xor	 eax, eax
; Line 815
  0020b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00213	48 33 cc	 xor	 rcx, rsp
  00216	e8 00 00 00 00	 call	 __security_check_cookie
  0021b	4c 8d 9c 24 a0
	00 00 00	 lea	 r11, QWORD PTR [rsp+160]
  00223	49 8b 5b 18	 mov	 rbx, QWORD PTR [r11+24]
  00227	49 8b 73 20	 mov	 rsi, QWORD PTR [r11+32]
  0022b	49 8b e3	 mov	 rsp, r11
  0022e	5f		 pop	 rdi
  0022f	c3		 ret	 0
luaB_help ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_getDescription
_TEXT	SEGMENT
L$ = 48
luaB_getDescription PROC				; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 821
$LN17:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b f9	 mov	 rdi, rcx
; Line 823
  00009	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetSystemDefaultLangID
  0000f	0f b7 d0	 movzx	 edx, ax
; Line 824
  00012	81 fa 09 14 00
	00		 cmp	 edx, 5129		; 00001409H
  00018	7f 55		 jg	 SHORT $LN8@luaB_getDe
  0001a	74 69		 je	 SHORT $LN2@luaB_getDe
  0001c	81 fa 09 0c 00
	00		 cmp	 edx, 3081		; 00000c09H
  00022	7f 1f		 jg	 SHORT $LN9@luaB_getDe
  00024	74 5f		 je	 SHORT $LN2@luaB_getDe
  00026	81 ea 09 04 00
	00		 sub	 edx, 1033		; 00000409H
  0002c	74 57		 je	 SHORT $LN2@luaB_getDe
  0002e	81 ea fb 03 00
	00		 sub	 edx, 1019		; 000003fbH
  00034	74 22		 je	 SHORT $LN3@luaB_getDe
  00036	83 fa 05	 cmp	 edx, 5
  00039	74 4a		 je	 SHORT $LN2@luaB_getDe
; Line 854
  0003b	33 c0		 xor	 eax, eax
; Line 855
  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
$LN9@luaB_getDe:
; Line 824
  00043	81 ea 04 10 00
	00		 sub	 edx, 4100		; 00001004H
  00049	74 0d		 je	 SHORT $LN3@luaB_getDe
  0004b	83 fa 05	 cmp	 edx, 5
  0004e	74 35		 je	 SHORT $LN2@luaB_getDe
; Line 854
  00050	33 c0		 xor	 eax, eax
; Line 855
  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5f		 pop	 rdi
  00057	c3		 ret	 0
$LN3@luaB_getDe:
; Line 831
  00058	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR ____Description_chs
  0005f	48 8b cf	 mov	 rcx, rdi
  00062	e8 00 00 00 00	 call	 luaB_print_spec
; Line 854
  00067	33 c0		 xor	 eax, eax
; Line 855
  00069	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006d	5f		 pop	 rdi
  0006e	c3		 ret	 0
$LN8@luaB_getDe:
  0006f	81 c2 f7 e7 ff
	ff		 add	 edx, -6153		; ffffffffffffe7f7H
  00075	81 fa 00 14 00
	00		 cmp	 edx, 5120		; 00001400H
  0007b	77 50		 ja	 SHORT $LN14@luaB_getDe
  0007d	f7 c2 ff 03 00
	00		 test	 edx, 1023		; 000003ffH
; Line 851
  00083	75 48		 jne	 SHORT $LN14@luaB_getDe
$LN2@luaB_getDe:
  00085	48 89 5c 24 30	 mov	 QWORD PTR [rsp+48], rbx
; Line 846
  0008a	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR ____Description_eng
  00091	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  00097	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
  0009b	48 8b cb	 mov	 rcx, rbx
  0009e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputs
  000a4	ba fe ff ff ff	 mov	 edx, -2
  000a9	48 8b cf	 mov	 rcx, rdi
  000ac	e8 00 00 00 00	 call	 lua_settop
  000b1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  000b7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  000be	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
  000c2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputs
  000c8	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
$LN14@luaB_getDe:
; Line 854
  000cd	33 c0		 xor	 eax, eax
; Line 855
  000cf	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000d3	5f		 pop	 rdi
  000d4	c3		 ret	 0
luaB_getDescription ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_exit
_TEXT	SEGMENT
L$ = 48
luaB_exit PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 743
$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 744
  00004	33 c9		 xor	 ecx, ecx
  00006	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_exit
  0000c	cc		 int	 3
$LN3@luaB_exit:
luaB_exit ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_clear
_TEXT	SEGMENT
L$ = 48
luaB_clear PROC						; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 702
$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 704
  00004	e8 00 00 00 00	 call	 clrscr
; Line 708
  00009	33 c0		 xor	 eax, eax
; Line 709
  0000b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0000f	c3		 ret	 0
luaB_clear ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaB_authors
_TEXT	SEGMENT
L$ = 48
luaB_authors PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lbaselib.c
; Line 740
$LN6:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx
; Line 741
  00009	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DI@IIMDNMFJ@R?4?5Ierusalimschy?0?5L?4?5H?4?5de?5Figue@
  00016	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
  0001a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputs
  00020	ba fe ff ff ff	 mov	 edx, -2
  00025	48 8b cb	 mov	 rcx, rbx
  00028	e8 00 00 00 00	 call	 lua_settop
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_01EEMJAFIK@?6?$AA@
  0003a	48 8d 50 30	 lea	 rdx, QWORD PTR [rax+48]
  0003e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputs
  00044	33 c0		 xor	 eax, eax
; Line 742
  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5b		 pop	 rbx
  0004b	c3		 ret	 0
luaB_authors ENDP
_TEXT	ENDS
END
