; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.21005.1 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	luaM_toobig
PUBLIC	luaM_realloc_
PUBLIC	luaM_growaux_
PUBLIC	??_C@_0BK@JNOIBMBC@too?5many?5?$CFs?5?$CIlimit?5is?5?$CFd?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0CH@LBFPMMCP@memory?5allocation?5error?3?5block?5t@ ; `string'
EXTRN	luaG_runerror:PROC
EXTRN	luaD_throw:PROC
EXTRN	luaC_fullgc:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaM_toobig DD imagerel $LN4
	DD	imagerel $LN4+17
	DD	imagerel $unwind$luaM_toobig
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaM_realloc_ DD imagerel $LN10
	DD	imagerel $LN10+151
	DD	imagerel $unwind$luaM_realloc_
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$luaM_growaux_ DD imagerel $LN10
	DD	imagerel $LN10+125
	DD	imagerel $unwind$luaM_growaux_
pdata	ENDS
;	COMDAT ??_C@_0CH@LBFPMMCP@memory?5allocation?5error?3?5block?5t@
CONST	SEGMENT
??_C@_0CH@LBFPMMCP@memory?5allocation?5error?3?5block?5t@ DB 'memory allo'
	DB	'cation error: block too big', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JNOIBMBC@too?5many?5?$CFs?5?$CIlimit?5is?5?$CFd?$CJ?$AA@
CONST	SEGMENT
??_C@_0BK@JNOIBMBC@too?5many?5?$CFs?5?$CIlimit?5is?5?$CFd?$CJ?$AA@ DB 'to'
	DB	'o many %s (limit is %d)', 00H		; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaM_growaux_ DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaM_realloc_ DD 0a1801H
	DD	0a6418H
	DD	095418H
	DD	083418H
	DD	0f0143218H
	DD	07010e012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$luaM_toobig DD 010401H
	DD	04204H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaM_growaux_
_TEXT	SEGMENT
L$ = 48
block$ = 56
size$ = 64
size_elems$ = 72
limit$ = 80
what$ = 88
luaM_growaux_ PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmem.c
; Line 49
$LN10:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 52
  0000f	8b 5c 24 50	 mov	 ebx, DWORD PTR limit$[rsp]
  00013	4d 63 10	 movsxd	 r10, DWORD PTR [r8]
  00016	48 8b f2	 mov	 rsi, rdx
  00019	8b c3		 mov	 eax, ebx
  0001b	4d 8b d9	 mov	 r11, r9
  0001e	49 8b f8	 mov	 rdi, r8
  00021	99		 cdq
  00022	2b c2		 sub	 eax, edx
  00024	d1 f8		 sar	 eax, 1
  00026	44 3b d0	 cmp	 r10d, eax
  00029	7c 07		 jl	 SHORT $LN4@luaM_growa
; Line 53
  0002b	44 3b d3	 cmp	 r10d, ebx
  0002e	7c 10		 jl	 SHORT $LN1@luaM_growa
  00030	eb 36		 jmp	 SHORT $LN8@luaM_growa
$LN4@luaM_growa:
; Line 58
  00032	43 8d 1c 12	 lea	 ebx, DWORD PTR [r10+r10]
; Line 59
  00036	b8 04 00 00 00	 mov	 eax, 4
  0003b	3b d8		 cmp	 ebx, eax
  0003d	0f 4c d8	 cmovl	 ebx, eax
$LN1@luaM_growa:
; Line 62
  00040	4d 8b c2	 mov	 r8, r10
  00043	4c 63 cb	 movsxd	 r9, ebx
  00046	48 8b d6	 mov	 rdx, rsi
  00049	4d 0f af cb	 imul	 r9, r11
  0004d	4d 0f af c3	 imul	 r8, r11
  00051	e8 00 00 00 00	 call	 luaM_realloc_
; Line 65
  00056	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0005b	89 1f		 mov	 DWORD PTR [rdi], ebx
  0005d	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00062	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00066	5f		 pop	 rdi
  00067	c3		 ret	 0
$LN8@luaM_growa:
; Line 54
  00068	4c 8b 44 24 58	 mov	 r8, QWORD PTR what$[rsp]
  0006d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BK@JNOIBMBC@too?5many?5?$CFs?5?$CIlimit?5is?5?$CFd?$CJ?$AA@
  00074	44 8b cb	 mov	 r9d, ebx
  00077	e8 00 00 00 00	 call	 luaG_runerror
  0007c	cc		 int	 3
$LN7@luaM_growa:
luaM_growaux_ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaM_realloc_
_TEXT	SEGMENT
L$ = 64
block$ = 72
osize$ = 80
nsize$ = 88
luaM_realloc_ PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmem.c
; Line 77
$LN10:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	41 56		 push	 r14
  00012	41 57		 push	 r15
  00014	48 83 ec 20	 sub	 rsp, 32			; 00000020H
; Line 79
  00018	48 8b 79 18	 mov	 rdi, QWORD PTR [rcx+24]
  0001c	48 8b f1	 mov	 rsi, rcx
; Line 80
  0001f	33 ed		 xor	 ebp, ebp
; Line 86
  00021	48 8b 4f 08	 mov	 rcx, QWORD PTR [rdi+8]
  00025	48 85 d2	 test	 rdx, rdx
  00028	49 8b d9	 mov	 rbx, r9
  0002b	4d 8b f0	 mov	 r14, r8
  0002e	4c 8b fa	 mov	 r15, rdx
  00031	49 0f 45 e8	 cmovne	 rbp, r8
  00035	ff 17		 call	 QWORD PTR [rdi]
; Line 87
  00037	48 85 c0	 test	 rax, rax
  0003a	75 2d		 jne	 SHORT $LN1@luaM_reall
  0003c	48 85 db	 test	 rbx, rbx
  0003f	74 28		 je	 SHORT $LN1@luaM_reall
; Line 89
  00041	48 39 87 d0 00
	00 00		 cmp	 QWORD PTR [rdi+208], rax
  00048	74 3f		 je	 SHORT $LN8@luaM_reall
; Line 90
  0004a	8d 50 01	 lea	 edx, QWORD PTR [rax+1]
  0004d	48 8b ce	 mov	 rcx, rsi
  00050	e8 00 00 00 00	 call	 luaC_fullgc
; Line 91
  00055	48 8b 4f 08	 mov	 rcx, QWORD PTR [rdi+8]
  00059	4c 8b cb	 mov	 r9, rbx
  0005c	4d 8b c6	 mov	 r8, r14
  0005f	49 8b d7	 mov	 rdx, r15
  00062	ff 17		 call	 QWORD PTR [rdi]
; Line 93
  00064	48 85 c0	 test	 rax, rax
  00067	74 20		 je	 SHORT $LN8@luaM_reall
$LN1@luaM_reall:
; Line 99
  00069	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  0006e	48 2b dd	 sub	 rbx, rbp
  00071	48 8b 6c 24 48	 mov	 rbp, QWORD PTR [rsp+72]
  00076	48 01 5f 18	 add	 QWORD PTR [rdi+24], rbx
  0007a	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0007f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00083	41 5f		 pop	 r15
  00085	41 5e		 pop	 r14
  00087	5f		 pop	 rdi
  00088	c3		 ret	 0
$LN8@luaM_reall:
; Line 94
  00089	ba 04 00 00 00	 mov	 edx, 4
  0008e	48 8b ce	 mov	 rcx, rsi
  00091	e8 00 00 00 00	 call	 luaD_throw
  00096	cc		 int	 3
$LN7@luaM_reall:
luaM_realloc_ ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT luaM_toobig
_TEXT	SEGMENT
L$ = 48
luaM_toobig PROC					; COMDAT
; File f:\0\luaspq-1.1\luaspq-1.1\src\lmem.c
; Line 68
$LN4:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H
; Line 69
  00004	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CH@LBFPMMCP@memory?5allocation?5error?3?5block?5t@
  0000b	e8 00 00 00 00	 call	 luaG_runerror
  00010	cc		 int	 3
$LN3@luaM_toobi:
luaM_toobig ENDP
_TEXT	ENDS
END
